                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module rucb
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _runicast_send
                                     12 	.globl _runicast_close
                                     13 	.globl _runicast_open
                                     14 	.globl _packetbuf_set_datalen
                                     15 	.globl _packetbuf_datalen
                                     16 	.globl _packetbuf_dataptr
                                     17 	.globl _packetbuf_clear
                                     18 	.globl _rimeaddr_cmp
                                     19 	.globl _rimeaddr_copy
                                     20 	.globl _ACTIVE
                                     21 	.globl _TX_BYTE
                                     22 	.globl _RX_BYTE
                                     23 	.globl _ERR
                                     24 	.globl _FE
                                     25 	.globl _SLAVE
                                     26 	.globl _RE
                                     27 	.globl _MODE
                                     28 	.globl _T3OVFIF
                                     29 	.globl _T3CH0IF
                                     30 	.globl _T3CH1IF
                                     31 	.globl _T4OVFIF
                                     32 	.globl _T4CH0IF
                                     33 	.globl _T4CH1IF
                                     34 	.globl _OVFIM
                                     35 	.globl _B_0
                                     36 	.globl _B_1
                                     37 	.globl _B_2
                                     38 	.globl _B_3
                                     39 	.globl _B_4
                                     40 	.globl _B_5
                                     41 	.globl _B_6
                                     42 	.globl _B_7
                                     43 	.globl _P2IF
                                     44 	.globl _UTX0IF
                                     45 	.globl _UTX1IF
                                     46 	.globl _P1IF
                                     47 	.globl _WDTIF
                                     48 	.globl _ACC_0
                                     49 	.globl _ACC_1
                                     50 	.globl _ACC_2
                                     51 	.globl _ACC_3
                                     52 	.globl _ACC_4
                                     53 	.globl _ACC_5
                                     54 	.globl _ACC_6
                                     55 	.globl _ACC_7
                                     56 	.globl _P
                                     57 	.globl _F1
                                     58 	.globl _OV
                                     59 	.globl _RS0
                                     60 	.globl _RS1
                                     61 	.globl _F0
                                     62 	.globl _AC
                                     63 	.globl _CY
                                     64 	.globl _DMAIF
                                     65 	.globl _T1IF
                                     66 	.globl _T2IF
                                     67 	.globl _T3IF
                                     68 	.globl _T4IF
                                     69 	.globl _P0IF
                                     70 	.globl _STIF
                                     71 	.globl _DMAIE
                                     72 	.globl _T1IE
                                     73 	.globl _T2IE
                                     74 	.globl _T3IE
                                     75 	.globl _T4IE
                                     76 	.globl _P0IE
                                     77 	.globl _RFERRIE
                                     78 	.globl _ADCIE
                                     79 	.globl _URX0IE
                                     80 	.globl _URX1IE
                                     81 	.globl _ENCIE
                                     82 	.globl _STIE
                                     83 	.globl _EA
                                     84 	.globl _P2_0
                                     85 	.globl _P2_1
                                     86 	.globl _P2_2
                                     87 	.globl _P2_3
                                     88 	.globl _P2_4
                                     89 	.globl _P2_5
                                     90 	.globl _P2_6
                                     91 	.globl _P2_7
                                     92 	.globl _ENCIF_0
                                     93 	.globl _ENCIF_1
                                     94 	.globl _P1_0
                                     95 	.globl _P1_1
                                     96 	.globl _P1_2
                                     97 	.globl _P1_3
                                     98 	.globl _P1_4
                                     99 	.globl _P1_5
                                    100 	.globl _P1_6
                                    101 	.globl _P1_7
                                    102 	.globl _IT0
                                    103 	.globl _RFERRIF
                                    104 	.globl _IT1
                                    105 	.globl _URX0IF
                                    106 	.globl _ADCIF
                                    107 	.globl _URX1IF
                                    108 	.globl _P0_0
                                    109 	.globl _P0_1
                                    110 	.globl _P0_2
                                    111 	.globl _P0_3
                                    112 	.globl _P0_4
                                    113 	.globl _P0_5
                                    114 	.globl _P0_6
                                    115 	.globl _P0_7
                                    116 	.globl _WDCTL
                                    117 	.globl _U1GCR
                                    118 	.globl _U1UCR
                                    119 	.globl _U1BAUD
                                    120 	.globl _U1DBUF
                                    121 	.globl _U1CSR
                                    122 	.globl _U0GCR
                                    123 	.globl _U0UCR
                                    124 	.globl _U0BAUD
                                    125 	.globl _U0DBUF
                                    126 	.globl _U0CSR
                                    127 	.globl _TIMIF
                                    128 	.globl _T4CC1
                                    129 	.globl _T4CCTL1
                                    130 	.globl _T4CC0
                                    131 	.globl _T4CCTL0
                                    132 	.globl _T4CTL
                                    133 	.globl _T4CNT
                                    134 	.globl _T3CC1
                                    135 	.globl _T3CCTL1
                                    136 	.globl _T3CC0
                                    137 	.globl _T3CCTL0
                                    138 	.globl _T3CTL
                                    139 	.globl _T3CNT
                                    140 	.globl _T2MSEL
                                    141 	.globl _T2IRQM
                                    142 	.globl _T2MOVF2
                                    143 	.globl _T2MOVF1
                                    144 	.globl _T2MOVF0
                                    145 	.globl _T2M1
                                    146 	.globl _T2M0
                                    147 	.globl _T2IRQF
                                    148 	.globl _T2EVTCFG
                                    149 	.globl _T2CTRL
                                    150 	.globl _T1STAT
                                    151 	.globl _T1CCTL2
                                    152 	.globl _T1CCTL1
                                    153 	.globl _T1CCTL0
                                    154 	.globl _T1CTL
                                    155 	.globl _T1CNTH
                                    156 	.globl _T1CNTL
                                    157 	.globl _T1CC2H
                                    158 	.globl _T1CC2L
                                    159 	.globl _T1CC1H
                                    160 	.globl _T1CC1L
                                    161 	.globl _T1CC0H
                                    162 	.globl _T1CC0L
                                    163 	.globl _CLKCONSTA
                                    164 	.globl _CLKCONCMD
                                    165 	.globl _SLEEPSTA
                                    166 	.globl _SLEEPCMD
                                    167 	.globl _STLOAD
                                    168 	.globl _ST2
                                    169 	.globl _ST1
                                    170 	.globl _ST0
                                    171 	.globl _RFERRF
                                    172 	.globl _RFIRQF0
                                    173 	.globl _RFST
                                    174 	.globl _RFD
                                    175 	.globl _RFIRQF1
                                    176 	.globl _PSBANK
                                    177 	.globl _FMAP
                                    178 	.globl _MEMCTR
                                    179 	.globl __XPAGE
                                    180 	.globl _MPAGE
                                    181 	.globl _PMUX
                                    182 	.globl _P2DIR
                                    183 	.globl _P1DIR
                                    184 	.globl _P0DIR
                                    185 	.globl _P2INP
                                    186 	.globl _P1INP
                                    187 	.globl _P2SEL
                                    188 	.globl _P1SEL
                                    189 	.globl _P0SEL
                                    190 	.globl _APCFG
                                    191 	.globl _PERCFG
                                    192 	.globl _P0INP
                                    193 	.globl _P2IEN
                                    194 	.globl _P1IEN
                                    195 	.globl _P0IEN
                                    196 	.globl _PICTL
                                    197 	.globl _P2IFG
                                    198 	.globl _P1IFG
                                    199 	.globl _P0IFG
                                    200 	.globl _DMAREQ
                                    201 	.globl _DMAARM
                                    202 	.globl _DMA0CFGH
                                    203 	.globl _DMA0CFGL
                                    204 	.globl _DMA1CFGH
                                    205 	.globl _DMA1CFGL
                                    206 	.globl _DMAIRQ
                                    207 	.globl _ENCCS
                                    208 	.globl _ENCDO
                                    209 	.globl _ENCDI
                                    210 	.globl _RNDH
                                    211 	.globl _RNDL
                                    212 	.globl _ADCH
                                    213 	.globl _ADCL
                                    214 	.globl _ADCCON3
                                    215 	.globl _ADCCON2
                                    216 	.globl _ADCCON1
                                    217 	.globl _B
                                    218 	.globl _IRCON2
                                    219 	.globl _ACC
                                    220 	.globl _PSW
                                    221 	.globl _IRCON
                                    222 	.globl _IP1
                                    223 	.globl _IEN1
                                    224 	.globl _IP0
                                    225 	.globl _IEN0
                                    226 	.globl _P2
                                    227 	.globl _S1CON
                                    228 	.globl _IEN2
                                    229 	.globl _S0CON
                                    230 	.globl _DPS
                                    231 	.globl _P1
                                    232 	.globl _TCON
                                    233 	.globl _PCON
                                    234 	.globl _DPH1
                                    235 	.globl _DPL1
                                    236 	.globl _DPH0
                                    237 	.globl _DPL0
                                    238 	.globl _SP
                                    239 	.globl _P0
                                    240 	.globl _X_IEEE_ADDR
                                    241 	.globl _X_INFOPAGE
                                    242 	.globl _X_P2DIR
                                    243 	.globl _X_P1DIR
                                    244 	.globl _X_P0DIR
                                    245 	.globl _X_U1GCR
                                    246 	.globl _X_U1UCR
                                    247 	.globl _X_U1BAUD
                                    248 	.globl _X_U1DBUF
                                    249 	.globl _X_U1CSR
                                    250 	.globl _X_P2INP
                                    251 	.globl _X_P1INP
                                    252 	.globl _X_P2SEL
                                    253 	.globl _X_P1SEL
                                    254 	.globl _X_P0SEL
                                    255 	.globl _X_APCFG
                                    256 	.globl _X_PERCFG
                                    257 	.globl _X_T4CC1
                                    258 	.globl _X_T4CCTL1
                                    259 	.globl _X_T4CC0
                                    260 	.globl _X_T4CCTL0
                                    261 	.globl _X_T4CTL
                                    262 	.globl _X_T4CNT
                                    263 	.globl _X_RFIRQF0
                                    264 	.globl _X_T1CCTL2
                                    265 	.globl _X_T1CCTL1
                                    266 	.globl _X_T1CCTL0
                                    267 	.globl _X_T1CTL
                                    268 	.globl _X_T1CNTH
                                    269 	.globl _X_T1CNTL
                                    270 	.globl _X_RFST
                                    271 	.globl _X_T1CC2H
                                    272 	.globl _X_T1CC2L
                                    273 	.globl _X_T1CC1H
                                    274 	.globl _X_T1CC1L
                                    275 	.globl _X_T1CC0H
                                    276 	.globl _X_T1CC0L
                                    277 	.globl _X_RFD
                                    278 	.globl _X_TIMIF
                                    279 	.globl _X_DMAREQ
                                    280 	.globl _X_DMAARM
                                    281 	.globl _X_DMA0CFGH
                                    282 	.globl _X_DMA0CFGL
                                    283 	.globl _X_DMA1CFGH
                                    284 	.globl _X_DMA1CFGL
                                    285 	.globl _X_DMAIRQ
                                    286 	.globl _X_T3CC1
                                    287 	.globl _X_T3CCTL1
                                    288 	.globl _X_T3CC0
                                    289 	.globl _X_T3CCTL0
                                    290 	.globl _X_T3CTL
                                    291 	.globl _X_T3CNT
                                    292 	.globl _X_WDCTL
                                    293 	.globl _X_MEMCTR
                                    294 	.globl _X_CLKCONCMD
                                    295 	.globl _X_U0GCR
                                    296 	.globl _X_U0UCR
                                    297 	.globl _X_T2MSEL
                                    298 	.globl _X_U0BAUD
                                    299 	.globl _X_U0DBUF
                                    300 	.globl _X_RFERRF
                                    301 	.globl _X_SLEEPCMD
                                    302 	.globl _X_RNDH
                                    303 	.globl _X_RNDL
                                    304 	.globl _X_ADCH
                                    305 	.globl _X_ADCL
                                    306 	.globl _X_ADCCON3
                                    307 	.globl _X_ADCCON2
                                    308 	.globl _X_ADCCON1
                                    309 	.globl _X_ENCCS
                                    310 	.globl _X_ENCDO
                                    311 	.globl _X_ENCDI
                                    312 	.globl _X_T1STAT
                                    313 	.globl _X_PMUX
                                    314 	.globl _X_STLOAD
                                    315 	.globl _X_P2IEN
                                    316 	.globl _X_P0IEN
                                    317 	.globl _X_T2IRQM
                                    318 	.globl _X_T2MOVF2
                                    319 	.globl _X_T2MOVF1
                                    320 	.globl _X_T2MOVF0
                                    321 	.globl _X_T2M1
                                    322 	.globl _X_T2M0
                                    323 	.globl _X_T2IRQF
                                    324 	.globl _X_P2
                                    325 	.globl _X_PSBANK
                                    326 	.globl _X_FMAP
                                    327 	.globl _X_CLKCONSTA
                                    328 	.globl _X_SLEEPSTA
                                    329 	.globl _X_T2EVTCFG
                                    330 	.globl _X_ST2
                                    331 	.globl _X_ST1
                                    332 	.globl _X_ST0
                                    333 	.globl _X_T2CTRL
                                    334 	.globl _X__XPAGE
                                    335 	.globl _X_MPAGE
                                    336 	.globl _X_RFIRQF1
                                    337 	.globl _X_P1
                                    338 	.globl _X_P0INP
                                    339 	.globl _X_P1IEN
                                    340 	.globl _X_PICTL
                                    341 	.globl _X_P2IFG
                                    342 	.globl _X_P1IFG
                                    343 	.globl _X_P0IFG
                                    344 	.globl _X_U0CSR
                                    345 	.globl _X_P0
                                    346 	.globl _USBF5
                                    347 	.globl _USBF4
                                    348 	.globl _USBF3
                                    349 	.globl _USBF2
                                    350 	.globl _USBF1
                                    351 	.globl _USBF0
                                    352 	.globl _USBCNTH
                                    353 	.globl _USBCNTL
                                    354 	.globl _USBCNT0
                                    355 	.globl _USBCSOH
                                    356 	.globl _USBCSOL
                                    357 	.globl _USBMAXO
                                    358 	.globl _USBCSIH
                                    359 	.globl _USBCSIL
                                    360 	.globl _USBCS0
                                    361 	.globl _USBMAXI
                                    362 	.globl _USBCTRL
                                    363 	.globl _USBINDEX
                                    364 	.globl _USBFRMH
                                    365 	.globl _USBFRML
                                    366 	.globl _USBCIE
                                    367 	.globl _USBOIE
                                    368 	.globl _USBIIE
                                    369 	.globl _USBCIF
                                    370 	.globl _USBOIF
                                    371 	.globl _USBIIF
                                    372 	.globl _USBPOW
                                    373 	.globl _USBADDR
                                    374 	.globl _CSPT
                                    375 	.globl _CSPZ
                                    376 	.globl _CSPY
                                    377 	.globl _CSPX
                                    378 	.globl _CSPSTAT
                                    379 	.globl _CSPCTRL
                                    380 	.globl _CSPPROG23
                                    381 	.globl _CSPPROG22
                                    382 	.globl _CSPPROG21
                                    383 	.globl _CSPPROG20
                                    384 	.globl _CSPPROG19
                                    385 	.globl _CSPPROG18
                                    386 	.globl _CSPPROG17
                                    387 	.globl _CSPPROG16
                                    388 	.globl _CSPPROG15
                                    389 	.globl _CSPPROG14
                                    390 	.globl _CSPPROG13
                                    391 	.globl _CSPPROG12
                                    392 	.globl _CSPPROG11
                                    393 	.globl _CSPPROG10
                                    394 	.globl _CSPPROG9
                                    395 	.globl _CSPPROG8
                                    396 	.globl _CSPPROG7
                                    397 	.globl _CSPPROG6
                                    398 	.globl _CSPPROG5
                                    399 	.globl _CSPPROG4
                                    400 	.globl _CSPPROG3
                                    401 	.globl _CSPPROG2
                                    402 	.globl _CSPPROG1
                                    403 	.globl _CSPPROG0
                                    404 	.globl _RFC_OBS_CTRL2
                                    405 	.globl _RFC_OBS_CTRL1
                                    406 	.globl _RFC_OBS_CTRL0
                                    407 	.globl _TXFILTCFG
                                    408 	.globl _PTEST1
                                    409 	.globl _PTEST0
                                    410 	.globl _ATEST
                                    411 	.globl _DACTEST2
                                    412 	.globl _DACTEST1
                                    413 	.globl _DACTEST0
                                    414 	.globl _MDMTEST1
                                    415 	.globl _MDMTEST0
                                    416 	.globl _ADCTEST2
                                    417 	.globl _ADCTEST1
                                    418 	.globl _ADCTEST0
                                    419 	.globl _AGCCTRL3
                                    420 	.globl _AGCCTRL2
                                    421 	.globl _AGCCTRL1
                                    422 	.globl _AGCCTRL0
                                    423 	.globl _FSCAL3
                                    424 	.globl _FSCAL2
                                    425 	.globl _FSCAL1
                                    426 	.globl _FSCAL0
                                    427 	.globl _FSCTRL
                                    428 	.globl _RXCTRL
                                    429 	.globl _FREQEST
                                    430 	.globl _MDMCTRL1
                                    431 	.globl _MDMCTRL0
                                    432 	.globl _RFRND
                                    433 	.globl _RFERRM
                                    434 	.globl _RFIRQM1
                                    435 	.globl _RFIRQM0
                                    436 	.globl _TXLAST_PTR
                                    437 	.globl _TXFIRST_PTR
                                    438 	.globl _RXP1_PTR
                                    439 	.globl _RXLAST_PTR
                                    440 	.globl _RXFIRST_PTR
                                    441 	.globl _TXFIFOCNT
                                    442 	.globl _RXFIFOCNT
                                    443 	.globl _RXFIRST
                                    444 	.globl _RSSISTAT
                                    445 	.globl _RSSI
                                    446 	.globl _CCACTRL1
                                    447 	.globl _CCACTRL0
                                    448 	.globl _FSMCTRL
                                    449 	.globl _FIFOPCTRL
                                    450 	.globl _FSMSTAT1
                                    451 	.globl _FSMSTAT0
                                    452 	.globl _TXCTRL
                                    453 	.globl _TXPOWER
                                    454 	.globl _FREQCTRL
                                    455 	.globl _FREQTUNE
                                    456 	.globl _RXMASKCLR
                                    457 	.globl _RXMASKSET
                                    458 	.globl _RXENABLE
                                    459 	.globl _FRMCTRL1
                                    460 	.globl _FRMCTRL0
                                    461 	.globl _SRCEXTEN2
                                    462 	.globl _SRCEXTEN1
                                    463 	.globl _SRCEXTEN0
                                    464 	.globl _SRCSHORTEN2
                                    465 	.globl _SRCSHORTEN1
                                    466 	.globl _SRCSHORTEN0
                                    467 	.globl _SRCMATCH
                                    468 	.globl _FRMFILT1
                                    469 	.globl _FRMFILT0
                                    470 	.globl _SHORT_ADDR1
                                    471 	.globl _SHORT_ADDR0
                                    472 	.globl _PAN_ID1
                                    473 	.globl _PAN_ID0
                                    474 	.globl _EXT_ADDR7
                                    475 	.globl _EXT_ADDR6
                                    476 	.globl _EXT_ADDR5
                                    477 	.globl _EXT_ADDR4
                                    478 	.globl _EXT_ADDR3
                                    479 	.globl _EXT_ADDR2
                                    480 	.globl _EXT_ADDR1
                                    481 	.globl _EXT_ADDR0
                                    482 	.globl _SRCSHORTPENDEN2
                                    483 	.globl _SRCSHORTPENDEN1
                                    484 	.globl _SRCSHORTPENDEN0
                                    485 	.globl _SRCEXTPENDEN2
                                    486 	.globl _SRCEXTPENDEN1
                                    487 	.globl _SRCEXTPENDEN0
                                    488 	.globl _SRCRESINDEX
                                    489 	.globl _SRCRESMASK2
                                    490 	.globl _SRCRESMASK1
                                    491 	.globl _SRCRESMASK0
                                    492 	.globl _SRC_ADDR_TABLE
                                    493 	.globl _TXFIFO
                                    494 	.globl _RXFIFO
                                    495 	.globl _RFCORE_RAM
                                    496 	.globl _CMPCTL
                                    497 	.globl _OPAMPS
                                    498 	.globl _OPAMPC
                                    499 	.globl _STCV2
                                    500 	.globl _STCV1
                                    501 	.globl _STCV0
                                    502 	.globl _STCS
                                    503 	.globl _STCC
                                    504 	.globl _T1CC4H
                                    505 	.globl _T1CC4L
                                    506 	.globl _T1CC3H
                                    507 	.globl _T1CC3L
                                    508 	.globl _XX_T1CC2H
                                    509 	.globl _XX_T1CC2L
                                    510 	.globl _XX_T1CC1H
                                    511 	.globl _XX_T1CC1L
                                    512 	.globl _XX_T1CC0H
                                    513 	.globl _XX_T1CC0L
                                    514 	.globl _T1CCTL4
                                    515 	.globl _T1CCTL3
                                    516 	.globl _XX_T1CCTL2
                                    517 	.globl _XX_T1CCTL1
                                    518 	.globl _XX_T1CCTL0
                                    519 	.globl _CLD
                                    520 	.globl _IRCTL
                                    521 	.globl _CHIPINFO1
                                    522 	.globl _CHIPINFO0
                                    523 	.globl _FWDATA
                                    524 	.globl _FADDRH
                                    525 	.globl _FADDRL
                                    526 	.globl _FCTL
                                    527 	.globl _IVCTRL
                                    528 	.globl _BATTMON
                                    529 	.globl _SRCRC
                                    530 	.globl _DBGDATA
                                    531 	.globl _TESTREG0
                                    532 	.globl _CHIPID
                                    533 	.globl _CHVER
                                    534 	.globl _OBSSEL5
                                    535 	.globl _OBSSEL4
                                    536 	.globl _OBSSEL3
                                    537 	.globl _OBSSEL2
                                    538 	.globl _OBSSEL1
                                    539 	.globl _OBSSEL0
                                    540 	.globl _I2CIO
                                    541 	.globl _I2CWC
                                    542 	.globl _I2CADDR
                                    543 	.globl _I2CDATA
                                    544 	.globl _I2CSTAT
                                    545 	.globl _I2CCFG
                                    546 	.globl _OPAMPMC
                                    547 	.globl _MONMUX
                                    548 	.globl _rucb_open
                                    549 	.globl _rucb_close
                                    550 	.globl _rucb_send
                                    551 ;--------------------------------------------------------
                                    552 ; special function registers
                                    553 ;--------------------------------------------------------
                                    554 	.area RSEG    (ABS,DATA)
      000000                        555 	.org 0x0000
                           000080   556 _P0	=	0x0080
                           000081   557 _SP	=	0x0081
                           000082   558 _DPL0	=	0x0082
                           000083   559 _DPH0	=	0x0083
                           000084   560 _DPL1	=	0x0084
                           000085   561 _DPH1	=	0x0085
                           000087   562 _PCON	=	0x0087
                           000088   563 _TCON	=	0x0088
                           000090   564 _P1	=	0x0090
                           000092   565 _DPS	=	0x0092
                           000098   566 _S0CON	=	0x0098
                           00009A   567 _IEN2	=	0x009a
                           00009B   568 _S1CON	=	0x009b
                           0000A0   569 _P2	=	0x00a0
                           0000A8   570 _IEN0	=	0x00a8
                           0000A9   571 _IP0	=	0x00a9
                           0000B8   572 _IEN1	=	0x00b8
                           0000B9   573 _IP1	=	0x00b9
                           0000C0   574 _IRCON	=	0x00c0
                           0000D0   575 _PSW	=	0x00d0
                           0000E0   576 _ACC	=	0x00e0
                           0000E8   577 _IRCON2	=	0x00e8
                           0000F0   578 _B	=	0x00f0
                           0000B4   579 _ADCCON1	=	0x00b4
                           0000B5   580 _ADCCON2	=	0x00b5
                           0000B6   581 _ADCCON3	=	0x00b6
                           0000BA   582 _ADCL	=	0x00ba
                           0000BB   583 _ADCH	=	0x00bb
                           0000BC   584 _RNDL	=	0x00bc
                           0000BD   585 _RNDH	=	0x00bd
                           0000B1   586 _ENCDI	=	0x00b1
                           0000B2   587 _ENCDO	=	0x00b2
                           0000B3   588 _ENCCS	=	0x00b3
                           0000D1   589 _DMAIRQ	=	0x00d1
                           0000D2   590 _DMA1CFGL	=	0x00d2
                           0000D3   591 _DMA1CFGH	=	0x00d3
                           0000D4   592 _DMA0CFGL	=	0x00d4
                           0000D5   593 _DMA0CFGH	=	0x00d5
                           0000D6   594 _DMAARM	=	0x00d6
                           0000D7   595 _DMAREQ	=	0x00d7
                           000089   596 _P0IFG	=	0x0089
                           00008A   597 _P1IFG	=	0x008a
                           00008B   598 _P2IFG	=	0x008b
                           00008C   599 _PICTL	=	0x008c
                           0000AB   600 _P0IEN	=	0x00ab
                           00008D   601 _P1IEN	=	0x008d
                           0000AC   602 _P2IEN	=	0x00ac
                           00008F   603 _P0INP	=	0x008f
                           0000F1   604 _PERCFG	=	0x00f1
                           0000F2   605 _APCFG	=	0x00f2
                           0000F3   606 _P0SEL	=	0x00f3
                           0000F4   607 _P1SEL	=	0x00f4
                           0000F5   608 _P2SEL	=	0x00f5
                           0000F6   609 _P1INP	=	0x00f6
                           0000F7   610 _P2INP	=	0x00f7
                           0000FD   611 _P0DIR	=	0x00fd
                           0000FE   612 _P1DIR	=	0x00fe
                           0000FF   613 _P2DIR	=	0x00ff
                           0000AE   614 _PMUX	=	0x00ae
                           000093   615 _MPAGE	=	0x0093
                           000093   616 __XPAGE	=	0x0093
                           0000C7   617 _MEMCTR	=	0x00c7
                           00009F   618 _FMAP	=	0x009f
                           00009F   619 _PSBANK	=	0x009f
                           000091   620 _RFIRQF1	=	0x0091
                           0000D9   621 _RFD	=	0x00d9
                           0000E1   622 _RFST	=	0x00e1
                           0000E9   623 _RFIRQF0	=	0x00e9
                           0000BF   624 _RFERRF	=	0x00bf
                           000095   625 _ST0	=	0x0095
                           000096   626 _ST1	=	0x0096
                           000097   627 _ST2	=	0x0097
                           0000AD   628 _STLOAD	=	0x00ad
                           0000BE   629 _SLEEPCMD	=	0x00be
                           00009D   630 _SLEEPSTA	=	0x009d
                           0000C6   631 _CLKCONCMD	=	0x00c6
                           00009E   632 _CLKCONSTA	=	0x009e
                           0000DA   633 _T1CC0L	=	0x00da
                           0000DB   634 _T1CC0H	=	0x00db
                           0000DC   635 _T1CC1L	=	0x00dc
                           0000DD   636 _T1CC1H	=	0x00dd
                           0000DE   637 _T1CC2L	=	0x00de
                           0000DF   638 _T1CC2H	=	0x00df
                           0000E2   639 _T1CNTL	=	0x00e2
                           0000E3   640 _T1CNTH	=	0x00e3
                           0000E4   641 _T1CTL	=	0x00e4
                           0000E5   642 _T1CCTL0	=	0x00e5
                           0000E6   643 _T1CCTL1	=	0x00e6
                           0000E7   644 _T1CCTL2	=	0x00e7
                           0000AF   645 _T1STAT	=	0x00af
                           000094   646 _T2CTRL	=	0x0094
                           00009C   647 _T2EVTCFG	=	0x009c
                           0000A1   648 _T2IRQF	=	0x00a1
                           0000A2   649 _T2M0	=	0x00a2
                           0000A3   650 _T2M1	=	0x00a3
                           0000A4   651 _T2MOVF0	=	0x00a4
                           0000A5   652 _T2MOVF1	=	0x00a5
                           0000A6   653 _T2MOVF2	=	0x00a6
                           0000A7   654 _T2IRQM	=	0x00a7
                           0000C3   655 _T2MSEL	=	0x00c3
                           0000CA   656 _T3CNT	=	0x00ca
                           0000CB   657 _T3CTL	=	0x00cb
                           0000CC   658 _T3CCTL0	=	0x00cc
                           0000CD   659 _T3CC0	=	0x00cd
                           0000CE   660 _T3CCTL1	=	0x00ce
                           0000CF   661 _T3CC1	=	0x00cf
                           0000EA   662 _T4CNT	=	0x00ea
                           0000EB   663 _T4CTL	=	0x00eb
                           0000EC   664 _T4CCTL0	=	0x00ec
                           0000ED   665 _T4CC0	=	0x00ed
                           0000EE   666 _T4CCTL1	=	0x00ee
                           0000EF   667 _T4CC1	=	0x00ef
                           0000D8   668 _TIMIF	=	0x00d8
                           000086   669 _U0CSR	=	0x0086
                           0000C1   670 _U0DBUF	=	0x00c1
                           0000C2   671 _U0BAUD	=	0x00c2
                           0000C4   672 _U0UCR	=	0x00c4
                           0000C5   673 _U0GCR	=	0x00c5
                           0000F8   674 _U1CSR	=	0x00f8
                           0000F9   675 _U1DBUF	=	0x00f9
                           0000FA   676 _U1BAUD	=	0x00fa
                           0000FB   677 _U1UCR	=	0x00fb
                           0000FC   678 _U1GCR	=	0x00fc
                           0000C9   679 _WDCTL	=	0x00c9
                                    680 ;--------------------------------------------------------
                                    681 ; special function bits
                                    682 ;--------------------------------------------------------
                                    683 	.area RSEG    (ABS,DATA)
      000000                        684 	.org 0x0000
                           000087   685 _P0_7	=	0x0087
                           000086   686 _P0_6	=	0x0086
                           000085   687 _P0_5	=	0x0085
                           000084   688 _P0_4	=	0x0084
                           000083   689 _P0_3	=	0x0083
                           000082   690 _P0_2	=	0x0082
                           000081   691 _P0_1	=	0x0081
                           000080   692 _P0_0	=	0x0080
                           00008F   693 _URX1IF	=	0x008f
                           00008D   694 _ADCIF	=	0x008d
                           00008B   695 _URX0IF	=	0x008b
                           00008A   696 _IT1	=	0x008a
                           000089   697 _RFERRIF	=	0x0089
                           000088   698 _IT0	=	0x0088
                           000097   699 _P1_7	=	0x0097
                           000096   700 _P1_6	=	0x0096
                           000095   701 _P1_5	=	0x0095
                           000094   702 _P1_4	=	0x0094
                           000093   703 _P1_3	=	0x0093
                           000092   704 _P1_2	=	0x0092
                           000091   705 _P1_1	=	0x0091
                           000090   706 _P1_0	=	0x0090
                           000099   707 _ENCIF_1	=	0x0099
                           000098   708 _ENCIF_0	=	0x0098
                           0000A7   709 _P2_7	=	0x00a7
                           0000A6   710 _P2_6	=	0x00a6
                           0000A5   711 _P2_5	=	0x00a5
                           0000A4   712 _P2_4	=	0x00a4
                           0000A3   713 _P2_3	=	0x00a3
                           0000A2   714 _P2_2	=	0x00a2
                           0000A1   715 _P2_1	=	0x00a1
                           0000A0   716 _P2_0	=	0x00a0
                           0000AF   717 _EA	=	0x00af
                           0000AD   718 _STIE	=	0x00ad
                           0000AC   719 _ENCIE	=	0x00ac
                           0000AB   720 _URX1IE	=	0x00ab
                           0000AA   721 _URX0IE	=	0x00aa
                           0000A9   722 _ADCIE	=	0x00a9
                           0000A8   723 _RFERRIE	=	0x00a8
                           0000BD   724 _P0IE	=	0x00bd
                           0000BC   725 _T4IE	=	0x00bc
                           0000BB   726 _T3IE	=	0x00bb
                           0000BA   727 _T2IE	=	0x00ba
                           0000B9   728 _T1IE	=	0x00b9
                           0000B8   729 _DMAIE	=	0x00b8
                           0000C7   730 _STIF	=	0x00c7
                           0000C5   731 _P0IF	=	0x00c5
                           0000C4   732 _T4IF	=	0x00c4
                           0000C3   733 _T3IF	=	0x00c3
                           0000C2   734 _T2IF	=	0x00c2
                           0000C1   735 _T1IF	=	0x00c1
                           0000C0   736 _DMAIF	=	0x00c0
                           0000D7   737 _CY	=	0x00d7
                           0000D6   738 _AC	=	0x00d6
                           0000D5   739 _F0	=	0x00d5
                           0000D4   740 _RS1	=	0x00d4
                           0000D3   741 _RS0	=	0x00d3
                           0000D2   742 _OV	=	0x00d2
                           0000D1   743 _F1	=	0x00d1
                           0000D0   744 _P	=	0x00d0
                           0000E7   745 _ACC_7	=	0x00e7
                           0000E6   746 _ACC_6	=	0x00e6
                           0000E5   747 _ACC_5	=	0x00e5
                           0000E4   748 _ACC_4	=	0x00e4
                           0000E3   749 _ACC_3	=	0x00e3
                           0000E2   750 _ACC_2	=	0x00e2
                           0000E1   751 _ACC_1	=	0x00e1
                           0000E0   752 _ACC_0	=	0x00e0
                           0000EC   753 _WDTIF	=	0x00ec
                           0000EB   754 _P1IF	=	0x00eb
                           0000EA   755 _UTX1IF	=	0x00ea
                           0000E9   756 _UTX0IF	=	0x00e9
                           0000E8   757 _P2IF	=	0x00e8
                           0000F7   758 _B_7	=	0x00f7
                           0000F6   759 _B_6	=	0x00f6
                           0000F5   760 _B_5	=	0x00f5
                           0000F4   761 _B_4	=	0x00f4
                           0000F3   762 _B_3	=	0x00f3
                           0000F2   763 _B_2	=	0x00f2
                           0000F1   764 _B_1	=	0x00f1
                           0000F0   765 _B_0	=	0x00f0
                           0000DE   766 _OVFIM	=	0x00de
                           0000DD   767 _T4CH1IF	=	0x00dd
                           0000DC   768 _T4CH0IF	=	0x00dc
                           0000DB   769 _T4OVFIF	=	0x00db
                           0000DA   770 _T3CH1IF	=	0x00da
                           0000D9   771 _T3CH0IF	=	0x00d9
                           0000D8   772 _T3OVFIF	=	0x00d8
                           0000FF   773 _MODE	=	0x00ff
                           0000FE   774 _RE	=	0x00fe
                           0000FD   775 _SLAVE	=	0x00fd
                           0000FC   776 _FE	=	0x00fc
                           0000FB   777 _ERR	=	0x00fb
                           0000FA   778 _RX_BYTE	=	0x00fa
                           0000F9   779 _TX_BYTE	=	0x00f9
                           0000F8   780 _ACTIVE	=	0x00f8
                                    781 ;--------------------------------------------------------
                                    782 ; overlayable register banks
                                    783 ;--------------------------------------------------------
                                    784 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        785 	.ds 8
                                    786 ;--------------------------------------------------------
                                    787 ; internal ram data
                                    788 ;--------------------------------------------------------
                                    789 	.area DSEG    (DATA)
                                    790 ;--------------------------------------------------------
                                    791 ; overlayable items in internal ram 
                                    792 ;--------------------------------------------------------
                                    793 ;--------------------------------------------------------
                                    794 ; indirectly addressable internal ram data
                                    795 ;--------------------------------------------------------
                                    796 	.area ISEG    (DATA)
                                    797 ;--------------------------------------------------------
                                    798 ; absolute internal ram data
                                    799 ;--------------------------------------------------------
                                    800 	.area IABS    (ABS,DATA)
                                    801 	.area IABS    (ABS,DATA)
                                    802 ;--------------------------------------------------------
                                    803 ; bit data
                                    804 ;--------------------------------------------------------
                                    805 	.area BSEG    (BIT)
                                    806 ;--------------------------------------------------------
                                    807 ; paged external ram data
                                    808 ;--------------------------------------------------------
                                    809 	.area PSEG    (PAG,XDATA)
                                    810 ;--------------------------------------------------------
                                    811 ; external ram data
                                    812 ;--------------------------------------------------------
                                    813 	.area XSEG    (XDATA)
                           0061A6   814 _MONMUX	=	0x61a6
                           0061A6   815 _OPAMPMC	=	0x61a6
                           006230   816 _I2CCFG	=	0x6230
                           006231   817 _I2CSTAT	=	0x6231
                           006232   818 _I2CDATA	=	0x6232
                           006233   819 _I2CADDR	=	0x6233
                           006234   820 _I2CWC	=	0x6234
                           006235   821 _I2CIO	=	0x6235
                           006243   822 _OBSSEL0	=	0x6243
                           006244   823 _OBSSEL1	=	0x6244
                           006245   824 _OBSSEL2	=	0x6245
                           006246   825 _OBSSEL3	=	0x6246
                           006247   826 _OBSSEL4	=	0x6247
                           006248   827 _OBSSEL5	=	0x6248
                           006249   828 _CHVER	=	0x6249
                           00624A   829 _CHIPID	=	0x624a
                           00624B   830 _TESTREG0	=	0x624b
                           006260   831 _DBGDATA	=	0x6260
                           006262   832 _SRCRC	=	0x6262
                           006264   833 _BATTMON	=	0x6264
                           006265   834 _IVCTRL	=	0x6265
                           006270   835 _FCTL	=	0x6270
                           006271   836 _FADDRL	=	0x6271
                           006272   837 _FADDRH	=	0x6272
                           006273   838 _FWDATA	=	0x6273
                           006276   839 _CHIPINFO0	=	0x6276
                           006277   840 _CHIPINFO1	=	0x6277
                           006281   841 _IRCTL	=	0x6281
                           006290   842 _CLD	=	0x6290
                           0062A0   843 _XX_T1CCTL0	=	0x62a0
                           0062A1   844 _XX_T1CCTL1	=	0x62a1
                           0062A2   845 _XX_T1CCTL2	=	0x62a2
                           0062A3   846 _T1CCTL3	=	0x62a3
                           0062A4   847 _T1CCTL4	=	0x62a4
                           0062A6   848 _XX_T1CC0L	=	0x62a6
                           0062A7   849 _XX_T1CC0H	=	0x62a7
                           0062A8   850 _XX_T1CC1L	=	0x62a8
                           0062A9   851 _XX_T1CC1H	=	0x62a9
                           0062AA   852 _XX_T1CC2L	=	0x62aa
                           0062AB   853 _XX_T1CC2H	=	0x62ab
                           0062AC   854 _T1CC3L	=	0x62ac
                           0062AD   855 _T1CC3H	=	0x62ad
                           0062AE   856 _T1CC4L	=	0x62ae
                           0062AF   857 _T1CC4H	=	0x62af
                           0062B0   858 _STCC	=	0x62b0
                           0062B1   859 _STCS	=	0x62b1
                           0062B2   860 _STCV0	=	0x62b2
                           0062B3   861 _STCV1	=	0x62b3
                           0062B4   862 _STCV2	=	0x62b4
                           0062C0   863 _OPAMPC	=	0x62c0
                           0062C1   864 _OPAMPS	=	0x62c1
                           0062D0   865 _CMPCTL	=	0x62d0
                           006000   866 _RFCORE_RAM	=	0x6000
                           006000   867 _RXFIFO	=	0x6000
                           006080   868 _TXFIFO	=	0x6080
                           006100   869 _SRC_ADDR_TABLE	=	0x6100
                           006160   870 _SRCRESMASK0	=	0x6160
                           006161   871 _SRCRESMASK1	=	0x6161
                           006162   872 _SRCRESMASK2	=	0x6162
                           006163   873 _SRCRESINDEX	=	0x6163
                           006164   874 _SRCEXTPENDEN0	=	0x6164
                           006165   875 _SRCEXTPENDEN1	=	0x6165
                           006166   876 _SRCEXTPENDEN2	=	0x6166
                           006167   877 _SRCSHORTPENDEN0	=	0x6167
                           006168   878 _SRCSHORTPENDEN1	=	0x6168
                           006169   879 _SRCSHORTPENDEN2	=	0x6169
                           00616A   880 _EXT_ADDR0	=	0x616a
                           00616B   881 _EXT_ADDR1	=	0x616b
                           00616C   882 _EXT_ADDR2	=	0x616c
                           00616D   883 _EXT_ADDR3	=	0x616d
                           00616E   884 _EXT_ADDR4	=	0x616e
                           00616F   885 _EXT_ADDR5	=	0x616f
                           006170   886 _EXT_ADDR6	=	0x6170
                           006171   887 _EXT_ADDR7	=	0x6171
                           006172   888 _PAN_ID0	=	0x6172
                           006173   889 _PAN_ID1	=	0x6173
                           006174   890 _SHORT_ADDR0	=	0x6174
                           006175   891 _SHORT_ADDR1	=	0x6175
                           006180   892 _FRMFILT0	=	0x6180
                           006181   893 _FRMFILT1	=	0x6181
                           006182   894 _SRCMATCH	=	0x6182
                           006183   895 _SRCSHORTEN0	=	0x6183
                           006184   896 _SRCSHORTEN1	=	0x6184
                           006185   897 _SRCSHORTEN2	=	0x6185
                           006186   898 _SRCEXTEN0	=	0x6186
                           006187   899 _SRCEXTEN1	=	0x6187
                           006188   900 _SRCEXTEN2	=	0x6188
                           006189   901 _FRMCTRL0	=	0x6189
                           00618A   902 _FRMCTRL1	=	0x618a
                           00618B   903 _RXENABLE	=	0x618b
                           00618C   904 _RXMASKSET	=	0x618c
                           00618D   905 _RXMASKCLR	=	0x618d
                           00618E   906 _FREQTUNE	=	0x618e
                           00618F   907 _FREQCTRL	=	0x618f
                           006190   908 _TXPOWER	=	0x6190
                           006191   909 _TXCTRL	=	0x6191
                           006192   910 _FSMSTAT0	=	0x6192
                           006193   911 _FSMSTAT1	=	0x6193
                           006194   912 _FIFOPCTRL	=	0x6194
                           006195   913 _FSMCTRL	=	0x6195
                           006196   914 _CCACTRL0	=	0x6196
                           006197   915 _CCACTRL1	=	0x6197
                           006198   916 _RSSI	=	0x6198
                           006199   917 _RSSISTAT	=	0x6199
                           00619A   918 _RXFIRST	=	0x619a
                           00619B   919 _RXFIFOCNT	=	0x619b
                           00619C   920 _TXFIFOCNT	=	0x619c
                           00619D   921 _RXFIRST_PTR	=	0x619d
                           00619E   922 _RXLAST_PTR	=	0x619e
                           00619F   923 _RXP1_PTR	=	0x619f
                           0061A1   924 _TXFIRST_PTR	=	0x61a1
                           0061A2   925 _TXLAST_PTR	=	0x61a2
                           0061A3   926 _RFIRQM0	=	0x61a3
                           0061A4   927 _RFIRQM1	=	0x61a4
                           0061A5   928 _RFERRM	=	0x61a5
                           0061A7   929 _RFRND	=	0x61a7
                           0061A8   930 _MDMCTRL0	=	0x61a8
                           0061A9   931 _MDMCTRL1	=	0x61a9
                           0061AA   932 _FREQEST	=	0x61aa
                           0061AB   933 _RXCTRL	=	0x61ab
                           0061AC   934 _FSCTRL	=	0x61ac
                           0061AD   935 _FSCAL0	=	0x61ad
                           0061AE   936 _FSCAL1	=	0x61ae
                           0061AF   937 _FSCAL2	=	0x61af
                           0061B0   938 _FSCAL3	=	0x61b0
                           0061B1   939 _AGCCTRL0	=	0x61b1
                           0061B2   940 _AGCCTRL1	=	0x61b2
                           0061B3   941 _AGCCTRL2	=	0x61b3
                           0061B4   942 _AGCCTRL3	=	0x61b4
                           0061B5   943 _ADCTEST0	=	0x61b5
                           0061B6   944 _ADCTEST1	=	0x61b6
                           0061B7   945 _ADCTEST2	=	0x61b7
                           0061B8   946 _MDMTEST0	=	0x61b8
                           0061B9   947 _MDMTEST1	=	0x61b9
                           0061BA   948 _DACTEST0	=	0x61ba
                           0061BB   949 _DACTEST1	=	0x61bb
                           0061BC   950 _DACTEST2	=	0x61bc
                           0061BD   951 _ATEST	=	0x61bd
                           0061BE   952 _PTEST0	=	0x61be
                           0061BF   953 _PTEST1	=	0x61bf
                           0061FA   954 _TXFILTCFG	=	0x61fa
                           0061EB   955 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   956 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   957 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   958 _CSPPROG0	=	0x61c0
                           0061C1   959 _CSPPROG1	=	0x61c1
                           0061C2   960 _CSPPROG2	=	0x61c2
                           0061C3   961 _CSPPROG3	=	0x61c3
                           0061C4   962 _CSPPROG4	=	0x61c4
                           0061C5   963 _CSPPROG5	=	0x61c5
                           0061C6   964 _CSPPROG6	=	0x61c6
                           0061C7   965 _CSPPROG7	=	0x61c7
                           0061C8   966 _CSPPROG8	=	0x61c8
                           0061C9   967 _CSPPROG9	=	0x61c9
                           0061CA   968 _CSPPROG10	=	0x61ca
                           0061CB   969 _CSPPROG11	=	0x61cb
                           0061CC   970 _CSPPROG12	=	0x61cc
                           0061CD   971 _CSPPROG13	=	0x61cd
                           0061CE   972 _CSPPROG14	=	0x61ce
                           0061CF   973 _CSPPROG15	=	0x61cf
                           0061D0   974 _CSPPROG16	=	0x61d0
                           0061D1   975 _CSPPROG17	=	0x61d1
                           0061D2   976 _CSPPROG18	=	0x61d2
                           0061D3   977 _CSPPROG19	=	0x61d3
                           0061D4   978 _CSPPROG20	=	0x61d4
                           0061D5   979 _CSPPROG21	=	0x61d5
                           0061D6   980 _CSPPROG22	=	0x61d6
                           0061D7   981 _CSPPROG23	=	0x61d7
                           0061E0   982 _CSPCTRL	=	0x61e0
                           0061E1   983 _CSPSTAT	=	0x61e1
                           0061E2   984 _CSPX	=	0x61e2
                           0061E3   985 _CSPY	=	0x61e3
                           0061E4   986 _CSPZ	=	0x61e4
                           0061E5   987 _CSPT	=	0x61e5
                           006200   988 _USBADDR	=	0x6200
                           006201   989 _USBPOW	=	0x6201
                           006202   990 _USBIIF	=	0x6202
                           006204   991 _USBOIF	=	0x6204
                           006206   992 _USBCIF	=	0x6206
                           006207   993 _USBIIE	=	0x6207
                           006209   994 _USBOIE	=	0x6209
                           00620B   995 _USBCIE	=	0x620b
                           00620C   996 _USBFRML	=	0x620c
                           00620D   997 _USBFRMH	=	0x620d
                           00620E   998 _USBINDEX	=	0x620e
                           00620F   999 _USBCTRL	=	0x620f
                           006210  1000 _USBMAXI	=	0x6210
                           006211  1001 _USBCS0	=	0x6211
                           006211  1002 _USBCSIL	=	0x6211
                           006212  1003 _USBCSIH	=	0x6212
                           006213  1004 _USBMAXO	=	0x6213
                           006214  1005 _USBCSOL	=	0x6214
                           006215  1006 _USBCSOH	=	0x6215
                           006216  1007 _USBCNT0	=	0x6216
                           006216  1008 _USBCNTL	=	0x6216
                           006217  1009 _USBCNTH	=	0x6217
                           006220  1010 _USBF0	=	0x6220
                           006222  1011 _USBF1	=	0x6222
                           006224  1012 _USBF2	=	0x6224
                           006226  1013 _USBF3	=	0x6226
                           006228  1014 _USBF4	=	0x6228
                           00622A  1015 _USBF5	=	0x622a
                           007080  1016 _X_P0	=	0x7080
                           007086  1017 _X_U0CSR	=	0x7086
                           007089  1018 _X_P0IFG	=	0x7089
                           00708A  1019 _X_P1IFG	=	0x708a
                           00708B  1020 _X_P2IFG	=	0x708b
                           00708C  1021 _X_PICTL	=	0x708c
                           00708D  1022 _X_P1IEN	=	0x708d
                           00708F  1023 _X_P0INP	=	0x708f
                           007090  1024 _X_P1	=	0x7090
                           007091  1025 _X_RFIRQF1	=	0x7091
                           007093  1026 _X_MPAGE	=	0x7093
                           007093  1027 _X__XPAGE	=	0x7093
                           007094  1028 _X_T2CTRL	=	0x7094
                           007095  1029 _X_ST0	=	0x7095
                           007096  1030 _X_ST1	=	0x7096
                           007097  1031 _X_ST2	=	0x7097
                           00709C  1032 _X_T2EVTCFG	=	0x709c
                           00709D  1033 _X_SLEEPSTA	=	0x709d
                           00709E  1034 _X_CLKCONSTA	=	0x709e
                           00709F  1035 _X_FMAP	=	0x709f
                           00709F  1036 _X_PSBANK	=	0x709f
                           0070A0  1037 _X_P2	=	0x70a0
                           0070A1  1038 _X_T2IRQF	=	0x70a1
                           0070A2  1039 _X_T2M0	=	0x70a2
                           0070A3  1040 _X_T2M1	=	0x70a3
                           0070A4  1041 _X_T2MOVF0	=	0x70a4
                           0070A5  1042 _X_T2MOVF1	=	0x70a5
                           0070A6  1043 _X_T2MOVF2	=	0x70a6
                           0070A7  1044 _X_T2IRQM	=	0x70a7
                           0070AB  1045 _X_P0IEN	=	0x70ab
                           0070AC  1046 _X_P2IEN	=	0x70ac
                           0070AD  1047 _X_STLOAD	=	0x70ad
                           0070AE  1048 _X_PMUX	=	0x70ae
                           0070AF  1049 _X_T1STAT	=	0x70af
                           0070B1  1050 _X_ENCDI	=	0x70b1
                           0070B2  1051 _X_ENCDO	=	0x70b2
                           0070B3  1052 _X_ENCCS	=	0x70b3
                           0070B4  1053 _X_ADCCON1	=	0x70b4
                           0070B5  1054 _X_ADCCON2	=	0x70b5
                           0070B6  1055 _X_ADCCON3	=	0x70b6
                           0070BA  1056 _X_ADCL	=	0x70ba
                           0070BB  1057 _X_ADCH	=	0x70bb
                           0070BC  1058 _X_RNDL	=	0x70bc
                           0070BD  1059 _X_RNDH	=	0x70bd
                           0070BE  1060 _X_SLEEPCMD	=	0x70be
                           0070BF  1061 _X_RFERRF	=	0x70bf
                           0070C1  1062 _X_U0DBUF	=	0x70c1
                           0070C2  1063 _X_U0BAUD	=	0x70c2
                           0070C3  1064 _X_T2MSEL	=	0x70c3
                           0070C4  1065 _X_U0UCR	=	0x70c4
                           0070C5  1066 _X_U0GCR	=	0x70c5
                           0070C6  1067 _X_CLKCONCMD	=	0x70c6
                           0070C7  1068 _X_MEMCTR	=	0x70c7
                           0070C9  1069 _X_WDCTL	=	0x70c9
                           0070CA  1070 _X_T3CNT	=	0x70ca
                           0070CB  1071 _X_T3CTL	=	0x70cb
                           0070CC  1072 _X_T3CCTL0	=	0x70cc
                           0070CD  1073 _X_T3CC0	=	0x70cd
                           0070CE  1074 _X_T3CCTL1	=	0x70ce
                           0070CF  1075 _X_T3CC1	=	0x70cf
                           0070D1  1076 _X_DMAIRQ	=	0x70d1
                           0070D2  1077 _X_DMA1CFGL	=	0x70d2
                           0070D3  1078 _X_DMA1CFGH	=	0x70d3
                           0070D4  1079 _X_DMA0CFGL	=	0x70d4
                           0070D5  1080 _X_DMA0CFGH	=	0x70d5
                           0070D6  1081 _X_DMAARM	=	0x70d6
                           0070D7  1082 _X_DMAREQ	=	0x70d7
                           0070D8  1083 _X_TIMIF	=	0x70d8
                           0070D9  1084 _X_RFD	=	0x70d9
                           0070DA  1085 _X_T1CC0L	=	0x70da
                           0070DB  1086 _X_T1CC0H	=	0x70db
                           0070DC  1087 _X_T1CC1L	=	0x70dc
                           0070DD  1088 _X_T1CC1H	=	0x70dd
                           0070DE  1089 _X_T1CC2L	=	0x70de
                           0070DF  1090 _X_T1CC2H	=	0x70df
                           0070E1  1091 _X_RFST	=	0x70e1
                           0070E2  1092 _X_T1CNTL	=	0x70e2
                           0070E3  1093 _X_T1CNTH	=	0x70e3
                           0070E4  1094 _X_T1CTL	=	0x70e4
                           0070E5  1095 _X_T1CCTL0	=	0x70e5
                           0070E6  1096 _X_T1CCTL1	=	0x70e6
                           0070E7  1097 _X_T1CCTL2	=	0x70e7
                           0070E9  1098 _X_RFIRQF0	=	0x70e9
                           0070EA  1099 _X_T4CNT	=	0x70ea
                           0070EB  1100 _X_T4CTL	=	0x70eb
                           0070EC  1101 _X_T4CCTL0	=	0x70ec
                           0070ED  1102 _X_T4CC0	=	0x70ed
                           0070EE  1103 _X_T4CCTL1	=	0x70ee
                           0070EF  1104 _X_T4CC1	=	0x70ef
                           0070F1  1105 _X_PERCFG	=	0x70f1
                           0070F2  1106 _X_APCFG	=	0x70f2
                           0070F3  1107 _X_P0SEL	=	0x70f3
                           0070F4  1108 _X_P1SEL	=	0x70f4
                           0070F5  1109 _X_P2SEL	=	0x70f5
                           0070F6  1110 _X_P1INP	=	0x70f6
                           0070F7  1111 _X_P2INP	=	0x70f7
                           0070F8  1112 _X_U1CSR	=	0x70f8
                           0070F9  1113 _X_U1DBUF	=	0x70f9
                           0070FA  1114 _X_U1BAUD	=	0x70fa
                           0070FB  1115 _X_U1UCR	=	0x70fb
                           0070FC  1116 _X_U1GCR	=	0x70fc
                           0070FD  1117 _X_P0DIR	=	0x70fd
                           0070FE  1118 _X_P1DIR	=	0x70fe
                           0070FF  1119 _X_P2DIR	=	0x70ff
                           007800  1120 _X_INFOPAGE	=	0x7800
                           00780C  1121 _X_IEEE_ADDR	=	0x780c
                                   1122 ;--------------------------------------------------------
                                   1123 ; absolute external ram data
                                   1124 ;--------------------------------------------------------
                                   1125 	.area XABS    (ABS,XDATA)
                                   1126 ;--------------------------------------------------------
                                   1127 ; external initialized ram data
                                   1128 ;--------------------------------------------------------
                                   1129 	.area XISEG   (XDATA)
                                   1130 	.area HOME    (CODE)
                                   1131 	.area GSINIT0 (CODE)
                                   1132 	.area GSINIT1 (CODE)
                                   1133 	.area GSINIT2 (CODE)
                                   1134 	.area GSINIT3 (CODE)
                                   1135 	.area GSINIT4 (CODE)
                                   1136 	.area GSINIT5 (CODE)
                                   1137 	.area GSINIT  (CODE)
                                   1138 	.area GSFINAL (CODE)
                                   1139 	.area CSEG    (CODE)
                                   1140 ;--------------------------------------------------------
                                   1141 ; global & static initialisations
                                   1142 ;--------------------------------------------------------
                                   1143 	.area HOME    (CODE)
                                   1144 	.area GSINIT  (CODE)
                                   1145 	.area GSFINAL (CODE)
                                   1146 	.area GSINIT  (CODE)
                                   1147 ;--------------------------------------------------------
                                   1148 ; Home
                                   1149 ;--------------------------------------------------------
                                   1150 	.area HOME    (CODE)
                                   1151 	.area HOME    (CODE)
                                   1152 ;--------------------------------------------------------
                                   1153 ; code
                                   1154 ;--------------------------------------------------------
                                   1155 	.area CSEG    (CODE)
                                   1156 ;------------------------------------------------------------
                                   1157 ;Allocation info for local variables in function 'read_data'
                                   1158 ;------------------------------------------------------------
                                   1159 ;c                         Allocated to stack - sp -5
                                   1160 ;len                       Allocated to registers r7 r6 
                                   1161 ;sloc0                     Allocated to stack - sp -2
                                   1162 ;------------------------------------------------------------
                                   1163 ;	../../core/net/rime/rucb.c:57: read_data(struct rucb_conn *c)
                                   1164 ;	-----------------------------------------
                                   1165 ;	 function read_data
                                   1166 ;	-----------------------------------------
      000000                       1167 _read_data:
                           000007  1168 	ar7 = 0x07
                           000006  1169 	ar6 = 0x06
                           000005  1170 	ar5 = 0x05
                           000004  1171 	ar4 = 0x04
                           000003  1172 	ar3 = 0x03
                           000002  1173 	ar2 = 0x02
                           000001  1174 	ar1 = 0x01
                           000000  1175 	ar0 = 0x00
      000000 C0 82            [24] 1176 	push	dpl
      000002 C0 83            [24] 1177 	push	dph
      000004 C0 F0            [24] 1178 	push	b
      000006 05 81            [12] 1179 	inc	sp
      000008 05 81            [12] 1180 	inc	sp
      00000A 05 81            [12] 1181 	inc	sp
                                   1182 ;	../../core/net/rime/rucb.c:59: int len = 0;
      00000C 7F 00            [12] 1183 	mov	r7,#0x00
      00000E 7E 00            [12] 1184 	mov	r6,#0x00
                                   1185 ;	../../core/net/rime/rucb.c:60: packetbuf_clear();
      000010 C0 07            [24] 1186 	push	ar7
      000012 C0 06            [24] 1187 	push	ar6
      000014 12r00r00         [24] 1188 	lcall	_packetbuf_clear
      000017 D0 06            [24] 1189 	pop	ar6
      000019 D0 07            [24] 1190 	pop	ar7
                                   1191 ;	../../core/net/rime/rucb.c:61: if(c->u->read_chunk) {
      00001B E5 81            [12] 1192 	mov	a,sp
      00001D 24 FB            [12] 1193 	add	a,#0xfb
      00001F F8               [12] 1194 	mov	r0,a
      000020 74 36            [12] 1195 	mov	a,#0x36
      000022 26               [12] 1196 	add	a,@r0
      000023 FB               [12] 1197 	mov	r3,a
      000024 E4               [12] 1198 	clr	a
      000025 08               [12] 1199 	inc	r0
      000026 36               [12] 1200 	addc	a,@r0
      000027 FA               [12] 1201 	mov	r2,a
      000028 08               [12] 1202 	inc	r0
      000029 86 04            [24] 1203 	mov	ar4,@r0
      00002B 8B 82            [24] 1204 	mov	dpl,r3
      00002D 8A 83            [24] 1205 	mov	dph,r2
      00002F 8C F0            [24] 1206 	mov	b,r4
      000031 12r00r00         [24] 1207 	lcall	__gptrget
      000034 FB               [12] 1208 	mov	r3,a
      000035 A3               [24] 1209 	inc	dptr
      000036 12r00r00         [24] 1210 	lcall	__gptrget
      000039 FA               [12] 1211 	mov	r2,a
      00003A A3               [24] 1212 	inc	dptr
      00003B 12r00r00         [24] 1213 	lcall	__gptrget
      00003E FC               [12] 1214 	mov	r4,a
      00003F 74 02            [12] 1215 	mov	a,#0x02
      000041 2B               [12] 1216 	add	a,r3
      000042 FB               [12] 1217 	mov	r3,a
      000043 E4               [12] 1218 	clr	a
      000044 3A               [12] 1219 	addc	a,r2
      000045 FA               [12] 1220 	mov	r2,a
      000046 8B 82            [24] 1221 	mov	dpl,r3
      000048 8A 83            [24] 1222 	mov	dph,r2
      00004A 8C F0            [24] 1223 	mov	b,r4
      00004C 12r00r00         [24] 1224 	lcall	__gptrget
      00004F FB               [12] 1225 	mov	r3,a
      000050 A3               [24] 1226 	inc	dptr
      000051 12r00r00         [24] 1227 	lcall	__gptrget
      000054 FC               [12] 1228 	mov	r4,a
      000055 4B               [12] 1229 	orl	a,r3
      000056 70 03            [24] 1230 	jnz	00109$
      000058 02r00rE6         [24] 1231 	ljmp	00102$
      00005B                       1232 00109$:
                                   1233 ;	../../core/net/rime/rucb.c:63: packetbuf_dataptr(), RUCB_DATASIZE);
      00005B C0 04            [24] 1234 	push	ar4
      00005D C0 03            [24] 1235 	push	ar3
      00005F 12r00r00         [24] 1236 	lcall	_packetbuf_dataptr
      000062 AA 82            [24] 1237 	mov	r2,dpl
      000064 AE 83            [24] 1238 	mov	r6,dph
      000066 AF F0            [24] 1239 	mov	r7,b
      000068 D0 03            [24] 1240 	pop	ar3
      00006A D0 04            [24] 1241 	pop	ar4
      00006C A8 81            [24] 1242 	mov	r0,sp
      00006E 18               [12] 1243 	dec	r0
      00006F 18               [12] 1244 	dec	r0
      000070 A6 02            [24] 1245 	mov	@r0,ar2
      000072 08               [12] 1246 	inc	r0
      000073 A6 06            [24] 1247 	mov	@r0,ar6
      000075 08               [12] 1248 	inc	r0
      000076 A6 07            [24] 1249 	mov	@r0,ar7
                                   1250 ;	../../core/net/rime/rucb.c:62: len = c->u->read_chunk(c, c->chunk * RUCB_DATASIZE,
      000078 E5 81            [12] 1251 	mov	a,sp
      00007A 24 FB            [12] 1252 	add	a,#0xfb
      00007C F8               [12] 1253 	mov	r0,a
      00007D 74 3D            [12] 1254 	mov	a,#0x3d
      00007F 26               [12] 1255 	add	a,@r0
      000080 FD               [12] 1256 	mov	r5,a
      000081 E4               [12] 1257 	clr	a
      000082 08               [12] 1258 	inc	r0
      000083 36               [12] 1259 	addc	a,@r0
      000084 FE               [12] 1260 	mov	r6,a
      000085 08               [12] 1261 	inc	r0
      000086 86 07            [24] 1262 	mov	ar7,@r0
      000088 8D 82            [24] 1263 	mov	dpl,r5
      00008A 8E 83            [24] 1264 	mov	dph,r6
      00008C 8F F0            [24] 1265 	mov	b,r7
      00008E 12r00r00         [24] 1266 	lcall	__gptrget
      000091 FD               [12] 1267 	mov	r5,a
      000092 A3               [24] 1268 	inc	dptr
      000093 12r00r00         [24] 1269 	lcall	__gptrget
      000096 54 03            [12] 1270 	anl	a,#0x03
      000098 A2 E0            [12] 1271 	mov	c,acc.0
      00009A CD               [12] 1272 	xch	a,r5
      00009B 13               [12] 1273 	rrc	a
      00009C CD               [12] 1274 	xch	a,r5
      00009D 13               [12] 1275 	rrc	a
      00009E A2 E0            [12] 1276 	mov	c,acc.0
      0000A0 CD               [12] 1277 	xch	a,r5
      0000A1 13               [12] 1278 	rrc	a
      0000A2 CD               [12] 1279 	xch	a,r5
      0000A3 13               [12] 1280 	rrc	a
      0000A4 CD               [12] 1281 	xch	a,r5
      0000A5 FE               [12] 1282 	mov	r6,a
      0000A6 74 40            [12] 1283 	mov	a,#0x40
      0000A8 C0 E0            [24] 1284 	push	acc
      0000AA E4               [12] 1285 	clr	a
      0000AB C0 E0            [24] 1286 	push	acc
      0000AD E5 81            [12] 1287 	mov	a,sp
      0000AF 24 FC            [12] 1288 	add	a,#0xfc
      0000B1 F8               [12] 1289 	mov	r0,a
      0000B2 E6               [12] 1290 	mov	a,@r0
      0000B3 C0 E0            [24] 1291 	push	acc
      0000B5 08               [12] 1292 	inc	r0
      0000B6 E6               [12] 1293 	mov	a,@r0
      0000B7 C0 E0            [24] 1294 	push	acc
      0000B9 08               [12] 1295 	inc	r0
      0000BA E6               [12] 1296 	mov	a,@r0
      0000BB C0 E0            [24] 1297 	push	acc
      0000BD C0 05            [24] 1298 	push	ar5
      0000BF C0 06            [24] 1299 	push	ar6
      0000C1 12r00rC6         [24] 1300 	lcall	00110$
      0000C4 80 12            [24] 1301 	sjmp	00111$
      0000C6                       1302 00110$:
      0000C6 C0 03            [24] 1303 	push	ar3
      0000C8 C0 04            [24] 1304 	push	ar4
      0000CA E5 81            [12] 1305 	mov	a,sp
      0000CC 24 F0            [12] 1306 	add	a,#0xf0
      0000CE F8               [12] 1307 	mov	r0,a
      0000CF 86 82            [24] 1308 	mov	dpl,@r0
      0000D1 08               [12] 1309 	inc	r0
      0000D2 86 83            [24] 1310 	mov	dph,@r0
      0000D4 08               [12] 1311 	inc	r0
      0000D5 86 F0            [24] 1312 	mov	b,@r0
      0000D7 22               [24] 1313 	ret
      0000D8                       1314 00111$:
      0000D8 AB 82            [24] 1315 	mov	r3,dpl
      0000DA AC 83            [24] 1316 	mov	r4,dph
      0000DC E5 81            [12] 1317 	mov	a,sp
      0000DE 24 F9            [12] 1318 	add	a,#0xf9
      0000E0 F5 81            [12] 1319 	mov	sp,a
      0000E2 8B 07            [24] 1320 	mov	ar7,r3
      0000E4 8C 06            [24] 1321 	mov	ar6,r4
      0000E6                       1322 00102$:
                                   1323 ;	../../core/net/rime/rucb.c:65: packetbuf_set_datalen(len);
      0000E6 8F 03            [24] 1324 	mov	ar3,r7
      0000E8 8E 04            [24] 1325 	mov	ar4,r6
      0000EA 8B 82            [24] 1326 	mov	dpl,r3
      0000EC 8C 83            [24] 1327 	mov	dph,r4
      0000EE C0 07            [24] 1328 	push	ar7
      0000F0 C0 06            [24] 1329 	push	ar6
      0000F2 12r00r00         [24] 1330 	lcall	_packetbuf_set_datalen
      0000F5 D0 06            [24] 1331 	pop	ar6
      0000F7 D0 07            [24] 1332 	pop	ar7
                                   1333 ;	../../core/net/rime/rucb.c:66: return len;
      0000F9 8F 82            [24] 1334 	mov	dpl,r7
      0000FB 8E 83            [24] 1335 	mov	dph,r6
                                   1336 ;	../../core/net/rime/rucb.c:67: }
      0000FD E5 81            [12] 1337 	mov	a,sp
      0000FF 24 FA            [12] 1338 	add	a,#0xfa
      000101 F5 81            [12] 1339 	mov	sp,a
      000103 22               [24] 1340 	ret
                                   1341 ;------------------------------------------------------------
                                   1342 ;Allocation info for local variables in function 'acked'
                                   1343 ;------------------------------------------------------------
                                   1344 ;to                        Allocated to stack - sp -7
                                   1345 ;retransmissions           Allocated to stack - sp -8
                                   1346 ;ruc                       Allocated to registers r5 r6 r7 
                                   1347 ;c                         Allocated to stack - sp -2
                                   1348 ;len                       Allocated to registers r6 r7 
                                   1349 ;------------------------------------------------------------
                                   1350 ;	../../core/net/rime/rucb.c:70: acked(struct runicast_conn *ruc, const rimeaddr_t *to, uint8_t retransmissions)
                                   1351 ;	-----------------------------------------
                                   1352 ;	 function acked
                                   1353 ;	-----------------------------------------
      000104                       1354 _acked:
      000104 05 81            [12] 1355 	inc	sp
      000106 05 81            [12] 1356 	inc	sp
      000108 05 81            [12] 1357 	inc	sp
      00010A AD 82            [24] 1358 	mov	r5,dpl
      00010C AE 83            [24] 1359 	mov	r6,dph
      00010E AF F0            [24] 1360 	mov	r7,b
                                   1361 ;	../../core/net/rime/rucb.c:72: struct rucb_conn *c = (struct rucb_conn *)ruc;
      000110 A8 81            [24] 1362 	mov	r0,sp
      000112 18               [12] 1363 	dec	r0
      000113 18               [12] 1364 	dec	r0
      000114 A6 05            [24] 1365 	mov	@r0,ar5
      000116 08               [12] 1366 	inc	r0
      000117 A6 06            [24] 1367 	mov	@r0,ar6
      000119 08               [12] 1368 	inc	r0
      00011A A6 07            [24] 1369 	mov	@r0,ar7
                                   1370 ;	../../core/net/rime/rucb.c:76: c->chunk++;
      00011C A8 81            [24] 1371 	mov	r0,sp
      00011E 18               [12] 1372 	dec	r0
      00011F 18               [12] 1373 	dec	r0
      000120 74 3D            [12] 1374 	mov	a,#0x3d
      000122 26               [12] 1375 	add	a,@r0
      000123 FA               [12] 1376 	mov	r2,a
      000124 E4               [12] 1377 	clr	a
      000125 08               [12] 1378 	inc	r0
      000126 36               [12] 1379 	addc	a,@r0
      000127 FB               [12] 1380 	mov	r3,a
      000128 08               [12] 1381 	inc	r0
      000129 86 04            [24] 1382 	mov	ar4,@r0
      00012B 8A 82            [24] 1383 	mov	dpl,r2
      00012D 8B 83            [24] 1384 	mov	dph,r3
      00012F 8C F0            [24] 1385 	mov	b,r4
      000131 12r00r00         [24] 1386 	lcall	__gptrget
      000134 FE               [12] 1387 	mov	r6,a
      000135 A3               [24] 1388 	inc	dptr
      000136 12r00r00         [24] 1389 	lcall	__gptrget
      000139 FF               [12] 1390 	mov	r7,a
      00013A 0E               [12] 1391 	inc	r6
      00013B BE 00 01         [24] 1392 	cjne	r6,#0x00,00120$
      00013E 0F               [12] 1393 	inc	r7
      00013F                       1394 00120$:
      00013F 8A 82            [24] 1395 	mov	dpl,r2
      000141 8B 83            [24] 1396 	mov	dph,r3
      000143 8C F0            [24] 1397 	mov	b,r4
      000145 EE               [12] 1398 	mov	a,r6
      000146 12r00r00         [24] 1399 	lcall	__gptrput
      000149 A3               [24] 1400 	inc	dptr
      00014A EF               [12] 1401 	mov	a,r7
      00014B 12r00r00         [24] 1402 	lcall	__gptrput
                                   1403 ;	../../core/net/rime/rucb.c:77: len = read_data(c);
      00014E A8 81            [24] 1404 	mov	r0,sp
      000150 18               [12] 1405 	dec	r0
      000151 18               [12] 1406 	dec	r0
      000152 86 82            [24] 1407 	mov	dpl,@r0
      000154 08               [12] 1408 	inc	r0
      000155 86 83            [24] 1409 	mov	dph,@r0
      000157 08               [12] 1410 	inc	r0
      000158 86 F0            [24] 1411 	mov	b,@r0
      00015A 12r00r00         [24] 1412 	lcall	_read_data
      00015D AE 82            [24] 1413 	mov	r6,dpl
      00015F AF 83            [24] 1414 	mov	r7,dph
                                   1415 ;	../../core/net/rime/rucb.c:78: if(len == 0 && c->last_size == 0) {
      000161 EE               [12] 1416 	mov	a,r6
      000162 4F               [12] 1417 	orl	a,r7
      000163 70 23            [24] 1418 	jnz	00102$
      000165 A8 81            [24] 1419 	mov	r0,sp
      000167 18               [12] 1420 	dec	r0
      000168 18               [12] 1421 	dec	r0
      000169 74 40            [12] 1422 	mov	a,#0x40
      00016B 26               [12] 1423 	add	a,@r0
      00016C FB               [12] 1424 	mov	r3,a
      00016D E4               [12] 1425 	clr	a
      00016E 08               [12] 1426 	inc	r0
      00016F 36               [12] 1427 	addc	a,@r0
      000170 FC               [12] 1428 	mov	r4,a
      000171 08               [12] 1429 	inc	r0
      000172 86 05            [24] 1430 	mov	ar5,@r0
      000174 8B 82            [24] 1431 	mov	dpl,r3
      000176 8C 83            [24] 1432 	mov	dph,r4
      000178 8D F0            [24] 1433 	mov	b,r5
      00017A 12r00r00         [24] 1434 	lcall	__gptrget
      00017D FB               [12] 1435 	mov	r3,a
      00017E A3               [24] 1436 	inc	dptr
      00017F 12r00r00         [24] 1437 	lcall	__gptrget
      000182 FC               [12] 1438 	mov	r4,a
      000183 4B               [12] 1439 	orl	a,r3
      000184 70 02            [24] 1440 	jnz	00102$
                                   1441 ;	../../core/net/rime/rucb.c:80: return;
      000186 80 59            [24] 1442 	sjmp	00106$
      000188                       1443 00102$:
                                   1444 ;	../../core/net/rime/rucb.c:83: if(len >= 0) {
      000188 EF               [12] 1445 	mov	a,r7
      000189 20 E7 55         [24] 1446 	jb	acc.7,00106$
                                   1447 ;	../../core/net/rime/rucb.c:84: runicast_send(&c->c, &c->receiver, MAX_TRANSMISSIONS);
      00018C A8 81            [24] 1448 	mov	r0,sp
      00018E 18               [12] 1449 	dec	r0
      00018F 18               [12] 1450 	dec	r0
      000190 74 39            [12] 1451 	mov	a,#0x39
      000192 26               [12] 1452 	add	a,@r0
      000193 FB               [12] 1453 	mov	r3,a
      000194 E4               [12] 1454 	clr	a
      000195 08               [12] 1455 	inc	r0
      000196 36               [12] 1456 	addc	a,@r0
      000197 FC               [12] 1457 	mov	r4,a
      000198 08               [12] 1458 	inc	r0
      000199 86 05            [24] 1459 	mov	ar5,@r0
      00019B C0 07            [24] 1460 	push	ar7
      00019D C0 06            [24] 1461 	push	ar6
      00019F 74 08            [12] 1462 	mov	a,#0x08
      0001A1 C0 E0            [24] 1463 	push	acc
      0001A3 C0 03            [24] 1464 	push	ar3
      0001A5 C0 04            [24] 1465 	push	ar4
      0001A7 C0 05            [24] 1466 	push	ar5
      0001A9 E5 81            [12] 1467 	mov	a,sp
      0001AB 24 F8            [12] 1468 	add	a,#0xf8
      0001AD F8               [12] 1469 	mov	r0,a
      0001AE 86 82            [24] 1470 	mov	dpl,@r0
      0001B0 08               [12] 1471 	inc	r0
      0001B1 86 83            [24] 1472 	mov	dph,@r0
      0001B3 08               [12] 1473 	inc	r0
      0001B4 86 F0            [24] 1474 	mov	b,@r0
      0001B6 12r00r00         [24] 1475 	lcall	_runicast_send
      0001B9 E5 81            [12] 1476 	mov	a,sp
      0001BB 24 FC            [12] 1477 	add	a,#0xfc
      0001BD F5 81            [12] 1478 	mov	sp,a
      0001BF D0 06            [24] 1479 	pop	ar6
      0001C1 D0 07            [24] 1480 	pop	ar7
                                   1481 ;	../../core/net/rime/rucb.c:85: c->last_size = len;
      0001C3 A8 81            [24] 1482 	mov	r0,sp
      0001C5 18               [12] 1483 	dec	r0
      0001C6 18               [12] 1484 	dec	r0
      0001C7 74 40            [12] 1485 	mov	a,#0x40
      0001C9 26               [12] 1486 	add	a,@r0
      0001CA FB               [12] 1487 	mov	r3,a
      0001CB E4               [12] 1488 	clr	a
      0001CC 08               [12] 1489 	inc	r0
      0001CD 36               [12] 1490 	addc	a,@r0
      0001CE FC               [12] 1491 	mov	r4,a
      0001CF 08               [12] 1492 	inc	r0
      0001D0 86 05            [24] 1493 	mov	ar5,@r0
      0001D2 8B 82            [24] 1494 	mov	dpl,r3
      0001D4 8C 83            [24] 1495 	mov	dph,r4
      0001D6 8D F0            [24] 1496 	mov	b,r5
      0001D8 EE               [12] 1497 	mov	a,r6
      0001D9 12r00r00         [24] 1498 	lcall	__gptrput
      0001DC A3               [24] 1499 	inc	dptr
      0001DD EF               [12] 1500 	mov	a,r7
      0001DE 12r00r00         [24] 1501 	lcall	__gptrput
      0001E1                       1502 00106$:
                                   1503 ;	../../core/net/rime/rucb.c:92: }
      0001E1 15 81            [12] 1504 	dec	sp
      0001E3 15 81            [12] 1505 	dec	sp
      0001E5 15 81            [12] 1506 	dec	sp
      0001E7 22               [24] 1507 	ret
                                   1508 ;------------------------------------------------------------
                                   1509 ;Allocation info for local variables in function 'timedout'
                                   1510 ;------------------------------------------------------------
                                   1511 ;to                        Allocated to stack - sp -4
                                   1512 ;retransmissions           Allocated to stack - sp -5
                                   1513 ;ruc                       Allocated to registers r5 r6 r7 
                                   1514 ;c                         Allocated to registers r5 r6 r7 
                                   1515 ;------------------------------------------------------------
                                   1516 ;	../../core/net/rime/rucb.c:95: timedout(struct runicast_conn *ruc, const rimeaddr_t *to, uint8_t retransmissions)
                                   1517 ;	-----------------------------------------
                                   1518 ;	 function timedout
                                   1519 ;	-----------------------------------------
      0001E8                       1520 _timedout:
      0001E8 AD 82            [24] 1521 	mov	r5,dpl
      0001EA AE 83            [24] 1522 	mov	r6,dph
      0001EC AF F0            [24] 1523 	mov	r7,b
                                   1524 ;	../../core/net/rime/rucb.c:97: struct rucb_conn *c = (struct rucb_conn *)ruc;
                                   1525 ;	../../core/net/rime/rucb.c:100: if(c->u->timedout) {
      0001EE 74 36            [12] 1526 	mov	a,#0x36
      0001F0 2D               [12] 1527 	add	a,r5
      0001F1 FB               [12] 1528 	mov	r3,a
      0001F2 E4               [12] 1529 	clr	a
      0001F3 3E               [12] 1530 	addc	a,r6
      0001F4 FA               [12] 1531 	mov	r2,a
      0001F5 8F 04            [24] 1532 	mov	ar4,r7
      0001F7 8B 82            [24] 1533 	mov	dpl,r3
      0001F9 8A 83            [24] 1534 	mov	dph,r2
      0001FB 8C F0            [24] 1535 	mov	b,r4
      0001FD 12r00r00         [24] 1536 	lcall	__gptrget
      000200 FB               [12] 1537 	mov	r3,a
      000201 A3               [24] 1538 	inc	dptr
      000202 12r00r00         [24] 1539 	lcall	__gptrget
      000205 FA               [12] 1540 	mov	r2,a
      000206 A3               [24] 1541 	inc	dptr
      000207 12r00r00         [24] 1542 	lcall	__gptrget
      00020A FC               [12] 1543 	mov	r4,a
      00020B 74 04            [12] 1544 	mov	a,#0x04
      00020D 2B               [12] 1545 	add	a,r3
      00020E FB               [12] 1546 	mov	r3,a
      00020F E4               [12] 1547 	clr	a
      000210 3A               [12] 1548 	addc	a,r2
      000211 FA               [12] 1549 	mov	r2,a
      000212 8B 82            [24] 1550 	mov	dpl,r3
      000214 8A 83            [24] 1551 	mov	dph,r2
      000216 8C F0            [24] 1552 	mov	b,r4
      000218 12r00r00         [24] 1553 	lcall	__gptrget
      00021B FB               [12] 1554 	mov	r3,a
      00021C A3               [24] 1555 	inc	dptr
      00021D 12r00r00         [24] 1556 	lcall	__gptrget
      000220 FC               [12] 1557 	mov	r4,a
      000221 4B               [12] 1558 	orl	a,r3
      000222 60 18            [24] 1559 	jz	00103$
                                   1560 ;	../../core/net/rime/rucb.c:101: c->u->timedout(c);
      000224 C0 04            [24] 1561 	push	ar4
      000226 C0 03            [24] 1562 	push	ar3
      000228 12r02r2D         [24] 1563 	lcall	00110$
      00022B 80 0B            [24] 1564 	sjmp	00111$
      00022D                       1565 00110$:
      00022D C0 03            [24] 1566 	push	ar3
      00022F C0 04            [24] 1567 	push	ar4
      000231 8D 82            [24] 1568 	mov	dpl,r5
      000233 8E 83            [24] 1569 	mov	dph,r6
      000235 8F F0            [24] 1570 	mov	b,r7
      000237 22               [24] 1571 	ret
      000238                       1572 00111$:
      000238 D0 03            [24] 1573 	pop	ar3
      00023A D0 04            [24] 1574 	pop	ar4
      00023C                       1575 00103$:
                                   1576 ;	../../core/net/rime/rucb.c:103: }
      00023C 22               [24] 1577 	ret
                                   1578 ;------------------------------------------------------------
                                   1579 ;Allocation info for local variables in function 'recv'
                                   1580 ;------------------------------------------------------------
                                   1581 ;from                      Allocated to stack - sp -11
                                   1582 ;seqno                     Allocated to stack - sp -12
                                   1583 ;ruc                       Allocated to registers r5 r6 r7 
                                   1584 ;c                         Allocated to stack - sp -4
                                   1585 ;datalen                   Allocated to stack - sp -1
                                   1586 ;sloc0                     Allocated to stack - sp -6
                                   1587 ;------------------------------------------------------------
                                   1588 ;	../../core/net/rime/rucb.c:106: recv(struct runicast_conn *ruc, const rimeaddr_t *from, uint8_t seqno)
                                   1589 ;	-----------------------------------------
                                   1590 ;	 function recv
                                   1591 ;	-----------------------------------------
      00023D                       1592 _recv:
      00023D E5 81            [12] 1593 	mov	a,sp
      00023F 24 07            [12] 1594 	add	a,#0x07
      000241 F5 81            [12] 1595 	mov	sp,a
      000243 AD 82            [24] 1596 	mov	r5,dpl
      000245 AE 83            [24] 1597 	mov	r6,dph
      000247 AF F0            [24] 1598 	mov	r7,b
                                   1599 ;	../../core/net/rime/rucb.c:108: struct rucb_conn *c = (struct rucb_conn *)ruc;
      000249 E5 81            [12] 1600 	mov	a,sp
      00024B 24 FC            [12] 1601 	add	a,#0xfc
      00024D F8               [12] 1602 	mov	r0,a
      00024E A6 05            [24] 1603 	mov	@r0,ar5
      000250 08               [12] 1604 	inc	r0
      000251 A6 06            [24] 1605 	mov	@r0,ar6
      000253 08               [12] 1606 	inc	r0
      000254 A6 07            [24] 1607 	mov	@r0,ar7
                                   1608 ;	../../core/net/rime/rucb.c:114: if(seqno == c->last_seqno) {
      000256 E5 81            [12] 1609 	mov	a,sp
      000258 24 FC            [12] 1610 	add	a,#0xfc
      00025A F8               [12] 1611 	mov	r0,a
      00025B 74 3F            [12] 1612 	mov	a,#0x3f
      00025D 26               [12] 1613 	add	a,@r0
      00025E FA               [12] 1614 	mov	r2,a
      00025F E4               [12] 1615 	clr	a
      000260 08               [12] 1616 	inc	r0
      000261 36               [12] 1617 	addc	a,@r0
      000262 FB               [12] 1618 	mov	r3,a
      000263 08               [12] 1619 	inc	r0
      000264 86 04            [24] 1620 	mov	ar4,@r0
      000266 8A 82            [24] 1621 	mov	dpl,r2
      000268 8B 83            [24] 1622 	mov	dph,r3
      00026A 8C F0            [24] 1623 	mov	b,r4
      00026C 12r00r00         [24] 1624 	lcall	__gptrget
      00026F FF               [12] 1625 	mov	r7,a
      000270 E5 81            [12] 1626 	mov	a,sp
      000272 24 F4            [12] 1627 	add	a,#0xf4
      000274 F8               [12] 1628 	mov	r0,a
      000275 E6               [12] 1629 	mov	a,@r0
      000276 B5 07 03         [24] 1630 	cjne	a,ar7,00102$
                                   1631 ;	../../core/net/rime/rucb.c:115: return;
      000279 02r05rB6         [24] 1632 	ljmp	00112$
      00027C                       1633 00102$:
                                   1634 ;	../../core/net/rime/rucb.c:117: c->last_seqno = seqno;
      00027C 8A 82            [24] 1635 	mov	dpl,r2
      00027E 8B 83            [24] 1636 	mov	dph,r3
      000280 8C F0            [24] 1637 	mov	b,r4
      000282 E5 81            [12] 1638 	mov	a,sp
      000284 24 F4            [12] 1639 	add	a,#0xf4
      000286 F8               [12] 1640 	mov	r0,a
      000287 E6               [12] 1641 	mov	a,@r0
      000288 12r00r00         [24] 1642 	lcall	__gptrput
                                   1643 ;	../../core/net/rime/rucb.c:119: if(rimeaddr_cmp(&c->sender, &rimeaddr_null)) {
      00028B E5 81            [12] 1644 	mov	a,sp
      00028D 24 FC            [12] 1645 	add	a,#0xfc
      00028F F8               [12] 1646 	mov	r0,a
      000290 74 3B            [12] 1647 	mov	a,#0x3b
      000292 26               [12] 1648 	add	a,@r0
      000293 FD               [12] 1649 	mov	r5,a
      000294 E4               [12] 1650 	clr	a
      000295 08               [12] 1651 	inc	r0
      000296 36               [12] 1652 	addc	a,@r0
      000297 FE               [12] 1653 	mov	r6,a
      000298 08               [12] 1654 	inc	r0
      000299 86 07            [24] 1655 	mov	ar7,@r0
      00029B 74r00            [12] 1656 	mov	a,#_rimeaddr_null
      00029D C0 E0            [24] 1657 	push	acc
      00029F 74s00            [12] 1658 	mov	a,#(_rimeaddr_null >> 8)
      0002A1 C0 E0            [24] 1659 	push	acc
      0002A3 74 80            [12] 1660 	mov	a,#0x80
      0002A5 C0 E0            [24] 1661 	push	acc
      0002A7 8D 82            [24] 1662 	mov	dpl,r5
      0002A9 8E 83            [24] 1663 	mov	dph,r6
      0002AB 8F F0            [24] 1664 	mov	b,r7
      0002AD 12r00r00         [24] 1665 	lcall	_rimeaddr_cmp
      0002B0 AE 82            [24] 1666 	mov	r6,dpl
      0002B2 AF 83            [24] 1667 	mov	r7,dph
      0002B4 15 81            [12] 1668 	dec	sp
      0002B6 15 81            [12] 1669 	dec	sp
      0002B8 15 81            [12] 1670 	dec	sp
      0002BA EE               [12] 1671 	mov	a,r6
      0002BB 4F               [12] 1672 	orl	a,r7
      0002BC 70 03            [24] 1673 	jnz	00136$
      0002BE 02r03r8C         [24] 1674 	ljmp	00104$
      0002C1                       1675 00136$:
                                   1676 ;	../../core/net/rime/rucb.c:120: rimeaddr_copy(&c->sender, from);
      0002C1 E5 81            [12] 1677 	mov	a,sp
      0002C3 24 FC            [12] 1678 	add	a,#0xfc
      0002C5 F8               [12] 1679 	mov	r0,a
      0002C6 74 3B            [12] 1680 	mov	a,#0x3b
      0002C8 26               [12] 1681 	add	a,@r0
      0002C9 FD               [12] 1682 	mov	r5,a
      0002CA E4               [12] 1683 	clr	a
      0002CB 08               [12] 1684 	inc	r0
      0002CC 36               [12] 1685 	addc	a,@r0
      0002CD FE               [12] 1686 	mov	r6,a
      0002CE 08               [12] 1687 	inc	r0
      0002CF 86 07            [24] 1688 	mov	ar7,@r0
      0002D1 E5 81            [12] 1689 	mov	a,sp
      0002D3 24 F5            [12] 1690 	add	a,#0xf5
      0002D5 F8               [12] 1691 	mov	r0,a
      0002D6 E6               [12] 1692 	mov	a,@r0
      0002D7 C0 E0            [24] 1693 	push	acc
      0002D9 08               [12] 1694 	inc	r0
      0002DA E6               [12] 1695 	mov	a,@r0
      0002DB C0 E0            [24] 1696 	push	acc
      0002DD 08               [12] 1697 	inc	r0
      0002DE E6               [12] 1698 	mov	a,@r0
      0002DF C0 E0            [24] 1699 	push	acc
      0002E1 8D 82            [24] 1700 	mov	dpl,r5
      0002E3 8E 83            [24] 1701 	mov	dph,r6
      0002E5 8F F0            [24] 1702 	mov	b,r7
      0002E7 12r00r00         [24] 1703 	lcall	_rimeaddr_copy
      0002EA 15 81            [12] 1704 	dec	sp
      0002EC 15 81            [12] 1705 	dec	sp
      0002EE 15 81            [12] 1706 	dec	sp
                                   1707 ;	../../core/net/rime/rucb.c:121: c->u->write_chunk(c, 0, RUCB_FLAG_NEWFILE, packetbuf_dataptr(), 0);
      0002F0 E5 81            [12] 1708 	mov	a,sp
      0002F2 24 FC            [12] 1709 	add	a,#0xfc
      0002F4 F8               [12] 1710 	mov	r0,a
      0002F5 74 36            [12] 1711 	mov	a,#0x36
      0002F7 26               [12] 1712 	add	a,@r0
      0002F8 FD               [12] 1713 	mov	r5,a
      0002F9 E4               [12] 1714 	clr	a
      0002FA 08               [12] 1715 	inc	r0
      0002FB 36               [12] 1716 	addc	a,@r0
      0002FC FE               [12] 1717 	mov	r6,a
      0002FD 08               [12] 1718 	inc	r0
      0002FE 86 07            [24] 1719 	mov	ar7,@r0
      000300 8D 82            [24] 1720 	mov	dpl,r5
      000302 8E 83            [24] 1721 	mov	dph,r6
      000304 8F F0            [24] 1722 	mov	b,r7
      000306 12r00r00         [24] 1723 	lcall	__gptrget
      000309 FD               [12] 1724 	mov	r5,a
      00030A A3               [24] 1725 	inc	dptr
      00030B 12r00r00         [24] 1726 	lcall	__gptrget
      00030E FE               [12] 1727 	mov	r6,a
      00030F A3               [24] 1728 	inc	dptr
      000310 12r00r00         [24] 1729 	lcall	__gptrget
      000313 FF               [12] 1730 	mov	r7,a
      000314 8D 82            [24] 1731 	mov	dpl,r5
      000316 8E 83            [24] 1732 	mov	dph,r6
      000318 8F F0            [24] 1733 	mov	b,r7
      00031A 12r00r00         [24] 1734 	lcall	__gptrget
      00031D FD               [12] 1735 	mov	r5,a
      00031E A3               [24] 1736 	inc	dptr
      00031F 12r00r00         [24] 1737 	lcall	__gptrget
      000322 FE               [12] 1738 	mov	r6,a
      000323 C0 06            [24] 1739 	push	ar6
      000325 C0 05            [24] 1740 	push	ar5
      000327 12r00r00         [24] 1741 	lcall	_packetbuf_dataptr
      00032A AB 82            [24] 1742 	mov	r3,dpl
      00032C AC 83            [24] 1743 	mov	r4,dph
      00032E AF F0            [24] 1744 	mov	r7,b
      000330 D0 05            [24] 1745 	pop	ar5
      000332 D0 06            [24] 1746 	pop	ar6
      000334 C0 06            [24] 1747 	push	ar6
      000336 C0 05            [24] 1748 	push	ar5
      000338 E4               [12] 1749 	clr	a
      000339 C0 E0            [24] 1750 	push	acc
      00033B C0 E0            [24] 1751 	push	acc
      00033D C0 03            [24] 1752 	push	ar3
      00033F C0 04            [24] 1753 	push	ar4
      000341 C0 07            [24] 1754 	push	ar7
      000343 04               [12] 1755 	inc	a
      000344 C0 E0            [24] 1756 	push	acc
      000346 E4               [12] 1757 	clr	a
      000347 C0 E0            [24] 1758 	push	acc
      000349 C0 E0            [24] 1759 	push	acc
      00034B C0 E0            [24] 1760 	push	acc
      00034D 12r03r52         [24] 1761 	lcall	00137$
      000350 80 12            [24] 1762 	sjmp	00138$
      000352                       1763 00137$:
      000352 C0 05            [24] 1764 	push	ar5
      000354 C0 06            [24] 1765 	push	ar6
      000356 E5 81            [12] 1766 	mov	a,sp
      000358 24 ED            [12] 1767 	add	a,#0xed
      00035A F8               [12] 1768 	mov	r0,a
      00035B 86 82            [24] 1769 	mov	dpl,@r0
      00035D 08               [12] 1770 	inc	r0
      00035E 86 83            [24] 1771 	mov	dph,@r0
      000360 08               [12] 1772 	inc	r0
      000361 86 F0            [24] 1773 	mov	b,@r0
      000363 22               [24] 1774 	ret
      000364                       1775 00138$:
      000364 E5 81            [12] 1776 	mov	a,sp
      000366 24 F7            [12] 1777 	add	a,#0xf7
      000368 F5 81            [12] 1778 	mov	sp,a
      00036A D0 05            [24] 1779 	pop	ar5
      00036C D0 06            [24] 1780 	pop	ar6
                                   1781 ;	../../core/net/rime/rucb.c:122: c->chunk = 0;
      00036E E5 81            [12] 1782 	mov	a,sp
      000370 24 FC            [12] 1783 	add	a,#0xfc
      000372 F8               [12] 1784 	mov	r0,a
      000373 74 3D            [12] 1785 	mov	a,#0x3d
      000375 26               [12] 1786 	add	a,@r0
      000376 FD               [12] 1787 	mov	r5,a
      000377 E4               [12] 1788 	clr	a
      000378 08               [12] 1789 	inc	r0
      000379 36               [12] 1790 	addc	a,@r0
      00037A FE               [12] 1791 	mov	r6,a
      00037B 08               [12] 1792 	inc	r0
      00037C 86 07            [24] 1793 	mov	ar7,@r0
      00037E 8D 82            [24] 1794 	mov	dpl,r5
      000380 8E 83            [24] 1795 	mov	dph,r6
      000382 8F F0            [24] 1796 	mov	b,r7
      000384 E4               [12] 1797 	clr	a
      000385 12r00r00         [24] 1798 	lcall	__gptrput
      000388 A3               [24] 1799 	inc	dptr
      000389 12r00r00         [24] 1800 	lcall	__gptrput
      00038C                       1801 00104$:
                                   1802 ;	../../core/net/rime/rucb.c:126: if(rimeaddr_cmp(&c->sender, from)) {
      00038C E5 81            [12] 1803 	mov	a,sp
      00038E 24 FC            [12] 1804 	add	a,#0xfc
      000390 F8               [12] 1805 	mov	r0,a
      000391 74 3B            [12] 1806 	mov	a,#0x3b
      000393 26               [12] 1807 	add	a,@r0
      000394 FD               [12] 1808 	mov	r5,a
      000395 E4               [12] 1809 	clr	a
      000396 08               [12] 1810 	inc	r0
      000397 36               [12] 1811 	addc	a,@r0
      000398 FE               [12] 1812 	mov	r6,a
      000399 08               [12] 1813 	inc	r0
      00039A 86 07            [24] 1814 	mov	ar7,@r0
      00039C E5 81            [12] 1815 	mov	a,sp
      00039E 24 F5            [12] 1816 	add	a,#0xf5
      0003A0 F8               [12] 1817 	mov	r0,a
      0003A1 E6               [12] 1818 	mov	a,@r0
      0003A2 C0 E0            [24] 1819 	push	acc
      0003A4 08               [12] 1820 	inc	r0
      0003A5 E6               [12] 1821 	mov	a,@r0
      0003A6 C0 E0            [24] 1822 	push	acc
      0003A8 08               [12] 1823 	inc	r0
      0003A9 E6               [12] 1824 	mov	a,@r0
      0003AA C0 E0            [24] 1825 	push	acc
      0003AC 8D 82            [24] 1826 	mov	dpl,r5
      0003AE 8E 83            [24] 1827 	mov	dph,r6
      0003B0 8F F0            [24] 1828 	mov	b,r7
      0003B2 12r00r00         [24] 1829 	lcall	_rimeaddr_cmp
      0003B5 AE 82            [24] 1830 	mov	r6,dpl
      0003B7 AF 83            [24] 1831 	mov	r7,dph
      0003B9 15 81            [12] 1832 	dec	sp
      0003BB 15 81            [12] 1833 	dec	sp
      0003BD 15 81            [12] 1834 	dec	sp
      0003BF EE               [12] 1835 	mov	a,r6
      0003C0 4F               [12] 1836 	orl	a,r7
      0003C1 70 03            [24] 1837 	jnz	00139$
      0003C3 02r05r7B         [24] 1838 	ljmp	00109$
      0003C6                       1839 00139$:
                                   1840 ;	../../core/net/rime/rucb.c:127: int datalen = packetbuf_datalen();
      0003C6 12r00r00         [24] 1841 	lcall	_packetbuf_datalen
      0003C9 AE 82            [24] 1842 	mov	r6,dpl
      0003CB AF 83            [24] 1843 	mov	r7,dph
      0003CD A8 81            [24] 1844 	mov	r0,sp
      0003CF 18               [12] 1845 	dec	r0
      0003D0 A6 06            [24] 1846 	mov	@r0,ar6
      0003D2 08               [12] 1847 	inc	r0
      0003D3 A6 07            [24] 1848 	mov	@r0,ar7
                                   1849 ;	../../core/net/rime/rucb.c:129: if(datalen < RUCB_DATASIZE) {
      0003D5 A8 81            [24] 1850 	mov	r0,sp
      0003D7 18               [12] 1851 	dec	r0
      0003D8 C3               [12] 1852 	clr	c
      0003D9 E6               [12] 1853 	mov	a,@r0
      0003DA 94 40            [12] 1854 	subb	a,#0x40
      0003DC 08               [12] 1855 	inc	r0
      0003DD E6               [12] 1856 	mov	a,@r0
      0003DE 64 80            [12] 1857 	xrl	a,#0x80
      0003E0 94 80            [12] 1858 	subb	a,#0x80
      0003E2 40 03            [24] 1859 	jc	00140$
      0003E4 02r04r9A         [24] 1860 	ljmp	00106$
      0003E7                       1861 00140$:
                                   1862 ;	../../core/net/rime/rucb.c:133: c->u->write_chunk(c, c->chunk * RUCB_DATASIZE,
      0003E7 E5 81            [12] 1863 	mov	a,sp
      0003E9 24 FC            [12] 1864 	add	a,#0xfc
      0003EB F8               [12] 1865 	mov	r0,a
      0003EC 74 36            [12] 1866 	mov	a,#0x36
      0003EE 26               [12] 1867 	add	a,@r0
      0003EF FB               [12] 1868 	mov	r3,a
      0003F0 E4               [12] 1869 	clr	a
      0003F1 08               [12] 1870 	inc	r0
      0003F2 36               [12] 1871 	addc	a,@r0
      0003F3 FC               [12] 1872 	mov	r4,a
      0003F4 08               [12] 1873 	inc	r0
      0003F5 86 05            [24] 1874 	mov	ar5,@r0
      0003F7 8B 82            [24] 1875 	mov	dpl,r3
      0003F9 8C 83            [24] 1876 	mov	dph,r4
      0003FB 8D F0            [24] 1877 	mov	b,r5
      0003FD 12r00r00         [24] 1878 	lcall	__gptrget
      000400 FB               [12] 1879 	mov	r3,a
      000401 A3               [24] 1880 	inc	dptr
      000402 12r00r00         [24] 1881 	lcall	__gptrget
      000405 FC               [12] 1882 	mov	r4,a
      000406 A3               [24] 1883 	inc	dptr
      000407 12r00r00         [24] 1884 	lcall	__gptrget
      00040A FD               [12] 1885 	mov	r5,a
      00040B 8B 82            [24] 1886 	mov	dpl,r3
      00040D 8C 83            [24] 1887 	mov	dph,r4
      00040F 8D F0            [24] 1888 	mov	b,r5
      000411 E5 81            [12] 1889 	mov	a,sp
      000413 24 FA            [12] 1890 	add	a,#0xfa
      000415 F8               [12] 1891 	mov	r0,a
      000416 12r00r00         [24] 1892 	lcall	__gptrget
      000419 F6               [12] 1893 	mov	@r0,a
      00041A A3               [24] 1894 	inc	dptr
      00041B 12r00r00         [24] 1895 	lcall	__gptrget
      00041E 08               [12] 1896 	inc	r0
      00041F F6               [12] 1897 	mov	@r0,a
                                   1898 ;	../../core/net/rime/rucb.c:134: RUCB_FLAG_LASTCHUNK, packetbuf_dataptr(), datalen);
      000420 12r00r00         [24] 1899 	lcall	_packetbuf_dataptr
      000423 AA 82            [24] 1900 	mov	r2,dpl
      000425 AD 83            [24] 1901 	mov	r5,dph
      000427 AF F0            [24] 1902 	mov	r7,b
                                   1903 ;	../../core/net/rime/rucb.c:133: c->u->write_chunk(c, c->chunk * RUCB_DATASIZE,
      000429 E5 81            [12] 1904 	mov	a,sp
      00042B 24 FC            [12] 1905 	add	a,#0xfc
      00042D F8               [12] 1906 	mov	r0,a
      00042E 74 3D            [12] 1907 	mov	a,#0x3d
      000430 26               [12] 1908 	add	a,@r0
      000431 FB               [12] 1909 	mov	r3,a
      000432 E4               [12] 1910 	clr	a
      000433 08               [12] 1911 	inc	r0
      000434 36               [12] 1912 	addc	a,@r0
      000435 FC               [12] 1913 	mov	r4,a
      000436 08               [12] 1914 	inc	r0
      000437 86 06            [24] 1915 	mov	ar6,@r0
      000439 8B 82            [24] 1916 	mov	dpl,r3
      00043B 8C 83            [24] 1917 	mov	dph,r4
      00043D 8E F0            [24] 1918 	mov	b,r6
      00043F 12r00r00         [24] 1919 	lcall	__gptrget
      000442 FB               [12] 1920 	mov	r3,a
      000443 A3               [24] 1921 	inc	dptr
      000444 12r00r00         [24] 1922 	lcall	__gptrget
      000447 54 03            [12] 1923 	anl	a,#0x03
      000449 A2 E0            [12] 1924 	mov	c,acc.0
      00044B CB               [12] 1925 	xch	a,r3
      00044C 13               [12] 1926 	rrc	a
      00044D CB               [12] 1927 	xch	a,r3
      00044E 13               [12] 1928 	rrc	a
      00044F A2 E0            [12] 1929 	mov	c,acc.0
      000451 CB               [12] 1930 	xch	a,r3
      000452 13               [12] 1931 	rrc	a
      000453 CB               [12] 1932 	xch	a,r3
      000454 13               [12] 1933 	rrc	a
      000455 CB               [12] 1934 	xch	a,r3
      000456 FC               [12] 1935 	mov	r4,a
      000457 A8 81            [24] 1936 	mov	r0,sp
      000459 18               [12] 1937 	dec	r0
      00045A E6               [12] 1938 	mov	a,@r0
      00045B C0 E0            [24] 1939 	push	acc
      00045D 08               [12] 1940 	inc	r0
      00045E E6               [12] 1941 	mov	a,@r0
      00045F C0 E0            [24] 1942 	push	acc
      000461 C0 02            [24] 1943 	push	ar2
      000463 C0 05            [24] 1944 	push	ar5
      000465 C0 07            [24] 1945 	push	ar7
      000467 74 02            [12] 1946 	mov	a,#0x02
      000469 C0 E0            [24] 1947 	push	acc
      00046B E4               [12] 1948 	clr	a
      00046C C0 E0            [24] 1949 	push	acc
      00046E C0 03            [24] 1950 	push	ar3
      000470 C0 04            [24] 1951 	push	ar4
      000472 12r04r77         [24] 1952 	lcall	00141$
      000475 80 1A            [24] 1953 	sjmp	00142$
      000477                       1954 00141$:
      000477 E5 81            [12] 1955 	mov	a,sp
      000479 24 EF            [12] 1956 	add	a,#0xef
      00047B F8               [12] 1957 	mov	r0,a
      00047C E6               [12] 1958 	mov	a,@r0
      00047D C0 E0            [24] 1959 	push	acc
      00047F 08               [12] 1960 	inc	r0
      000480 E6               [12] 1961 	mov	a,@r0
      000481 C0 E0            [24] 1962 	push	acc
      000483 E5 81            [12] 1963 	mov	a,sp
      000485 24 EF            [12] 1964 	add	a,#0xef
      000487 F8               [12] 1965 	mov	r0,a
      000488 86 82            [24] 1966 	mov	dpl,@r0
      00048A 08               [12] 1967 	inc	r0
      00048B 86 83            [24] 1968 	mov	dph,@r0
      00048D 08               [12] 1969 	inc	r0
      00048E 86 F0            [24] 1970 	mov	b,@r0
      000490 22               [24] 1971 	ret
      000491                       1972 00142$:
      000491 E5 81            [12] 1973 	mov	a,sp
      000493 24 F7            [12] 1974 	add	a,#0xf7
      000495 F5 81            [12] 1975 	mov	sp,a
      000497 02r05r48         [24] 1976 	ljmp	00107$
      00049A                       1977 00106$:
                                   1978 ;	../../core/net/rime/rucb.c:136: c->u->write_chunk(c, c->chunk * RUCB_DATASIZE,
      00049A E5 81            [12] 1979 	mov	a,sp
      00049C 24 FC            [12] 1980 	add	a,#0xfc
      00049E F8               [12] 1981 	mov	r0,a
      00049F 74 36            [12] 1982 	mov	a,#0x36
      0004A1 26               [12] 1983 	add	a,@r0
      0004A2 FD               [12] 1984 	mov	r5,a
      0004A3 E4               [12] 1985 	clr	a
      0004A4 08               [12] 1986 	inc	r0
      0004A5 36               [12] 1987 	addc	a,@r0
      0004A6 FE               [12] 1988 	mov	r6,a
      0004A7 08               [12] 1989 	inc	r0
      0004A8 86 07            [24] 1990 	mov	ar7,@r0
      0004AA 8D 82            [24] 1991 	mov	dpl,r5
      0004AC 8E 83            [24] 1992 	mov	dph,r6
      0004AE 8F F0            [24] 1993 	mov	b,r7
      0004B0 12r00r00         [24] 1994 	lcall	__gptrget
      0004B3 FD               [12] 1995 	mov	r5,a
      0004B4 A3               [24] 1996 	inc	dptr
      0004B5 12r00r00         [24] 1997 	lcall	__gptrget
      0004B8 FE               [12] 1998 	mov	r6,a
      0004B9 A3               [24] 1999 	inc	dptr
      0004BA 12r00r00         [24] 2000 	lcall	__gptrget
      0004BD FF               [12] 2001 	mov	r7,a
      0004BE 8D 82            [24] 2002 	mov	dpl,r5
      0004C0 8E 83            [24] 2003 	mov	dph,r6
      0004C2 8F F0            [24] 2004 	mov	b,r7
      0004C4 E5 81            [12] 2005 	mov	a,sp
      0004C6 24 FA            [12] 2006 	add	a,#0xfa
      0004C8 F8               [12] 2007 	mov	r0,a
      0004C9 12r00r00         [24] 2008 	lcall	__gptrget
      0004CC F6               [12] 2009 	mov	@r0,a
      0004CD A3               [24] 2010 	inc	dptr
      0004CE 12r00r00         [24] 2011 	lcall	__gptrget
      0004D1 08               [12] 2012 	inc	r0
      0004D2 F6               [12] 2013 	mov	@r0,a
                                   2014 ;	../../core/net/rime/rucb.c:137: RUCB_FLAG_NONE, packetbuf_dataptr(), datalen);
      0004D3 12r00r00         [24] 2015 	lcall	_packetbuf_dataptr
      0004D6 AB 82            [24] 2016 	mov	r3,dpl
      0004D8 AC 83            [24] 2017 	mov	r4,dph
      0004DA AF F0            [24] 2018 	mov	r7,b
                                   2019 ;	../../core/net/rime/rucb.c:136: c->u->write_chunk(c, c->chunk * RUCB_DATASIZE,
      0004DC E5 81            [12] 2020 	mov	a,sp
      0004DE 24 FC            [12] 2021 	add	a,#0xfc
      0004E0 F8               [12] 2022 	mov	r0,a
      0004E1 74 3D            [12] 2023 	mov	a,#0x3d
      0004E3 26               [12] 2024 	add	a,@r0
      0004E4 FA               [12] 2025 	mov	r2,a
      0004E5 E4               [12] 2026 	clr	a
      0004E6 08               [12] 2027 	inc	r0
      0004E7 36               [12] 2028 	addc	a,@r0
      0004E8 FD               [12] 2029 	mov	r5,a
      0004E9 08               [12] 2030 	inc	r0
      0004EA 86 06            [24] 2031 	mov	ar6,@r0
      0004EC 8A 82            [24] 2032 	mov	dpl,r2
      0004EE 8D 83            [24] 2033 	mov	dph,r5
      0004F0 8E F0            [24] 2034 	mov	b,r6
      0004F2 12r00r00         [24] 2035 	lcall	__gptrget
      0004F5 FA               [12] 2036 	mov	r2,a
      0004F6 A3               [24] 2037 	inc	dptr
      0004F7 12r00r00         [24] 2038 	lcall	__gptrget
      0004FA 54 03            [12] 2039 	anl	a,#0x03
      0004FC A2 E0            [12] 2040 	mov	c,acc.0
      0004FE CA               [12] 2041 	xch	a,r2
      0004FF 13               [12] 2042 	rrc	a
      000500 CA               [12] 2043 	xch	a,r2
      000501 13               [12] 2044 	rrc	a
      000502 A2 E0            [12] 2045 	mov	c,acc.0
      000504 CA               [12] 2046 	xch	a,r2
      000505 13               [12] 2047 	rrc	a
      000506 CA               [12] 2048 	xch	a,r2
      000507 13               [12] 2049 	rrc	a
      000508 CA               [12] 2050 	xch	a,r2
      000509 FD               [12] 2051 	mov	r5,a
      00050A A8 81            [24] 2052 	mov	r0,sp
      00050C 18               [12] 2053 	dec	r0
      00050D E6               [12] 2054 	mov	a,@r0
      00050E C0 E0            [24] 2055 	push	acc
      000510 08               [12] 2056 	inc	r0
      000511 E6               [12] 2057 	mov	a,@r0
      000512 C0 E0            [24] 2058 	push	acc
      000514 C0 03            [24] 2059 	push	ar3
      000516 C0 04            [24] 2060 	push	ar4
      000518 C0 07            [24] 2061 	push	ar7
      00051A E4               [12] 2062 	clr	a
      00051B C0 E0            [24] 2063 	push	acc
      00051D C0 E0            [24] 2064 	push	acc
      00051F C0 02            [24] 2065 	push	ar2
      000521 C0 05            [24] 2066 	push	ar5
      000523 12r05r28         [24] 2067 	lcall	00143$
      000526 80 1A            [24] 2068 	sjmp	00144$
      000528                       2069 00143$:
      000528 E5 81            [12] 2070 	mov	a,sp
      00052A 24 EF            [12] 2071 	add	a,#0xef
      00052C F8               [12] 2072 	mov	r0,a
      00052D E6               [12] 2073 	mov	a,@r0
      00052E C0 E0            [24] 2074 	push	acc
      000530 08               [12] 2075 	inc	r0
      000531 E6               [12] 2076 	mov	a,@r0
      000532 C0 E0            [24] 2077 	push	acc
      000534 E5 81            [12] 2078 	mov	a,sp
      000536 24 EF            [12] 2079 	add	a,#0xef
      000538 F8               [12] 2080 	mov	r0,a
      000539 86 82            [24] 2081 	mov	dpl,@r0
      00053B 08               [12] 2082 	inc	r0
      00053C 86 83            [24] 2083 	mov	dph,@r0
      00053E 08               [12] 2084 	inc	r0
      00053F 86 F0            [24] 2085 	mov	b,@r0
      000541 22               [24] 2086 	ret
      000542                       2087 00144$:
      000542 E5 81            [12] 2088 	mov	a,sp
      000544 24 F7            [12] 2089 	add	a,#0xf7
      000546 F5 81            [12] 2090 	mov	sp,a
      000548                       2091 00107$:
                                   2092 ;	../../core/net/rime/rucb.c:139: c->chunk++;
      000548 E5 81            [12] 2093 	mov	a,sp
      00054A 24 FC            [12] 2094 	add	a,#0xfc
      00054C F8               [12] 2095 	mov	r0,a
      00054D 74 3D            [12] 2096 	mov	a,#0x3d
      00054F 26               [12] 2097 	add	a,@r0
      000550 FD               [12] 2098 	mov	r5,a
      000551 E4               [12] 2099 	clr	a
      000552 08               [12] 2100 	inc	r0
      000553 36               [12] 2101 	addc	a,@r0
      000554 FE               [12] 2102 	mov	r6,a
      000555 08               [12] 2103 	inc	r0
      000556 86 07            [24] 2104 	mov	ar7,@r0
      000558 8D 82            [24] 2105 	mov	dpl,r5
      00055A 8E 83            [24] 2106 	mov	dph,r6
      00055C 8F F0            [24] 2107 	mov	b,r7
      00055E 12r00r00         [24] 2108 	lcall	__gptrget
      000561 FB               [12] 2109 	mov	r3,a
      000562 A3               [24] 2110 	inc	dptr
      000563 12r00r00         [24] 2111 	lcall	__gptrget
      000566 FC               [12] 2112 	mov	r4,a
      000567 0B               [12] 2113 	inc	r3
      000568 BB 00 01         [24] 2114 	cjne	r3,#0x00,00145$
      00056B 0C               [12] 2115 	inc	r4
      00056C                       2116 00145$:
      00056C 8D 82            [24] 2117 	mov	dpl,r5
      00056E 8E 83            [24] 2118 	mov	dph,r6
      000570 8F F0            [24] 2119 	mov	b,r7
      000572 EB               [12] 2120 	mov	a,r3
      000573 12r00r00         [24] 2121 	lcall	__gptrput
      000576 A3               [24] 2122 	inc	dptr
      000577 EC               [12] 2123 	mov	a,r4
      000578 12r00r00         [24] 2124 	lcall	__gptrput
      00057B                       2125 00109$:
                                   2126 ;	../../core/net/rime/rucb.c:142: if(packetbuf_datalen() < RUCB_DATASIZE) {
      00057B 12r00r00         [24] 2127 	lcall	_packetbuf_datalen
      00057E AE 82            [24] 2128 	mov	r6,dpl
      000580 AF 83            [24] 2129 	mov	r7,dph
      000582 C3               [12] 2130 	clr	c
      000583 EE               [12] 2131 	mov	a,r6
      000584 94 40            [12] 2132 	subb	a,#0x40
      000586 EF               [12] 2133 	mov	a,r7
      000587 94 00            [12] 2134 	subb	a,#0x00
      000589 50 2B            [24] 2135 	jnc	00112$
                                   2136 ;	../../core/net/rime/rucb.c:143: rimeaddr_copy(&c->sender, &rimeaddr_null);
      00058B E5 81            [12] 2137 	mov	a,sp
      00058D 24 FC            [12] 2138 	add	a,#0xfc
      00058F F8               [12] 2139 	mov	r0,a
      000590 74 3B            [12] 2140 	mov	a,#0x3b
      000592 26               [12] 2141 	add	a,@r0
      000593 FD               [12] 2142 	mov	r5,a
      000594 E4               [12] 2143 	clr	a
      000595 08               [12] 2144 	inc	r0
      000596 36               [12] 2145 	addc	a,@r0
      000597 FE               [12] 2146 	mov	r6,a
      000598 08               [12] 2147 	inc	r0
      000599 86 07            [24] 2148 	mov	ar7,@r0
      00059B 74r00            [12] 2149 	mov	a,#_rimeaddr_null
      00059D C0 E0            [24] 2150 	push	acc
      00059F 74s00            [12] 2151 	mov	a,#(_rimeaddr_null >> 8)
      0005A1 C0 E0            [24] 2152 	push	acc
      0005A3 74 80            [12] 2153 	mov	a,#0x80
      0005A5 C0 E0            [24] 2154 	push	acc
      0005A7 8D 82            [24] 2155 	mov	dpl,r5
      0005A9 8E 83            [24] 2156 	mov	dph,r6
      0005AB 8F F0            [24] 2157 	mov	b,r7
      0005AD 12r00r00         [24] 2158 	lcall	_rimeaddr_copy
      0005B0 15 81            [12] 2159 	dec	sp
      0005B2 15 81            [12] 2160 	dec	sp
      0005B4 15 81            [12] 2161 	dec	sp
      0005B6                       2162 00112$:
                                   2163 ;	../../core/net/rime/rucb.c:145: }
      0005B6 E5 81            [12] 2164 	mov	a,sp
      0005B8 24 F9            [12] 2165 	add	a,#0xf9
      0005BA F5 81            [12] 2166 	mov	sp,a
      0005BC 22               [24] 2167 	ret
                                   2168 ;------------------------------------------------------------
                                   2169 ;Allocation info for local variables in function 'rucb_open'
                                   2170 ;------------------------------------------------------------
                                   2171 ;channel                   Allocated to stack - sp -3
                                   2172 ;u                         Allocated to stack - sp -6
                                   2173 ;c                         Allocated to registers r5 r6 r7 
                                   2174 ;------------------------------------------------------------
                                   2175 ;	../../core/net/rime/rucb.c:150: rucb_open(struct rucb_conn *c, uint16_t channel,
                                   2176 ;	-----------------------------------------
                                   2177 ;	 function rucb_open
                                   2178 ;	-----------------------------------------
      0005BD                       2179 _rucb_open:
      0005BD AD 82            [24] 2180 	mov	r5,dpl
      0005BF AE 83            [24] 2181 	mov	r6,dph
      0005C1 AF F0            [24] 2182 	mov	r7,b
                                   2183 ;	../../core/net/rime/rucb.c:153: rimeaddr_copy(&c->sender, &rimeaddr_null);
      0005C3 74 3B            [12] 2184 	mov	a,#0x3b
      0005C5 2D               [12] 2185 	add	a,r5
      0005C6 FA               [12] 2186 	mov	r2,a
      0005C7 E4               [12] 2187 	clr	a
      0005C8 3E               [12] 2188 	addc	a,r6
      0005C9 FB               [12] 2189 	mov	r3,a
      0005CA 8F 04            [24] 2190 	mov	ar4,r7
      0005CC C0 07            [24] 2191 	push	ar7
      0005CE C0 06            [24] 2192 	push	ar6
      0005D0 C0 05            [24] 2193 	push	ar5
      0005D2 74r00            [12] 2194 	mov	a,#_rimeaddr_null
      0005D4 C0 E0            [24] 2195 	push	acc
      0005D6 74s00            [12] 2196 	mov	a,#(_rimeaddr_null >> 8)
      0005D8 C0 E0            [24] 2197 	push	acc
      0005DA 74 80            [12] 2198 	mov	a,#0x80
      0005DC C0 E0            [24] 2199 	push	acc
      0005DE 8A 82            [24] 2200 	mov	dpl,r2
      0005E0 8B 83            [24] 2201 	mov	dph,r3
      0005E2 8C F0            [24] 2202 	mov	b,r4
      0005E4 12r00r00         [24] 2203 	lcall	_rimeaddr_copy
      0005E7 15 81            [12] 2204 	dec	sp
      0005E9 15 81            [12] 2205 	dec	sp
      0005EB 15 81            [12] 2206 	dec	sp
      0005ED D0 05            [24] 2207 	pop	ar5
      0005EF D0 06            [24] 2208 	pop	ar6
      0005F1 D0 07            [24] 2209 	pop	ar7
                                   2210 ;	../../core/net/rime/rucb.c:154: runicast_open(&c->c, channel, &ruc);
      0005F3 C0 07            [24] 2211 	push	ar7
      0005F5 C0 06            [24] 2212 	push	ar6
      0005F7 C0 05            [24] 2213 	push	ar5
      0005F9 74r00            [12] 2214 	mov	a,#_ruc
      0005FB C0 E0            [24] 2215 	push	acc
      0005FD 74s00            [12] 2216 	mov	a,#(_ruc >> 8)
      0005FF C0 E0            [24] 2217 	push	acc
      000601 74 80            [12] 2218 	mov	a,#0x80
      000603 C0 E0            [24] 2219 	push	acc
      000605 E5 81            [12] 2220 	mov	a,sp
      000607 24 F7            [12] 2221 	add	a,#0xf7
      000609 F8               [12] 2222 	mov	r0,a
      00060A E6               [12] 2223 	mov	a,@r0
      00060B C0 E0            [24] 2224 	push	acc
      00060D 08               [12] 2225 	inc	r0
      00060E E6               [12] 2226 	mov	a,@r0
      00060F C0 E0            [24] 2227 	push	acc
      000611 8D 82            [24] 2228 	mov	dpl,r5
      000613 8E 83            [24] 2229 	mov	dph,r6
      000615 8F F0            [24] 2230 	mov	b,r7
      000617 12r00r00         [24] 2231 	lcall	_runicast_open
      00061A E5 81            [12] 2232 	mov	a,sp
      00061C 24 FB            [12] 2233 	add	a,#0xfb
      00061E F5 81            [12] 2234 	mov	sp,a
      000620 D0 05            [24] 2235 	pop	ar5
      000622 D0 06            [24] 2236 	pop	ar6
      000624 D0 07            [24] 2237 	pop	ar7
                                   2238 ;	../../core/net/rime/rucb.c:155: c->u = u;
      000626 74 36            [12] 2239 	mov	a,#0x36
      000628 2D               [12] 2240 	add	a,r5
      000629 FA               [12] 2241 	mov	r2,a
      00062A E4               [12] 2242 	clr	a
      00062B 3E               [12] 2243 	addc	a,r6
      00062C FB               [12] 2244 	mov	r3,a
      00062D 8F 04            [24] 2245 	mov	ar4,r7
      00062F 8A 82            [24] 2246 	mov	dpl,r2
      000631 8B 83            [24] 2247 	mov	dph,r3
      000633 8C F0            [24] 2248 	mov	b,r4
      000635 E5 81            [12] 2249 	mov	a,sp
      000637 24 FA            [12] 2250 	add	a,#0xfa
      000639 F8               [12] 2251 	mov	r0,a
      00063A E6               [12] 2252 	mov	a,@r0
      00063B 12r00r00         [24] 2253 	lcall	__gptrput
      00063E A3               [24] 2254 	inc	dptr
      00063F 08               [12] 2255 	inc	r0
      000640 E6               [12] 2256 	mov	a,@r0
      000641 12r00r00         [24] 2257 	lcall	__gptrput
      000644 A3               [24] 2258 	inc	dptr
      000645 08               [12] 2259 	inc	r0
      000646 E6               [12] 2260 	mov	a,@r0
      000647 12r00r00         [24] 2261 	lcall	__gptrput
                                   2262 ;	../../core/net/rime/rucb.c:156: c->last_seqno = -1;
      00064A 74 3F            [12] 2263 	mov	a,#0x3f
      00064C 2D               [12] 2264 	add	a,r5
      00064D FA               [12] 2265 	mov	r2,a
      00064E E4               [12] 2266 	clr	a
      00064F 3E               [12] 2267 	addc	a,r6
      000650 FB               [12] 2268 	mov	r3,a
      000651 8F 04            [24] 2269 	mov	ar4,r7
      000653 8A 82            [24] 2270 	mov	dpl,r2
      000655 8B 83            [24] 2271 	mov	dph,r3
      000657 8C F0            [24] 2272 	mov	b,r4
      000659 74 FF            [12] 2273 	mov	a,#0xff
      00065B 12r00r00         [24] 2274 	lcall	__gptrput
                                   2275 ;	../../core/net/rime/rucb.c:157: c->last_size = -1;
      00065E 74 40            [12] 2276 	mov	a,#0x40
      000660 2D               [12] 2277 	add	a,r5
      000661 FD               [12] 2278 	mov	r5,a
      000662 E4               [12] 2279 	clr	a
      000663 3E               [12] 2280 	addc	a,r6
      000664 FE               [12] 2281 	mov	r6,a
      000665 8D 82            [24] 2282 	mov	dpl,r5
      000667 8E 83            [24] 2283 	mov	dph,r6
      000669 8F F0            [24] 2284 	mov	b,r7
      00066B 74 FF            [12] 2285 	mov	a,#0xff
      00066D 12r00r00         [24] 2286 	lcall	__gptrput
      000670 A3               [24] 2287 	inc	dptr
                                   2288 ;	../../core/net/rime/rucb.c:158: }
      000671 02r00r00         [24] 2289 	ljmp	__gptrput
                                   2290 ;------------------------------------------------------------
                                   2291 ;Allocation info for local variables in function 'rucb_close'
                                   2292 ;------------------------------------------------------------
                                   2293 ;c                         Allocated to registers r5 r6 r7 
                                   2294 ;------------------------------------------------------------
                                   2295 ;	../../core/net/rime/rucb.c:161: rucb_close(struct rucb_conn *c)
                                   2296 ;	-----------------------------------------
                                   2297 ;	 function rucb_close
                                   2298 ;	-----------------------------------------
      000674                       2299 _rucb_close:
                                   2300 ;	../../core/net/rime/rucb.c:163: runicast_close(&c->c);
                                   2301 ;	../../core/net/rime/rucb.c:164: }
      000674 02r00r00         [24] 2302 	ljmp	_runicast_close
                                   2303 ;------------------------------------------------------------
                                   2304 ;Allocation info for local variables in function 'rucb_send'
                                   2305 ;------------------------------------------------------------
                                   2306 ;receiver                  Allocated to stack - sp -4
                                   2307 ;c                         Allocated to registers r5 r6 r7 
                                   2308 ;------------------------------------------------------------
                                   2309 ;	../../core/net/rime/rucb.c:167: rucb_send(struct rucb_conn *c, const rimeaddr_t *receiver)
                                   2310 ;	-----------------------------------------
                                   2311 ;	 function rucb_send
                                   2312 ;	-----------------------------------------
      000677                       2313 _rucb_send:
      000677 AD 82            [24] 2314 	mov	r5,dpl
      000679 AE 83            [24] 2315 	mov	r6,dph
      00067B AF F0            [24] 2316 	mov	r7,b
                                   2317 ;	../../core/net/rime/rucb.c:169: c->chunk = 0;
      00067D 74 3D            [12] 2318 	mov	a,#0x3d
      00067F 2D               [12] 2319 	add	a,r5
      000680 FA               [12] 2320 	mov	r2,a
      000681 E4               [12] 2321 	clr	a
      000682 3E               [12] 2322 	addc	a,r6
      000683 FB               [12] 2323 	mov	r3,a
      000684 8F 04            [24] 2324 	mov	ar4,r7
      000686 8A 82            [24] 2325 	mov	dpl,r2
      000688 8B 83            [24] 2326 	mov	dph,r3
      00068A 8C F0            [24] 2327 	mov	b,r4
      00068C E4               [12] 2328 	clr	a
      00068D 12r00r00         [24] 2329 	lcall	__gptrput
      000690 A3               [24] 2330 	inc	dptr
      000691 12r00r00         [24] 2331 	lcall	__gptrput
                                   2332 ;	../../core/net/rime/rucb.c:170: read_data(c);
      000694 8D 82            [24] 2333 	mov	dpl,r5
      000696 8E 83            [24] 2334 	mov	dph,r6
      000698 8F F0            [24] 2335 	mov	b,r7
      00069A C0 07            [24] 2336 	push	ar7
      00069C C0 06            [24] 2337 	push	ar6
      00069E C0 05            [24] 2338 	push	ar5
      0006A0 12r00r00         [24] 2339 	lcall	_read_data
      0006A3 D0 05            [24] 2340 	pop	ar5
      0006A5 D0 06            [24] 2341 	pop	ar6
      0006A7 D0 07            [24] 2342 	pop	ar7
                                   2343 ;	../../core/net/rime/rucb.c:171: rimeaddr_copy(&c->receiver, receiver);
      0006A9 74 39            [12] 2344 	mov	a,#0x39
      0006AB 2D               [12] 2345 	add	a,r5
      0006AC FA               [12] 2346 	mov	r2,a
      0006AD E4               [12] 2347 	clr	a
      0006AE 3E               [12] 2348 	addc	a,r6
      0006AF FB               [12] 2349 	mov	r3,a
      0006B0 8F 04            [24] 2350 	mov	ar4,r7
      0006B2 C0 07            [24] 2351 	push	ar7
      0006B4 C0 06            [24] 2352 	push	ar6
      0006B6 C0 05            [24] 2353 	push	ar5
      0006B8 E5 81            [12] 2354 	mov	a,sp
      0006BA 24 F9            [12] 2355 	add	a,#0xf9
      0006BC F8               [12] 2356 	mov	r0,a
      0006BD E6               [12] 2357 	mov	a,@r0
      0006BE C0 E0            [24] 2358 	push	acc
      0006C0 08               [12] 2359 	inc	r0
      0006C1 E6               [12] 2360 	mov	a,@r0
      0006C2 C0 E0            [24] 2361 	push	acc
      0006C4 08               [12] 2362 	inc	r0
      0006C5 E6               [12] 2363 	mov	a,@r0
      0006C6 C0 E0            [24] 2364 	push	acc
      0006C8 8A 82            [24] 2365 	mov	dpl,r2
      0006CA 8B 83            [24] 2366 	mov	dph,r3
      0006CC 8C F0            [24] 2367 	mov	b,r4
      0006CE 12r00r00         [24] 2368 	lcall	_rimeaddr_copy
      0006D1 15 81            [12] 2369 	dec	sp
      0006D3 15 81            [12] 2370 	dec	sp
      0006D5 15 81            [12] 2371 	dec	sp
      0006D7 D0 05            [24] 2372 	pop	ar5
      0006D9 D0 06            [24] 2373 	pop	ar6
      0006DB D0 07            [24] 2374 	pop	ar7
                                   2375 ;	../../core/net/rime/rucb.c:172: rimeaddr_copy(&c->sender, &rimeaddr_node_addr);
      0006DD 74 3B            [12] 2376 	mov	a,#0x3b
      0006DF 2D               [12] 2377 	add	a,r5
      0006E0 FA               [12] 2378 	mov	r2,a
      0006E1 E4               [12] 2379 	clr	a
      0006E2 3E               [12] 2380 	addc	a,r6
      0006E3 FB               [12] 2381 	mov	r3,a
      0006E4 8F 04            [24] 2382 	mov	ar4,r7
      0006E6 C0 07            [24] 2383 	push	ar7
      0006E8 C0 06            [24] 2384 	push	ar6
      0006EA C0 05            [24] 2385 	push	ar5
      0006EC 74r00            [12] 2386 	mov	a,#_rimeaddr_node_addr
      0006EE C0 E0            [24] 2387 	push	acc
      0006F0 74s00            [12] 2388 	mov	a,#(_rimeaddr_node_addr >> 8)
      0006F2 C0 E0            [24] 2389 	push	acc
      0006F4 E4               [12] 2390 	clr	a
      0006F5 C0 E0            [24] 2391 	push	acc
      0006F7 8A 82            [24] 2392 	mov	dpl,r2
      0006F9 8B 83            [24] 2393 	mov	dph,r3
      0006FB 8C F0            [24] 2394 	mov	b,r4
      0006FD 12r00r00         [24] 2395 	lcall	_rimeaddr_copy
      000700 15 81            [12] 2396 	dec	sp
      000702 15 81            [12] 2397 	dec	sp
      000704 15 81            [12] 2398 	dec	sp
      000706 D0 05            [24] 2399 	pop	ar5
      000708 D0 06            [24] 2400 	pop	ar6
      00070A D0 07            [24] 2401 	pop	ar7
                                   2402 ;	../../core/net/rime/rucb.c:173: runicast_send(&c->c, receiver, MAX_TRANSMISSIONS);
      00070C 74 08            [12] 2403 	mov	a,#0x08
      00070E C0 E0            [24] 2404 	push	acc
      000710 E5 81            [12] 2405 	mov	a,sp
      000712 24 FB            [12] 2406 	add	a,#0xfb
      000714 F8               [12] 2407 	mov	r0,a
      000715 E6               [12] 2408 	mov	a,@r0
      000716 C0 E0            [24] 2409 	push	acc
      000718 08               [12] 2410 	inc	r0
      000719 E6               [12] 2411 	mov	a,@r0
      00071A C0 E0            [24] 2412 	push	acc
      00071C 08               [12] 2413 	inc	r0
      00071D E6               [12] 2414 	mov	a,@r0
      00071E C0 E0            [24] 2415 	push	acc
      000720 8D 82            [24] 2416 	mov	dpl,r5
      000722 8E 83            [24] 2417 	mov	dph,r6
      000724 8F F0            [24] 2418 	mov	b,r7
      000726 12r00r00         [24] 2419 	lcall	_runicast_send
      000729 E5 81            [12] 2420 	mov	a,sp
      00072B 24 FC            [12] 2421 	add	a,#0xfc
      00072D F5 81            [12] 2422 	mov	sp,a
                                   2423 ;	../../core/net/rime/rucb.c:174: return 0;
      00072F 90 00 00         [24] 2424 	mov	dptr,#0x0000
                                   2425 ;	../../core/net/rime/rucb.c:175: }
      000732 22               [24] 2426 	ret
                                   2427 	.area CSEG    (CODE)
                                   2428 	.area CONST   (CODE)
      000000                       2429 _ruc:
      000000r3Ds02                 2430 	.byte _recv, (_recv >> 8)
      000002r04s01                 2431 	.byte _acked, (_acked >> 8)
      000004rE8s01                 2432 	.byte _timedout, (_timedout >> 8)
                                   2433 	.area XINIT   (CODE)
                                   2434 	.area CABS    (ABS,CODE)
