                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module phase
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _find_neighbor
                                     12 	.globl _queuebuf_free
                                     13 	.globl _queuebuf_to_packetbuf
                                     14 	.globl _queuebuf_new_from_packetbuf
                                     15 	.globl _ctimer_set
                                     16 	.globl _memb_free
                                     17 	.globl _memb_alloc
                                     18 	.globl _memb_init
                                     19 	.globl _list_item_next
                                     20 	.globl _list_remove
                                     21 	.globl _list_chop
                                     22 	.globl _list_push
                                     23 	.globl _list_head
                                     24 	.globl _list_init
                                     25 	.globl _timer_expired
                                     26 	.globl _timer_set
                                     27 	.globl _rimeaddr_cmp
                                     28 	.globl _rimeaddr_copy
                                     29 	.globl _ACTIVE
                                     30 	.globl _TX_BYTE
                                     31 	.globl _RX_BYTE
                                     32 	.globl _ERR
                                     33 	.globl _FE
                                     34 	.globl _SLAVE
                                     35 	.globl _RE
                                     36 	.globl _MODE
                                     37 	.globl _T3OVFIF
                                     38 	.globl _T3CH0IF
                                     39 	.globl _T3CH1IF
                                     40 	.globl _T4OVFIF
                                     41 	.globl _T4CH0IF
                                     42 	.globl _T4CH1IF
                                     43 	.globl _OVFIM
                                     44 	.globl _B_0
                                     45 	.globl _B_1
                                     46 	.globl _B_2
                                     47 	.globl _B_3
                                     48 	.globl _B_4
                                     49 	.globl _B_5
                                     50 	.globl _B_6
                                     51 	.globl _B_7
                                     52 	.globl _P2IF
                                     53 	.globl _UTX0IF
                                     54 	.globl _UTX1IF
                                     55 	.globl _P1IF
                                     56 	.globl _WDTIF
                                     57 	.globl _ACC_0
                                     58 	.globl _ACC_1
                                     59 	.globl _ACC_2
                                     60 	.globl _ACC_3
                                     61 	.globl _ACC_4
                                     62 	.globl _ACC_5
                                     63 	.globl _ACC_6
                                     64 	.globl _ACC_7
                                     65 	.globl _P
                                     66 	.globl _F1
                                     67 	.globl _OV
                                     68 	.globl _RS0
                                     69 	.globl _RS1
                                     70 	.globl _F0
                                     71 	.globl _AC
                                     72 	.globl _CY
                                     73 	.globl _DMAIF
                                     74 	.globl _T1IF
                                     75 	.globl _T2IF
                                     76 	.globl _T3IF
                                     77 	.globl _T4IF
                                     78 	.globl _P0IF
                                     79 	.globl _STIF
                                     80 	.globl _DMAIE
                                     81 	.globl _T1IE
                                     82 	.globl _T2IE
                                     83 	.globl _T3IE
                                     84 	.globl _T4IE
                                     85 	.globl _P0IE
                                     86 	.globl _RFERRIE
                                     87 	.globl _ADCIE
                                     88 	.globl _URX0IE
                                     89 	.globl _URX1IE
                                     90 	.globl _ENCIE
                                     91 	.globl _STIE
                                     92 	.globl _EA
                                     93 	.globl _P2_0
                                     94 	.globl _P2_1
                                     95 	.globl _P2_2
                                     96 	.globl _P2_3
                                     97 	.globl _P2_4
                                     98 	.globl _P2_5
                                     99 	.globl _P2_6
                                    100 	.globl _P2_7
                                    101 	.globl _ENCIF_0
                                    102 	.globl _ENCIF_1
                                    103 	.globl _P1_0
                                    104 	.globl _P1_1
                                    105 	.globl _P1_2
                                    106 	.globl _P1_3
                                    107 	.globl _P1_4
                                    108 	.globl _P1_5
                                    109 	.globl _P1_6
                                    110 	.globl _P1_7
                                    111 	.globl _IT0
                                    112 	.globl _RFERRIF
                                    113 	.globl _IT1
                                    114 	.globl _URX0IF
                                    115 	.globl _ADCIF
                                    116 	.globl _URX1IF
                                    117 	.globl _P0_0
                                    118 	.globl _P0_1
                                    119 	.globl _P0_2
                                    120 	.globl _P0_3
                                    121 	.globl _P0_4
                                    122 	.globl _P0_5
                                    123 	.globl _P0_6
                                    124 	.globl _P0_7
                                    125 	.globl _WDCTL
                                    126 	.globl _U1GCR
                                    127 	.globl _U1UCR
                                    128 	.globl _U1BAUD
                                    129 	.globl _U1DBUF
                                    130 	.globl _U1CSR
                                    131 	.globl _U0GCR
                                    132 	.globl _U0UCR
                                    133 	.globl _U0BAUD
                                    134 	.globl _U0DBUF
                                    135 	.globl _U0CSR
                                    136 	.globl _TIMIF
                                    137 	.globl _T4CC1
                                    138 	.globl _T4CCTL1
                                    139 	.globl _T4CC0
                                    140 	.globl _T4CCTL0
                                    141 	.globl _T4CTL
                                    142 	.globl _T4CNT
                                    143 	.globl _T3CC1
                                    144 	.globl _T3CCTL1
                                    145 	.globl _T3CC0
                                    146 	.globl _T3CCTL0
                                    147 	.globl _T3CTL
                                    148 	.globl _T3CNT
                                    149 	.globl _T2MSEL
                                    150 	.globl _T2IRQM
                                    151 	.globl _T2MOVF2
                                    152 	.globl _T2MOVF1
                                    153 	.globl _T2MOVF0
                                    154 	.globl _T2M1
                                    155 	.globl _T2M0
                                    156 	.globl _T2IRQF
                                    157 	.globl _T2EVTCFG
                                    158 	.globl _T2CTRL
                                    159 	.globl _T1STAT
                                    160 	.globl _T1CCTL2
                                    161 	.globl _T1CCTL1
                                    162 	.globl _T1CCTL0
                                    163 	.globl _T1CTL
                                    164 	.globl _T1CNTH
                                    165 	.globl _T1CNTL
                                    166 	.globl _T1CC2H
                                    167 	.globl _T1CC2L
                                    168 	.globl _T1CC1H
                                    169 	.globl _T1CC1L
                                    170 	.globl _T1CC0H
                                    171 	.globl _T1CC0L
                                    172 	.globl _CLKCONSTA
                                    173 	.globl _CLKCONCMD
                                    174 	.globl _SLEEPSTA
                                    175 	.globl _SLEEPCMD
                                    176 	.globl _STLOAD
                                    177 	.globl _ST2
                                    178 	.globl _ST1
                                    179 	.globl _ST0
                                    180 	.globl _RFERRF
                                    181 	.globl _RFIRQF0
                                    182 	.globl _RFST
                                    183 	.globl _RFD
                                    184 	.globl _RFIRQF1
                                    185 	.globl _PSBANK
                                    186 	.globl _FMAP
                                    187 	.globl _MEMCTR
                                    188 	.globl __XPAGE
                                    189 	.globl _MPAGE
                                    190 	.globl _PMUX
                                    191 	.globl _P2DIR
                                    192 	.globl _P1DIR
                                    193 	.globl _P0DIR
                                    194 	.globl _P2INP
                                    195 	.globl _P1INP
                                    196 	.globl _P2SEL
                                    197 	.globl _P1SEL
                                    198 	.globl _P0SEL
                                    199 	.globl _APCFG
                                    200 	.globl _PERCFG
                                    201 	.globl _P0INP
                                    202 	.globl _P2IEN
                                    203 	.globl _P1IEN
                                    204 	.globl _P0IEN
                                    205 	.globl _PICTL
                                    206 	.globl _P2IFG
                                    207 	.globl _P1IFG
                                    208 	.globl _P0IFG
                                    209 	.globl _DMAREQ
                                    210 	.globl _DMAARM
                                    211 	.globl _DMA0CFGH
                                    212 	.globl _DMA0CFGL
                                    213 	.globl _DMA1CFGH
                                    214 	.globl _DMA1CFGL
                                    215 	.globl _DMAIRQ
                                    216 	.globl _ENCCS
                                    217 	.globl _ENCDO
                                    218 	.globl _ENCDI
                                    219 	.globl _RNDH
                                    220 	.globl _RNDL
                                    221 	.globl _ADCH
                                    222 	.globl _ADCL
                                    223 	.globl _ADCCON3
                                    224 	.globl _ADCCON2
                                    225 	.globl _ADCCON1
                                    226 	.globl _B
                                    227 	.globl _IRCON2
                                    228 	.globl _ACC
                                    229 	.globl _PSW
                                    230 	.globl _IRCON
                                    231 	.globl _IP1
                                    232 	.globl _IEN1
                                    233 	.globl _IP0
                                    234 	.globl _IEN0
                                    235 	.globl _P2
                                    236 	.globl _S1CON
                                    237 	.globl _IEN2
                                    238 	.globl _S0CON
                                    239 	.globl _DPS
                                    240 	.globl _P1
                                    241 	.globl _TCON
                                    242 	.globl _PCON
                                    243 	.globl _DPH1
                                    244 	.globl _DPL1
                                    245 	.globl _DPH0
                                    246 	.globl _DPL0
                                    247 	.globl _SP
                                    248 	.globl _P0
                                    249 	.globl _X_IEEE_ADDR
                                    250 	.globl _X_INFOPAGE
                                    251 	.globl _X_P2DIR
                                    252 	.globl _X_P1DIR
                                    253 	.globl _X_P0DIR
                                    254 	.globl _X_U1GCR
                                    255 	.globl _X_U1UCR
                                    256 	.globl _X_U1BAUD
                                    257 	.globl _X_U1DBUF
                                    258 	.globl _X_U1CSR
                                    259 	.globl _X_P2INP
                                    260 	.globl _X_P1INP
                                    261 	.globl _X_P2SEL
                                    262 	.globl _X_P1SEL
                                    263 	.globl _X_P0SEL
                                    264 	.globl _X_APCFG
                                    265 	.globl _X_PERCFG
                                    266 	.globl _X_T4CC1
                                    267 	.globl _X_T4CCTL1
                                    268 	.globl _X_T4CC0
                                    269 	.globl _X_T4CCTL0
                                    270 	.globl _X_T4CTL
                                    271 	.globl _X_T4CNT
                                    272 	.globl _X_RFIRQF0
                                    273 	.globl _X_T1CCTL2
                                    274 	.globl _X_T1CCTL1
                                    275 	.globl _X_T1CCTL0
                                    276 	.globl _X_T1CTL
                                    277 	.globl _X_T1CNTH
                                    278 	.globl _X_T1CNTL
                                    279 	.globl _X_RFST
                                    280 	.globl _X_T1CC2H
                                    281 	.globl _X_T1CC2L
                                    282 	.globl _X_T1CC1H
                                    283 	.globl _X_T1CC1L
                                    284 	.globl _X_T1CC0H
                                    285 	.globl _X_T1CC0L
                                    286 	.globl _X_RFD
                                    287 	.globl _X_TIMIF
                                    288 	.globl _X_DMAREQ
                                    289 	.globl _X_DMAARM
                                    290 	.globl _X_DMA0CFGH
                                    291 	.globl _X_DMA0CFGL
                                    292 	.globl _X_DMA1CFGH
                                    293 	.globl _X_DMA1CFGL
                                    294 	.globl _X_DMAIRQ
                                    295 	.globl _X_T3CC1
                                    296 	.globl _X_T3CCTL1
                                    297 	.globl _X_T3CC0
                                    298 	.globl _X_T3CCTL0
                                    299 	.globl _X_T3CTL
                                    300 	.globl _X_T3CNT
                                    301 	.globl _X_WDCTL
                                    302 	.globl _X_MEMCTR
                                    303 	.globl _X_CLKCONCMD
                                    304 	.globl _X_U0GCR
                                    305 	.globl _X_U0UCR
                                    306 	.globl _X_T2MSEL
                                    307 	.globl _X_U0BAUD
                                    308 	.globl _X_U0DBUF
                                    309 	.globl _X_RFERRF
                                    310 	.globl _X_SLEEPCMD
                                    311 	.globl _X_RNDH
                                    312 	.globl _X_RNDL
                                    313 	.globl _X_ADCH
                                    314 	.globl _X_ADCL
                                    315 	.globl _X_ADCCON3
                                    316 	.globl _X_ADCCON2
                                    317 	.globl _X_ADCCON1
                                    318 	.globl _X_ENCCS
                                    319 	.globl _X_ENCDO
                                    320 	.globl _X_ENCDI
                                    321 	.globl _X_T1STAT
                                    322 	.globl _X_PMUX
                                    323 	.globl _X_STLOAD
                                    324 	.globl _X_P2IEN
                                    325 	.globl _X_P0IEN
                                    326 	.globl _X_T2IRQM
                                    327 	.globl _X_T2MOVF2
                                    328 	.globl _X_T2MOVF1
                                    329 	.globl _X_T2MOVF0
                                    330 	.globl _X_T2M1
                                    331 	.globl _X_T2M0
                                    332 	.globl _X_T2IRQF
                                    333 	.globl _X_P2
                                    334 	.globl _X_PSBANK
                                    335 	.globl _X_FMAP
                                    336 	.globl _X_CLKCONSTA
                                    337 	.globl _X_SLEEPSTA
                                    338 	.globl _X_T2EVTCFG
                                    339 	.globl _X_ST2
                                    340 	.globl _X_ST1
                                    341 	.globl _X_ST0
                                    342 	.globl _X_T2CTRL
                                    343 	.globl _X__XPAGE
                                    344 	.globl _X_MPAGE
                                    345 	.globl _X_RFIRQF1
                                    346 	.globl _X_P1
                                    347 	.globl _X_P0INP
                                    348 	.globl _X_P1IEN
                                    349 	.globl _X_PICTL
                                    350 	.globl _X_P2IFG
                                    351 	.globl _X_P1IFG
                                    352 	.globl _X_P0IFG
                                    353 	.globl _X_U0CSR
                                    354 	.globl _X_P0
                                    355 	.globl _USBF5
                                    356 	.globl _USBF4
                                    357 	.globl _USBF3
                                    358 	.globl _USBF2
                                    359 	.globl _USBF1
                                    360 	.globl _USBF0
                                    361 	.globl _USBCNTH
                                    362 	.globl _USBCNTL
                                    363 	.globl _USBCNT0
                                    364 	.globl _USBCSOH
                                    365 	.globl _USBCSOL
                                    366 	.globl _USBMAXO
                                    367 	.globl _USBCSIH
                                    368 	.globl _USBCSIL
                                    369 	.globl _USBCS0
                                    370 	.globl _USBMAXI
                                    371 	.globl _USBCTRL
                                    372 	.globl _USBINDEX
                                    373 	.globl _USBFRMH
                                    374 	.globl _USBFRML
                                    375 	.globl _USBCIE
                                    376 	.globl _USBOIE
                                    377 	.globl _USBIIE
                                    378 	.globl _USBCIF
                                    379 	.globl _USBOIF
                                    380 	.globl _USBIIF
                                    381 	.globl _USBPOW
                                    382 	.globl _USBADDR
                                    383 	.globl _CSPT
                                    384 	.globl _CSPZ
                                    385 	.globl _CSPY
                                    386 	.globl _CSPX
                                    387 	.globl _CSPSTAT
                                    388 	.globl _CSPCTRL
                                    389 	.globl _CSPPROG23
                                    390 	.globl _CSPPROG22
                                    391 	.globl _CSPPROG21
                                    392 	.globl _CSPPROG20
                                    393 	.globl _CSPPROG19
                                    394 	.globl _CSPPROG18
                                    395 	.globl _CSPPROG17
                                    396 	.globl _CSPPROG16
                                    397 	.globl _CSPPROG15
                                    398 	.globl _CSPPROG14
                                    399 	.globl _CSPPROG13
                                    400 	.globl _CSPPROG12
                                    401 	.globl _CSPPROG11
                                    402 	.globl _CSPPROG10
                                    403 	.globl _CSPPROG9
                                    404 	.globl _CSPPROG8
                                    405 	.globl _CSPPROG7
                                    406 	.globl _CSPPROG6
                                    407 	.globl _CSPPROG5
                                    408 	.globl _CSPPROG4
                                    409 	.globl _CSPPROG3
                                    410 	.globl _CSPPROG2
                                    411 	.globl _CSPPROG1
                                    412 	.globl _CSPPROG0
                                    413 	.globl _RFC_OBS_CTRL2
                                    414 	.globl _RFC_OBS_CTRL1
                                    415 	.globl _RFC_OBS_CTRL0
                                    416 	.globl _TXFILTCFG
                                    417 	.globl _PTEST1
                                    418 	.globl _PTEST0
                                    419 	.globl _ATEST
                                    420 	.globl _DACTEST2
                                    421 	.globl _DACTEST1
                                    422 	.globl _DACTEST0
                                    423 	.globl _MDMTEST1
                                    424 	.globl _MDMTEST0
                                    425 	.globl _ADCTEST2
                                    426 	.globl _ADCTEST1
                                    427 	.globl _ADCTEST0
                                    428 	.globl _AGCCTRL3
                                    429 	.globl _AGCCTRL2
                                    430 	.globl _AGCCTRL1
                                    431 	.globl _AGCCTRL0
                                    432 	.globl _FSCAL3
                                    433 	.globl _FSCAL2
                                    434 	.globl _FSCAL1
                                    435 	.globl _FSCAL0
                                    436 	.globl _FSCTRL
                                    437 	.globl _RXCTRL
                                    438 	.globl _FREQEST
                                    439 	.globl _MDMCTRL1
                                    440 	.globl _MDMCTRL0
                                    441 	.globl _RFRND
                                    442 	.globl _RFERRM
                                    443 	.globl _RFIRQM1
                                    444 	.globl _RFIRQM0
                                    445 	.globl _TXLAST_PTR
                                    446 	.globl _TXFIRST_PTR
                                    447 	.globl _RXP1_PTR
                                    448 	.globl _RXLAST_PTR
                                    449 	.globl _RXFIRST_PTR
                                    450 	.globl _TXFIFOCNT
                                    451 	.globl _RXFIFOCNT
                                    452 	.globl _RXFIRST
                                    453 	.globl _RSSISTAT
                                    454 	.globl _RSSI
                                    455 	.globl _CCACTRL1
                                    456 	.globl _CCACTRL0
                                    457 	.globl _FSMCTRL
                                    458 	.globl _FIFOPCTRL
                                    459 	.globl _FSMSTAT1
                                    460 	.globl _FSMSTAT0
                                    461 	.globl _TXCTRL
                                    462 	.globl _TXPOWER
                                    463 	.globl _FREQCTRL
                                    464 	.globl _FREQTUNE
                                    465 	.globl _RXMASKCLR
                                    466 	.globl _RXMASKSET
                                    467 	.globl _RXENABLE
                                    468 	.globl _FRMCTRL1
                                    469 	.globl _FRMCTRL0
                                    470 	.globl _SRCEXTEN2
                                    471 	.globl _SRCEXTEN1
                                    472 	.globl _SRCEXTEN0
                                    473 	.globl _SRCSHORTEN2
                                    474 	.globl _SRCSHORTEN1
                                    475 	.globl _SRCSHORTEN0
                                    476 	.globl _SRCMATCH
                                    477 	.globl _FRMFILT1
                                    478 	.globl _FRMFILT0
                                    479 	.globl _SHORT_ADDR1
                                    480 	.globl _SHORT_ADDR0
                                    481 	.globl _PAN_ID1
                                    482 	.globl _PAN_ID0
                                    483 	.globl _EXT_ADDR7
                                    484 	.globl _EXT_ADDR6
                                    485 	.globl _EXT_ADDR5
                                    486 	.globl _EXT_ADDR4
                                    487 	.globl _EXT_ADDR3
                                    488 	.globl _EXT_ADDR2
                                    489 	.globl _EXT_ADDR1
                                    490 	.globl _EXT_ADDR0
                                    491 	.globl _SRCSHORTPENDEN2
                                    492 	.globl _SRCSHORTPENDEN1
                                    493 	.globl _SRCSHORTPENDEN0
                                    494 	.globl _SRCEXTPENDEN2
                                    495 	.globl _SRCEXTPENDEN1
                                    496 	.globl _SRCEXTPENDEN0
                                    497 	.globl _SRCRESINDEX
                                    498 	.globl _SRCRESMASK2
                                    499 	.globl _SRCRESMASK1
                                    500 	.globl _SRCRESMASK0
                                    501 	.globl _SRC_ADDR_TABLE
                                    502 	.globl _TXFIFO
                                    503 	.globl _RXFIFO
                                    504 	.globl _RFCORE_RAM
                                    505 	.globl _CMPCTL
                                    506 	.globl _OPAMPS
                                    507 	.globl _OPAMPC
                                    508 	.globl _STCV2
                                    509 	.globl _STCV1
                                    510 	.globl _STCV0
                                    511 	.globl _STCS
                                    512 	.globl _STCC
                                    513 	.globl _T1CC4H
                                    514 	.globl _T1CC4L
                                    515 	.globl _T1CC3H
                                    516 	.globl _T1CC3L
                                    517 	.globl _XX_T1CC2H
                                    518 	.globl _XX_T1CC2L
                                    519 	.globl _XX_T1CC1H
                                    520 	.globl _XX_T1CC1L
                                    521 	.globl _XX_T1CC0H
                                    522 	.globl _XX_T1CC0L
                                    523 	.globl _T1CCTL4
                                    524 	.globl _T1CCTL3
                                    525 	.globl _XX_T1CCTL2
                                    526 	.globl _XX_T1CCTL1
                                    527 	.globl _XX_T1CCTL0
                                    528 	.globl _CLD
                                    529 	.globl _IRCTL
                                    530 	.globl _CHIPINFO1
                                    531 	.globl _CHIPINFO0
                                    532 	.globl _FWDATA
                                    533 	.globl _FADDRH
                                    534 	.globl _FADDRL
                                    535 	.globl _FCTL
                                    536 	.globl _IVCTRL
                                    537 	.globl _BATTMON
                                    538 	.globl _SRCRC
                                    539 	.globl _DBGDATA
                                    540 	.globl _TESTREG0
                                    541 	.globl _CHIPID
                                    542 	.globl _CHVER
                                    543 	.globl _OBSSEL5
                                    544 	.globl _OBSSEL4
                                    545 	.globl _OBSSEL3
                                    546 	.globl _OBSSEL2
                                    547 	.globl _OBSSEL1
                                    548 	.globl _OBSSEL0
                                    549 	.globl _I2CIO
                                    550 	.globl _I2CWC
                                    551 	.globl _I2CADDR
                                    552 	.globl _I2CDATA
                                    553 	.globl _I2CSTAT
                                    554 	.globl _I2CCFG
                                    555 	.globl _OPAMPMC
                                    556 	.globl _MONMUX
                                    557 	.globl _phase_remove
                                    558 	.globl _phase_update
                                    559 	.globl _phase_wait
                                    560 	.globl _phase_init
                                    561 ;--------------------------------------------------------
                                    562 ; special function registers
                                    563 ;--------------------------------------------------------
                                    564 	.area RSEG    (ABS,DATA)
      000000                        565 	.org 0x0000
                           000080   566 _P0	=	0x0080
                           000081   567 _SP	=	0x0081
                           000082   568 _DPL0	=	0x0082
                           000083   569 _DPH0	=	0x0083
                           000084   570 _DPL1	=	0x0084
                           000085   571 _DPH1	=	0x0085
                           000087   572 _PCON	=	0x0087
                           000088   573 _TCON	=	0x0088
                           000090   574 _P1	=	0x0090
                           000092   575 _DPS	=	0x0092
                           000098   576 _S0CON	=	0x0098
                           00009A   577 _IEN2	=	0x009a
                           00009B   578 _S1CON	=	0x009b
                           0000A0   579 _P2	=	0x00a0
                           0000A8   580 _IEN0	=	0x00a8
                           0000A9   581 _IP0	=	0x00a9
                           0000B8   582 _IEN1	=	0x00b8
                           0000B9   583 _IP1	=	0x00b9
                           0000C0   584 _IRCON	=	0x00c0
                           0000D0   585 _PSW	=	0x00d0
                           0000E0   586 _ACC	=	0x00e0
                           0000E8   587 _IRCON2	=	0x00e8
                           0000F0   588 _B	=	0x00f0
                           0000B4   589 _ADCCON1	=	0x00b4
                           0000B5   590 _ADCCON2	=	0x00b5
                           0000B6   591 _ADCCON3	=	0x00b6
                           0000BA   592 _ADCL	=	0x00ba
                           0000BB   593 _ADCH	=	0x00bb
                           0000BC   594 _RNDL	=	0x00bc
                           0000BD   595 _RNDH	=	0x00bd
                           0000B1   596 _ENCDI	=	0x00b1
                           0000B2   597 _ENCDO	=	0x00b2
                           0000B3   598 _ENCCS	=	0x00b3
                           0000D1   599 _DMAIRQ	=	0x00d1
                           0000D2   600 _DMA1CFGL	=	0x00d2
                           0000D3   601 _DMA1CFGH	=	0x00d3
                           0000D4   602 _DMA0CFGL	=	0x00d4
                           0000D5   603 _DMA0CFGH	=	0x00d5
                           0000D6   604 _DMAARM	=	0x00d6
                           0000D7   605 _DMAREQ	=	0x00d7
                           000089   606 _P0IFG	=	0x0089
                           00008A   607 _P1IFG	=	0x008a
                           00008B   608 _P2IFG	=	0x008b
                           00008C   609 _PICTL	=	0x008c
                           0000AB   610 _P0IEN	=	0x00ab
                           00008D   611 _P1IEN	=	0x008d
                           0000AC   612 _P2IEN	=	0x00ac
                           00008F   613 _P0INP	=	0x008f
                           0000F1   614 _PERCFG	=	0x00f1
                           0000F2   615 _APCFG	=	0x00f2
                           0000F3   616 _P0SEL	=	0x00f3
                           0000F4   617 _P1SEL	=	0x00f4
                           0000F5   618 _P2SEL	=	0x00f5
                           0000F6   619 _P1INP	=	0x00f6
                           0000F7   620 _P2INP	=	0x00f7
                           0000FD   621 _P0DIR	=	0x00fd
                           0000FE   622 _P1DIR	=	0x00fe
                           0000FF   623 _P2DIR	=	0x00ff
                           0000AE   624 _PMUX	=	0x00ae
                           000093   625 _MPAGE	=	0x0093
                           000093   626 __XPAGE	=	0x0093
                           0000C7   627 _MEMCTR	=	0x00c7
                           00009F   628 _FMAP	=	0x009f
                           00009F   629 _PSBANK	=	0x009f
                           000091   630 _RFIRQF1	=	0x0091
                           0000D9   631 _RFD	=	0x00d9
                           0000E1   632 _RFST	=	0x00e1
                           0000E9   633 _RFIRQF0	=	0x00e9
                           0000BF   634 _RFERRF	=	0x00bf
                           000095   635 _ST0	=	0x0095
                           000096   636 _ST1	=	0x0096
                           000097   637 _ST2	=	0x0097
                           0000AD   638 _STLOAD	=	0x00ad
                           0000BE   639 _SLEEPCMD	=	0x00be
                           00009D   640 _SLEEPSTA	=	0x009d
                           0000C6   641 _CLKCONCMD	=	0x00c6
                           00009E   642 _CLKCONSTA	=	0x009e
                           0000DA   643 _T1CC0L	=	0x00da
                           0000DB   644 _T1CC0H	=	0x00db
                           0000DC   645 _T1CC1L	=	0x00dc
                           0000DD   646 _T1CC1H	=	0x00dd
                           0000DE   647 _T1CC2L	=	0x00de
                           0000DF   648 _T1CC2H	=	0x00df
                           0000E2   649 _T1CNTL	=	0x00e2
                           0000E3   650 _T1CNTH	=	0x00e3
                           0000E4   651 _T1CTL	=	0x00e4
                           0000E5   652 _T1CCTL0	=	0x00e5
                           0000E6   653 _T1CCTL1	=	0x00e6
                           0000E7   654 _T1CCTL2	=	0x00e7
                           0000AF   655 _T1STAT	=	0x00af
                           000094   656 _T2CTRL	=	0x0094
                           00009C   657 _T2EVTCFG	=	0x009c
                           0000A1   658 _T2IRQF	=	0x00a1
                           0000A2   659 _T2M0	=	0x00a2
                           0000A3   660 _T2M1	=	0x00a3
                           0000A4   661 _T2MOVF0	=	0x00a4
                           0000A5   662 _T2MOVF1	=	0x00a5
                           0000A6   663 _T2MOVF2	=	0x00a6
                           0000A7   664 _T2IRQM	=	0x00a7
                           0000C3   665 _T2MSEL	=	0x00c3
                           0000CA   666 _T3CNT	=	0x00ca
                           0000CB   667 _T3CTL	=	0x00cb
                           0000CC   668 _T3CCTL0	=	0x00cc
                           0000CD   669 _T3CC0	=	0x00cd
                           0000CE   670 _T3CCTL1	=	0x00ce
                           0000CF   671 _T3CC1	=	0x00cf
                           0000EA   672 _T4CNT	=	0x00ea
                           0000EB   673 _T4CTL	=	0x00eb
                           0000EC   674 _T4CCTL0	=	0x00ec
                           0000ED   675 _T4CC0	=	0x00ed
                           0000EE   676 _T4CCTL1	=	0x00ee
                           0000EF   677 _T4CC1	=	0x00ef
                           0000D8   678 _TIMIF	=	0x00d8
                           000086   679 _U0CSR	=	0x0086
                           0000C1   680 _U0DBUF	=	0x00c1
                           0000C2   681 _U0BAUD	=	0x00c2
                           0000C4   682 _U0UCR	=	0x00c4
                           0000C5   683 _U0GCR	=	0x00c5
                           0000F8   684 _U1CSR	=	0x00f8
                           0000F9   685 _U1DBUF	=	0x00f9
                           0000FA   686 _U1BAUD	=	0x00fa
                           0000FB   687 _U1UCR	=	0x00fb
                           0000FC   688 _U1GCR	=	0x00fc
                           0000C9   689 _WDCTL	=	0x00c9
                                    690 ;--------------------------------------------------------
                                    691 ; special function bits
                                    692 ;--------------------------------------------------------
                                    693 	.area RSEG    (ABS,DATA)
      000000                        694 	.org 0x0000
                           000087   695 _P0_7	=	0x0087
                           000086   696 _P0_6	=	0x0086
                           000085   697 _P0_5	=	0x0085
                           000084   698 _P0_4	=	0x0084
                           000083   699 _P0_3	=	0x0083
                           000082   700 _P0_2	=	0x0082
                           000081   701 _P0_1	=	0x0081
                           000080   702 _P0_0	=	0x0080
                           00008F   703 _URX1IF	=	0x008f
                           00008D   704 _ADCIF	=	0x008d
                           00008B   705 _URX0IF	=	0x008b
                           00008A   706 _IT1	=	0x008a
                           000089   707 _RFERRIF	=	0x0089
                           000088   708 _IT0	=	0x0088
                           000097   709 _P1_7	=	0x0097
                           000096   710 _P1_6	=	0x0096
                           000095   711 _P1_5	=	0x0095
                           000094   712 _P1_4	=	0x0094
                           000093   713 _P1_3	=	0x0093
                           000092   714 _P1_2	=	0x0092
                           000091   715 _P1_1	=	0x0091
                           000090   716 _P1_0	=	0x0090
                           000099   717 _ENCIF_1	=	0x0099
                           000098   718 _ENCIF_0	=	0x0098
                           0000A7   719 _P2_7	=	0x00a7
                           0000A6   720 _P2_6	=	0x00a6
                           0000A5   721 _P2_5	=	0x00a5
                           0000A4   722 _P2_4	=	0x00a4
                           0000A3   723 _P2_3	=	0x00a3
                           0000A2   724 _P2_2	=	0x00a2
                           0000A1   725 _P2_1	=	0x00a1
                           0000A0   726 _P2_0	=	0x00a0
                           0000AF   727 _EA	=	0x00af
                           0000AD   728 _STIE	=	0x00ad
                           0000AC   729 _ENCIE	=	0x00ac
                           0000AB   730 _URX1IE	=	0x00ab
                           0000AA   731 _URX0IE	=	0x00aa
                           0000A9   732 _ADCIE	=	0x00a9
                           0000A8   733 _RFERRIE	=	0x00a8
                           0000BD   734 _P0IE	=	0x00bd
                           0000BC   735 _T4IE	=	0x00bc
                           0000BB   736 _T3IE	=	0x00bb
                           0000BA   737 _T2IE	=	0x00ba
                           0000B9   738 _T1IE	=	0x00b9
                           0000B8   739 _DMAIE	=	0x00b8
                           0000C7   740 _STIF	=	0x00c7
                           0000C5   741 _P0IF	=	0x00c5
                           0000C4   742 _T4IF	=	0x00c4
                           0000C3   743 _T3IF	=	0x00c3
                           0000C2   744 _T2IF	=	0x00c2
                           0000C1   745 _T1IF	=	0x00c1
                           0000C0   746 _DMAIF	=	0x00c0
                           0000D7   747 _CY	=	0x00d7
                           0000D6   748 _AC	=	0x00d6
                           0000D5   749 _F0	=	0x00d5
                           0000D4   750 _RS1	=	0x00d4
                           0000D3   751 _RS0	=	0x00d3
                           0000D2   752 _OV	=	0x00d2
                           0000D1   753 _F1	=	0x00d1
                           0000D0   754 _P	=	0x00d0
                           0000E7   755 _ACC_7	=	0x00e7
                           0000E6   756 _ACC_6	=	0x00e6
                           0000E5   757 _ACC_5	=	0x00e5
                           0000E4   758 _ACC_4	=	0x00e4
                           0000E3   759 _ACC_3	=	0x00e3
                           0000E2   760 _ACC_2	=	0x00e2
                           0000E1   761 _ACC_1	=	0x00e1
                           0000E0   762 _ACC_0	=	0x00e0
                           0000EC   763 _WDTIF	=	0x00ec
                           0000EB   764 _P1IF	=	0x00eb
                           0000EA   765 _UTX1IF	=	0x00ea
                           0000E9   766 _UTX0IF	=	0x00e9
                           0000E8   767 _P2IF	=	0x00e8
                           0000F7   768 _B_7	=	0x00f7
                           0000F6   769 _B_6	=	0x00f6
                           0000F5   770 _B_5	=	0x00f5
                           0000F4   771 _B_4	=	0x00f4
                           0000F3   772 _B_3	=	0x00f3
                           0000F2   773 _B_2	=	0x00f2
                           0000F1   774 _B_1	=	0x00f1
                           0000F0   775 _B_0	=	0x00f0
                           0000DE   776 _OVFIM	=	0x00de
                           0000DD   777 _T4CH1IF	=	0x00dd
                           0000DC   778 _T4CH0IF	=	0x00dc
                           0000DB   779 _T4OVFIF	=	0x00db
                           0000DA   780 _T3CH1IF	=	0x00da
                           0000D9   781 _T3CH0IF	=	0x00d9
                           0000D8   782 _T3OVFIF	=	0x00d8
                           0000FF   783 _MODE	=	0x00ff
                           0000FE   784 _RE	=	0x00fe
                           0000FD   785 _SLAVE	=	0x00fd
                           0000FC   786 _FE	=	0x00fc
                           0000FB   787 _ERR	=	0x00fb
                           0000FA   788 _RX_BYTE	=	0x00fa
                           0000F9   789 _TX_BYTE	=	0x00f9
                           0000F8   790 _ACTIVE	=	0x00f8
                                    791 ;--------------------------------------------------------
                                    792 ; overlayable register banks
                                    793 ;--------------------------------------------------------
                                    794 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        795 	.ds 8
                                    796 ;--------------------------------------------------------
                                    797 ; internal ram data
                                    798 ;--------------------------------------------------------
                                    799 	.area DSEG    (DATA)
                                    800 ;--------------------------------------------------------
                                    801 ; overlayable items in internal ram 
                                    802 ;--------------------------------------------------------
                                    803 ;--------------------------------------------------------
                                    804 ; indirectly addressable internal ram data
                                    805 ;--------------------------------------------------------
                                    806 	.area ISEG    (DATA)
                                    807 ;--------------------------------------------------------
                                    808 ; absolute internal ram data
                                    809 ;--------------------------------------------------------
                                    810 	.area IABS    (ABS,DATA)
                                    811 	.area IABS    (ABS,DATA)
                                    812 ;--------------------------------------------------------
                                    813 ; bit data
                                    814 ;--------------------------------------------------------
                                    815 	.area BSEG    (BIT)
                                    816 ;--------------------------------------------------------
                                    817 ; paged external ram data
                                    818 ;--------------------------------------------------------
                                    819 	.area PSEG    (PAG,XDATA)
                                    820 ;--------------------------------------------------------
                                    821 ; external ram data
                                    822 ;--------------------------------------------------------
                                    823 	.area XSEG    (XDATA)
                           0061A6   824 _MONMUX	=	0x61a6
                           0061A6   825 _OPAMPMC	=	0x61a6
                           006230   826 _I2CCFG	=	0x6230
                           006231   827 _I2CSTAT	=	0x6231
                           006232   828 _I2CDATA	=	0x6232
                           006233   829 _I2CADDR	=	0x6233
                           006234   830 _I2CWC	=	0x6234
                           006235   831 _I2CIO	=	0x6235
                           006243   832 _OBSSEL0	=	0x6243
                           006244   833 _OBSSEL1	=	0x6244
                           006245   834 _OBSSEL2	=	0x6245
                           006246   835 _OBSSEL3	=	0x6246
                           006247   836 _OBSSEL4	=	0x6247
                           006248   837 _OBSSEL5	=	0x6248
                           006249   838 _CHVER	=	0x6249
                           00624A   839 _CHIPID	=	0x624a
                           00624B   840 _TESTREG0	=	0x624b
                           006260   841 _DBGDATA	=	0x6260
                           006262   842 _SRCRC	=	0x6262
                           006264   843 _BATTMON	=	0x6264
                           006265   844 _IVCTRL	=	0x6265
                           006270   845 _FCTL	=	0x6270
                           006271   846 _FADDRL	=	0x6271
                           006272   847 _FADDRH	=	0x6272
                           006273   848 _FWDATA	=	0x6273
                           006276   849 _CHIPINFO0	=	0x6276
                           006277   850 _CHIPINFO1	=	0x6277
                           006281   851 _IRCTL	=	0x6281
                           006290   852 _CLD	=	0x6290
                           0062A0   853 _XX_T1CCTL0	=	0x62a0
                           0062A1   854 _XX_T1CCTL1	=	0x62a1
                           0062A2   855 _XX_T1CCTL2	=	0x62a2
                           0062A3   856 _T1CCTL3	=	0x62a3
                           0062A4   857 _T1CCTL4	=	0x62a4
                           0062A6   858 _XX_T1CC0L	=	0x62a6
                           0062A7   859 _XX_T1CC0H	=	0x62a7
                           0062A8   860 _XX_T1CC1L	=	0x62a8
                           0062A9   861 _XX_T1CC1H	=	0x62a9
                           0062AA   862 _XX_T1CC2L	=	0x62aa
                           0062AB   863 _XX_T1CC2H	=	0x62ab
                           0062AC   864 _T1CC3L	=	0x62ac
                           0062AD   865 _T1CC3H	=	0x62ad
                           0062AE   866 _T1CC4L	=	0x62ae
                           0062AF   867 _T1CC4H	=	0x62af
                           0062B0   868 _STCC	=	0x62b0
                           0062B1   869 _STCS	=	0x62b1
                           0062B2   870 _STCV0	=	0x62b2
                           0062B3   871 _STCV1	=	0x62b3
                           0062B4   872 _STCV2	=	0x62b4
                           0062C0   873 _OPAMPC	=	0x62c0
                           0062C1   874 _OPAMPS	=	0x62c1
                           0062D0   875 _CMPCTL	=	0x62d0
                           006000   876 _RFCORE_RAM	=	0x6000
                           006000   877 _RXFIFO	=	0x6000
                           006080   878 _TXFIFO	=	0x6080
                           006100   879 _SRC_ADDR_TABLE	=	0x6100
                           006160   880 _SRCRESMASK0	=	0x6160
                           006161   881 _SRCRESMASK1	=	0x6161
                           006162   882 _SRCRESMASK2	=	0x6162
                           006163   883 _SRCRESINDEX	=	0x6163
                           006164   884 _SRCEXTPENDEN0	=	0x6164
                           006165   885 _SRCEXTPENDEN1	=	0x6165
                           006166   886 _SRCEXTPENDEN2	=	0x6166
                           006167   887 _SRCSHORTPENDEN0	=	0x6167
                           006168   888 _SRCSHORTPENDEN1	=	0x6168
                           006169   889 _SRCSHORTPENDEN2	=	0x6169
                           00616A   890 _EXT_ADDR0	=	0x616a
                           00616B   891 _EXT_ADDR1	=	0x616b
                           00616C   892 _EXT_ADDR2	=	0x616c
                           00616D   893 _EXT_ADDR3	=	0x616d
                           00616E   894 _EXT_ADDR4	=	0x616e
                           00616F   895 _EXT_ADDR5	=	0x616f
                           006170   896 _EXT_ADDR6	=	0x6170
                           006171   897 _EXT_ADDR7	=	0x6171
                           006172   898 _PAN_ID0	=	0x6172
                           006173   899 _PAN_ID1	=	0x6173
                           006174   900 _SHORT_ADDR0	=	0x6174
                           006175   901 _SHORT_ADDR1	=	0x6175
                           006180   902 _FRMFILT0	=	0x6180
                           006181   903 _FRMFILT1	=	0x6181
                           006182   904 _SRCMATCH	=	0x6182
                           006183   905 _SRCSHORTEN0	=	0x6183
                           006184   906 _SRCSHORTEN1	=	0x6184
                           006185   907 _SRCSHORTEN2	=	0x6185
                           006186   908 _SRCEXTEN0	=	0x6186
                           006187   909 _SRCEXTEN1	=	0x6187
                           006188   910 _SRCEXTEN2	=	0x6188
                           006189   911 _FRMCTRL0	=	0x6189
                           00618A   912 _FRMCTRL1	=	0x618a
                           00618B   913 _RXENABLE	=	0x618b
                           00618C   914 _RXMASKSET	=	0x618c
                           00618D   915 _RXMASKCLR	=	0x618d
                           00618E   916 _FREQTUNE	=	0x618e
                           00618F   917 _FREQCTRL	=	0x618f
                           006190   918 _TXPOWER	=	0x6190
                           006191   919 _TXCTRL	=	0x6191
                           006192   920 _FSMSTAT0	=	0x6192
                           006193   921 _FSMSTAT1	=	0x6193
                           006194   922 _FIFOPCTRL	=	0x6194
                           006195   923 _FSMCTRL	=	0x6195
                           006196   924 _CCACTRL0	=	0x6196
                           006197   925 _CCACTRL1	=	0x6197
                           006198   926 _RSSI	=	0x6198
                           006199   927 _RSSISTAT	=	0x6199
                           00619A   928 _RXFIRST	=	0x619a
                           00619B   929 _RXFIFOCNT	=	0x619b
                           00619C   930 _TXFIFOCNT	=	0x619c
                           00619D   931 _RXFIRST_PTR	=	0x619d
                           00619E   932 _RXLAST_PTR	=	0x619e
                           00619F   933 _RXP1_PTR	=	0x619f
                           0061A1   934 _TXFIRST_PTR	=	0x61a1
                           0061A2   935 _TXLAST_PTR	=	0x61a2
                           0061A3   936 _RFIRQM0	=	0x61a3
                           0061A4   937 _RFIRQM1	=	0x61a4
                           0061A5   938 _RFERRM	=	0x61a5
                           0061A7   939 _RFRND	=	0x61a7
                           0061A8   940 _MDMCTRL0	=	0x61a8
                           0061A9   941 _MDMCTRL1	=	0x61a9
                           0061AA   942 _FREQEST	=	0x61aa
                           0061AB   943 _RXCTRL	=	0x61ab
                           0061AC   944 _FSCTRL	=	0x61ac
                           0061AD   945 _FSCAL0	=	0x61ad
                           0061AE   946 _FSCAL1	=	0x61ae
                           0061AF   947 _FSCAL2	=	0x61af
                           0061B0   948 _FSCAL3	=	0x61b0
                           0061B1   949 _AGCCTRL0	=	0x61b1
                           0061B2   950 _AGCCTRL1	=	0x61b2
                           0061B3   951 _AGCCTRL2	=	0x61b3
                           0061B4   952 _AGCCTRL3	=	0x61b4
                           0061B5   953 _ADCTEST0	=	0x61b5
                           0061B6   954 _ADCTEST1	=	0x61b6
                           0061B7   955 _ADCTEST2	=	0x61b7
                           0061B8   956 _MDMTEST0	=	0x61b8
                           0061B9   957 _MDMTEST1	=	0x61b9
                           0061BA   958 _DACTEST0	=	0x61ba
                           0061BB   959 _DACTEST1	=	0x61bb
                           0061BC   960 _DACTEST2	=	0x61bc
                           0061BD   961 _ATEST	=	0x61bd
                           0061BE   962 _PTEST0	=	0x61be
                           0061BF   963 _PTEST1	=	0x61bf
                           0061FA   964 _TXFILTCFG	=	0x61fa
                           0061EB   965 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   966 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   967 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   968 _CSPPROG0	=	0x61c0
                           0061C1   969 _CSPPROG1	=	0x61c1
                           0061C2   970 _CSPPROG2	=	0x61c2
                           0061C3   971 _CSPPROG3	=	0x61c3
                           0061C4   972 _CSPPROG4	=	0x61c4
                           0061C5   973 _CSPPROG5	=	0x61c5
                           0061C6   974 _CSPPROG6	=	0x61c6
                           0061C7   975 _CSPPROG7	=	0x61c7
                           0061C8   976 _CSPPROG8	=	0x61c8
                           0061C9   977 _CSPPROG9	=	0x61c9
                           0061CA   978 _CSPPROG10	=	0x61ca
                           0061CB   979 _CSPPROG11	=	0x61cb
                           0061CC   980 _CSPPROG12	=	0x61cc
                           0061CD   981 _CSPPROG13	=	0x61cd
                           0061CE   982 _CSPPROG14	=	0x61ce
                           0061CF   983 _CSPPROG15	=	0x61cf
                           0061D0   984 _CSPPROG16	=	0x61d0
                           0061D1   985 _CSPPROG17	=	0x61d1
                           0061D2   986 _CSPPROG18	=	0x61d2
                           0061D3   987 _CSPPROG19	=	0x61d3
                           0061D4   988 _CSPPROG20	=	0x61d4
                           0061D5   989 _CSPPROG21	=	0x61d5
                           0061D6   990 _CSPPROG22	=	0x61d6
                           0061D7   991 _CSPPROG23	=	0x61d7
                           0061E0   992 _CSPCTRL	=	0x61e0
                           0061E1   993 _CSPSTAT	=	0x61e1
                           0061E2   994 _CSPX	=	0x61e2
                           0061E3   995 _CSPY	=	0x61e3
                           0061E4   996 _CSPZ	=	0x61e4
                           0061E5   997 _CSPT	=	0x61e5
                           006200   998 _USBADDR	=	0x6200
                           006201   999 _USBPOW	=	0x6201
                           006202  1000 _USBIIF	=	0x6202
                           006204  1001 _USBOIF	=	0x6204
                           006206  1002 _USBCIF	=	0x6206
                           006207  1003 _USBIIE	=	0x6207
                           006209  1004 _USBOIE	=	0x6209
                           00620B  1005 _USBCIE	=	0x620b
                           00620C  1006 _USBFRML	=	0x620c
                           00620D  1007 _USBFRMH	=	0x620d
                           00620E  1008 _USBINDEX	=	0x620e
                           00620F  1009 _USBCTRL	=	0x620f
                           006210  1010 _USBMAXI	=	0x6210
                           006211  1011 _USBCS0	=	0x6211
                           006211  1012 _USBCSIL	=	0x6211
                           006212  1013 _USBCSIH	=	0x6212
                           006213  1014 _USBMAXO	=	0x6213
                           006214  1015 _USBCSOL	=	0x6214
                           006215  1016 _USBCSOH	=	0x6215
                           006216  1017 _USBCNT0	=	0x6216
                           006216  1018 _USBCNTL	=	0x6216
                           006217  1019 _USBCNTH	=	0x6217
                           006220  1020 _USBF0	=	0x6220
                           006222  1021 _USBF1	=	0x6222
                           006224  1022 _USBF2	=	0x6224
                           006226  1023 _USBF3	=	0x6226
                           006228  1024 _USBF4	=	0x6228
                           00622A  1025 _USBF5	=	0x622a
                           007080  1026 _X_P0	=	0x7080
                           007086  1027 _X_U0CSR	=	0x7086
                           007089  1028 _X_P0IFG	=	0x7089
                           00708A  1029 _X_P1IFG	=	0x708a
                           00708B  1030 _X_P2IFG	=	0x708b
                           00708C  1031 _X_PICTL	=	0x708c
                           00708D  1032 _X_P1IEN	=	0x708d
                           00708F  1033 _X_P0INP	=	0x708f
                           007090  1034 _X_P1	=	0x7090
                           007091  1035 _X_RFIRQF1	=	0x7091
                           007093  1036 _X_MPAGE	=	0x7093
                           007093  1037 _X__XPAGE	=	0x7093
                           007094  1038 _X_T2CTRL	=	0x7094
                           007095  1039 _X_ST0	=	0x7095
                           007096  1040 _X_ST1	=	0x7096
                           007097  1041 _X_ST2	=	0x7097
                           00709C  1042 _X_T2EVTCFG	=	0x709c
                           00709D  1043 _X_SLEEPSTA	=	0x709d
                           00709E  1044 _X_CLKCONSTA	=	0x709e
                           00709F  1045 _X_FMAP	=	0x709f
                           00709F  1046 _X_PSBANK	=	0x709f
                           0070A0  1047 _X_P2	=	0x70a0
                           0070A1  1048 _X_T2IRQF	=	0x70a1
                           0070A2  1049 _X_T2M0	=	0x70a2
                           0070A3  1050 _X_T2M1	=	0x70a3
                           0070A4  1051 _X_T2MOVF0	=	0x70a4
                           0070A5  1052 _X_T2MOVF1	=	0x70a5
                           0070A6  1053 _X_T2MOVF2	=	0x70a6
                           0070A7  1054 _X_T2IRQM	=	0x70a7
                           0070AB  1055 _X_P0IEN	=	0x70ab
                           0070AC  1056 _X_P2IEN	=	0x70ac
                           0070AD  1057 _X_STLOAD	=	0x70ad
                           0070AE  1058 _X_PMUX	=	0x70ae
                           0070AF  1059 _X_T1STAT	=	0x70af
                           0070B1  1060 _X_ENCDI	=	0x70b1
                           0070B2  1061 _X_ENCDO	=	0x70b2
                           0070B3  1062 _X_ENCCS	=	0x70b3
                           0070B4  1063 _X_ADCCON1	=	0x70b4
                           0070B5  1064 _X_ADCCON2	=	0x70b5
                           0070B6  1065 _X_ADCCON3	=	0x70b6
                           0070BA  1066 _X_ADCL	=	0x70ba
                           0070BB  1067 _X_ADCH	=	0x70bb
                           0070BC  1068 _X_RNDL	=	0x70bc
                           0070BD  1069 _X_RNDH	=	0x70bd
                           0070BE  1070 _X_SLEEPCMD	=	0x70be
                           0070BF  1071 _X_RFERRF	=	0x70bf
                           0070C1  1072 _X_U0DBUF	=	0x70c1
                           0070C2  1073 _X_U0BAUD	=	0x70c2
                           0070C3  1074 _X_T2MSEL	=	0x70c3
                           0070C4  1075 _X_U0UCR	=	0x70c4
                           0070C5  1076 _X_U0GCR	=	0x70c5
                           0070C6  1077 _X_CLKCONCMD	=	0x70c6
                           0070C7  1078 _X_MEMCTR	=	0x70c7
                           0070C9  1079 _X_WDCTL	=	0x70c9
                           0070CA  1080 _X_T3CNT	=	0x70ca
                           0070CB  1081 _X_T3CTL	=	0x70cb
                           0070CC  1082 _X_T3CCTL0	=	0x70cc
                           0070CD  1083 _X_T3CC0	=	0x70cd
                           0070CE  1084 _X_T3CCTL1	=	0x70ce
                           0070CF  1085 _X_T3CC1	=	0x70cf
                           0070D1  1086 _X_DMAIRQ	=	0x70d1
                           0070D2  1087 _X_DMA1CFGL	=	0x70d2
                           0070D3  1088 _X_DMA1CFGH	=	0x70d3
                           0070D4  1089 _X_DMA0CFGL	=	0x70d4
                           0070D5  1090 _X_DMA0CFGH	=	0x70d5
                           0070D6  1091 _X_DMAARM	=	0x70d6
                           0070D7  1092 _X_DMAREQ	=	0x70d7
                           0070D8  1093 _X_TIMIF	=	0x70d8
                           0070D9  1094 _X_RFD	=	0x70d9
                           0070DA  1095 _X_T1CC0L	=	0x70da
                           0070DB  1096 _X_T1CC0H	=	0x70db
                           0070DC  1097 _X_T1CC1L	=	0x70dc
                           0070DD  1098 _X_T1CC1H	=	0x70dd
                           0070DE  1099 _X_T1CC2L	=	0x70de
                           0070DF  1100 _X_T1CC2H	=	0x70df
                           0070E1  1101 _X_RFST	=	0x70e1
                           0070E2  1102 _X_T1CNTL	=	0x70e2
                           0070E3  1103 _X_T1CNTH	=	0x70e3
                           0070E4  1104 _X_T1CTL	=	0x70e4
                           0070E5  1105 _X_T1CCTL0	=	0x70e5
                           0070E6  1106 _X_T1CCTL1	=	0x70e6
                           0070E7  1107 _X_T1CCTL2	=	0x70e7
                           0070E9  1108 _X_RFIRQF0	=	0x70e9
                           0070EA  1109 _X_T4CNT	=	0x70ea
                           0070EB  1110 _X_T4CTL	=	0x70eb
                           0070EC  1111 _X_T4CCTL0	=	0x70ec
                           0070ED  1112 _X_T4CC0	=	0x70ed
                           0070EE  1113 _X_T4CCTL1	=	0x70ee
                           0070EF  1114 _X_T4CC1	=	0x70ef
                           0070F1  1115 _X_PERCFG	=	0x70f1
                           0070F2  1116 _X_APCFG	=	0x70f2
                           0070F3  1117 _X_P0SEL	=	0x70f3
                           0070F4  1118 _X_P1SEL	=	0x70f4
                           0070F5  1119 _X_P2SEL	=	0x70f5
                           0070F6  1120 _X_P1INP	=	0x70f6
                           0070F7  1121 _X_P2INP	=	0x70f7
                           0070F8  1122 _X_U1CSR	=	0x70f8
                           0070F9  1123 _X_U1DBUF	=	0x70f9
                           0070FA  1124 _X_U1BAUD	=	0x70fa
                           0070FB  1125 _X_U1UCR	=	0x70fb
                           0070FC  1126 _X_U1GCR	=	0x70fc
                           0070FD  1127 _X_P0DIR	=	0x70fd
                           0070FE  1128 _X_P1DIR	=	0x70fe
                           0070FF  1129 _X_P2DIR	=	0x70ff
                           007800  1130 _X_INFOPAGE	=	0x7800
                           00780C  1131 _X_IEEE_ADDR	=	0x780c
      000000                       1132 _queued_packets_memb_memb_count:
      000000                       1133 	.ds 8
      000008                       1134 _queued_packets_memb_memb_mem:
      000008                       1135 	.ds 256
                                   1136 ;--------------------------------------------------------
                                   1137 ; absolute external ram data
                                   1138 ;--------------------------------------------------------
                                   1139 	.area XABS    (ABS,XDATA)
                                   1140 ;--------------------------------------------------------
                                   1141 ; external initialized ram data
                                   1142 ;--------------------------------------------------------
                                   1143 	.area XISEG   (XDATA)
      000000                       1144 _queued_packets_memb:
      000000                       1145 	.ds 10
                                   1146 	.area HOME    (CODE)
                                   1147 	.area GSINIT0 (CODE)
                                   1148 	.area GSINIT1 (CODE)
                                   1149 	.area GSINIT2 (CODE)
                                   1150 	.area GSINIT3 (CODE)
                                   1151 	.area GSINIT4 (CODE)
                                   1152 	.area GSINIT5 (CODE)
                                   1153 	.area GSINIT  (CODE)
                                   1154 	.area GSFINAL (CODE)
                                   1155 	.area CSEG    (CODE)
                                   1156 ;--------------------------------------------------------
                                   1157 ; global & static initialisations
                                   1158 ;--------------------------------------------------------
                                   1159 	.area HOME    (CODE)
                                   1160 	.area GSINIT  (CODE)
                                   1161 	.area GSFINAL (CODE)
                                   1162 	.area GSINIT  (CODE)
                                   1163 ;--------------------------------------------------------
                                   1164 ; Home
                                   1165 ;--------------------------------------------------------
                                   1166 	.area HOME    (CODE)
                                   1167 	.area HOME    (CODE)
                                   1168 ;--------------------------------------------------------
                                   1169 ; code
                                   1170 ;--------------------------------------------------------
                                   1171 	.area CSEG    (CODE)
                                   1172 ;------------------------------------------------------------
                                   1173 ;Allocation info for local variables in function 'find_neighbor'
                                   1174 ;------------------------------------------------------------
                                   1175 ;addr                      Allocated to stack - sp -4
                                   1176 ;list                      Allocated to registers r5 r6 r7 
                                   1177 ;e                         Allocated to registers r5 r6 r7 
                                   1178 ;------------------------------------------------------------
                                   1179 ;	../../core/net/mac/phase.c:77: find_neighbor(const struct phase_list *list, const rimeaddr_t *addr)
                                   1180 ;	-----------------------------------------
                                   1181 ;	 function find_neighbor
                                   1182 ;	-----------------------------------------
      000000                       1183 _find_neighbor:
                           000007  1184 	ar7 = 0x07
                           000006  1185 	ar6 = 0x06
                           000005  1186 	ar5 = 0x05
                           000004  1187 	ar4 = 0x04
                           000003  1188 	ar3 = 0x03
                           000002  1189 	ar2 = 0x02
                           000001  1190 	ar1 = 0x01
                           000000  1191 	ar0 = 0x00
                                   1192 ;	../../core/net/mac/phase.c:80: for(e = list_head(*list->list); e != NULL; e = list_item_next(e)) {
      000000 12r00r00         [24] 1193 	lcall	__gptrget
      000003 FD               [12] 1194 	mov	r5,a
      000004 A3               [24] 1195 	inc	dptr
      000005 12r00r00         [24] 1196 	lcall	__gptrget
      000008 FE               [12] 1197 	mov	r6,a
      000009 A3               [24] 1198 	inc	dptr
      00000A 12r00r00         [24] 1199 	lcall	__gptrget
      00000D FF               [12] 1200 	mov	r7,a
      00000E 8D 82            [24] 1201 	mov	dpl,r5
      000010 8E 83            [24] 1202 	mov	dph,r6
      000012 8F F0            [24] 1203 	mov	b,r7
      000014 12r00r00         [24] 1204 	lcall	__gptrget
      000017 FD               [12] 1205 	mov	r5,a
      000018 A3               [24] 1206 	inc	dptr
      000019 12r00r00         [24] 1207 	lcall	__gptrget
      00001C FE               [12] 1208 	mov	r6,a
      00001D A3               [24] 1209 	inc	dptr
      00001E 12r00r00         [24] 1210 	lcall	__gptrget
      000021 FF               [12] 1211 	mov	r7,a
      000022 8D 82            [24] 1212 	mov	dpl,r5
      000024 8E 83            [24] 1213 	mov	dph,r6
      000026 8F F0            [24] 1214 	mov	b,r7
      000028 12r00r00         [24] 1215 	lcall	_list_head
      00002B AD 82            [24] 1216 	mov	r5,dpl
      00002D AE 83            [24] 1217 	mov	r6,dph
      00002F AF F0            [24] 1218 	mov	r7,b
      000031                       1219 00105$:
      000031 ED               [12] 1220 	mov	a,r5
      000032 4E               [12] 1221 	orl	a,r6
      000033 60 5D            [24] 1222 	jz	00103$
                                   1223 ;	../../core/net/mac/phase.c:81: if(rimeaddr_cmp(addr, &e->neighbor)) {
      000035 74 03            [12] 1224 	mov	a,#0x03
      000037 2D               [12] 1225 	add	a,r5
      000038 FA               [12] 1226 	mov	r2,a
      000039 E4               [12] 1227 	clr	a
      00003A 3E               [12] 1228 	addc	a,r6
      00003B FB               [12] 1229 	mov	r3,a
      00003C 8F 04            [24] 1230 	mov	ar4,r7
      00003E C0 07            [24] 1231 	push	ar7
      000040 C0 06            [24] 1232 	push	ar6
      000042 C0 05            [24] 1233 	push	ar5
      000044 C0 02            [24] 1234 	push	ar2
      000046 C0 03            [24] 1235 	push	ar3
      000048 C0 04            [24] 1236 	push	ar4
      00004A E5 81            [12] 1237 	mov	a,sp
      00004C 24 F6            [12] 1238 	add	a,#0xf6
      00004E F8               [12] 1239 	mov	r0,a
      00004F 86 82            [24] 1240 	mov	dpl,@r0
      000051 08               [12] 1241 	inc	r0
      000052 86 83            [24] 1242 	mov	dph,@r0
      000054 08               [12] 1243 	inc	r0
      000055 86 F0            [24] 1244 	mov	b,@r0
      000057 12r00r00         [24] 1245 	lcall	_rimeaddr_cmp
      00005A AB 82            [24] 1246 	mov	r3,dpl
      00005C AC 83            [24] 1247 	mov	r4,dph
      00005E 15 81            [12] 1248 	dec	sp
      000060 15 81            [12] 1249 	dec	sp
      000062 15 81            [12] 1250 	dec	sp
      000064 D0 05            [24] 1251 	pop	ar5
      000066 D0 06            [24] 1252 	pop	ar6
      000068 D0 07            [24] 1253 	pop	ar7
      00006A EB               [12] 1254 	mov	a,r3
      00006B 4C               [12] 1255 	orl	a,r4
      00006C 60 07            [24] 1256 	jz	00106$
                                   1257 ;	../../core/net/mac/phase.c:82: return e;
      00006E 8D 82            [24] 1258 	mov	dpl,r5
      000070 8E 83            [24] 1259 	mov	dph,r6
      000072 8F F0            [24] 1260 	mov	b,r7
      000074 22               [24] 1261 	ret
      000075                       1262 00106$:
                                   1263 ;	../../core/net/mac/phase.c:80: for(e = list_head(*list->list); e != NULL; e = list_item_next(e)) {
      000075 8D 02            [24] 1264 	mov	ar2,r5
      000077 8E 03            [24] 1265 	mov	ar3,r6
      000079 8F 04            [24] 1266 	mov	ar4,r7
      00007B 8A 82            [24] 1267 	mov	dpl,r2
      00007D 8B 83            [24] 1268 	mov	dph,r3
      00007F 8C F0            [24] 1269 	mov	b,r4
      000081 12r00r00         [24] 1270 	lcall	_list_item_next
      000084 AA 82            [24] 1271 	mov	r2,dpl
      000086 AB 83            [24] 1272 	mov	r3,dph
      000088 AC F0            [24] 1273 	mov	r4,b
      00008A 8A 05            [24] 1274 	mov	ar5,r2
      00008C 8B 06            [24] 1275 	mov	ar6,r3
      00008E 8C 07            [24] 1276 	mov	ar7,r4
      000090 80 9F            [24] 1277 	sjmp	00105$
      000092                       1278 00103$:
                                   1279 ;	../../core/net/mac/phase.c:85: return NULL;
      000092 90 00 00         [24] 1280 	mov	dptr,#0x0000
      000095 75 F0 00         [24] 1281 	mov	b,#0x00
                                   1282 ;	../../core/net/mac/phase.c:86: }
      000098 22               [24] 1283 	ret
                                   1284 ;------------------------------------------------------------
                                   1285 ;Allocation info for local variables in function 'phase_remove'
                                   1286 ;------------------------------------------------------------
                                   1287 ;neighbor                  Allocated to stack - sp -10
                                   1288 ;list                      Allocated to stack - sp -5
                                   1289 ;e                         Allocated to stack - sp -2
                                   1290 ;------------------------------------------------------------
                                   1291 ;	../../core/net/mac/phase.c:89: phase_remove(const struct phase_list *list, const rimeaddr_t *neighbor)
                                   1292 ;	-----------------------------------------
                                   1293 ;	 function phase_remove
                                   1294 ;	-----------------------------------------
      000099                       1295 _phase_remove:
      000099 C0 82            [24] 1296 	push	dpl
      00009B C0 83            [24] 1297 	push	dph
      00009D C0 F0            [24] 1298 	push	b
      00009F 05 81            [12] 1299 	inc	sp
      0000A1 05 81            [12] 1300 	inc	sp
      0000A3 05 81            [12] 1301 	inc	sp
                                   1302 ;	../../core/net/mac/phase.c:92: e = find_neighbor(list, neighbor);
      0000A5 E5 81            [12] 1303 	mov	a,sp
      0000A7 24 F6            [12] 1304 	add	a,#0xf6
      0000A9 F8               [12] 1305 	mov	r0,a
      0000AA E6               [12] 1306 	mov	a,@r0
      0000AB C0 E0            [24] 1307 	push	acc
      0000AD 08               [12] 1308 	inc	r0
      0000AE E6               [12] 1309 	mov	a,@r0
      0000AF C0 E0            [24] 1310 	push	acc
      0000B1 08               [12] 1311 	inc	r0
      0000B2 E6               [12] 1312 	mov	a,@r0
      0000B3 C0 E0            [24] 1313 	push	acc
      0000B5 E5 81            [12] 1314 	mov	a,sp
      0000B7 24 F8            [12] 1315 	add	a,#0xf8
      0000B9 F8               [12] 1316 	mov	r0,a
      0000BA 86 82            [24] 1317 	mov	dpl,@r0
      0000BC 08               [12] 1318 	inc	r0
      0000BD 86 83            [24] 1319 	mov	dph,@r0
      0000BF 08               [12] 1320 	inc	r0
      0000C0 86 F0            [24] 1321 	mov	b,@r0
      0000C2 12r00r00         [24] 1322 	lcall	_find_neighbor
      0000C5 AA 82            [24] 1323 	mov	r2,dpl
      0000C7 AB 83            [24] 1324 	mov	r3,dph
      0000C9 AC F0            [24] 1325 	mov	r4,b
      0000CB 15 81            [12] 1326 	dec	sp
      0000CD 15 81            [12] 1327 	dec	sp
      0000CF 15 81            [12] 1328 	dec	sp
      0000D1 A8 81            [24] 1329 	mov	r0,sp
      0000D3 18               [12] 1330 	dec	r0
      0000D4 18               [12] 1331 	dec	r0
      0000D5 A6 02            [24] 1332 	mov	@r0,ar2
      0000D7 08               [12] 1333 	inc	r0
      0000D8 A6 03            [24] 1334 	mov	@r0,ar3
      0000DA 08               [12] 1335 	inc	r0
      0000DB A6 04            [24] 1336 	mov	@r0,ar4
                                   1337 ;	../../core/net/mac/phase.c:93: if(e != NULL) {
      0000DD A8 81            [24] 1338 	mov	r0,sp
      0000DF 18               [12] 1339 	dec	r0
      0000E0 18               [12] 1340 	dec	r0
      0000E1 E6               [12] 1341 	mov	a,@r0
      0000E2 08               [12] 1342 	inc	r0
      0000E3 46               [12] 1343 	orl	a,@r0
      0000E4 70 03            [24] 1344 	jnz	00109$
      0000E6 02r01r7E         [24] 1345 	ljmp	00103$
      0000E9                       1346 00109$:
                                   1347 ;	../../core/net/mac/phase.c:94: list_remove(*list->list, e);
      0000E9 A8 81            [24] 1348 	mov	r0,sp
      0000EB 18               [12] 1349 	dec	r0
      0000EC 18               [12] 1350 	dec	r0
      0000ED 86 02            [24] 1351 	mov	ar2,@r0
      0000EF 08               [12] 1352 	inc	r0
      0000F0 86 03            [24] 1353 	mov	ar3,@r0
      0000F2 08               [12] 1354 	inc	r0
      0000F3 86 04            [24] 1355 	mov	ar4,@r0
      0000F5 E5 81            [12] 1356 	mov	a,sp
      0000F7 24 FB            [12] 1357 	add	a,#0xfb
      0000F9 F8               [12] 1358 	mov	r0,a
      0000FA 86 82            [24] 1359 	mov	dpl,@r0
      0000FC 08               [12] 1360 	inc	r0
      0000FD 86 83            [24] 1361 	mov	dph,@r0
      0000FF 08               [12] 1362 	inc	r0
      000100 86 F0            [24] 1363 	mov	b,@r0
      000102 12r00r00         [24] 1364 	lcall	__gptrget
      000105 FD               [12] 1365 	mov	r5,a
      000106 A3               [24] 1366 	inc	dptr
      000107 12r00r00         [24] 1367 	lcall	__gptrget
      00010A FE               [12] 1368 	mov	r6,a
      00010B A3               [24] 1369 	inc	dptr
      00010C 12r00r00         [24] 1370 	lcall	__gptrget
      00010F FF               [12] 1371 	mov	r7,a
      000110 8D 82            [24] 1372 	mov	dpl,r5
      000112 8E 83            [24] 1373 	mov	dph,r6
      000114 8F F0            [24] 1374 	mov	b,r7
      000116 12r00r00         [24] 1375 	lcall	__gptrget
      000119 FD               [12] 1376 	mov	r5,a
      00011A A3               [24] 1377 	inc	dptr
      00011B 12r00r00         [24] 1378 	lcall	__gptrget
      00011E FE               [12] 1379 	mov	r6,a
      00011F A3               [24] 1380 	inc	dptr
      000120 12r00r00         [24] 1381 	lcall	__gptrget
      000123 FF               [12] 1382 	mov	r7,a
      000124 C0 02            [24] 1383 	push	ar2
      000126 C0 03            [24] 1384 	push	ar3
      000128 C0 04            [24] 1385 	push	ar4
      00012A 8D 82            [24] 1386 	mov	dpl,r5
      00012C 8E 83            [24] 1387 	mov	dph,r6
      00012E 8F F0            [24] 1388 	mov	b,r7
      000130 12r00r00         [24] 1389 	lcall	_list_remove
      000133 15 81            [12] 1390 	dec	sp
      000135 15 81            [12] 1391 	dec	sp
      000137 15 81            [12] 1392 	dec	sp
                                   1393 ;	../../core/net/mac/phase.c:95: memb_free(list->memb, e);
      000139 A8 81            [24] 1394 	mov	r0,sp
      00013B 18               [12] 1395 	dec	r0
      00013C 18               [12] 1396 	dec	r0
      00013D 86 02            [24] 1397 	mov	ar2,@r0
      00013F 08               [12] 1398 	inc	r0
      000140 86 03            [24] 1399 	mov	ar3,@r0
      000142 08               [12] 1400 	inc	r0
      000143 86 04            [24] 1401 	mov	ar4,@r0
      000145 E5 81            [12] 1402 	mov	a,sp
      000147 24 FB            [12] 1403 	add	a,#0xfb
      000149 F8               [12] 1404 	mov	r0,a
      00014A 74 03            [12] 1405 	mov	a,#0x03
      00014C 26               [12] 1406 	add	a,@r0
      00014D FD               [12] 1407 	mov	r5,a
      00014E E4               [12] 1408 	clr	a
      00014F 08               [12] 1409 	inc	r0
      000150 36               [12] 1410 	addc	a,@r0
      000151 FE               [12] 1411 	mov	r6,a
      000152 08               [12] 1412 	inc	r0
      000153 86 07            [24] 1413 	mov	ar7,@r0
      000155 8D 82            [24] 1414 	mov	dpl,r5
      000157 8E 83            [24] 1415 	mov	dph,r6
      000159 8F F0            [24] 1416 	mov	b,r7
      00015B 12r00r00         [24] 1417 	lcall	__gptrget
      00015E FD               [12] 1418 	mov	r5,a
      00015F A3               [24] 1419 	inc	dptr
      000160 12r00r00         [24] 1420 	lcall	__gptrget
      000163 FE               [12] 1421 	mov	r6,a
      000164 A3               [24] 1422 	inc	dptr
      000165 12r00r00         [24] 1423 	lcall	__gptrget
      000168 FF               [12] 1424 	mov	r7,a
      000169 C0 02            [24] 1425 	push	ar2
      00016B C0 03            [24] 1426 	push	ar3
      00016D C0 04            [24] 1427 	push	ar4
      00016F 8D 82            [24] 1428 	mov	dpl,r5
      000171 8E 83            [24] 1429 	mov	dph,r6
      000173 8F F0            [24] 1430 	mov	b,r7
      000175 12r00r00         [24] 1431 	lcall	_memb_free
      000178 15 81            [12] 1432 	dec	sp
      00017A 15 81            [12] 1433 	dec	sp
      00017C 15 81            [12] 1434 	dec	sp
      00017E                       1435 00103$:
                                   1436 ;	../../core/net/mac/phase.c:97: }
      00017E E5 81            [12] 1437 	mov	a,sp
      000180 24 FA            [12] 1438 	add	a,#0xfa
      000182 F5 81            [12] 1439 	mov	sp,a
      000184 22               [24] 1440 	ret
                                   1441 ;------------------------------------------------------------
                                   1442 ;Allocation info for local variables in function 'phase_update'
                                   1443 ;------------------------------------------------------------
                                   1444 ;neighbor                  Allocated to stack - sp -10
                                   1445 ;time                      Allocated to stack - sp -12
                                   1446 ;mac_status                Allocated to stack - sp -14
                                   1447 ;list                      Allocated to stack - sp -5
                                   1448 ;e                         Allocated to registers r5 r6 r7 
                                   1449 ;sloc0                     Allocated to stack - sp -2
                                   1450 ;------------------------------------------------------------
                                   1451 ;	../../core/net/mac/phase.c:100: phase_update(const struct phase_list *list,
                                   1452 ;	-----------------------------------------
                                   1453 ;	 function phase_update
                                   1454 ;	-----------------------------------------
      000185                       1455 _phase_update:
      000185 C0 82            [24] 1456 	push	dpl
      000187 C0 83            [24] 1457 	push	dph
      000189 C0 F0            [24] 1458 	push	b
      00018B 05 81            [12] 1459 	inc	sp
      00018D 05 81            [12] 1460 	inc	sp
      00018F 05 81            [12] 1461 	inc	sp
                                   1462 ;	../../core/net/mac/phase.c:107: e = find_neighbor(list, neighbor);
      000191 E5 81            [12] 1463 	mov	a,sp
      000193 24 F6            [12] 1464 	add	a,#0xf6
      000195 F8               [12] 1465 	mov	r0,a
      000196 E6               [12] 1466 	mov	a,@r0
      000197 C0 E0            [24] 1467 	push	acc
      000199 08               [12] 1468 	inc	r0
      00019A E6               [12] 1469 	mov	a,@r0
      00019B C0 E0            [24] 1470 	push	acc
      00019D 08               [12] 1471 	inc	r0
      00019E E6               [12] 1472 	mov	a,@r0
      00019F C0 E0            [24] 1473 	push	acc
      0001A1 E5 81            [12] 1474 	mov	a,sp
      0001A3 24 F8            [12] 1475 	add	a,#0xf8
      0001A5 F8               [12] 1476 	mov	r0,a
      0001A6 86 82            [24] 1477 	mov	dpl,@r0
      0001A8 08               [12] 1478 	inc	r0
      0001A9 86 83            [24] 1479 	mov	dph,@r0
      0001AB 08               [12] 1480 	inc	r0
      0001AC 86 F0            [24] 1481 	mov	b,@r0
      0001AE 12r00r00         [24] 1482 	lcall	_find_neighbor
      0001B1 AA 82            [24] 1483 	mov	r2,dpl
      0001B3 AB 83            [24] 1484 	mov	r3,dph
      0001B5 AC F0            [24] 1485 	mov	r4,b
      0001B7 15 81            [12] 1486 	dec	sp
      0001B9 15 81            [12] 1487 	dec	sp
      0001BB 15 81            [12] 1488 	dec	sp
                                   1489 ;	../../core/net/mac/phase.c:108: if(e != NULL) {
      0001BD EA               [12] 1490 	mov	a,r2
      0001BE 4B               [12] 1491 	orl	a,r3
      0001BF 70 03            [24] 1492 	jnz	00168$
      0001C1 02r03r88         [24] 1493 	ljmp	00119$
      0001C4                       1494 00168$:
                                   1495 ;	../../core/net/mac/phase.c:109: if(mac_status == MAC_TX_OK) {
      0001C4 E5 81            [12] 1496 	mov	a,sp
      0001C6 24 F2            [12] 1497 	add	a,#0xf2
      0001C8 F8               [12] 1498 	mov	r0,a
      0001C9 E6               [12] 1499 	mov	a,@r0
      0001CA 08               [12] 1500 	inc	r0
      0001CB 46               [12] 1501 	orl	a,@r0
      0001CC 70 1E            [24] 1502 	jnz	00102$
                                   1503 ;	../../core/net/mac/phase.c:113: e->time = time;
      0001CE 74 05            [12] 1504 	mov	a,#0x05
      0001D0 2A               [12] 1505 	add	a,r2
      0001D1 FD               [12] 1506 	mov	r5,a
      0001D2 E4               [12] 1507 	clr	a
      0001D3 3B               [12] 1508 	addc	a,r3
      0001D4 FE               [12] 1509 	mov	r6,a
      0001D5 8C 07            [24] 1510 	mov	ar7,r4
      0001D7 8D 82            [24] 1511 	mov	dpl,r5
      0001D9 8E 83            [24] 1512 	mov	dph,r6
      0001DB 8F F0            [24] 1513 	mov	b,r7
      0001DD E5 81            [12] 1514 	mov	a,sp
      0001DF 24 F4            [12] 1515 	add	a,#0xf4
      0001E1 F8               [12] 1516 	mov	r0,a
      0001E2 E6               [12] 1517 	mov	a,@r0
      0001E3 12r00r00         [24] 1518 	lcall	__gptrput
      0001E6 A3               [24] 1519 	inc	dptr
      0001E7 08               [12] 1520 	inc	r0
      0001E8 E6               [12] 1521 	mov	a,@r0
      0001E9 12r00r00         [24] 1522 	lcall	__gptrput
      0001EC                       1523 00102$:
                                   1524 ;	../../core/net/mac/phase.c:118: if(mac_status == MAC_TX_NOACK) {
      0001EC E5 81            [12] 1525 	mov	a,sp
      0001EE 24 F2            [12] 1526 	add	a,#0xf2
      0001F0 F8               [12] 1527 	mov	r0,a
      0001F1 B6 02 06         [24] 1528 	cjne	@r0,#0x02,00170$
      0001F4 08               [12] 1529 	inc	r0
      0001F5 B6 00 02         [24] 1530 	cjne	@r0,#0x00,00170$
      0001F8 80 03            [24] 1531 	sjmp	00171$
      0001FA                       1532 00170$:
      0001FA 02r03r65         [24] 1533 	ljmp	00111$
      0001FD                       1534 00171$:
                                   1535 ;	../../core/net/mac/phase.c:120: e->noacks++;
      0001FD 74 07            [12] 1536 	mov	a,#0x07
      0001FF 2A               [12] 1537 	add	a,r2
      000200 FD               [12] 1538 	mov	r5,a
      000201 E4               [12] 1539 	clr	a
      000202 3B               [12] 1540 	addc	a,r3
      000203 FE               [12] 1541 	mov	r6,a
      000204 8C 07            [24] 1542 	mov	ar7,r4
      000206 C0 02            [24] 1543 	push	ar2
      000208 C0 03            [24] 1544 	push	ar3
      00020A C0 04            [24] 1545 	push	ar4
      00020C 8D 82            [24] 1546 	mov	dpl,r5
      00020E 8E 83            [24] 1547 	mov	dph,r6
      000210 8F F0            [24] 1548 	mov	b,r7
      000212 12r00r00         [24] 1549 	lcall	__gptrget
      000215 FC               [12] 1550 	mov	r4,a
      000216 0C               [12] 1551 	inc	r4
      000217 8D 82            [24] 1552 	mov	dpl,r5
      000219 8E 83            [24] 1553 	mov	dph,r6
      00021B 8F F0            [24] 1554 	mov	b,r7
      00021D EC               [12] 1555 	mov	a,r4
      00021E 12r00r00         [24] 1556 	lcall	__gptrput
                                   1557 ;	../../core/net/mac/phase.c:121: if(e->noacks == 1) {
      000221 BC 01 02         [24] 1558 	cjne	r4,#0x01,00172$
      000224 80 08            [24] 1559 	sjmp	00173$
      000226                       1560 00172$:
      000226 D0 04            [24] 1561 	pop	ar4
      000228 D0 03            [24] 1562 	pop	ar3
      00022A D0 02            [24] 1563 	pop	ar2
      00022C 80 47            [24] 1564 	sjmp	00104$
      00022E                       1565 00173$:
      00022E D0 04            [24] 1566 	pop	ar4
      000230 D0 03            [24] 1567 	pop	ar3
      000232 D0 02            [24] 1568 	pop	ar2
                                   1569 ;	../../core/net/mac/phase.c:122: timer_set(&e->noacks_timer, MAX_NOACKS_TIME);
      000234 C0 05            [24] 1570 	push	ar5
      000236 C0 06            [24] 1571 	push	ar6
      000238 C0 07            [24] 1572 	push	ar7
      00023A 74 08            [12] 1573 	mov	a,#0x08
      00023C 2A               [12] 1574 	add	a,r2
      00023D FD               [12] 1575 	mov	r5,a
      00023E E4               [12] 1576 	clr	a
      00023F 3B               [12] 1577 	addc	a,r3
      000240 FE               [12] 1578 	mov	r6,a
      000241 8C 07            [24] 1579 	mov	ar7,r4
      000243 C0 07            [24] 1580 	push	ar7
      000245 C0 06            [24] 1581 	push	ar6
      000247 C0 05            [24] 1582 	push	ar5
      000249 C0 04            [24] 1583 	push	ar4
      00024B C0 03            [24] 1584 	push	ar3
      00024D C0 02            [24] 1585 	push	ar2
      00024F E4               [12] 1586 	clr	a
      000250 C0 E0            [24] 1587 	push	acc
      000252 74 0F            [12] 1588 	mov	a,#0x0f
      000254 C0 E0            [24] 1589 	push	acc
      000256 8D 82            [24] 1590 	mov	dpl,r5
      000258 8E 83            [24] 1591 	mov	dph,r6
      00025A 8F F0            [24] 1592 	mov	b,r7
      00025C 12r00r00         [24] 1593 	lcall	_timer_set
      00025F 15 81            [12] 1594 	dec	sp
      000261 15 81            [12] 1595 	dec	sp
      000263 D0 02            [24] 1596 	pop	ar2
      000265 D0 03            [24] 1597 	pop	ar3
      000267 D0 04            [24] 1598 	pop	ar4
      000269 D0 05            [24] 1599 	pop	ar5
      00026B D0 06            [24] 1600 	pop	ar6
      00026D D0 07            [24] 1601 	pop	ar7
                                   1602 ;	../../core/net/mac/phase.c:149: list_push(*list->list, e);
      00026F D0 07            [24] 1603 	pop	ar7
      000271 D0 06            [24] 1604 	pop	ar6
      000273 D0 05            [24] 1605 	pop	ar5
                                   1606 ;	../../core/net/mac/phase.c:122: timer_set(&e->noacks_timer, MAX_NOACKS_TIME);
      000275                       1607 00104$:
                                   1608 ;	../../core/net/mac/phase.c:124: if(e->noacks >= MAX_NOACKS || timer_expired(&e->noacks_timer)) {
      000275 8D 82            [24] 1609 	mov	dpl,r5
      000277 8E 83            [24] 1610 	mov	dph,r6
      000279 8F F0            [24] 1611 	mov	b,r7
      00027B 12r00r00         [24] 1612 	lcall	__gptrget
      00027E FD               [12] 1613 	mov	r5,a
      00027F BD 10 00         [24] 1614 	cjne	r5,#0x10,00174$
      000282                       1615 00174$:
      000282 50 2A            [24] 1616 	jnc	00105$
      000284 74 08            [12] 1617 	mov	a,#0x08
      000286 2A               [12] 1618 	add	a,r2
      000287 FD               [12] 1619 	mov	r5,a
      000288 E4               [12] 1620 	clr	a
      000289 3B               [12] 1621 	addc	a,r3
      00028A FE               [12] 1622 	mov	r6,a
      00028B 8C 07            [24] 1623 	mov	ar7,r4
      00028D 8D 82            [24] 1624 	mov	dpl,r5
      00028F 8E 83            [24] 1625 	mov	dph,r6
      000291 8F F0            [24] 1626 	mov	b,r7
      000293 C0 04            [24] 1627 	push	ar4
      000295 C0 03            [24] 1628 	push	ar3
      000297 C0 02            [24] 1629 	push	ar2
      000299 12r00r00         [24] 1630 	lcall	_timer_expired
      00029C E5 82            [12] 1631 	mov	a,dpl
      00029E 85 83 F0         [24] 1632 	mov	b,dph
      0002A1 D0 02            [24] 1633 	pop	ar2
      0002A3 D0 03            [24] 1634 	pop	ar3
      0002A5 D0 04            [24] 1635 	pop	ar4
      0002A7 45 F0            [12] 1636 	orl	a,b
      0002A9 70 03            [24] 1637 	jnz	00176$
      0002AB 02r04rC0         [24] 1638 	ljmp	00121$
      0002AE                       1639 00176$:
      0002AE                       1640 00105$:
                                   1641 ;	../../core/net/mac/phase.c:126: list_remove(*list->list, e);
      0002AE A8 81            [24] 1642 	mov	r0,sp
      0002B0 18               [12] 1643 	dec	r0
      0002B1 18               [12] 1644 	dec	r0
      0002B2 A6 02            [24] 1645 	mov	@r0,ar2
      0002B4 08               [12] 1646 	inc	r0
      0002B5 A6 03            [24] 1647 	mov	@r0,ar3
      0002B7 08               [12] 1648 	inc	r0
      0002B8 A6 04            [24] 1649 	mov	@r0,ar4
      0002BA E5 81            [12] 1650 	mov	a,sp
      0002BC 24 FB            [12] 1651 	add	a,#0xfb
      0002BE F8               [12] 1652 	mov	r0,a
      0002BF 86 82            [24] 1653 	mov	dpl,@r0
      0002C1 08               [12] 1654 	inc	r0
      0002C2 86 83            [24] 1655 	mov	dph,@r0
      0002C4 08               [12] 1656 	inc	r0
      0002C5 86 F0            [24] 1657 	mov	b,@r0
      0002C7 12r00r00         [24] 1658 	lcall	__gptrget
      0002CA FD               [12] 1659 	mov	r5,a
      0002CB A3               [24] 1660 	inc	dptr
      0002CC 12r00r00         [24] 1661 	lcall	__gptrget
      0002CF FE               [12] 1662 	mov	r6,a
      0002D0 A3               [24] 1663 	inc	dptr
      0002D1 12r00r00         [24] 1664 	lcall	__gptrget
      0002D4 FF               [12] 1665 	mov	r7,a
      0002D5 8D 82            [24] 1666 	mov	dpl,r5
      0002D7 8E 83            [24] 1667 	mov	dph,r6
      0002D9 8F F0            [24] 1668 	mov	b,r7
      0002DB 12r00r00         [24] 1669 	lcall	__gptrget
      0002DE FD               [12] 1670 	mov	r5,a
      0002DF A3               [24] 1671 	inc	dptr
      0002E0 12r00r00         [24] 1672 	lcall	__gptrget
      0002E3 FE               [12] 1673 	mov	r6,a
      0002E4 A3               [24] 1674 	inc	dptr
      0002E5 12r00r00         [24] 1675 	lcall	__gptrget
      0002E8 FF               [12] 1676 	mov	r7,a
      0002E9 C0 04            [24] 1677 	push	ar4
      0002EB C0 03            [24] 1678 	push	ar3
      0002ED C0 02            [24] 1679 	push	ar2
      0002EF E5 81            [12] 1680 	mov	a,sp
      0002F1 24 FB            [12] 1681 	add	a,#0xfb
      0002F3 F8               [12] 1682 	mov	r0,a
      0002F4 E6               [12] 1683 	mov	a,@r0
      0002F5 C0 E0            [24] 1684 	push	acc
      0002F7 08               [12] 1685 	inc	r0
      0002F8 E6               [12] 1686 	mov	a,@r0
      0002F9 C0 E0            [24] 1687 	push	acc
      0002FB 08               [12] 1688 	inc	r0
      0002FC E6               [12] 1689 	mov	a,@r0
      0002FD C0 E0            [24] 1690 	push	acc
      0002FF 8D 82            [24] 1691 	mov	dpl,r5
      000301 8E 83            [24] 1692 	mov	dph,r6
      000303 8F F0            [24] 1693 	mov	b,r7
      000305 12r00r00         [24] 1694 	lcall	_list_remove
      000308 15 81            [12] 1695 	dec	sp
      00030A 15 81            [12] 1696 	dec	sp
      00030C 15 81            [12] 1697 	dec	sp
      00030E D0 02            [24] 1698 	pop	ar2
      000310 D0 03            [24] 1699 	pop	ar3
      000312 D0 04            [24] 1700 	pop	ar4
                                   1701 ;	../../core/net/mac/phase.c:127: memb_free(list->memb, e);
      000314 A8 81            [24] 1702 	mov	r0,sp
      000316 18               [12] 1703 	dec	r0
      000317 18               [12] 1704 	dec	r0
      000318 A6 02            [24] 1705 	mov	@r0,ar2
      00031A 08               [12] 1706 	inc	r0
      00031B A6 03            [24] 1707 	mov	@r0,ar3
      00031D 08               [12] 1708 	inc	r0
      00031E A6 04            [24] 1709 	mov	@r0,ar4
      000320 E5 81            [12] 1710 	mov	a,sp
      000322 24 FB            [12] 1711 	add	a,#0xfb
      000324 F8               [12] 1712 	mov	r0,a
      000325 74 03            [12] 1713 	mov	a,#0x03
      000327 26               [12] 1714 	add	a,@r0
      000328 FD               [12] 1715 	mov	r5,a
      000329 E4               [12] 1716 	clr	a
      00032A 08               [12] 1717 	inc	r0
      00032B 36               [12] 1718 	addc	a,@r0
      00032C FE               [12] 1719 	mov	r6,a
      00032D 08               [12] 1720 	inc	r0
      00032E 86 07            [24] 1721 	mov	ar7,@r0
      000330 8D 82            [24] 1722 	mov	dpl,r5
      000332 8E 83            [24] 1723 	mov	dph,r6
      000334 8F F0            [24] 1724 	mov	b,r7
      000336 12r00r00         [24] 1725 	lcall	__gptrget
      000339 FD               [12] 1726 	mov	r5,a
      00033A A3               [24] 1727 	inc	dptr
      00033B 12r00r00         [24] 1728 	lcall	__gptrget
      00033E FE               [12] 1729 	mov	r6,a
      00033F A3               [24] 1730 	inc	dptr
      000340 12r00r00         [24] 1731 	lcall	__gptrget
      000343 FF               [12] 1732 	mov	r7,a
      000344 A8 81            [24] 1733 	mov	r0,sp
      000346 18               [12] 1734 	dec	r0
      000347 18               [12] 1735 	dec	r0
      000348 E6               [12] 1736 	mov	a,@r0
      000349 C0 E0            [24] 1737 	push	acc
      00034B 08               [12] 1738 	inc	r0
      00034C E6               [12] 1739 	mov	a,@r0
      00034D C0 E0            [24] 1740 	push	acc
      00034F 08               [12] 1741 	inc	r0
      000350 E6               [12] 1742 	mov	a,@r0
      000351 C0 E0            [24] 1743 	push	acc
      000353 8D 82            [24] 1744 	mov	dpl,r5
      000355 8E 83            [24] 1745 	mov	dph,r6
      000357 8F F0            [24] 1746 	mov	b,r7
      000359 12r00r00         [24] 1747 	lcall	_memb_free
      00035C 15 81            [12] 1748 	dec	sp
      00035E 15 81            [12] 1749 	dec	sp
      000360 15 81            [12] 1750 	dec	sp
                                   1751 ;	../../core/net/mac/phase.c:128: return;
      000362 02r04rC0         [24] 1752 	ljmp	00121$
      000365                       1753 00111$:
                                   1754 ;	../../core/net/mac/phase.c:130: } else if(mac_status == MAC_TX_OK) {
      000365 E5 81            [12] 1755 	mov	a,sp
      000367 24 F2            [12] 1756 	add	a,#0xf2
      000369 F8               [12] 1757 	mov	r0,a
      00036A E6               [12] 1758 	mov	a,@r0
      00036B 08               [12] 1759 	inc	r0
      00036C 46               [12] 1760 	orl	a,@r0
      00036D 60 03            [24] 1761 	jz	00177$
      00036F 02r04rC0         [24] 1762 	ljmp	00121$
      000372                       1763 00177$:
                                   1764 ;	../../core/net/mac/phase.c:131: e->noacks = 0;
      000372 74 07            [12] 1765 	mov	a,#0x07
      000374 2A               [12] 1766 	add	a,r2
      000375 FD               [12] 1767 	mov	r5,a
      000376 E4               [12] 1768 	clr	a
      000377 3B               [12] 1769 	addc	a,r3
      000378 FE               [12] 1770 	mov	r6,a
      000379 8C 07            [24] 1771 	mov	ar7,r4
      00037B 8D 82            [24] 1772 	mov	dpl,r5
      00037D 8E 83            [24] 1773 	mov	dph,r6
      00037F 8F F0            [24] 1774 	mov	b,r7
      000381 E4               [12] 1775 	clr	a
      000382 12r00r00         [24] 1776 	lcall	__gptrput
      000385 02r04rC0         [24] 1777 	ljmp	00121$
      000388                       1778 00119$:
                                   1779 ;	../../core/net/mac/phase.c:135: if(mac_status == MAC_TX_OK && e == NULL) {
      000388 E5 81            [12] 1780 	mov	a,sp
      00038A 24 F2            [12] 1781 	add	a,#0xf2
      00038C F8               [12] 1782 	mov	r0,a
      00038D E6               [12] 1783 	mov	a,@r0
      00038E 08               [12] 1784 	inc	r0
      00038F 46               [12] 1785 	orl	a,@r0
      000390 60 03            [24] 1786 	jz	00178$
      000392 02r04rC0         [24] 1787 	ljmp	00121$
      000395                       1788 00178$:
      000395 EA               [12] 1789 	mov	a,r2
      000396 4B               [12] 1790 	orl	a,r3
      000397 60 03            [24] 1791 	jz	00179$
      000399 02r04rC0         [24] 1792 	ljmp	00121$
      00039C                       1793 00179$:
                                   1794 ;	../../core/net/mac/phase.c:136: e = memb_alloc(list->memb);
      00039C E5 81            [12] 1795 	mov	a,sp
      00039E 24 FB            [12] 1796 	add	a,#0xfb
      0003A0 F8               [12] 1797 	mov	r0,a
      0003A1 74 03            [12] 1798 	mov	a,#0x03
      0003A3 26               [12] 1799 	add	a,@r0
      0003A4 FD               [12] 1800 	mov	r5,a
      0003A5 E4               [12] 1801 	clr	a
      0003A6 08               [12] 1802 	inc	r0
      0003A7 36               [12] 1803 	addc	a,@r0
      0003A8 FE               [12] 1804 	mov	r6,a
      0003A9 08               [12] 1805 	inc	r0
      0003AA 86 07            [24] 1806 	mov	ar7,@r0
      0003AC 8D 82            [24] 1807 	mov	dpl,r5
      0003AE 8E 83            [24] 1808 	mov	dph,r6
      0003B0 8F F0            [24] 1809 	mov	b,r7
      0003B2 12r00r00         [24] 1810 	lcall	__gptrget
      0003B5 FD               [12] 1811 	mov	r5,a
      0003B6 A3               [24] 1812 	inc	dptr
      0003B7 12r00r00         [24] 1813 	lcall	__gptrget
      0003BA FE               [12] 1814 	mov	r6,a
      0003BB A3               [24] 1815 	inc	dptr
      0003BC 12r00r00         [24] 1816 	lcall	__gptrget
      0003BF FF               [12] 1817 	mov	r7,a
      0003C0 8D 82            [24] 1818 	mov	dpl,r5
      0003C2 8E 83            [24] 1819 	mov	dph,r6
      0003C4 8F F0            [24] 1820 	mov	b,r7
      0003C6 12r00r00         [24] 1821 	lcall	_memb_alloc
      0003C9 AD 82            [24] 1822 	mov	r5,dpl
      0003CB AE 83            [24] 1823 	mov	r6,dph
      0003CD AF F0            [24] 1824 	mov	r7,b
                                   1825 ;	../../core/net/mac/phase.c:137: if(e == NULL) {
      0003CF ED               [12] 1826 	mov	a,r5
      0003D0 4E               [12] 1827 	orl	a,r6
      0003D1 70 44            [24] 1828 	jnz	00114$
                                   1829 ;	../../core/net/mac/phase.c:141: e = list_chop(*list->list);
      0003D3 E5 81            [12] 1830 	mov	a,sp
      0003D5 24 FB            [12] 1831 	add	a,#0xfb
      0003D7 F8               [12] 1832 	mov	r0,a
      0003D8 86 82            [24] 1833 	mov	dpl,@r0
      0003DA 08               [12] 1834 	inc	r0
      0003DB 86 83            [24] 1835 	mov	dph,@r0
      0003DD 08               [12] 1836 	inc	r0
      0003DE 86 F0            [24] 1837 	mov	b,@r0
      0003E0 12r00r00         [24] 1838 	lcall	__gptrget
      0003E3 FA               [12] 1839 	mov	r2,a
      0003E4 A3               [24] 1840 	inc	dptr
      0003E5 12r00r00         [24] 1841 	lcall	__gptrget
      0003E8 FB               [12] 1842 	mov	r3,a
      0003E9 A3               [24] 1843 	inc	dptr
      0003EA 12r00r00         [24] 1844 	lcall	__gptrget
      0003ED FC               [12] 1845 	mov	r4,a
      0003EE 8A 82            [24] 1846 	mov	dpl,r2
      0003F0 8B 83            [24] 1847 	mov	dph,r3
      0003F2 8C F0            [24] 1848 	mov	b,r4
      0003F4 12r00r00         [24] 1849 	lcall	__gptrget
      0003F7 FA               [12] 1850 	mov	r2,a
      0003F8 A3               [24] 1851 	inc	dptr
      0003F9 12r00r00         [24] 1852 	lcall	__gptrget
      0003FC FB               [12] 1853 	mov	r3,a
      0003FD A3               [24] 1854 	inc	dptr
      0003FE 12r00r00         [24] 1855 	lcall	__gptrget
      000401 FC               [12] 1856 	mov	r4,a
      000402 8A 82            [24] 1857 	mov	dpl,r2
      000404 8B 83            [24] 1858 	mov	dph,r3
      000406 8C F0            [24] 1859 	mov	b,r4
      000408 12r00r00         [24] 1860 	lcall	_list_chop
      00040B AA 82            [24] 1861 	mov	r2,dpl
      00040D AB 83            [24] 1862 	mov	r3,dph
      00040F AC F0            [24] 1863 	mov	r4,b
      000411 8A 05            [24] 1864 	mov	ar5,r2
      000413 8B 06            [24] 1865 	mov	ar6,r3
      000415 8C 07            [24] 1866 	mov	ar7,r4
      000417                       1867 00114$:
                                   1868 ;	../../core/net/mac/phase.c:143: rimeaddr_copy(&e->neighbor, neighbor);
      000417 74 03            [12] 1869 	mov	a,#0x03
      000419 2D               [12] 1870 	add	a,r5
      00041A FA               [12] 1871 	mov	r2,a
      00041B E4               [12] 1872 	clr	a
      00041C 3E               [12] 1873 	addc	a,r6
      00041D FB               [12] 1874 	mov	r3,a
      00041E 8F 04            [24] 1875 	mov	ar4,r7
      000420 C0 07            [24] 1876 	push	ar7
      000422 C0 06            [24] 1877 	push	ar6
      000424 C0 05            [24] 1878 	push	ar5
      000426 E5 81            [12] 1879 	mov	a,sp
      000428 24 F3            [12] 1880 	add	a,#0xf3
      00042A F8               [12] 1881 	mov	r0,a
      00042B E6               [12] 1882 	mov	a,@r0
      00042C C0 E0            [24] 1883 	push	acc
      00042E 08               [12] 1884 	inc	r0
      00042F E6               [12] 1885 	mov	a,@r0
      000430 C0 E0            [24] 1886 	push	acc
      000432 08               [12] 1887 	inc	r0
      000433 E6               [12] 1888 	mov	a,@r0
      000434 C0 E0            [24] 1889 	push	acc
      000436 8A 82            [24] 1890 	mov	dpl,r2
      000438 8B 83            [24] 1891 	mov	dph,r3
      00043A 8C F0            [24] 1892 	mov	b,r4
      00043C 12r00r00         [24] 1893 	lcall	_rimeaddr_copy
      00043F 15 81            [12] 1894 	dec	sp
      000441 15 81            [12] 1895 	dec	sp
      000443 15 81            [12] 1896 	dec	sp
      000445 D0 05            [24] 1897 	pop	ar5
      000447 D0 06            [24] 1898 	pop	ar6
      000449 D0 07            [24] 1899 	pop	ar7
                                   1900 ;	../../core/net/mac/phase.c:144: e->time = time;
      00044B 74 05            [12] 1901 	mov	a,#0x05
      00044D 2D               [12] 1902 	add	a,r5
      00044E FA               [12] 1903 	mov	r2,a
      00044F E4               [12] 1904 	clr	a
      000450 3E               [12] 1905 	addc	a,r6
      000451 FB               [12] 1906 	mov	r3,a
      000452 8F 04            [24] 1907 	mov	ar4,r7
      000454 8A 82            [24] 1908 	mov	dpl,r2
      000456 8B 83            [24] 1909 	mov	dph,r3
      000458 8C F0            [24] 1910 	mov	b,r4
      00045A E5 81            [12] 1911 	mov	a,sp
      00045C 24 F4            [12] 1912 	add	a,#0xf4
      00045E F8               [12] 1913 	mov	r0,a
      00045F E6               [12] 1914 	mov	a,@r0
      000460 12r00r00         [24] 1915 	lcall	__gptrput
      000463 A3               [24] 1916 	inc	dptr
      000464 08               [12] 1917 	inc	r0
      000465 E6               [12] 1918 	mov	a,@r0
      000466 12r00r00         [24] 1919 	lcall	__gptrput
                                   1920 ;	../../core/net/mac/phase.c:148: e->noacks = 0;
      000469 74 07            [12] 1921 	mov	a,#0x07
      00046B 2D               [12] 1922 	add	a,r5
      00046C FA               [12] 1923 	mov	r2,a
      00046D E4               [12] 1924 	clr	a
      00046E 3E               [12] 1925 	addc	a,r6
      00046F FB               [12] 1926 	mov	r3,a
      000470 8F 04            [24] 1927 	mov	ar4,r7
      000472 8A 82            [24] 1928 	mov	dpl,r2
      000474 8B 83            [24] 1929 	mov	dph,r3
      000476 8C F0            [24] 1930 	mov	b,r4
      000478 E4               [12] 1931 	clr	a
      000479 12r00r00         [24] 1932 	lcall	__gptrput
                                   1933 ;	../../core/net/mac/phase.c:149: list_push(*list->list, e);
      00047C E5 81            [12] 1934 	mov	a,sp
      00047E 24 FB            [12] 1935 	add	a,#0xfb
      000480 F8               [12] 1936 	mov	r0,a
      000481 86 82            [24] 1937 	mov	dpl,@r0
      000483 08               [12] 1938 	inc	r0
      000484 86 83            [24] 1939 	mov	dph,@r0
      000486 08               [12] 1940 	inc	r0
      000487 86 F0            [24] 1941 	mov	b,@r0
      000489 12r00r00         [24] 1942 	lcall	__gptrget
      00048C FA               [12] 1943 	mov	r2,a
      00048D A3               [24] 1944 	inc	dptr
      00048E 12r00r00         [24] 1945 	lcall	__gptrget
      000491 FB               [12] 1946 	mov	r3,a
      000492 A3               [24] 1947 	inc	dptr
      000493 12r00r00         [24] 1948 	lcall	__gptrget
      000496 FC               [12] 1949 	mov	r4,a
      000497 8A 82            [24] 1950 	mov	dpl,r2
      000499 8B 83            [24] 1951 	mov	dph,r3
      00049B 8C F0            [24] 1952 	mov	b,r4
      00049D 12r00r00         [24] 1953 	lcall	__gptrget
      0004A0 FA               [12] 1954 	mov	r2,a
      0004A1 A3               [24] 1955 	inc	dptr
      0004A2 12r00r00         [24] 1956 	lcall	__gptrget
      0004A5 FB               [12] 1957 	mov	r3,a
      0004A6 A3               [24] 1958 	inc	dptr
      0004A7 12r00r00         [24] 1959 	lcall	__gptrget
      0004AA FC               [12] 1960 	mov	r4,a
      0004AB C0 05            [24] 1961 	push	ar5
      0004AD C0 06            [24] 1962 	push	ar6
      0004AF C0 07            [24] 1963 	push	ar7
      0004B1 8A 82            [24] 1964 	mov	dpl,r2
      0004B3 8B 83            [24] 1965 	mov	dph,r3
      0004B5 8C F0            [24] 1966 	mov	b,r4
      0004B7 12r00r00         [24] 1967 	lcall	_list_push
      0004BA 15 81            [12] 1968 	dec	sp
      0004BC 15 81            [12] 1969 	dec	sp
      0004BE 15 81            [12] 1970 	dec	sp
      0004C0                       1971 00121$:
                                   1972 ;	../../core/net/mac/phase.c:152: }
      0004C0 E5 81            [12] 1973 	mov	a,sp
      0004C2 24 FA            [12] 1974 	add	a,#0xfa
      0004C4 F5 81            [12] 1975 	mov	sp,a
      0004C6 22               [24] 1976 	ret
                                   1977 ;------------------------------------------------------------
                                   1978 ;Allocation info for local variables in function 'send_packet'
                                   1979 ;------------------------------------------------------------
                                   1980 ;ptr                       Allocated to registers r5 r6 r7 
                                   1981 ;p                         Allocated to stack - sp -2
                                   1982 ;sloc0                     Allocated to stack - sp -8
                                   1983 ;sloc1                     Allocated to stack - sp -5
                                   1984 ;------------------------------------------------------------
                                   1985 ;	../../core/net/mac/phase.c:155: send_packet(void *ptr)
                                   1986 ;	-----------------------------------------
                                   1987 ;	 function send_packet
                                   1988 ;	-----------------------------------------
      0004C7                       1989 _send_packet:
      0004C7 E5 81            [12] 1990 	mov	a,sp
      0004C9 24 09            [12] 1991 	add	a,#0x09
      0004CB F5 81            [12] 1992 	mov	sp,a
      0004CD AD 82            [24] 1993 	mov	r5,dpl
      0004CF AE 83            [24] 1994 	mov	r6,dph
      0004D1 AF F0            [24] 1995 	mov	r7,b
                                   1996 ;	../../core/net/mac/phase.c:157: struct phase_queueitem *p = ptr;
      0004D3 A8 81            [24] 1997 	mov	r0,sp
      0004D5 18               [12] 1998 	dec	r0
      0004D6 18               [12] 1999 	dec	r0
      0004D7 A6 05            [24] 2000 	mov	@r0,ar5
      0004D9 08               [12] 2001 	inc	r0
      0004DA A6 06            [24] 2002 	mov	@r0,ar6
      0004DC 08               [12] 2003 	inc	r0
      0004DD A6 07            [24] 2004 	mov	@r0,ar7
                                   2005 ;	../../core/net/mac/phase.c:159: if(p->buf_list == NULL) {
      0004DF A8 81            [24] 2006 	mov	r0,sp
      0004E1 18               [12] 2007 	dec	r0
      0004E2 18               [12] 2008 	dec	r0
      0004E3 74 1D            [12] 2009 	mov	a,#0x1d
      0004E5 26               [12] 2010 	add	a,@r0
      0004E6 FA               [12] 2011 	mov	r2,a
      0004E7 E4               [12] 2012 	clr	a
      0004E8 08               [12] 2013 	inc	r0
      0004E9 36               [12] 2014 	addc	a,@r0
      0004EA FB               [12] 2015 	mov	r3,a
      0004EB 08               [12] 2016 	inc	r0
      0004EC 86 04            [24] 2017 	mov	ar4,@r0
      0004EE 8A 82            [24] 2018 	mov	dpl,r2
      0004F0 8B 83            [24] 2019 	mov	dph,r3
      0004F2 8C F0            [24] 2020 	mov	b,r4
      0004F4 12r00r00         [24] 2021 	lcall	__gptrget
      0004F7 FA               [12] 2022 	mov	r2,a
      0004F8 A3               [24] 2023 	inc	dptr
      0004F9 12r00r00         [24] 2024 	lcall	__gptrget
      0004FC FB               [12] 2025 	mov	r3,a
      0004FD A3               [24] 2026 	inc	dptr
      0004FE 12r00r00         [24] 2027 	lcall	__gptrget
      000501 FC               [12] 2028 	mov	r4,a
      000502 EA               [12] 2029 	mov	a,r2
      000503 4B               [12] 2030 	orl	a,r3
      000504 60 03            [24] 2031 	jz	00110$
      000506 02r05rDF         [24] 2032 	ljmp	00102$
      000509                       2033 00110$:
                                   2034 ;	../../core/net/mac/phase.c:160: queuebuf_to_packetbuf(p->q);
      000509 A8 81            [24] 2035 	mov	r0,sp
      00050B 18               [12] 2036 	dec	r0
      00050C 18               [12] 2037 	dec	r0
      00050D 74 1A            [12] 2038 	mov	a,#0x1a
      00050F 26               [12] 2039 	add	a,@r0
      000510 FC               [12] 2040 	mov	r4,a
      000511 E4               [12] 2041 	clr	a
      000512 08               [12] 2042 	inc	r0
      000513 36               [12] 2043 	addc	a,@r0
      000514 FB               [12] 2044 	mov	r3,a
      000515 08               [12] 2045 	inc	r0
      000516 86 02            [24] 2046 	mov	ar2,@r0
      000518 8C 82            [24] 2047 	mov	dpl,r4
      00051A 8B 83            [24] 2048 	mov	dph,r3
      00051C 8A F0            [24] 2049 	mov	b,r2
      00051E 12r00r00         [24] 2050 	lcall	__gptrget
      000521 FD               [12] 2051 	mov	r5,a
      000522 A3               [24] 2052 	inc	dptr
      000523 12r00r00         [24] 2053 	lcall	__gptrget
      000526 FE               [12] 2054 	mov	r6,a
      000527 A3               [24] 2055 	inc	dptr
      000528 12r00r00         [24] 2056 	lcall	__gptrget
      00052B FF               [12] 2057 	mov	r7,a
      00052C 8D 82            [24] 2058 	mov	dpl,r5
      00052E 8E 83            [24] 2059 	mov	dph,r6
      000530 8F F0            [24] 2060 	mov	b,r7
      000532 C0 04            [24] 2061 	push	ar4
      000534 C0 03            [24] 2062 	push	ar3
      000536 C0 02            [24] 2063 	push	ar2
      000538 12r00r00         [24] 2064 	lcall	_queuebuf_to_packetbuf
      00053B D0 02            [24] 2065 	pop	ar2
      00053D D0 03            [24] 2066 	pop	ar3
      00053F D0 04            [24] 2067 	pop	ar4
                                   2068 ;	../../core/net/mac/phase.c:161: queuebuf_free(p->q);
      000541 8C 82            [24] 2069 	mov	dpl,r4
      000543 8B 83            [24] 2070 	mov	dph,r3
      000545 8A F0            [24] 2071 	mov	b,r2
      000547 12r00r00         [24] 2072 	lcall	__gptrget
      00054A FD               [12] 2073 	mov	r5,a
      00054B A3               [24] 2074 	inc	dptr
      00054C 12r00r00         [24] 2075 	lcall	__gptrget
      00054F FE               [12] 2076 	mov	r6,a
      000550 A3               [24] 2077 	inc	dptr
      000551 12r00r00         [24] 2078 	lcall	__gptrget
      000554 FF               [12] 2079 	mov	r7,a
      000555 8D 82            [24] 2080 	mov	dpl,r5
      000557 8E 83            [24] 2081 	mov	dph,r6
      000559 8F F0            [24] 2082 	mov	b,r7
      00055B 12r00r00         [24] 2083 	lcall	_queuebuf_free
                                   2084 ;	../../core/net/mac/phase.c:162: NETSTACK_RDC.send(p->mac_callback, p->mac_callback_ptr);
      00055E 90r00r05         [24] 2085 	mov	dptr,#(_nullrdc_driver + 0x0005)
      000561 E4               [12] 2086 	clr	a
      000562 93               [24] 2087 	movc	a,@a+dptr
      000563 FC               [12] 2088 	mov	r4,a
      000564 A3               [24] 2089 	inc	dptr
      000565 E4               [12] 2090 	clr	a
      000566 93               [24] 2091 	movc	a,@a+dptr
      000567 FB               [12] 2092 	mov	r3,a
      000568 A8 81            [24] 2093 	mov	r0,sp
      00056A 18               [12] 2094 	dec	r0
      00056B 18               [12] 2095 	dec	r0
      00056C 74 17            [12] 2096 	mov	a,#0x17
      00056E 26               [12] 2097 	add	a,@r0
      00056F FD               [12] 2098 	mov	r5,a
      000570 E4               [12] 2099 	clr	a
      000571 08               [12] 2100 	inc	r0
      000572 36               [12] 2101 	addc	a,@r0
      000573 FE               [12] 2102 	mov	r6,a
      000574 08               [12] 2103 	inc	r0
      000575 86 07            [24] 2104 	mov	ar7,@r0
      000577 8D 82            [24] 2105 	mov	dpl,r5
      000579 8E 83            [24] 2106 	mov	dph,r6
      00057B 8F F0            [24] 2107 	mov	b,r7
      00057D E5 81            [12] 2108 	mov	a,sp
      00057F 24 FB            [12] 2109 	add	a,#0xfb
      000581 F8               [12] 2110 	mov	r0,a
      000582 12r00r00         [24] 2111 	lcall	__gptrget
      000585 F6               [12] 2112 	mov	@r0,a
      000586 A3               [24] 2113 	inc	dptr
      000587 12r00r00         [24] 2114 	lcall	__gptrget
      00058A 08               [12] 2115 	inc	r0
      00058B F6               [12] 2116 	mov	@r0,a
      00058C A3               [24] 2117 	inc	dptr
      00058D 12r00r00         [24] 2118 	lcall	__gptrget
      000590 08               [12] 2119 	inc	r0
      000591 F6               [12] 2120 	mov	@r0,a
      000592 A8 81            [24] 2121 	mov	r0,sp
      000594 18               [12] 2122 	dec	r0
      000595 18               [12] 2123 	dec	r0
      000596 74 15            [12] 2124 	mov	a,#0x15
      000598 26               [12] 2125 	add	a,@r0
      000599 FD               [12] 2126 	mov	r5,a
      00059A E4               [12] 2127 	clr	a
      00059B 08               [12] 2128 	inc	r0
      00059C 36               [12] 2129 	addc	a,@r0
      00059D FE               [12] 2130 	mov	r6,a
      00059E 08               [12] 2131 	inc	r0
      00059F 86 07            [24] 2132 	mov	ar7,@r0
      0005A1 8D 82            [24] 2133 	mov	dpl,r5
      0005A3 8E 83            [24] 2134 	mov	dph,r6
      0005A5 8F F0            [24] 2135 	mov	b,r7
      0005A7 12r00r00         [24] 2136 	lcall	__gptrget
      0005AA FD               [12] 2137 	mov	r5,a
      0005AB A3               [24] 2138 	inc	dptr
      0005AC 12r00r00         [24] 2139 	lcall	__gptrget
      0005AF FE               [12] 2140 	mov	r6,a
      0005B0 C0 04            [24] 2141 	push	ar4
      0005B2 C0 03            [24] 2142 	push	ar3
      0005B4 E5 81            [12] 2143 	mov	a,sp
      0005B6 24 F9            [12] 2144 	add	a,#0xf9
      0005B8 F8               [12] 2145 	mov	r0,a
      0005B9 E6               [12] 2146 	mov	a,@r0
      0005BA C0 E0            [24] 2147 	push	acc
      0005BC 08               [12] 2148 	inc	r0
      0005BD E6               [12] 2149 	mov	a,@r0
      0005BE C0 E0            [24] 2150 	push	acc
      0005C0 08               [12] 2151 	inc	r0
      0005C1 E6               [12] 2152 	mov	a,@r0
      0005C2 C0 E0            [24] 2153 	push	acc
      0005C4 12r05rC9         [24] 2154 	lcall	00111$
      0005C7 80 09            [24] 2155 	sjmp	00112$
      0005C9                       2156 00111$:
      0005C9 C0 04            [24] 2157 	push	ar4
      0005CB C0 03            [24] 2158 	push	ar3
      0005CD 8D 82            [24] 2159 	mov	dpl,r5
      0005CF 8E 83            [24] 2160 	mov	dph,r6
      0005D1 22               [24] 2161 	ret
      0005D2                       2162 00112$:
      0005D2 15 81            [12] 2163 	dec	sp
      0005D4 15 81            [12] 2164 	dec	sp
      0005D6 15 81            [12] 2165 	dec	sp
      0005D8 D0 03            [24] 2166 	pop	ar3
      0005DA D0 04            [24] 2167 	pop	ar4
      0005DC 02r06r69         [24] 2168 	ljmp	00103$
      0005DF                       2169 00102$:
                                   2170 ;	../../core/net/mac/phase.c:164: NETSTACK_RDC.send_list(p->mac_callback, p->mac_callback_ptr, p->buf_list);
      0005DF 90r00r07         [24] 2171 	mov	dptr,#(_nullrdc_driver + 0x0007)
      0005E2 E5 81            [12] 2172 	mov	a,sp
      0005E4 24 FB            [12] 2173 	add	a,#0xfb
      0005E6 F8               [12] 2174 	mov	r0,a
      0005E7 E4               [12] 2175 	clr	a
      0005E8 93               [24] 2176 	movc	a,@a+dptr
      0005E9 F6               [12] 2177 	mov	@r0,a
      0005EA A3               [24] 2178 	inc	dptr
      0005EB E4               [12] 2179 	clr	a
      0005EC 93               [24] 2180 	movc	a,@a+dptr
      0005ED 08               [12] 2181 	inc	r0
      0005EE F6               [12] 2182 	mov	@r0,a
      0005EF A8 81            [24] 2183 	mov	r0,sp
      0005F1 18               [12] 2184 	dec	r0
      0005F2 18               [12] 2185 	dec	r0
      0005F3 74 17            [12] 2186 	mov	a,#0x17
      0005F5 26               [12] 2187 	add	a,@r0
      0005F6 FD               [12] 2188 	mov	r5,a
      0005F7 E4               [12] 2189 	clr	a
      0005F8 08               [12] 2190 	inc	r0
      0005F9 36               [12] 2191 	addc	a,@r0
      0005FA FE               [12] 2192 	mov	r6,a
      0005FB 08               [12] 2193 	inc	r0
      0005FC 86 07            [24] 2194 	mov	ar7,@r0
      0005FE 8D 82            [24] 2195 	mov	dpl,r5
      000600 8E 83            [24] 2196 	mov	dph,r6
      000602 8F F0            [24] 2197 	mov	b,r7
      000604 E5 81            [12] 2198 	mov	a,sp
      000606 24 F8            [12] 2199 	add	a,#0xf8
      000608 F8               [12] 2200 	mov	r0,a
      000609 12r00r00         [24] 2201 	lcall	__gptrget
      00060C F6               [12] 2202 	mov	@r0,a
      00060D A3               [24] 2203 	inc	dptr
      00060E 12r00r00         [24] 2204 	lcall	__gptrget
      000611 08               [12] 2205 	inc	r0
      000612 F6               [12] 2206 	mov	@r0,a
      000613 A3               [24] 2207 	inc	dptr
      000614 12r00r00         [24] 2208 	lcall	__gptrget
      000617 08               [12] 2209 	inc	r0
      000618 F6               [12] 2210 	mov	@r0,a
      000619 A8 81            [24] 2211 	mov	r0,sp
      00061B 18               [12] 2212 	dec	r0
      00061C 18               [12] 2213 	dec	r0
      00061D 74 15            [12] 2214 	mov	a,#0x15
      00061F 26               [12] 2215 	add	a,@r0
      000620 FD               [12] 2216 	mov	r5,a
      000621 E4               [12] 2217 	clr	a
      000622 08               [12] 2218 	inc	r0
      000623 36               [12] 2219 	addc	a,@r0
      000624 FE               [12] 2220 	mov	r6,a
      000625 08               [12] 2221 	inc	r0
      000626 86 07            [24] 2222 	mov	ar7,@r0
      000628 8D 82            [24] 2223 	mov	dpl,r5
      00062A 8E 83            [24] 2224 	mov	dph,r6
      00062C 8F F0            [24] 2225 	mov	b,r7
      00062E 12r00r00         [24] 2226 	lcall	__gptrget
      000631 FD               [12] 2227 	mov	r5,a
      000632 A3               [24] 2228 	inc	dptr
      000633 12r00r00         [24] 2229 	lcall	__gptrget
      000636 FE               [12] 2230 	mov	r6,a
      000637 C0 02            [24] 2231 	push	ar2
      000639 C0 03            [24] 2232 	push	ar3
      00063B C0 04            [24] 2233 	push	ar4
      00063D E5 81            [12] 2234 	mov	a,sp
      00063F 24 F5            [12] 2235 	add	a,#0xf5
      000641 F8               [12] 2236 	mov	r0,a
      000642 E6               [12] 2237 	mov	a,@r0
      000643 C0 E0            [24] 2238 	push	acc
      000645 08               [12] 2239 	inc	r0
      000646 E6               [12] 2240 	mov	a,@r0
      000647 C0 E0            [24] 2241 	push	acc
      000649 08               [12] 2242 	inc	r0
      00064A E6               [12] 2243 	mov	a,@r0
      00064B C0 E0            [24] 2244 	push	acc
      00064D 12r06r52         [24] 2245 	lcall	00113$
      000650 80 11            [24] 2246 	sjmp	00114$
      000652                       2247 00113$:
      000652 E5 81            [12] 2248 	mov	a,sp
      000654 24 F3            [12] 2249 	add	a,#0xf3
      000656 F8               [12] 2250 	mov	r0,a
      000657 E6               [12] 2251 	mov	a,@r0
      000658 C0 E0            [24] 2252 	push	acc
      00065A 08               [12] 2253 	inc	r0
      00065B E6               [12] 2254 	mov	a,@r0
      00065C C0 E0            [24] 2255 	push	acc
      00065E 8D 82            [24] 2256 	mov	dpl,r5
      000660 8E 83            [24] 2257 	mov	dph,r6
      000662 22               [24] 2258 	ret
      000663                       2259 00114$:
      000663 E5 81            [12] 2260 	mov	a,sp
      000665 24 FA            [12] 2261 	add	a,#0xfa
      000667 F5 81            [12] 2262 	mov	sp,a
      000669                       2263 00103$:
                                   2264 ;	../../core/net/mac/phase.c:167: memb_free(&queued_packets_memb, p);
      000669 A8 81            [24] 2265 	mov	r0,sp
      00066B 18               [12] 2266 	dec	r0
      00066C 18               [12] 2267 	dec	r0
      00066D 86 05            [24] 2268 	mov	ar5,@r0
      00066F 08               [12] 2269 	inc	r0
      000670 86 06            [24] 2270 	mov	ar6,@r0
      000672 08               [12] 2271 	inc	r0
      000673 86 07            [24] 2272 	mov	ar7,@r0
      000675 C0 05            [24] 2273 	push	ar5
      000677 C0 06            [24] 2274 	push	ar6
      000679 C0 07            [24] 2275 	push	ar7
      00067B 90r00r00         [24] 2276 	mov	dptr,#_queued_packets_memb
      00067E 75 F0 00         [24] 2277 	mov	b,#0x00
      000681 12r00r00         [24] 2278 	lcall	_memb_free
      000684 15 81            [12] 2279 	dec	sp
      000686 15 81            [12] 2280 	dec	sp
      000688 15 81            [12] 2281 	dec	sp
                                   2282 ;	../../core/net/mac/phase.c:168: }
      00068A E5 81            [12] 2283 	mov	a,sp
      00068C 24 F7            [12] 2284 	add	a,#0xf7
      00068E F5 81            [12] 2285 	mov	sp,a
      000690 22               [24] 2286 	ret
                                   2287 ;------------------------------------------------------------
                                   2288 ;Allocation info for local variables in function 'phase_wait'
                                   2289 ;------------------------------------------------------------
                                   2290 ;neighbor                  Allocated to stack - sp -14
                                   2291 ;cycle_time                Allocated to stack - sp -16
                                   2292 ;guard_time                Allocated to stack - sp -18
                                   2293 ;mac_callback              Allocated to stack - sp -20
                                   2294 ;mac_callback_ptr          Allocated to stack - sp -23
                                   2295 ;buf_list                  Allocated to stack - sp -26
                                   2296 ;list                      Allocated to registers r5 r6 r7 
                                   2297 ;e                         Allocated to stack - sp -9
                                   2298 ;wait                      Allocated to registers r4 r5 
                                   2299 ;now                       Allocated to stack - sp -6
                                   2300 ;expected                  Allocated to registers r6 r7 
                                   2301 ;sync                      Allocated to registers r6 r7 
                                   2302 ;ctimewait                 Allocated to stack - sp -4
                                   2303 ;p                         Allocated to stack - sp -2
                                   2304 ;sloc0                     Allocated to stack - sp +10
                                   2305 ;------------------------------------------------------------
                                   2306 ;	../../core/net/mac/phase.c:171: phase_wait(struct phase_list *list,
                                   2307 ;	-----------------------------------------
                                   2308 ;	 function phase_wait
                                   2309 ;	-----------------------------------------
      000691                       2310 _phase_wait:
      000691 E5 81            [12] 2311 	mov	a,sp
      000693 24 0A            [12] 2312 	add	a,#0x0a
      000695 F5 81            [12] 2313 	mov	sp,a
      000697 AD 82            [24] 2314 	mov	r5,dpl
      000699 AE 83            [24] 2315 	mov	r6,dph
      00069B AF F0            [24] 2316 	mov	r7,b
                                   2317 ;	../../core/net/mac/phase.c:183: e = find_neighbor(list, neighbor);
      00069D E5 81            [12] 2318 	mov	a,sp
      00069F 24 F2            [12] 2319 	add	a,#0xf2
      0006A1 F8               [12] 2320 	mov	r0,a
      0006A2 E6               [12] 2321 	mov	a,@r0
      0006A3 C0 E0            [24] 2322 	push	acc
      0006A5 08               [12] 2323 	inc	r0
      0006A6 E6               [12] 2324 	mov	a,@r0
      0006A7 C0 E0            [24] 2325 	push	acc
      0006A9 08               [12] 2326 	inc	r0
      0006AA E6               [12] 2327 	mov	a,@r0
      0006AB C0 E0            [24] 2328 	push	acc
      0006AD 8D 82            [24] 2329 	mov	dpl,r5
      0006AF 8E 83            [24] 2330 	mov	dph,r6
      0006B1 8F F0            [24] 2331 	mov	b,r7
      0006B3 12r00r00         [24] 2332 	lcall	_find_neighbor
      0006B6 AD 82            [24] 2333 	mov	r5,dpl
      0006B8 AE 83            [24] 2334 	mov	r6,dph
      0006BA AF F0            [24] 2335 	mov	r7,b
      0006BC 15 81            [12] 2336 	dec	sp
      0006BE 15 81            [12] 2337 	dec	sp
      0006C0 15 81            [12] 2338 	dec	sp
      0006C2 E5 81            [12] 2339 	mov	a,sp
      0006C4 24 F7            [12] 2340 	add	a,#0xf7
      0006C6 F8               [12] 2341 	mov	r0,a
      0006C7 A6 05            [24] 2342 	mov	@r0,ar5
      0006C9 08               [12] 2343 	inc	r0
      0006CA A6 06            [24] 2344 	mov	@r0,ar6
      0006CC 08               [12] 2345 	inc	r0
      0006CD A6 07            [24] 2346 	mov	@r0,ar7
                                   2347 ;	../../core/net/mac/phase.c:184: if(e != NULL) {
      0006CF E5 81            [12] 2348 	mov	a,sp
      0006D1 24 F7            [12] 2349 	add	a,#0xf7
      0006D3 F8               [12] 2350 	mov	r0,a
      0006D4 E6               [12] 2351 	mov	a,@r0
      0006D5 08               [12] 2352 	inc	r0
      0006D6 46               [12] 2353 	orl	a,@r0
      0006D7 70 03            [24] 2354 	jnz	00156$
      0006D9 02r09rA5         [24] 2355 	ljmp	00119$
      0006DC                       2356 00156$:
                                   2357 ;	../../core/net/mac/phase.c:202: now = RTIMER_NOW();
      0006DC AB E2            [24] 2358 	mov	r3,_T1CNTL
      0006DE 7C 00            [12] 2359 	mov	r4,#0x00
      0006E0 AA E3            [24] 2360 	mov	r2,_T1CNTH
      0006E2 8A 07            [24] 2361 	mov	ar7,r2
      0006E4 E4               [12] 2362 	clr	a
      0006E5 FA               [12] 2363 	mov	r2,a
      0006E6 2B               [12] 2364 	add	a,r3
      0006E7 FB               [12] 2365 	mov	r3,a
      0006E8 EF               [12] 2366 	mov	a,r7
      0006E9 3C               [12] 2367 	addc	a,r4
      0006EA FC               [12] 2368 	mov	r4,a
      0006EB E5 81            [12] 2369 	mov	a,sp
      0006ED 24 FA            [12] 2370 	add	a,#0xfa
      0006EF F8               [12] 2371 	mov	r0,a
      0006F0 A6 03            [24] 2372 	mov	@r0,ar3
      0006F2 08               [12] 2373 	inc	r0
      0006F3 A6 04            [24] 2374 	mov	@r0,ar4
                                   2375 ;	../../core/net/mac/phase.c:204: sync = (e == NULL) ? now : e->time;
      0006F5 E5 81            [12] 2376 	mov	a,sp
      0006F7 24 F7            [12] 2377 	add	a,#0xf7
      0006F9 F8               [12] 2378 	mov	r0,a
      0006FA E6               [12] 2379 	mov	a,@r0
      0006FB 08               [12] 2380 	inc	r0
      0006FC 46               [12] 2381 	orl	a,@r0
      0006FD 70 0C            [24] 2382 	jnz	00122$
      0006FF E5 81            [12] 2383 	mov	a,sp
      000701 24 FA            [12] 2384 	add	a,#0xfa
      000703 F8               [12] 2385 	mov	r0,a
      000704 86 06            [24] 2386 	mov	ar6,@r0
      000706 08               [12] 2387 	inc	r0
      000707 86 07            [24] 2388 	mov	ar7,@r0
      000709 80 1F            [24] 2389 	sjmp	00123$
      00070B                       2390 00122$:
      00070B E5 81            [12] 2391 	mov	a,sp
      00070D 24 F7            [12] 2392 	add	a,#0xf7
      00070F F8               [12] 2393 	mov	r0,a
      000710 74 05            [12] 2394 	mov	a,#0x05
      000712 26               [12] 2395 	add	a,@r0
      000713 FA               [12] 2396 	mov	r2,a
      000714 E4               [12] 2397 	clr	a
      000715 08               [12] 2398 	inc	r0
      000716 36               [12] 2399 	addc	a,@r0
      000717 FC               [12] 2400 	mov	r4,a
      000718 08               [12] 2401 	inc	r0
      000719 86 05            [24] 2402 	mov	ar5,@r0
      00071B 8A 82            [24] 2403 	mov	dpl,r2
      00071D 8C 83            [24] 2404 	mov	dph,r4
      00071F 8D F0            [24] 2405 	mov	b,r5
      000721 12r00r00         [24] 2406 	lcall	__gptrget
      000724 FE               [12] 2407 	mov	r6,a
      000725 A3               [24] 2408 	inc	dptr
      000726 12r00r00         [24] 2409 	lcall	__gptrget
      000729 FF               [12] 2410 	mov	r7,a
      00072A                       2411 00123$:
                                   2412 ;	../../core/net/mac/phase.c:218: if(!(cycle_time & (cycle_time - 1))) {
      00072A E5 81            [12] 2413 	mov	a,sp
      00072C 24 F0            [12] 2414 	add	a,#0xf0
      00072E F8               [12] 2415 	mov	r0,a
      00072F 86 04            [24] 2416 	mov	ar4,@r0
      000731 08               [12] 2417 	inc	r0
      000732 86 05            [24] 2418 	mov	ar5,@r0
      000734 EC               [12] 2419 	mov	a,r4
      000735 24 FF            [12] 2420 	add	a,#0xff
      000737 FA               [12] 2421 	mov	r2,a
      000738 ED               [12] 2422 	mov	a,r5
      000739 34 FF            [12] 2423 	addc	a,#0xff
      00073B FB               [12] 2424 	mov	r3,a
      00073C EC               [12] 2425 	mov	a,r4
      00073D 52 02            [12] 2426 	anl	ar2,a
      00073F ED               [12] 2427 	mov	a,r5
      000740 52 03            [12] 2428 	anl	ar3,a
      000742 EA               [12] 2429 	mov	a,r2
      000743 4B               [12] 2430 	orl	a,r3
      000744 70 1A            [24] 2431 	jnz	00102$
                                   2432 ;	../../core/net/mac/phase.c:220: wait = (rtimer_clock_t)((sync - now) & (cycle_time - 1));
      000746 E5 81            [12] 2433 	mov	a,sp
      000748 24 FA            [12] 2434 	add	a,#0xfa
      00074A F8               [12] 2435 	mov	r0,a
      00074B EE               [12] 2436 	mov	a,r6
      00074C C3               [12] 2437 	clr	c
      00074D 96               [12] 2438 	subb	a,@r0
      00074E FA               [12] 2439 	mov	r2,a
      00074F EF               [12] 2440 	mov	a,r7
      000750 08               [12] 2441 	inc	r0
      000751 96               [12] 2442 	subb	a,@r0
      000752 FB               [12] 2443 	mov	r3,a
      000753 1C               [12] 2444 	dec	r4
      000754 BC FF 01         [24] 2445 	cjne	r4,#0xff,00159$
      000757 1D               [12] 2446 	dec	r5
      000758                       2447 00159$:
      000758 EA               [12] 2448 	mov	a,r2
      000759 52 04            [12] 2449 	anl	ar4,a
      00075B EB               [12] 2450 	mov	a,r3
      00075C 52 05            [12] 2451 	anl	ar5,a
      00075E 80 39            [24] 2452 	sjmp	00103$
      000760                       2453 00102$:
                                   2454 ;	../../core/net/mac/phase.c:223: wait = cycle_time - (rtimer_clock_t)((now - sync) % cycle_time);
      000760 E5 81            [12] 2455 	mov	a,sp
      000762 24 FA            [12] 2456 	add	a,#0xfa
      000764 F8               [12] 2457 	mov	r0,a
      000765 E6               [12] 2458 	mov	a,@r0
      000766 C3               [12] 2459 	clr	c
      000767 9E               [12] 2460 	subb	a,r6
      000768 FE               [12] 2461 	mov	r6,a
      000769 08               [12] 2462 	inc	r0
      00076A E6               [12] 2463 	mov	a,@r0
      00076B 9F               [12] 2464 	subb	a,r7
      00076C FF               [12] 2465 	mov	r7,a
      00076D E5 81            [12] 2466 	mov	a,sp
      00076F 24 F0            [12] 2467 	add	a,#0xf0
      000771 F8               [12] 2468 	mov	r0,a
      000772 E6               [12] 2469 	mov	a,@r0
      000773 C0 E0            [24] 2470 	push	acc
      000775 08               [12] 2471 	inc	r0
      000776 E6               [12] 2472 	mov	a,@r0
      000777 C0 E0            [24] 2473 	push	acc
      000779 8E 82            [24] 2474 	mov	dpl,r6
      00077B 8F 83            [24] 2475 	mov	dph,r7
      00077D 12r00r00         [24] 2476 	lcall	__moduint
      000780 AE 82            [24] 2477 	mov	r6,dpl
      000782 AF 83            [24] 2478 	mov	r7,dph
      000784 15 81            [12] 2479 	dec	sp
      000786 15 81            [12] 2480 	dec	sp
      000788 E5 81            [12] 2481 	mov	a,sp
      00078A 24 F0            [12] 2482 	add	a,#0xf0
      00078C F8               [12] 2483 	mov	r0,a
      00078D E6               [12] 2484 	mov	a,@r0
      00078E C3               [12] 2485 	clr	c
      00078F 9E               [12] 2486 	subb	a,r6
      000790 FE               [12] 2487 	mov	r6,a
      000791 08               [12] 2488 	inc	r0
      000792 E6               [12] 2489 	mov	a,@r0
      000793 9F               [12] 2490 	subb	a,r7
      000794 FF               [12] 2491 	mov	r7,a
      000795 8E 04            [24] 2492 	mov	ar4,r6
      000797 8F 05            [24] 2493 	mov	ar5,r7
      000799                       2494 00103$:
                                   2495 ;	../../core/net/mac/phase.c:226: if(wait < guard_time) {
      000799 E5 81            [12] 2496 	mov	a,sp
      00079B 24 EE            [12] 2497 	add	a,#0xee
      00079D F8               [12] 2498 	mov	r0,a
      00079E C3               [12] 2499 	clr	c
      00079F EC               [12] 2500 	mov	a,r4
      0007A0 96               [12] 2501 	subb	a,@r0
      0007A1 ED               [12] 2502 	mov	a,r5
      0007A2 08               [12] 2503 	inc	r0
      0007A3 96               [12] 2504 	subb	a,@r0
      0007A4 50 0C            [24] 2505 	jnc	00105$
                                   2506 ;	../../core/net/mac/phase.c:227: wait += cycle_time;
      0007A6 E5 81            [12] 2507 	mov	a,sp
      0007A8 24 F0            [12] 2508 	add	a,#0xf0
      0007AA F8               [12] 2509 	mov	r0,a
      0007AB E6               [12] 2510 	mov	a,@r0
      0007AC 2C               [12] 2511 	add	a,r4
      0007AD FC               [12] 2512 	mov	r4,a
      0007AE 08               [12] 2513 	inc	r0
      0007AF E6               [12] 2514 	mov	a,@r0
      0007B0 3D               [12] 2515 	addc	a,r5
      0007B1 FD               [12] 2516 	mov	r5,a
      0007B2                       2517 00105$:
                                   2518 ;	../../core/net/mac/phase.c:230: ctimewait = (CLOCK_SECOND * (wait - guard_time)) / RTIMER_ARCH_SECOND;
      0007B2 E5 81            [12] 2519 	mov	a,sp
      0007B4 24 EE            [12] 2520 	add	a,#0xee
      0007B6 F8               [12] 2521 	mov	r0,a
      0007B7 EC               [12] 2522 	mov	a,r4
      0007B8 C3               [12] 2523 	clr	c
      0007B9 96               [12] 2524 	subb	a,@r0
      0007BA FE               [12] 2525 	mov	r6,a
      0007BB ED               [12] 2526 	mov	a,r5
      0007BC 08               [12] 2527 	inc	r0
      0007BD 96               [12] 2528 	subb	a,@r0
      0007BE 54 01            [12] 2529 	anl	a,#0x01
      0007C0 A2 E0            [12] 2530 	mov	c,acc.0
      0007C2 CE               [12] 2531 	xch	a,r6
      0007C3 13               [12] 2532 	rrc	a
      0007C4 CE               [12] 2533 	xch	a,r6
      0007C5 13               [12] 2534 	rrc	a
      0007C6 CE               [12] 2535 	xch	a,r6
      0007C7 FF               [12] 2536 	mov	r7,a
      0007C8 C0 05            [24] 2537 	push	ar5
      0007CA C0 04            [24] 2538 	push	ar4
      0007CC 74 09            [12] 2539 	mov	a,#0x09
      0007CE C0 E0            [24] 2540 	push	acc
      0007D0 74 3D            [12] 2541 	mov	a,#0x3d
      0007D2 C0 E0            [24] 2542 	push	acc
      0007D4 8E 82            [24] 2543 	mov	dpl,r6
      0007D6 8F 83            [24] 2544 	mov	dph,r7
      0007D8 12r00r00         [24] 2545 	lcall	__divuint
      0007DB AE 82            [24] 2546 	mov	r6,dpl
      0007DD AF 83            [24] 2547 	mov	r7,dph
      0007DF 15 81            [12] 2548 	dec	sp
      0007E1 15 81            [12] 2549 	dec	sp
      0007E3 D0 04            [24] 2550 	pop	ar4
      0007E5 D0 05            [24] 2551 	pop	ar5
      0007E7 E5 81            [12] 2552 	mov	a,sp
      0007E9 24 FC            [12] 2553 	add	a,#0xfc
      0007EB F8               [12] 2554 	mov	r0,a
      0007EC A6 06            [24] 2555 	mov	@r0,ar6
      0007EE 08               [12] 2556 	inc	r0
      0007EF A6 07            [24] 2557 	mov	@r0,ar7
                                   2558 ;	../../core/net/mac/phase.c:232: if(ctimewait > PHASE_DEFER_THRESHOLD) {
      0007F1 E5 81            [12] 2559 	mov	a,sp
      0007F3 24 FC            [12] 2560 	add	a,#0xfc
      0007F5 F8               [12] 2561 	mov	r0,a
      0007F6 86 02            [24] 2562 	mov	ar2,@r0
      0007F8 08               [12] 2563 	inc	r0
      0007F9 86 03            [24] 2564 	mov	ar3,@r0
      0007FB C3               [12] 2565 	clr	c
      0007FC 74 01            [12] 2566 	mov	a,#0x01
      0007FE 9A               [12] 2567 	subb	a,r2
      0007FF E4               [12] 2568 	clr	a
      000800 9B               [12] 2569 	subb	a,r3
      000801 40 03            [24] 2570 	jc	00161$
      000803 02r09r5A         [24] 2571 	ljmp	00112$
      000806                       2572 00161$:
                                   2573 ;	../../core/net/mac/phase.c:235: p = memb_alloc(&queued_packets_memb);
      000806 90r00r00         [24] 2574 	mov	dptr,#_queued_packets_memb
      000809 75 F0 00         [24] 2575 	mov	b,#0x00
      00080C C0 05            [24] 2576 	push	ar5
      00080E C0 04            [24] 2577 	push	ar4
      000810 12r00r00         [24] 2578 	lcall	_memb_alloc
      000813 AA 82            [24] 2579 	mov	r2,dpl
      000815 AB 83            [24] 2580 	mov	r3,dph
      000817 AF F0            [24] 2581 	mov	r7,b
      000819 D0 04            [24] 2582 	pop	ar4
      00081B D0 05            [24] 2583 	pop	ar5
      00081D A8 81            [24] 2584 	mov	r0,sp
      00081F 18               [12] 2585 	dec	r0
      000820 18               [12] 2586 	dec	r0
      000821 A6 02            [24] 2587 	mov	@r0,ar2
      000823 08               [12] 2588 	inc	r0
      000824 A6 03            [24] 2589 	mov	@r0,ar3
      000826 08               [12] 2590 	inc	r0
      000827 A6 07            [24] 2591 	mov	@r0,ar7
                                   2592 ;	../../core/net/mac/phase.c:236: if(p != NULL) {
      000829 A8 81            [24] 2593 	mov	r0,sp
      00082B 18               [12] 2594 	dec	r0
      00082C 18               [12] 2595 	dec	r0
      00082D E6               [12] 2596 	mov	a,@r0
      00082E 08               [12] 2597 	inc	r0
      00082F 46               [12] 2598 	orl	a,@r0
      000830 70 03            [24] 2599 	jnz	00162$
      000832 02r09r31         [24] 2600 	ljmp	00109$
      000835                       2601 00162$:
                                   2602 ;	../../core/net/mac/phase.c:237: if(buf_list == NULL) {
      000835 E5 81            [12] 2603 	mov	a,sp
      000837 24 E6            [12] 2604 	add	a,#0xe6
      000839 F8               [12] 2605 	mov	r0,a
      00083A E6               [12] 2606 	mov	a,@r0
      00083B 08               [12] 2607 	inc	r0
      00083C 46               [12] 2608 	orl	a,@r0
      00083D 70 38            [24] 2609 	jnz	00107$
                                   2610 ;	../../core/net/mac/phase.c:238: p->q = queuebuf_new_from_packetbuf();
      00083F A8 81            [24] 2611 	mov	r0,sp
      000841 18               [12] 2612 	dec	r0
      000842 18               [12] 2613 	dec	r0
      000843 74 1A            [12] 2614 	mov	a,#0x1a
      000845 26               [12] 2615 	add	a,@r0
      000846 FD               [12] 2616 	mov	r5,a
      000847 E4               [12] 2617 	clr	a
      000848 08               [12] 2618 	inc	r0
      000849 36               [12] 2619 	addc	a,@r0
      00084A FC               [12] 2620 	mov	r4,a
      00084B 08               [12] 2621 	inc	r0
      00084C 86 02            [24] 2622 	mov	ar2,@r0
      00084E C0 05            [24] 2623 	push	ar5
      000850 C0 04            [24] 2624 	push	ar4
      000852 C0 02            [24] 2625 	push	ar2
      000854 12r00r00         [24] 2626 	lcall	_queuebuf_new_from_packetbuf
      000857 AB 82            [24] 2627 	mov	r3,dpl
      000859 AE 83            [24] 2628 	mov	r6,dph
      00085B AF F0            [24] 2629 	mov	r7,b
      00085D D0 02            [24] 2630 	pop	ar2
      00085F D0 04            [24] 2631 	pop	ar4
      000861 D0 05            [24] 2632 	pop	ar5
      000863 8D 82            [24] 2633 	mov	dpl,r5
      000865 8C 83            [24] 2634 	mov	dph,r4
      000867 8A F0            [24] 2635 	mov	b,r2
      000869 EB               [12] 2636 	mov	a,r3
      00086A 12r00r00         [24] 2637 	lcall	__gptrput
      00086D A3               [24] 2638 	inc	dptr
      00086E EE               [12] 2639 	mov	a,r6
      00086F 12r00r00         [24] 2640 	lcall	__gptrput
      000872 A3               [24] 2641 	inc	dptr
      000873 EF               [12] 2642 	mov	a,r7
      000874 12r00r00         [24] 2643 	lcall	__gptrput
      000877                       2644 00107$:
                                   2645 ;	../../core/net/mac/phase.c:240: p->mac_callback = mac_callback;
      000877 A8 81            [24] 2646 	mov	r0,sp
      000879 18               [12] 2647 	dec	r0
      00087A 18               [12] 2648 	dec	r0
      00087B 74 15            [12] 2649 	mov	a,#0x15
      00087D 26               [12] 2650 	add	a,@r0
      00087E FB               [12] 2651 	mov	r3,a
      00087F E4               [12] 2652 	clr	a
      000880 08               [12] 2653 	inc	r0
      000881 36               [12] 2654 	addc	a,@r0
      000882 FE               [12] 2655 	mov	r6,a
      000883 08               [12] 2656 	inc	r0
      000884 86 07            [24] 2657 	mov	ar7,@r0
      000886 8B 82            [24] 2658 	mov	dpl,r3
      000888 8E 83            [24] 2659 	mov	dph,r6
      00088A 8F F0            [24] 2660 	mov	b,r7
      00088C E5 81            [12] 2661 	mov	a,sp
      00088E 24 EC            [12] 2662 	add	a,#0xec
      000890 F8               [12] 2663 	mov	r0,a
      000891 E6               [12] 2664 	mov	a,@r0
      000892 12r00r00         [24] 2665 	lcall	__gptrput
      000895 A3               [24] 2666 	inc	dptr
      000896 08               [12] 2667 	inc	r0
      000897 E6               [12] 2668 	mov	a,@r0
      000898 12r00r00         [24] 2669 	lcall	__gptrput
                                   2670 ;	../../core/net/mac/phase.c:241: p->mac_callback_ptr = mac_callback_ptr;
      00089B A8 81            [24] 2671 	mov	r0,sp
      00089D 18               [12] 2672 	dec	r0
      00089E 18               [12] 2673 	dec	r0
      00089F 74 17            [12] 2674 	mov	a,#0x17
      0008A1 26               [12] 2675 	add	a,@r0
      0008A2 FB               [12] 2676 	mov	r3,a
      0008A3 E4               [12] 2677 	clr	a
      0008A4 08               [12] 2678 	inc	r0
      0008A5 36               [12] 2679 	addc	a,@r0
      0008A6 FE               [12] 2680 	mov	r6,a
      0008A7 08               [12] 2681 	inc	r0
      0008A8 86 07            [24] 2682 	mov	ar7,@r0
      0008AA 8B 82            [24] 2683 	mov	dpl,r3
      0008AC 8E 83            [24] 2684 	mov	dph,r6
      0008AE 8F F0            [24] 2685 	mov	b,r7
      0008B0 E5 81            [12] 2686 	mov	a,sp
      0008B2 24 E9            [12] 2687 	add	a,#0xe9
      0008B4 F8               [12] 2688 	mov	r0,a
      0008B5 E6               [12] 2689 	mov	a,@r0
      0008B6 12r00r00         [24] 2690 	lcall	__gptrput
      0008B9 A3               [24] 2691 	inc	dptr
      0008BA 08               [12] 2692 	inc	r0
      0008BB E6               [12] 2693 	mov	a,@r0
      0008BC 12r00r00         [24] 2694 	lcall	__gptrput
      0008BF A3               [24] 2695 	inc	dptr
      0008C0 08               [12] 2696 	inc	r0
      0008C1 E6               [12] 2697 	mov	a,@r0
      0008C2 12r00r00         [24] 2698 	lcall	__gptrput
                                   2699 ;	../../core/net/mac/phase.c:242: p->buf_list = buf_list;
      0008C5 A8 81            [24] 2700 	mov	r0,sp
      0008C7 18               [12] 2701 	dec	r0
      0008C8 18               [12] 2702 	dec	r0
      0008C9 74 1D            [12] 2703 	mov	a,#0x1d
      0008CB 26               [12] 2704 	add	a,@r0
      0008CC FB               [12] 2705 	mov	r3,a
      0008CD E4               [12] 2706 	clr	a
      0008CE 08               [12] 2707 	inc	r0
      0008CF 36               [12] 2708 	addc	a,@r0
      0008D0 FE               [12] 2709 	mov	r6,a
      0008D1 08               [12] 2710 	inc	r0
      0008D2 86 07            [24] 2711 	mov	ar7,@r0
      0008D4 8B 82            [24] 2712 	mov	dpl,r3
      0008D6 8E 83            [24] 2713 	mov	dph,r6
      0008D8 8F F0            [24] 2714 	mov	b,r7
      0008DA E5 81            [12] 2715 	mov	a,sp
      0008DC 24 E6            [12] 2716 	add	a,#0xe6
      0008DE F8               [12] 2717 	mov	r0,a
      0008DF E6               [12] 2718 	mov	a,@r0
      0008E0 12r00r00         [24] 2719 	lcall	__gptrput
      0008E3 A3               [24] 2720 	inc	dptr
      0008E4 08               [12] 2721 	inc	r0
      0008E5 E6               [12] 2722 	mov	a,@r0
      0008E6 12r00r00         [24] 2723 	lcall	__gptrput
      0008E9 A3               [24] 2724 	inc	dptr
      0008EA 08               [12] 2725 	inc	r0
      0008EB E6               [12] 2726 	mov	a,@r0
      0008EC 12r00r00         [24] 2727 	lcall	__gptrput
                                   2728 ;	../../core/net/mac/phase.c:243: ctimer_set(&p->timer, ctimewait, send_packet, p);
      0008EF A8 81            [24] 2729 	mov	r0,sp
      0008F1 18               [12] 2730 	dec	r0
      0008F2 18               [12] 2731 	dec	r0
      0008F3 86 03            [24] 2732 	mov	ar3,@r0
      0008F5 08               [12] 2733 	inc	r0
      0008F6 86 06            [24] 2734 	mov	ar6,@r0
      0008F8 08               [12] 2735 	inc	r0
      0008F9 86 07            [24] 2736 	mov	ar7,@r0
      0008FB C0 03            [24] 2737 	push	ar3
      0008FD C0 06            [24] 2738 	push	ar6
      0008FF C0 07            [24] 2739 	push	ar7
      000901 74rC7            [12] 2740 	mov	a,#_send_packet
      000903 C0 E0            [24] 2741 	push	acc
      000905 74s04            [12] 2742 	mov	a,#(_send_packet >> 8)
      000907 C0 E0            [24] 2743 	push	acc
      000909 E5 81            [12] 2744 	mov	a,sp
      00090B 24 F7            [12] 2745 	add	a,#0xf7
      00090D F8               [12] 2746 	mov	r0,a
      00090E E6               [12] 2747 	mov	a,@r0
      00090F C0 E0            [24] 2748 	push	acc
      000911 08               [12] 2749 	inc	r0
      000912 E6               [12] 2750 	mov	a,@r0
      000913 C0 E0            [24] 2751 	push	acc
      000915 E5 81            [12] 2752 	mov	a,sp
      000917 24 F7            [12] 2753 	add	a,#0xf7
      000919 F8               [12] 2754 	mov	r0,a
      00091A 86 82            [24] 2755 	mov	dpl,@r0
      00091C 08               [12] 2756 	inc	r0
      00091D 86 83            [24] 2757 	mov	dph,@r0
      00091F 08               [12] 2758 	inc	r0
      000920 86 F0            [24] 2759 	mov	b,@r0
      000922 12r00r00         [24] 2760 	lcall	_ctimer_set
      000925 E5 81            [12] 2761 	mov	a,sp
      000927 24 F9            [12] 2762 	add	a,#0xf9
      000929 F5 81            [12] 2763 	mov	sp,a
                                   2764 ;	../../core/net/mac/phase.c:244: return PHASE_DEFERRED;
      00092B 75 82 02         [24] 2765 	mov	dpl,#0x02
      00092E 02r09rA8         [24] 2766 	ljmp	00120$
      000931                       2767 00109$:
                                   2768 ;	../../core/net/mac/phase.c:246: memb_free(&queued_packets_memb, p);
      000931 A8 81            [24] 2769 	mov	r0,sp
      000933 18               [12] 2770 	dec	r0
      000934 18               [12] 2771 	dec	r0
      000935 86 03            [24] 2772 	mov	ar3,@r0
      000937 08               [12] 2773 	inc	r0
      000938 86 06            [24] 2774 	mov	ar6,@r0
      00093A 08               [12] 2775 	inc	r0
      00093B 86 07            [24] 2776 	mov	ar7,@r0
      00093D C0 05            [24] 2777 	push	ar5
      00093F C0 04            [24] 2778 	push	ar4
      000941 C0 03            [24] 2779 	push	ar3
      000943 C0 06            [24] 2780 	push	ar6
      000945 C0 07            [24] 2781 	push	ar7
      000947 90r00r00         [24] 2782 	mov	dptr,#_queued_packets_memb
      00094A 75 F0 00         [24] 2783 	mov	b,#0x00
      00094D 12r00r00         [24] 2784 	lcall	_memb_free
      000950 15 81            [12] 2785 	dec	sp
      000952 15 81            [12] 2786 	dec	sp
      000954 15 81            [12] 2787 	dec	sp
      000956 D0 04            [24] 2788 	pop	ar4
      000958 D0 05            [24] 2789 	pop	ar5
      00095A                       2790 00112$:
                                   2791 ;	../../core/net/mac/phase.c:250: expected = now + wait - guard_time;
      00095A E5 81            [12] 2792 	mov	a,sp
      00095C 24 FA            [12] 2793 	add	a,#0xfa
      00095E F8               [12] 2794 	mov	r0,a
      00095F EC               [12] 2795 	mov	a,r4
      000960 26               [12] 2796 	add	a,@r0
      000961 FC               [12] 2797 	mov	r4,a
      000962 ED               [12] 2798 	mov	a,r5
      000963 08               [12] 2799 	inc	r0
      000964 36               [12] 2800 	addc	a,@r0
      000965 FD               [12] 2801 	mov	r5,a
      000966 E5 81            [12] 2802 	mov	a,sp
      000968 24 EE            [12] 2803 	add	a,#0xee
      00096A F8               [12] 2804 	mov	r0,a
      00096B EC               [12] 2805 	mov	a,r4
      00096C C3               [12] 2806 	clr	c
      00096D 96               [12] 2807 	subb	a,@r0
      00096E FC               [12] 2808 	mov	r4,a
      00096F ED               [12] 2809 	mov	a,r5
      000970 08               [12] 2810 	inc	r0
      000971 96               [12] 2811 	subb	a,@r0
      000972 FD               [12] 2812 	mov	r5,a
      000973 8C 06            [24] 2813 	mov	ar6,r4
      000975 8D 07            [24] 2814 	mov	ar7,r5
                                   2815 ;	../../core/net/mac/phase.c:251: if(!RTIMER_CLOCK_LT(expected, now)) {
      000977 E5 81            [12] 2816 	mov	a,sp
      000979 24 FA            [12] 2817 	add	a,#0xfa
      00097B F8               [12] 2818 	mov	r0,a
      00097C EE               [12] 2819 	mov	a,r6
      00097D C3               [12] 2820 	clr	c
      00097E 96               [12] 2821 	subb	a,@r0
      00097F FC               [12] 2822 	mov	r4,a
      000980 EF               [12] 2823 	mov	a,r7
      000981 08               [12] 2824 	inc	r0
      000982 96               [12] 2825 	subb	a,@r0
      000983 FD               [12] 2826 	mov	r5,a
      000984 20 E7 19         [24] 2827 	jb	acc.7,00117$
                                   2828 ;	../../core/net/mac/phase.c:254: while(RTIMER_CLOCK_LT(RTIMER_NOW(), expected));
      000987                       2829 00113$:
      000987 AC E2            [24] 2830 	mov	r4,_T1CNTL
      000989 7D 00            [12] 2831 	mov	r5,#0x00
      00098B AA E3            [24] 2832 	mov	r2,_T1CNTH
      00098D 8A 03            [24] 2833 	mov	ar3,r2
      00098F E4               [12] 2834 	clr	a
      000990 FA               [12] 2835 	mov	r2,a
      000991 2C               [12] 2836 	add	a,r4
      000992 FC               [12] 2837 	mov	r4,a
      000993 EB               [12] 2838 	mov	a,r3
      000994 3D               [12] 2839 	addc	a,r5
      000995 FD               [12] 2840 	mov	r5,a
      000996 EC               [12] 2841 	mov	a,r4
      000997 C3               [12] 2842 	clr	c
      000998 9E               [12] 2843 	subb	a,r6
      000999 FC               [12] 2844 	mov	r4,a
      00099A ED               [12] 2845 	mov	a,r5
      00099B 9F               [12] 2846 	subb	a,r7
      00099C FD               [12] 2847 	mov	r5,a
      00099D 20 E7 E7         [24] 2848 	jb	acc.7,00113$
      0009A0                       2849 00117$:
                                   2850 ;	../../core/net/mac/phase.c:256: return PHASE_SEND_NOW;
      0009A0 75 82 01         [24] 2851 	mov	dpl,#0x01
      0009A3 80 03            [24] 2852 	sjmp	00120$
      0009A5                       2853 00119$:
                                   2854 ;	../../core/net/mac/phase.c:258: return PHASE_UNKNOWN;
      0009A5 75 82 00         [24] 2855 	mov	dpl,#0x00
      0009A8                       2856 00120$:
                                   2857 ;	../../core/net/mac/phase.c:259: }
      0009A8 E5 81            [12] 2858 	mov	a,sp
      0009AA 24 F6            [12] 2859 	add	a,#0xf6
      0009AC F5 81            [12] 2860 	mov	sp,a
      0009AE 22               [24] 2861 	ret
                                   2862 ;------------------------------------------------------------
                                   2863 ;Allocation info for local variables in function 'phase_init'
                                   2864 ;------------------------------------------------------------
                                   2865 ;list                      Allocated to registers r5 r6 r7 
                                   2866 ;------------------------------------------------------------
                                   2867 ;	../../core/net/mac/phase.c:262: phase_init(struct phase_list *list)
                                   2868 ;	-----------------------------------------
                                   2869 ;	 function phase_init
                                   2870 ;	-----------------------------------------
      0009AF                       2871 _phase_init:
                                   2872 ;	../../core/net/mac/phase.c:264: list_init(*list->list);
      0009AF AD 82            [24] 2873 	mov	r5,dpl
      0009B1 AE 83            [24] 2874 	mov	r6,dph
      0009B3 AF F0            [24] 2875 	mov	r7,b
      0009B5 12r00r00         [24] 2876 	lcall	__gptrget
      0009B8 FA               [12] 2877 	mov	r2,a
      0009B9 A3               [24] 2878 	inc	dptr
      0009BA 12r00r00         [24] 2879 	lcall	__gptrget
      0009BD FB               [12] 2880 	mov	r3,a
      0009BE A3               [24] 2881 	inc	dptr
      0009BF 12r00r00         [24] 2882 	lcall	__gptrget
      0009C2 FC               [12] 2883 	mov	r4,a
      0009C3 8A 82            [24] 2884 	mov	dpl,r2
      0009C5 8B 83            [24] 2885 	mov	dph,r3
      0009C7 8C F0            [24] 2886 	mov	b,r4
      0009C9 12r00r00         [24] 2887 	lcall	__gptrget
      0009CC FA               [12] 2888 	mov	r2,a
      0009CD A3               [24] 2889 	inc	dptr
      0009CE 12r00r00         [24] 2890 	lcall	__gptrget
      0009D1 FB               [12] 2891 	mov	r3,a
      0009D2 A3               [24] 2892 	inc	dptr
      0009D3 12r00r00         [24] 2893 	lcall	__gptrget
      0009D6 FC               [12] 2894 	mov	r4,a
      0009D7 8A 82            [24] 2895 	mov	dpl,r2
      0009D9 8B 83            [24] 2896 	mov	dph,r3
      0009DB 8C F0            [24] 2897 	mov	b,r4
      0009DD C0 07            [24] 2898 	push	ar7
      0009DF C0 06            [24] 2899 	push	ar6
      0009E1 C0 05            [24] 2900 	push	ar5
      0009E3 12r00r00         [24] 2901 	lcall	_list_init
      0009E6 D0 05            [24] 2902 	pop	ar5
      0009E8 D0 06            [24] 2903 	pop	ar6
      0009EA D0 07            [24] 2904 	pop	ar7
                                   2905 ;	../../core/net/mac/phase.c:265: memb_init(list->memb);
      0009EC 74 03            [12] 2906 	mov	a,#0x03
      0009EE 2D               [12] 2907 	add	a,r5
      0009EF FD               [12] 2908 	mov	r5,a
      0009F0 E4               [12] 2909 	clr	a
      0009F1 3E               [12] 2910 	addc	a,r6
      0009F2 FE               [12] 2911 	mov	r6,a
      0009F3 8D 82            [24] 2912 	mov	dpl,r5
      0009F5 8E 83            [24] 2913 	mov	dph,r6
      0009F7 8F F0            [24] 2914 	mov	b,r7
      0009F9 12r00r00         [24] 2915 	lcall	__gptrget
      0009FC FD               [12] 2916 	mov	r5,a
      0009FD A3               [24] 2917 	inc	dptr
      0009FE 12r00r00         [24] 2918 	lcall	__gptrget
      000A01 FE               [12] 2919 	mov	r6,a
      000A02 A3               [24] 2920 	inc	dptr
      000A03 12r00r00         [24] 2921 	lcall	__gptrget
      000A06 FF               [12] 2922 	mov	r7,a
      000A07 8D 82            [24] 2923 	mov	dpl,r5
      000A09 8E 83            [24] 2924 	mov	dph,r6
      000A0B 8F F0            [24] 2925 	mov	b,r7
      000A0D 12r00r00         [24] 2926 	lcall	_memb_init
                                   2927 ;	../../core/net/mac/phase.c:266: memb_init(&queued_packets_memb);
      000A10 90r00r00         [24] 2928 	mov	dptr,#_queued_packets_memb
      000A13 75 F0 00         [24] 2929 	mov	b,#0x00
                                   2930 ;	../../core/net/mac/phase.c:267: }
      000A16 02r00r00         [24] 2931 	ljmp	_memb_init
                                   2932 	.area CSEG    (CODE)
                                   2933 	.area CONST   (CODE)
                                   2934 	.area XINIT   (CODE)
      000000                       2935 __xinit__queued_packets_memb:
      000000 20 00                 2936 	.byte #0x20, #0x00	; 32
      000002 08 00                 2937 	.byte #0x08, #0x00	; 8
      000004r00s00 00              2938 	.byte _queued_packets_memb_memb_count, (_queued_packets_memb_memb_count >> 8),#0x00
      000007r08s00 00              2939 	.byte _queued_packets_memb_memb_mem, (_queued_packets_memb_memb_mem >> 8),#0x00
                                   2940 	.area CABS    (ABS,CODE)
