                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module polite
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _random_rand
                                     12 	.globl _queuebuf_datalen
                                     13 	.globl _queuebuf_dataptr
                                     14 	.globl _queuebuf_free
                                     15 	.globl _queuebuf_to_packetbuf
                                     16 	.globl _queuebuf_new_from_packetbuf
                                     17 	.globl _abc_send
                                     18 	.globl _abc_close
                                     19 	.globl _abc_open
                                     20 	.globl _packetbuf_datalen
                                     21 	.globl _packetbuf_dataptr
                                     22 	.globl _ctimer_stop
                                     23 	.globl _ctimer_set
                                     24 	.globl _memcmp
                                     25 	.globl _ACTIVE
                                     26 	.globl _TX_BYTE
                                     27 	.globl _RX_BYTE
                                     28 	.globl _ERR
                                     29 	.globl _FE
                                     30 	.globl _SLAVE
                                     31 	.globl _RE
                                     32 	.globl _MODE
                                     33 	.globl _T3OVFIF
                                     34 	.globl _T3CH0IF
                                     35 	.globl _T3CH1IF
                                     36 	.globl _T4OVFIF
                                     37 	.globl _T4CH0IF
                                     38 	.globl _T4CH1IF
                                     39 	.globl _OVFIM
                                     40 	.globl _B_0
                                     41 	.globl _B_1
                                     42 	.globl _B_2
                                     43 	.globl _B_3
                                     44 	.globl _B_4
                                     45 	.globl _B_5
                                     46 	.globl _B_6
                                     47 	.globl _B_7
                                     48 	.globl _P2IF
                                     49 	.globl _UTX0IF
                                     50 	.globl _UTX1IF
                                     51 	.globl _P1IF
                                     52 	.globl _WDTIF
                                     53 	.globl _ACC_0
                                     54 	.globl _ACC_1
                                     55 	.globl _ACC_2
                                     56 	.globl _ACC_3
                                     57 	.globl _ACC_4
                                     58 	.globl _ACC_5
                                     59 	.globl _ACC_6
                                     60 	.globl _ACC_7
                                     61 	.globl _P
                                     62 	.globl _F1
                                     63 	.globl _OV
                                     64 	.globl _RS0
                                     65 	.globl _RS1
                                     66 	.globl _F0
                                     67 	.globl _AC
                                     68 	.globl _CY
                                     69 	.globl _DMAIF
                                     70 	.globl _T1IF
                                     71 	.globl _T2IF
                                     72 	.globl _T3IF
                                     73 	.globl _T4IF
                                     74 	.globl _P0IF
                                     75 	.globl _STIF
                                     76 	.globl _DMAIE
                                     77 	.globl _T1IE
                                     78 	.globl _T2IE
                                     79 	.globl _T3IE
                                     80 	.globl _T4IE
                                     81 	.globl _P0IE
                                     82 	.globl _RFERRIE
                                     83 	.globl _ADCIE
                                     84 	.globl _URX0IE
                                     85 	.globl _URX1IE
                                     86 	.globl _ENCIE
                                     87 	.globl _STIE
                                     88 	.globl _EA
                                     89 	.globl _P2_0
                                     90 	.globl _P2_1
                                     91 	.globl _P2_2
                                     92 	.globl _P2_3
                                     93 	.globl _P2_4
                                     94 	.globl _P2_5
                                     95 	.globl _P2_6
                                     96 	.globl _P2_7
                                     97 	.globl _ENCIF_0
                                     98 	.globl _ENCIF_1
                                     99 	.globl _P1_0
                                    100 	.globl _P1_1
                                    101 	.globl _P1_2
                                    102 	.globl _P1_3
                                    103 	.globl _P1_4
                                    104 	.globl _P1_5
                                    105 	.globl _P1_6
                                    106 	.globl _P1_7
                                    107 	.globl _IT0
                                    108 	.globl _RFERRIF
                                    109 	.globl _IT1
                                    110 	.globl _URX0IF
                                    111 	.globl _ADCIF
                                    112 	.globl _URX1IF
                                    113 	.globl _P0_0
                                    114 	.globl _P0_1
                                    115 	.globl _P0_2
                                    116 	.globl _P0_3
                                    117 	.globl _P0_4
                                    118 	.globl _P0_5
                                    119 	.globl _P0_6
                                    120 	.globl _P0_7
                                    121 	.globl _WDCTL
                                    122 	.globl _U1GCR
                                    123 	.globl _U1UCR
                                    124 	.globl _U1BAUD
                                    125 	.globl _U1DBUF
                                    126 	.globl _U1CSR
                                    127 	.globl _U0GCR
                                    128 	.globl _U0UCR
                                    129 	.globl _U0BAUD
                                    130 	.globl _U0DBUF
                                    131 	.globl _U0CSR
                                    132 	.globl _TIMIF
                                    133 	.globl _T4CC1
                                    134 	.globl _T4CCTL1
                                    135 	.globl _T4CC0
                                    136 	.globl _T4CCTL0
                                    137 	.globl _T4CTL
                                    138 	.globl _T4CNT
                                    139 	.globl _T3CC1
                                    140 	.globl _T3CCTL1
                                    141 	.globl _T3CC0
                                    142 	.globl _T3CCTL0
                                    143 	.globl _T3CTL
                                    144 	.globl _T3CNT
                                    145 	.globl _T2MSEL
                                    146 	.globl _T2IRQM
                                    147 	.globl _T2MOVF2
                                    148 	.globl _T2MOVF1
                                    149 	.globl _T2MOVF0
                                    150 	.globl _T2M1
                                    151 	.globl _T2M0
                                    152 	.globl _T2IRQF
                                    153 	.globl _T2EVTCFG
                                    154 	.globl _T2CTRL
                                    155 	.globl _T1STAT
                                    156 	.globl _T1CCTL2
                                    157 	.globl _T1CCTL1
                                    158 	.globl _T1CCTL0
                                    159 	.globl _T1CTL
                                    160 	.globl _T1CNTH
                                    161 	.globl _T1CNTL
                                    162 	.globl _T1CC2H
                                    163 	.globl _T1CC2L
                                    164 	.globl _T1CC1H
                                    165 	.globl _T1CC1L
                                    166 	.globl _T1CC0H
                                    167 	.globl _T1CC0L
                                    168 	.globl _CLKCONSTA
                                    169 	.globl _CLKCONCMD
                                    170 	.globl _SLEEPSTA
                                    171 	.globl _SLEEPCMD
                                    172 	.globl _STLOAD
                                    173 	.globl _ST2
                                    174 	.globl _ST1
                                    175 	.globl _ST0
                                    176 	.globl _RFERRF
                                    177 	.globl _RFIRQF0
                                    178 	.globl _RFST
                                    179 	.globl _RFD
                                    180 	.globl _RFIRQF1
                                    181 	.globl _PSBANK
                                    182 	.globl _FMAP
                                    183 	.globl _MEMCTR
                                    184 	.globl __XPAGE
                                    185 	.globl _MPAGE
                                    186 	.globl _PMUX
                                    187 	.globl _P2DIR
                                    188 	.globl _P1DIR
                                    189 	.globl _P0DIR
                                    190 	.globl _P2INP
                                    191 	.globl _P1INP
                                    192 	.globl _P2SEL
                                    193 	.globl _P1SEL
                                    194 	.globl _P0SEL
                                    195 	.globl _APCFG
                                    196 	.globl _PERCFG
                                    197 	.globl _P0INP
                                    198 	.globl _P2IEN
                                    199 	.globl _P1IEN
                                    200 	.globl _P0IEN
                                    201 	.globl _PICTL
                                    202 	.globl _P2IFG
                                    203 	.globl _P1IFG
                                    204 	.globl _P0IFG
                                    205 	.globl _DMAREQ
                                    206 	.globl _DMAARM
                                    207 	.globl _DMA0CFGH
                                    208 	.globl _DMA0CFGL
                                    209 	.globl _DMA1CFGH
                                    210 	.globl _DMA1CFGL
                                    211 	.globl _DMAIRQ
                                    212 	.globl _ENCCS
                                    213 	.globl _ENCDO
                                    214 	.globl _ENCDI
                                    215 	.globl _RNDH
                                    216 	.globl _RNDL
                                    217 	.globl _ADCH
                                    218 	.globl _ADCL
                                    219 	.globl _ADCCON3
                                    220 	.globl _ADCCON2
                                    221 	.globl _ADCCON1
                                    222 	.globl _B
                                    223 	.globl _IRCON2
                                    224 	.globl _ACC
                                    225 	.globl _PSW
                                    226 	.globl _IRCON
                                    227 	.globl _IP1
                                    228 	.globl _IEN1
                                    229 	.globl _IP0
                                    230 	.globl _IEN0
                                    231 	.globl _P2
                                    232 	.globl _S1CON
                                    233 	.globl _IEN2
                                    234 	.globl _S0CON
                                    235 	.globl _DPS
                                    236 	.globl _P1
                                    237 	.globl _TCON
                                    238 	.globl _PCON
                                    239 	.globl _DPH1
                                    240 	.globl _DPL1
                                    241 	.globl _DPH0
                                    242 	.globl _DPL0
                                    243 	.globl _SP
                                    244 	.globl _P0
                                    245 	.globl _X_IEEE_ADDR
                                    246 	.globl _X_INFOPAGE
                                    247 	.globl _X_P2DIR
                                    248 	.globl _X_P1DIR
                                    249 	.globl _X_P0DIR
                                    250 	.globl _X_U1GCR
                                    251 	.globl _X_U1UCR
                                    252 	.globl _X_U1BAUD
                                    253 	.globl _X_U1DBUF
                                    254 	.globl _X_U1CSR
                                    255 	.globl _X_P2INP
                                    256 	.globl _X_P1INP
                                    257 	.globl _X_P2SEL
                                    258 	.globl _X_P1SEL
                                    259 	.globl _X_P0SEL
                                    260 	.globl _X_APCFG
                                    261 	.globl _X_PERCFG
                                    262 	.globl _X_T4CC1
                                    263 	.globl _X_T4CCTL1
                                    264 	.globl _X_T4CC0
                                    265 	.globl _X_T4CCTL0
                                    266 	.globl _X_T4CTL
                                    267 	.globl _X_T4CNT
                                    268 	.globl _X_RFIRQF0
                                    269 	.globl _X_T1CCTL2
                                    270 	.globl _X_T1CCTL1
                                    271 	.globl _X_T1CCTL0
                                    272 	.globl _X_T1CTL
                                    273 	.globl _X_T1CNTH
                                    274 	.globl _X_T1CNTL
                                    275 	.globl _X_RFST
                                    276 	.globl _X_T1CC2H
                                    277 	.globl _X_T1CC2L
                                    278 	.globl _X_T1CC1H
                                    279 	.globl _X_T1CC1L
                                    280 	.globl _X_T1CC0H
                                    281 	.globl _X_T1CC0L
                                    282 	.globl _X_RFD
                                    283 	.globl _X_TIMIF
                                    284 	.globl _X_DMAREQ
                                    285 	.globl _X_DMAARM
                                    286 	.globl _X_DMA0CFGH
                                    287 	.globl _X_DMA0CFGL
                                    288 	.globl _X_DMA1CFGH
                                    289 	.globl _X_DMA1CFGL
                                    290 	.globl _X_DMAIRQ
                                    291 	.globl _X_T3CC1
                                    292 	.globl _X_T3CCTL1
                                    293 	.globl _X_T3CC0
                                    294 	.globl _X_T3CCTL0
                                    295 	.globl _X_T3CTL
                                    296 	.globl _X_T3CNT
                                    297 	.globl _X_WDCTL
                                    298 	.globl _X_MEMCTR
                                    299 	.globl _X_CLKCONCMD
                                    300 	.globl _X_U0GCR
                                    301 	.globl _X_U0UCR
                                    302 	.globl _X_T2MSEL
                                    303 	.globl _X_U0BAUD
                                    304 	.globl _X_U0DBUF
                                    305 	.globl _X_RFERRF
                                    306 	.globl _X_SLEEPCMD
                                    307 	.globl _X_RNDH
                                    308 	.globl _X_RNDL
                                    309 	.globl _X_ADCH
                                    310 	.globl _X_ADCL
                                    311 	.globl _X_ADCCON3
                                    312 	.globl _X_ADCCON2
                                    313 	.globl _X_ADCCON1
                                    314 	.globl _X_ENCCS
                                    315 	.globl _X_ENCDO
                                    316 	.globl _X_ENCDI
                                    317 	.globl _X_T1STAT
                                    318 	.globl _X_PMUX
                                    319 	.globl _X_STLOAD
                                    320 	.globl _X_P2IEN
                                    321 	.globl _X_P0IEN
                                    322 	.globl _X_T2IRQM
                                    323 	.globl _X_T2MOVF2
                                    324 	.globl _X_T2MOVF1
                                    325 	.globl _X_T2MOVF0
                                    326 	.globl _X_T2M1
                                    327 	.globl _X_T2M0
                                    328 	.globl _X_T2IRQF
                                    329 	.globl _X_P2
                                    330 	.globl _X_PSBANK
                                    331 	.globl _X_FMAP
                                    332 	.globl _X_CLKCONSTA
                                    333 	.globl _X_SLEEPSTA
                                    334 	.globl _X_T2EVTCFG
                                    335 	.globl _X_ST2
                                    336 	.globl _X_ST1
                                    337 	.globl _X_ST0
                                    338 	.globl _X_T2CTRL
                                    339 	.globl _X__XPAGE
                                    340 	.globl _X_MPAGE
                                    341 	.globl _X_RFIRQF1
                                    342 	.globl _X_P1
                                    343 	.globl _X_P0INP
                                    344 	.globl _X_P1IEN
                                    345 	.globl _X_PICTL
                                    346 	.globl _X_P2IFG
                                    347 	.globl _X_P1IFG
                                    348 	.globl _X_P0IFG
                                    349 	.globl _X_U0CSR
                                    350 	.globl _X_P0
                                    351 	.globl _USBF5
                                    352 	.globl _USBF4
                                    353 	.globl _USBF3
                                    354 	.globl _USBF2
                                    355 	.globl _USBF1
                                    356 	.globl _USBF0
                                    357 	.globl _USBCNTH
                                    358 	.globl _USBCNTL
                                    359 	.globl _USBCNT0
                                    360 	.globl _USBCSOH
                                    361 	.globl _USBCSOL
                                    362 	.globl _USBMAXO
                                    363 	.globl _USBCSIH
                                    364 	.globl _USBCSIL
                                    365 	.globl _USBCS0
                                    366 	.globl _USBMAXI
                                    367 	.globl _USBCTRL
                                    368 	.globl _USBINDEX
                                    369 	.globl _USBFRMH
                                    370 	.globl _USBFRML
                                    371 	.globl _USBCIE
                                    372 	.globl _USBOIE
                                    373 	.globl _USBIIE
                                    374 	.globl _USBCIF
                                    375 	.globl _USBOIF
                                    376 	.globl _USBIIF
                                    377 	.globl _USBPOW
                                    378 	.globl _USBADDR
                                    379 	.globl _CSPT
                                    380 	.globl _CSPZ
                                    381 	.globl _CSPY
                                    382 	.globl _CSPX
                                    383 	.globl _CSPSTAT
                                    384 	.globl _CSPCTRL
                                    385 	.globl _CSPPROG23
                                    386 	.globl _CSPPROG22
                                    387 	.globl _CSPPROG21
                                    388 	.globl _CSPPROG20
                                    389 	.globl _CSPPROG19
                                    390 	.globl _CSPPROG18
                                    391 	.globl _CSPPROG17
                                    392 	.globl _CSPPROG16
                                    393 	.globl _CSPPROG15
                                    394 	.globl _CSPPROG14
                                    395 	.globl _CSPPROG13
                                    396 	.globl _CSPPROG12
                                    397 	.globl _CSPPROG11
                                    398 	.globl _CSPPROG10
                                    399 	.globl _CSPPROG9
                                    400 	.globl _CSPPROG8
                                    401 	.globl _CSPPROG7
                                    402 	.globl _CSPPROG6
                                    403 	.globl _CSPPROG5
                                    404 	.globl _CSPPROG4
                                    405 	.globl _CSPPROG3
                                    406 	.globl _CSPPROG2
                                    407 	.globl _CSPPROG1
                                    408 	.globl _CSPPROG0
                                    409 	.globl _RFC_OBS_CTRL2
                                    410 	.globl _RFC_OBS_CTRL1
                                    411 	.globl _RFC_OBS_CTRL0
                                    412 	.globl _TXFILTCFG
                                    413 	.globl _PTEST1
                                    414 	.globl _PTEST0
                                    415 	.globl _ATEST
                                    416 	.globl _DACTEST2
                                    417 	.globl _DACTEST1
                                    418 	.globl _DACTEST0
                                    419 	.globl _MDMTEST1
                                    420 	.globl _MDMTEST0
                                    421 	.globl _ADCTEST2
                                    422 	.globl _ADCTEST1
                                    423 	.globl _ADCTEST0
                                    424 	.globl _AGCCTRL3
                                    425 	.globl _AGCCTRL2
                                    426 	.globl _AGCCTRL1
                                    427 	.globl _AGCCTRL0
                                    428 	.globl _FSCAL3
                                    429 	.globl _FSCAL2
                                    430 	.globl _FSCAL1
                                    431 	.globl _FSCAL0
                                    432 	.globl _FSCTRL
                                    433 	.globl _RXCTRL
                                    434 	.globl _FREQEST
                                    435 	.globl _MDMCTRL1
                                    436 	.globl _MDMCTRL0
                                    437 	.globl _RFRND
                                    438 	.globl _RFERRM
                                    439 	.globl _RFIRQM1
                                    440 	.globl _RFIRQM0
                                    441 	.globl _TXLAST_PTR
                                    442 	.globl _TXFIRST_PTR
                                    443 	.globl _RXP1_PTR
                                    444 	.globl _RXLAST_PTR
                                    445 	.globl _RXFIRST_PTR
                                    446 	.globl _TXFIFOCNT
                                    447 	.globl _RXFIFOCNT
                                    448 	.globl _RXFIRST
                                    449 	.globl _RSSISTAT
                                    450 	.globl _RSSI
                                    451 	.globl _CCACTRL1
                                    452 	.globl _CCACTRL0
                                    453 	.globl _FSMCTRL
                                    454 	.globl _FIFOPCTRL
                                    455 	.globl _FSMSTAT1
                                    456 	.globl _FSMSTAT0
                                    457 	.globl _TXCTRL
                                    458 	.globl _TXPOWER
                                    459 	.globl _FREQCTRL
                                    460 	.globl _FREQTUNE
                                    461 	.globl _RXMASKCLR
                                    462 	.globl _RXMASKSET
                                    463 	.globl _RXENABLE
                                    464 	.globl _FRMCTRL1
                                    465 	.globl _FRMCTRL0
                                    466 	.globl _SRCEXTEN2
                                    467 	.globl _SRCEXTEN1
                                    468 	.globl _SRCEXTEN0
                                    469 	.globl _SRCSHORTEN2
                                    470 	.globl _SRCSHORTEN1
                                    471 	.globl _SRCSHORTEN0
                                    472 	.globl _SRCMATCH
                                    473 	.globl _FRMFILT1
                                    474 	.globl _FRMFILT0
                                    475 	.globl _SHORT_ADDR1
                                    476 	.globl _SHORT_ADDR0
                                    477 	.globl _PAN_ID1
                                    478 	.globl _PAN_ID0
                                    479 	.globl _EXT_ADDR7
                                    480 	.globl _EXT_ADDR6
                                    481 	.globl _EXT_ADDR5
                                    482 	.globl _EXT_ADDR4
                                    483 	.globl _EXT_ADDR3
                                    484 	.globl _EXT_ADDR2
                                    485 	.globl _EXT_ADDR1
                                    486 	.globl _EXT_ADDR0
                                    487 	.globl _SRCSHORTPENDEN2
                                    488 	.globl _SRCSHORTPENDEN1
                                    489 	.globl _SRCSHORTPENDEN0
                                    490 	.globl _SRCEXTPENDEN2
                                    491 	.globl _SRCEXTPENDEN1
                                    492 	.globl _SRCEXTPENDEN0
                                    493 	.globl _SRCRESINDEX
                                    494 	.globl _SRCRESMASK2
                                    495 	.globl _SRCRESMASK1
                                    496 	.globl _SRCRESMASK0
                                    497 	.globl _SRC_ADDR_TABLE
                                    498 	.globl _TXFIFO
                                    499 	.globl _RXFIFO
                                    500 	.globl _RFCORE_RAM
                                    501 	.globl _CMPCTL
                                    502 	.globl _OPAMPS
                                    503 	.globl _OPAMPC
                                    504 	.globl _STCV2
                                    505 	.globl _STCV1
                                    506 	.globl _STCV0
                                    507 	.globl _STCS
                                    508 	.globl _STCC
                                    509 	.globl _T1CC4H
                                    510 	.globl _T1CC4L
                                    511 	.globl _T1CC3H
                                    512 	.globl _T1CC3L
                                    513 	.globl _XX_T1CC2H
                                    514 	.globl _XX_T1CC2L
                                    515 	.globl _XX_T1CC1H
                                    516 	.globl _XX_T1CC1L
                                    517 	.globl _XX_T1CC0H
                                    518 	.globl _XX_T1CC0L
                                    519 	.globl _T1CCTL4
                                    520 	.globl _T1CCTL3
                                    521 	.globl _XX_T1CCTL2
                                    522 	.globl _XX_T1CCTL1
                                    523 	.globl _XX_T1CCTL0
                                    524 	.globl _CLD
                                    525 	.globl _IRCTL
                                    526 	.globl _CHIPINFO1
                                    527 	.globl _CHIPINFO0
                                    528 	.globl _FWDATA
                                    529 	.globl _FADDRH
                                    530 	.globl _FADDRL
                                    531 	.globl _FCTL
                                    532 	.globl _IVCTRL
                                    533 	.globl _BATTMON
                                    534 	.globl _SRCRC
                                    535 	.globl _DBGDATA
                                    536 	.globl _TESTREG0
                                    537 	.globl _CHIPID
                                    538 	.globl _CHVER
                                    539 	.globl _OBSSEL5
                                    540 	.globl _OBSSEL4
                                    541 	.globl _OBSSEL3
                                    542 	.globl _OBSSEL2
                                    543 	.globl _OBSSEL1
                                    544 	.globl _OBSSEL0
                                    545 	.globl _I2CIO
                                    546 	.globl _I2CWC
                                    547 	.globl _I2CADDR
                                    548 	.globl _I2CDATA
                                    549 	.globl _I2CSTAT
                                    550 	.globl _I2CCFG
                                    551 	.globl _OPAMPMC
                                    552 	.globl _MONMUX
                                    553 	.globl _polite_open
                                    554 	.globl _polite_close
                                    555 	.globl _polite_send
                                    556 	.globl _polite_cancel
                                    557 ;--------------------------------------------------------
                                    558 ; special function registers
                                    559 ;--------------------------------------------------------
                                    560 	.area RSEG    (ABS,DATA)
      000000                        561 	.org 0x0000
                           000080   562 _P0	=	0x0080
                           000081   563 _SP	=	0x0081
                           000082   564 _DPL0	=	0x0082
                           000083   565 _DPH0	=	0x0083
                           000084   566 _DPL1	=	0x0084
                           000085   567 _DPH1	=	0x0085
                           000087   568 _PCON	=	0x0087
                           000088   569 _TCON	=	0x0088
                           000090   570 _P1	=	0x0090
                           000092   571 _DPS	=	0x0092
                           000098   572 _S0CON	=	0x0098
                           00009A   573 _IEN2	=	0x009a
                           00009B   574 _S1CON	=	0x009b
                           0000A0   575 _P2	=	0x00a0
                           0000A8   576 _IEN0	=	0x00a8
                           0000A9   577 _IP0	=	0x00a9
                           0000B8   578 _IEN1	=	0x00b8
                           0000B9   579 _IP1	=	0x00b9
                           0000C0   580 _IRCON	=	0x00c0
                           0000D0   581 _PSW	=	0x00d0
                           0000E0   582 _ACC	=	0x00e0
                           0000E8   583 _IRCON2	=	0x00e8
                           0000F0   584 _B	=	0x00f0
                           0000B4   585 _ADCCON1	=	0x00b4
                           0000B5   586 _ADCCON2	=	0x00b5
                           0000B6   587 _ADCCON3	=	0x00b6
                           0000BA   588 _ADCL	=	0x00ba
                           0000BB   589 _ADCH	=	0x00bb
                           0000BC   590 _RNDL	=	0x00bc
                           0000BD   591 _RNDH	=	0x00bd
                           0000B1   592 _ENCDI	=	0x00b1
                           0000B2   593 _ENCDO	=	0x00b2
                           0000B3   594 _ENCCS	=	0x00b3
                           0000D1   595 _DMAIRQ	=	0x00d1
                           0000D2   596 _DMA1CFGL	=	0x00d2
                           0000D3   597 _DMA1CFGH	=	0x00d3
                           0000D4   598 _DMA0CFGL	=	0x00d4
                           0000D5   599 _DMA0CFGH	=	0x00d5
                           0000D6   600 _DMAARM	=	0x00d6
                           0000D7   601 _DMAREQ	=	0x00d7
                           000089   602 _P0IFG	=	0x0089
                           00008A   603 _P1IFG	=	0x008a
                           00008B   604 _P2IFG	=	0x008b
                           00008C   605 _PICTL	=	0x008c
                           0000AB   606 _P0IEN	=	0x00ab
                           00008D   607 _P1IEN	=	0x008d
                           0000AC   608 _P2IEN	=	0x00ac
                           00008F   609 _P0INP	=	0x008f
                           0000F1   610 _PERCFG	=	0x00f1
                           0000F2   611 _APCFG	=	0x00f2
                           0000F3   612 _P0SEL	=	0x00f3
                           0000F4   613 _P1SEL	=	0x00f4
                           0000F5   614 _P2SEL	=	0x00f5
                           0000F6   615 _P1INP	=	0x00f6
                           0000F7   616 _P2INP	=	0x00f7
                           0000FD   617 _P0DIR	=	0x00fd
                           0000FE   618 _P1DIR	=	0x00fe
                           0000FF   619 _P2DIR	=	0x00ff
                           0000AE   620 _PMUX	=	0x00ae
                           000093   621 _MPAGE	=	0x0093
                           000093   622 __XPAGE	=	0x0093
                           0000C7   623 _MEMCTR	=	0x00c7
                           00009F   624 _FMAP	=	0x009f
                           00009F   625 _PSBANK	=	0x009f
                           000091   626 _RFIRQF1	=	0x0091
                           0000D9   627 _RFD	=	0x00d9
                           0000E1   628 _RFST	=	0x00e1
                           0000E9   629 _RFIRQF0	=	0x00e9
                           0000BF   630 _RFERRF	=	0x00bf
                           000095   631 _ST0	=	0x0095
                           000096   632 _ST1	=	0x0096
                           000097   633 _ST2	=	0x0097
                           0000AD   634 _STLOAD	=	0x00ad
                           0000BE   635 _SLEEPCMD	=	0x00be
                           00009D   636 _SLEEPSTA	=	0x009d
                           0000C6   637 _CLKCONCMD	=	0x00c6
                           00009E   638 _CLKCONSTA	=	0x009e
                           0000DA   639 _T1CC0L	=	0x00da
                           0000DB   640 _T1CC0H	=	0x00db
                           0000DC   641 _T1CC1L	=	0x00dc
                           0000DD   642 _T1CC1H	=	0x00dd
                           0000DE   643 _T1CC2L	=	0x00de
                           0000DF   644 _T1CC2H	=	0x00df
                           0000E2   645 _T1CNTL	=	0x00e2
                           0000E3   646 _T1CNTH	=	0x00e3
                           0000E4   647 _T1CTL	=	0x00e4
                           0000E5   648 _T1CCTL0	=	0x00e5
                           0000E6   649 _T1CCTL1	=	0x00e6
                           0000E7   650 _T1CCTL2	=	0x00e7
                           0000AF   651 _T1STAT	=	0x00af
                           000094   652 _T2CTRL	=	0x0094
                           00009C   653 _T2EVTCFG	=	0x009c
                           0000A1   654 _T2IRQF	=	0x00a1
                           0000A2   655 _T2M0	=	0x00a2
                           0000A3   656 _T2M1	=	0x00a3
                           0000A4   657 _T2MOVF0	=	0x00a4
                           0000A5   658 _T2MOVF1	=	0x00a5
                           0000A6   659 _T2MOVF2	=	0x00a6
                           0000A7   660 _T2IRQM	=	0x00a7
                           0000C3   661 _T2MSEL	=	0x00c3
                           0000CA   662 _T3CNT	=	0x00ca
                           0000CB   663 _T3CTL	=	0x00cb
                           0000CC   664 _T3CCTL0	=	0x00cc
                           0000CD   665 _T3CC0	=	0x00cd
                           0000CE   666 _T3CCTL1	=	0x00ce
                           0000CF   667 _T3CC1	=	0x00cf
                           0000EA   668 _T4CNT	=	0x00ea
                           0000EB   669 _T4CTL	=	0x00eb
                           0000EC   670 _T4CCTL0	=	0x00ec
                           0000ED   671 _T4CC0	=	0x00ed
                           0000EE   672 _T4CCTL1	=	0x00ee
                           0000EF   673 _T4CC1	=	0x00ef
                           0000D8   674 _TIMIF	=	0x00d8
                           000086   675 _U0CSR	=	0x0086
                           0000C1   676 _U0DBUF	=	0x00c1
                           0000C2   677 _U0BAUD	=	0x00c2
                           0000C4   678 _U0UCR	=	0x00c4
                           0000C5   679 _U0GCR	=	0x00c5
                           0000F8   680 _U1CSR	=	0x00f8
                           0000F9   681 _U1DBUF	=	0x00f9
                           0000FA   682 _U1BAUD	=	0x00fa
                           0000FB   683 _U1UCR	=	0x00fb
                           0000FC   684 _U1GCR	=	0x00fc
                           0000C9   685 _WDCTL	=	0x00c9
                                    686 ;--------------------------------------------------------
                                    687 ; special function bits
                                    688 ;--------------------------------------------------------
                                    689 	.area RSEG    (ABS,DATA)
      000000                        690 	.org 0x0000
                           000087   691 _P0_7	=	0x0087
                           000086   692 _P0_6	=	0x0086
                           000085   693 _P0_5	=	0x0085
                           000084   694 _P0_4	=	0x0084
                           000083   695 _P0_3	=	0x0083
                           000082   696 _P0_2	=	0x0082
                           000081   697 _P0_1	=	0x0081
                           000080   698 _P0_0	=	0x0080
                           00008F   699 _URX1IF	=	0x008f
                           00008D   700 _ADCIF	=	0x008d
                           00008B   701 _URX0IF	=	0x008b
                           00008A   702 _IT1	=	0x008a
                           000089   703 _RFERRIF	=	0x0089
                           000088   704 _IT0	=	0x0088
                           000097   705 _P1_7	=	0x0097
                           000096   706 _P1_6	=	0x0096
                           000095   707 _P1_5	=	0x0095
                           000094   708 _P1_4	=	0x0094
                           000093   709 _P1_3	=	0x0093
                           000092   710 _P1_2	=	0x0092
                           000091   711 _P1_1	=	0x0091
                           000090   712 _P1_0	=	0x0090
                           000099   713 _ENCIF_1	=	0x0099
                           000098   714 _ENCIF_0	=	0x0098
                           0000A7   715 _P2_7	=	0x00a7
                           0000A6   716 _P2_6	=	0x00a6
                           0000A5   717 _P2_5	=	0x00a5
                           0000A4   718 _P2_4	=	0x00a4
                           0000A3   719 _P2_3	=	0x00a3
                           0000A2   720 _P2_2	=	0x00a2
                           0000A1   721 _P2_1	=	0x00a1
                           0000A0   722 _P2_0	=	0x00a0
                           0000AF   723 _EA	=	0x00af
                           0000AD   724 _STIE	=	0x00ad
                           0000AC   725 _ENCIE	=	0x00ac
                           0000AB   726 _URX1IE	=	0x00ab
                           0000AA   727 _URX0IE	=	0x00aa
                           0000A9   728 _ADCIE	=	0x00a9
                           0000A8   729 _RFERRIE	=	0x00a8
                           0000BD   730 _P0IE	=	0x00bd
                           0000BC   731 _T4IE	=	0x00bc
                           0000BB   732 _T3IE	=	0x00bb
                           0000BA   733 _T2IE	=	0x00ba
                           0000B9   734 _T1IE	=	0x00b9
                           0000B8   735 _DMAIE	=	0x00b8
                           0000C7   736 _STIF	=	0x00c7
                           0000C5   737 _P0IF	=	0x00c5
                           0000C4   738 _T4IF	=	0x00c4
                           0000C3   739 _T3IF	=	0x00c3
                           0000C2   740 _T2IF	=	0x00c2
                           0000C1   741 _T1IF	=	0x00c1
                           0000C0   742 _DMAIF	=	0x00c0
                           0000D7   743 _CY	=	0x00d7
                           0000D6   744 _AC	=	0x00d6
                           0000D5   745 _F0	=	0x00d5
                           0000D4   746 _RS1	=	0x00d4
                           0000D3   747 _RS0	=	0x00d3
                           0000D2   748 _OV	=	0x00d2
                           0000D1   749 _F1	=	0x00d1
                           0000D0   750 _P	=	0x00d0
                           0000E7   751 _ACC_7	=	0x00e7
                           0000E6   752 _ACC_6	=	0x00e6
                           0000E5   753 _ACC_5	=	0x00e5
                           0000E4   754 _ACC_4	=	0x00e4
                           0000E3   755 _ACC_3	=	0x00e3
                           0000E2   756 _ACC_2	=	0x00e2
                           0000E1   757 _ACC_1	=	0x00e1
                           0000E0   758 _ACC_0	=	0x00e0
                           0000EC   759 _WDTIF	=	0x00ec
                           0000EB   760 _P1IF	=	0x00eb
                           0000EA   761 _UTX1IF	=	0x00ea
                           0000E9   762 _UTX0IF	=	0x00e9
                           0000E8   763 _P2IF	=	0x00e8
                           0000F7   764 _B_7	=	0x00f7
                           0000F6   765 _B_6	=	0x00f6
                           0000F5   766 _B_5	=	0x00f5
                           0000F4   767 _B_4	=	0x00f4
                           0000F3   768 _B_3	=	0x00f3
                           0000F2   769 _B_2	=	0x00f2
                           0000F1   770 _B_1	=	0x00f1
                           0000F0   771 _B_0	=	0x00f0
                           0000DE   772 _OVFIM	=	0x00de
                           0000DD   773 _T4CH1IF	=	0x00dd
                           0000DC   774 _T4CH0IF	=	0x00dc
                           0000DB   775 _T4OVFIF	=	0x00db
                           0000DA   776 _T3CH1IF	=	0x00da
                           0000D9   777 _T3CH0IF	=	0x00d9
                           0000D8   778 _T3OVFIF	=	0x00d8
                           0000FF   779 _MODE	=	0x00ff
                           0000FE   780 _RE	=	0x00fe
                           0000FD   781 _SLAVE	=	0x00fd
                           0000FC   782 _FE	=	0x00fc
                           0000FB   783 _ERR	=	0x00fb
                           0000FA   784 _RX_BYTE	=	0x00fa
                           0000F9   785 _TX_BYTE	=	0x00f9
                           0000F8   786 _ACTIVE	=	0x00f8
                                    787 ;--------------------------------------------------------
                                    788 ; overlayable register banks
                                    789 ;--------------------------------------------------------
                                    790 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        791 	.ds 8
                                    792 ;--------------------------------------------------------
                                    793 ; internal ram data
                                    794 ;--------------------------------------------------------
                                    795 	.area DSEG    (DATA)
                                    796 ;--------------------------------------------------------
                                    797 ; overlayable items in internal ram 
                                    798 ;--------------------------------------------------------
                                    799 ;--------------------------------------------------------
                                    800 ; indirectly addressable internal ram data
                                    801 ;--------------------------------------------------------
                                    802 	.area ISEG    (DATA)
                                    803 ;--------------------------------------------------------
                                    804 ; absolute internal ram data
                                    805 ;--------------------------------------------------------
                                    806 	.area IABS    (ABS,DATA)
                                    807 	.area IABS    (ABS,DATA)
                                    808 ;--------------------------------------------------------
                                    809 ; bit data
                                    810 ;--------------------------------------------------------
                                    811 	.area BSEG    (BIT)
                                    812 ;--------------------------------------------------------
                                    813 ; paged external ram data
                                    814 ;--------------------------------------------------------
                                    815 	.area PSEG    (PAG,XDATA)
                                    816 ;--------------------------------------------------------
                                    817 ; external ram data
                                    818 ;--------------------------------------------------------
                                    819 	.area XSEG    (XDATA)
                           0061A6   820 _MONMUX	=	0x61a6
                           0061A6   821 _OPAMPMC	=	0x61a6
                           006230   822 _I2CCFG	=	0x6230
                           006231   823 _I2CSTAT	=	0x6231
                           006232   824 _I2CDATA	=	0x6232
                           006233   825 _I2CADDR	=	0x6233
                           006234   826 _I2CWC	=	0x6234
                           006235   827 _I2CIO	=	0x6235
                           006243   828 _OBSSEL0	=	0x6243
                           006244   829 _OBSSEL1	=	0x6244
                           006245   830 _OBSSEL2	=	0x6245
                           006246   831 _OBSSEL3	=	0x6246
                           006247   832 _OBSSEL4	=	0x6247
                           006248   833 _OBSSEL5	=	0x6248
                           006249   834 _CHVER	=	0x6249
                           00624A   835 _CHIPID	=	0x624a
                           00624B   836 _TESTREG0	=	0x624b
                           006260   837 _DBGDATA	=	0x6260
                           006262   838 _SRCRC	=	0x6262
                           006264   839 _BATTMON	=	0x6264
                           006265   840 _IVCTRL	=	0x6265
                           006270   841 _FCTL	=	0x6270
                           006271   842 _FADDRL	=	0x6271
                           006272   843 _FADDRH	=	0x6272
                           006273   844 _FWDATA	=	0x6273
                           006276   845 _CHIPINFO0	=	0x6276
                           006277   846 _CHIPINFO1	=	0x6277
                           006281   847 _IRCTL	=	0x6281
                           006290   848 _CLD	=	0x6290
                           0062A0   849 _XX_T1CCTL0	=	0x62a0
                           0062A1   850 _XX_T1CCTL1	=	0x62a1
                           0062A2   851 _XX_T1CCTL2	=	0x62a2
                           0062A3   852 _T1CCTL3	=	0x62a3
                           0062A4   853 _T1CCTL4	=	0x62a4
                           0062A6   854 _XX_T1CC0L	=	0x62a6
                           0062A7   855 _XX_T1CC0H	=	0x62a7
                           0062A8   856 _XX_T1CC1L	=	0x62a8
                           0062A9   857 _XX_T1CC1H	=	0x62a9
                           0062AA   858 _XX_T1CC2L	=	0x62aa
                           0062AB   859 _XX_T1CC2H	=	0x62ab
                           0062AC   860 _T1CC3L	=	0x62ac
                           0062AD   861 _T1CC3H	=	0x62ad
                           0062AE   862 _T1CC4L	=	0x62ae
                           0062AF   863 _T1CC4H	=	0x62af
                           0062B0   864 _STCC	=	0x62b0
                           0062B1   865 _STCS	=	0x62b1
                           0062B2   866 _STCV0	=	0x62b2
                           0062B3   867 _STCV1	=	0x62b3
                           0062B4   868 _STCV2	=	0x62b4
                           0062C0   869 _OPAMPC	=	0x62c0
                           0062C1   870 _OPAMPS	=	0x62c1
                           0062D0   871 _CMPCTL	=	0x62d0
                           006000   872 _RFCORE_RAM	=	0x6000
                           006000   873 _RXFIFO	=	0x6000
                           006080   874 _TXFIFO	=	0x6080
                           006100   875 _SRC_ADDR_TABLE	=	0x6100
                           006160   876 _SRCRESMASK0	=	0x6160
                           006161   877 _SRCRESMASK1	=	0x6161
                           006162   878 _SRCRESMASK2	=	0x6162
                           006163   879 _SRCRESINDEX	=	0x6163
                           006164   880 _SRCEXTPENDEN0	=	0x6164
                           006165   881 _SRCEXTPENDEN1	=	0x6165
                           006166   882 _SRCEXTPENDEN2	=	0x6166
                           006167   883 _SRCSHORTPENDEN0	=	0x6167
                           006168   884 _SRCSHORTPENDEN1	=	0x6168
                           006169   885 _SRCSHORTPENDEN2	=	0x6169
                           00616A   886 _EXT_ADDR0	=	0x616a
                           00616B   887 _EXT_ADDR1	=	0x616b
                           00616C   888 _EXT_ADDR2	=	0x616c
                           00616D   889 _EXT_ADDR3	=	0x616d
                           00616E   890 _EXT_ADDR4	=	0x616e
                           00616F   891 _EXT_ADDR5	=	0x616f
                           006170   892 _EXT_ADDR6	=	0x6170
                           006171   893 _EXT_ADDR7	=	0x6171
                           006172   894 _PAN_ID0	=	0x6172
                           006173   895 _PAN_ID1	=	0x6173
                           006174   896 _SHORT_ADDR0	=	0x6174
                           006175   897 _SHORT_ADDR1	=	0x6175
                           006180   898 _FRMFILT0	=	0x6180
                           006181   899 _FRMFILT1	=	0x6181
                           006182   900 _SRCMATCH	=	0x6182
                           006183   901 _SRCSHORTEN0	=	0x6183
                           006184   902 _SRCSHORTEN1	=	0x6184
                           006185   903 _SRCSHORTEN2	=	0x6185
                           006186   904 _SRCEXTEN0	=	0x6186
                           006187   905 _SRCEXTEN1	=	0x6187
                           006188   906 _SRCEXTEN2	=	0x6188
                           006189   907 _FRMCTRL0	=	0x6189
                           00618A   908 _FRMCTRL1	=	0x618a
                           00618B   909 _RXENABLE	=	0x618b
                           00618C   910 _RXMASKSET	=	0x618c
                           00618D   911 _RXMASKCLR	=	0x618d
                           00618E   912 _FREQTUNE	=	0x618e
                           00618F   913 _FREQCTRL	=	0x618f
                           006190   914 _TXPOWER	=	0x6190
                           006191   915 _TXCTRL	=	0x6191
                           006192   916 _FSMSTAT0	=	0x6192
                           006193   917 _FSMSTAT1	=	0x6193
                           006194   918 _FIFOPCTRL	=	0x6194
                           006195   919 _FSMCTRL	=	0x6195
                           006196   920 _CCACTRL0	=	0x6196
                           006197   921 _CCACTRL1	=	0x6197
                           006198   922 _RSSI	=	0x6198
                           006199   923 _RSSISTAT	=	0x6199
                           00619A   924 _RXFIRST	=	0x619a
                           00619B   925 _RXFIFOCNT	=	0x619b
                           00619C   926 _TXFIFOCNT	=	0x619c
                           00619D   927 _RXFIRST_PTR	=	0x619d
                           00619E   928 _RXLAST_PTR	=	0x619e
                           00619F   929 _RXP1_PTR	=	0x619f
                           0061A1   930 _TXFIRST_PTR	=	0x61a1
                           0061A2   931 _TXLAST_PTR	=	0x61a2
                           0061A3   932 _RFIRQM0	=	0x61a3
                           0061A4   933 _RFIRQM1	=	0x61a4
                           0061A5   934 _RFERRM	=	0x61a5
                           0061A7   935 _RFRND	=	0x61a7
                           0061A8   936 _MDMCTRL0	=	0x61a8
                           0061A9   937 _MDMCTRL1	=	0x61a9
                           0061AA   938 _FREQEST	=	0x61aa
                           0061AB   939 _RXCTRL	=	0x61ab
                           0061AC   940 _FSCTRL	=	0x61ac
                           0061AD   941 _FSCAL0	=	0x61ad
                           0061AE   942 _FSCAL1	=	0x61ae
                           0061AF   943 _FSCAL2	=	0x61af
                           0061B0   944 _FSCAL3	=	0x61b0
                           0061B1   945 _AGCCTRL0	=	0x61b1
                           0061B2   946 _AGCCTRL1	=	0x61b2
                           0061B3   947 _AGCCTRL2	=	0x61b3
                           0061B4   948 _AGCCTRL3	=	0x61b4
                           0061B5   949 _ADCTEST0	=	0x61b5
                           0061B6   950 _ADCTEST1	=	0x61b6
                           0061B7   951 _ADCTEST2	=	0x61b7
                           0061B8   952 _MDMTEST0	=	0x61b8
                           0061B9   953 _MDMTEST1	=	0x61b9
                           0061BA   954 _DACTEST0	=	0x61ba
                           0061BB   955 _DACTEST1	=	0x61bb
                           0061BC   956 _DACTEST2	=	0x61bc
                           0061BD   957 _ATEST	=	0x61bd
                           0061BE   958 _PTEST0	=	0x61be
                           0061BF   959 _PTEST1	=	0x61bf
                           0061FA   960 _TXFILTCFG	=	0x61fa
                           0061EB   961 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   962 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   963 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   964 _CSPPROG0	=	0x61c0
                           0061C1   965 _CSPPROG1	=	0x61c1
                           0061C2   966 _CSPPROG2	=	0x61c2
                           0061C3   967 _CSPPROG3	=	0x61c3
                           0061C4   968 _CSPPROG4	=	0x61c4
                           0061C5   969 _CSPPROG5	=	0x61c5
                           0061C6   970 _CSPPROG6	=	0x61c6
                           0061C7   971 _CSPPROG7	=	0x61c7
                           0061C8   972 _CSPPROG8	=	0x61c8
                           0061C9   973 _CSPPROG9	=	0x61c9
                           0061CA   974 _CSPPROG10	=	0x61ca
                           0061CB   975 _CSPPROG11	=	0x61cb
                           0061CC   976 _CSPPROG12	=	0x61cc
                           0061CD   977 _CSPPROG13	=	0x61cd
                           0061CE   978 _CSPPROG14	=	0x61ce
                           0061CF   979 _CSPPROG15	=	0x61cf
                           0061D0   980 _CSPPROG16	=	0x61d0
                           0061D1   981 _CSPPROG17	=	0x61d1
                           0061D2   982 _CSPPROG18	=	0x61d2
                           0061D3   983 _CSPPROG19	=	0x61d3
                           0061D4   984 _CSPPROG20	=	0x61d4
                           0061D5   985 _CSPPROG21	=	0x61d5
                           0061D6   986 _CSPPROG22	=	0x61d6
                           0061D7   987 _CSPPROG23	=	0x61d7
                           0061E0   988 _CSPCTRL	=	0x61e0
                           0061E1   989 _CSPSTAT	=	0x61e1
                           0061E2   990 _CSPX	=	0x61e2
                           0061E3   991 _CSPY	=	0x61e3
                           0061E4   992 _CSPZ	=	0x61e4
                           0061E5   993 _CSPT	=	0x61e5
                           006200   994 _USBADDR	=	0x6200
                           006201   995 _USBPOW	=	0x6201
                           006202   996 _USBIIF	=	0x6202
                           006204   997 _USBOIF	=	0x6204
                           006206   998 _USBCIF	=	0x6206
                           006207   999 _USBIIE	=	0x6207
                           006209  1000 _USBOIE	=	0x6209
                           00620B  1001 _USBCIE	=	0x620b
                           00620C  1002 _USBFRML	=	0x620c
                           00620D  1003 _USBFRMH	=	0x620d
                           00620E  1004 _USBINDEX	=	0x620e
                           00620F  1005 _USBCTRL	=	0x620f
                           006210  1006 _USBMAXI	=	0x6210
                           006211  1007 _USBCS0	=	0x6211
                           006211  1008 _USBCSIL	=	0x6211
                           006212  1009 _USBCSIH	=	0x6212
                           006213  1010 _USBMAXO	=	0x6213
                           006214  1011 _USBCSOL	=	0x6214
                           006215  1012 _USBCSOH	=	0x6215
                           006216  1013 _USBCNT0	=	0x6216
                           006216  1014 _USBCNTL	=	0x6216
                           006217  1015 _USBCNTH	=	0x6217
                           006220  1016 _USBF0	=	0x6220
                           006222  1017 _USBF1	=	0x6222
                           006224  1018 _USBF2	=	0x6224
                           006226  1019 _USBF3	=	0x6226
                           006228  1020 _USBF4	=	0x6228
                           00622A  1021 _USBF5	=	0x622a
                           007080  1022 _X_P0	=	0x7080
                           007086  1023 _X_U0CSR	=	0x7086
                           007089  1024 _X_P0IFG	=	0x7089
                           00708A  1025 _X_P1IFG	=	0x708a
                           00708B  1026 _X_P2IFG	=	0x708b
                           00708C  1027 _X_PICTL	=	0x708c
                           00708D  1028 _X_P1IEN	=	0x708d
                           00708F  1029 _X_P0INP	=	0x708f
                           007090  1030 _X_P1	=	0x7090
                           007091  1031 _X_RFIRQF1	=	0x7091
                           007093  1032 _X_MPAGE	=	0x7093
                           007093  1033 _X__XPAGE	=	0x7093
                           007094  1034 _X_T2CTRL	=	0x7094
                           007095  1035 _X_ST0	=	0x7095
                           007096  1036 _X_ST1	=	0x7096
                           007097  1037 _X_ST2	=	0x7097
                           00709C  1038 _X_T2EVTCFG	=	0x709c
                           00709D  1039 _X_SLEEPSTA	=	0x709d
                           00709E  1040 _X_CLKCONSTA	=	0x709e
                           00709F  1041 _X_FMAP	=	0x709f
                           00709F  1042 _X_PSBANK	=	0x709f
                           0070A0  1043 _X_P2	=	0x70a0
                           0070A1  1044 _X_T2IRQF	=	0x70a1
                           0070A2  1045 _X_T2M0	=	0x70a2
                           0070A3  1046 _X_T2M1	=	0x70a3
                           0070A4  1047 _X_T2MOVF0	=	0x70a4
                           0070A5  1048 _X_T2MOVF1	=	0x70a5
                           0070A6  1049 _X_T2MOVF2	=	0x70a6
                           0070A7  1050 _X_T2IRQM	=	0x70a7
                           0070AB  1051 _X_P0IEN	=	0x70ab
                           0070AC  1052 _X_P2IEN	=	0x70ac
                           0070AD  1053 _X_STLOAD	=	0x70ad
                           0070AE  1054 _X_PMUX	=	0x70ae
                           0070AF  1055 _X_T1STAT	=	0x70af
                           0070B1  1056 _X_ENCDI	=	0x70b1
                           0070B2  1057 _X_ENCDO	=	0x70b2
                           0070B3  1058 _X_ENCCS	=	0x70b3
                           0070B4  1059 _X_ADCCON1	=	0x70b4
                           0070B5  1060 _X_ADCCON2	=	0x70b5
                           0070B6  1061 _X_ADCCON3	=	0x70b6
                           0070BA  1062 _X_ADCL	=	0x70ba
                           0070BB  1063 _X_ADCH	=	0x70bb
                           0070BC  1064 _X_RNDL	=	0x70bc
                           0070BD  1065 _X_RNDH	=	0x70bd
                           0070BE  1066 _X_SLEEPCMD	=	0x70be
                           0070BF  1067 _X_RFERRF	=	0x70bf
                           0070C1  1068 _X_U0DBUF	=	0x70c1
                           0070C2  1069 _X_U0BAUD	=	0x70c2
                           0070C3  1070 _X_T2MSEL	=	0x70c3
                           0070C4  1071 _X_U0UCR	=	0x70c4
                           0070C5  1072 _X_U0GCR	=	0x70c5
                           0070C6  1073 _X_CLKCONCMD	=	0x70c6
                           0070C7  1074 _X_MEMCTR	=	0x70c7
                           0070C9  1075 _X_WDCTL	=	0x70c9
                           0070CA  1076 _X_T3CNT	=	0x70ca
                           0070CB  1077 _X_T3CTL	=	0x70cb
                           0070CC  1078 _X_T3CCTL0	=	0x70cc
                           0070CD  1079 _X_T3CC0	=	0x70cd
                           0070CE  1080 _X_T3CCTL1	=	0x70ce
                           0070CF  1081 _X_T3CC1	=	0x70cf
                           0070D1  1082 _X_DMAIRQ	=	0x70d1
                           0070D2  1083 _X_DMA1CFGL	=	0x70d2
                           0070D3  1084 _X_DMA1CFGH	=	0x70d3
                           0070D4  1085 _X_DMA0CFGL	=	0x70d4
                           0070D5  1086 _X_DMA0CFGH	=	0x70d5
                           0070D6  1087 _X_DMAARM	=	0x70d6
                           0070D7  1088 _X_DMAREQ	=	0x70d7
                           0070D8  1089 _X_TIMIF	=	0x70d8
                           0070D9  1090 _X_RFD	=	0x70d9
                           0070DA  1091 _X_T1CC0L	=	0x70da
                           0070DB  1092 _X_T1CC0H	=	0x70db
                           0070DC  1093 _X_T1CC1L	=	0x70dc
                           0070DD  1094 _X_T1CC1H	=	0x70dd
                           0070DE  1095 _X_T1CC2L	=	0x70de
                           0070DF  1096 _X_T1CC2H	=	0x70df
                           0070E1  1097 _X_RFST	=	0x70e1
                           0070E2  1098 _X_T1CNTL	=	0x70e2
                           0070E3  1099 _X_T1CNTH	=	0x70e3
                           0070E4  1100 _X_T1CTL	=	0x70e4
                           0070E5  1101 _X_T1CCTL0	=	0x70e5
                           0070E6  1102 _X_T1CCTL1	=	0x70e6
                           0070E7  1103 _X_T1CCTL2	=	0x70e7
                           0070E9  1104 _X_RFIRQF0	=	0x70e9
                           0070EA  1105 _X_T4CNT	=	0x70ea
                           0070EB  1106 _X_T4CTL	=	0x70eb
                           0070EC  1107 _X_T4CCTL0	=	0x70ec
                           0070ED  1108 _X_T4CC0	=	0x70ed
                           0070EE  1109 _X_T4CCTL1	=	0x70ee
                           0070EF  1110 _X_T4CC1	=	0x70ef
                           0070F1  1111 _X_PERCFG	=	0x70f1
                           0070F2  1112 _X_APCFG	=	0x70f2
                           0070F3  1113 _X_P0SEL	=	0x70f3
                           0070F4  1114 _X_P1SEL	=	0x70f4
                           0070F5  1115 _X_P2SEL	=	0x70f5
                           0070F6  1116 _X_P1INP	=	0x70f6
                           0070F7  1117 _X_P2INP	=	0x70f7
                           0070F8  1118 _X_U1CSR	=	0x70f8
                           0070F9  1119 _X_U1DBUF	=	0x70f9
                           0070FA  1120 _X_U1BAUD	=	0x70fa
                           0070FB  1121 _X_U1UCR	=	0x70fb
                           0070FC  1122 _X_U1GCR	=	0x70fc
                           0070FD  1123 _X_P0DIR	=	0x70fd
                           0070FE  1124 _X_P1DIR	=	0x70fe
                           0070FF  1125 _X_P2DIR	=	0x70ff
                           007800  1126 _X_INFOPAGE	=	0x7800
                           00780C  1127 _X_IEEE_ADDR	=	0x780c
                                   1128 ;--------------------------------------------------------
                                   1129 ; absolute external ram data
                                   1130 ;--------------------------------------------------------
                                   1131 	.area XABS    (ABS,XDATA)
                                   1132 ;--------------------------------------------------------
                                   1133 ; external initialized ram data
                                   1134 ;--------------------------------------------------------
                                   1135 	.area XISEG   (XDATA)
                                   1136 	.area HOME    (CODE)
                                   1137 	.area GSINIT0 (CODE)
                                   1138 	.area GSINIT1 (CODE)
                                   1139 	.area GSINIT2 (CODE)
                                   1140 	.area GSINIT3 (CODE)
                                   1141 	.area GSINIT4 (CODE)
                                   1142 	.area GSINIT5 (CODE)
                                   1143 	.area GSINIT  (CODE)
                                   1144 	.area GSFINAL (CODE)
                                   1145 	.area CSEG    (CODE)
                                   1146 ;--------------------------------------------------------
                                   1147 ; global & static initialisations
                                   1148 ;--------------------------------------------------------
                                   1149 	.area HOME    (CODE)
                                   1150 	.area GSINIT  (CODE)
                                   1151 	.area GSFINAL (CODE)
                                   1152 	.area GSINIT  (CODE)
                                   1153 ;--------------------------------------------------------
                                   1154 ; Home
                                   1155 ;--------------------------------------------------------
                                   1156 	.area HOME    (CODE)
                                   1157 	.area HOME    (CODE)
                                   1158 ;--------------------------------------------------------
                                   1159 ; code
                                   1160 ;--------------------------------------------------------
                                   1161 	.area CSEG    (CODE)
                                   1162 ;------------------------------------------------------------
                                   1163 ;Allocation info for local variables in function 'recv'
                                   1164 ;------------------------------------------------------------
                                   1165 ;abc                       Allocated to registers r5 r6 r7 
                                   1166 ;c                         Allocated to stack - sp -2
                                   1167 ;sloc0                     Allocated to stack - sp -4
                                   1168 ;------------------------------------------------------------
                                   1169 ;	../../core/net/rime/polite.c:62: recv(struct abc_conn *abc)
                                   1170 ;	-----------------------------------------
                                   1171 ;	 function recv
                                   1172 ;	-----------------------------------------
      000000                       1173 _recv:
                           000007  1174 	ar7 = 0x07
                           000006  1175 	ar6 = 0x06
                           000005  1176 	ar5 = 0x05
                           000004  1177 	ar4 = 0x04
                           000003  1178 	ar3 = 0x03
                           000002  1179 	ar2 = 0x02
                           000001  1180 	ar1 = 0x01
                           000000  1181 	ar0 = 0x00
      000000 E5 81            [12] 1182 	mov	a,sp
      000002 24 05            [12] 1183 	add	a,#0x05
      000004 F5 81            [12] 1184 	mov	sp,a
      000006 AD 82            [24] 1185 	mov	r5,dpl
      000008 AE 83            [24] 1186 	mov	r6,dph
      00000A AF F0            [24] 1187 	mov	r7,b
                                   1188 ;	../../core/net/rime/polite.c:64: struct polite_conn *c = (struct polite_conn *)abc;
      00000C A8 81            [24] 1189 	mov	r0,sp
      00000E 18               [12] 1190 	dec	r0
      00000F 18               [12] 1191 	dec	r0
      000010 A6 05            [24] 1192 	mov	@r0,ar5
      000012 08               [12] 1193 	inc	r0
      000013 A6 06            [24] 1194 	mov	@r0,ar6
      000015 08               [12] 1195 	inc	r0
      000016 A6 07            [24] 1196 	mov	@r0,ar7
                                   1197 ;	../../core/net/rime/polite.c:65: if(c->q != NULL &&
      000018 A8 81            [24] 1198 	mov	r0,sp
      00001A 18               [12] 1199 	dec	r0
      00001B 18               [12] 1200 	dec	r0
      00001C 74 24            [12] 1201 	mov	a,#0x24
      00001E 26               [12] 1202 	add	a,@r0
      00001F FA               [12] 1203 	mov	r2,a
      000020 E4               [12] 1204 	clr	a
      000021 08               [12] 1205 	inc	r0
      000022 36               [12] 1206 	addc	a,@r0
      000023 FB               [12] 1207 	mov	r3,a
      000024 08               [12] 1208 	inc	r0
      000025 86 04            [24] 1209 	mov	ar4,@r0
      000027 8A 82            [24] 1210 	mov	dpl,r2
      000029 8B 83            [24] 1211 	mov	dph,r3
      00002B 8C F0            [24] 1212 	mov	b,r4
      00002D 12r00r00         [24] 1213 	lcall	__gptrget
      000030 FD               [12] 1214 	mov	r5,a
      000031 A3               [24] 1215 	inc	dptr
      000032 12r00r00         [24] 1216 	lcall	__gptrget
      000035 FE               [12] 1217 	mov	r6,a
      000036 A3               [24] 1218 	inc	dptr
      000037 12r00r00         [24] 1219 	lcall	__gptrget
      00003A FF               [12] 1220 	mov	r7,a
      00003B ED               [12] 1221 	mov	a,r5
      00003C 4E               [12] 1222 	orl	a,r6
      00003D 70 03            [24] 1223 	jnz	00137$
      00003F 02r02r70         [24] 1224 	ljmp	00104$
      000042                       1225 00137$:
                                   1226 ;	../../core/net/rime/polite.c:66: packetbuf_datalen() == queuebuf_datalen(c->q) &&
      000042 C0 04            [24] 1227 	push	ar4
      000044 C0 03            [24] 1228 	push	ar3
      000046 C0 02            [24] 1229 	push	ar2
      000048 12r00r00         [24] 1230 	lcall	_packetbuf_datalen
      00004B C8               [12] 1231 	xch	a,r0
      00004C E5 81            [12] 1232 	mov	a,sp
      00004E 24 F9            [12] 1233 	add	a,#0xf9
      000050 C8               [12] 1234 	xch	a,r0
      000051 A6 82            [24] 1235 	mov	@r0,dpl
      000053 08               [12] 1236 	inc	r0
      000054 A6 83            [24] 1237 	mov	@r0,dph
      000056 D0 02            [24] 1238 	pop	ar2
      000058 D0 03            [24] 1239 	pop	ar3
      00005A D0 04            [24] 1240 	pop	ar4
      00005C 8A 82            [24] 1241 	mov	dpl,r2
      00005E 8B 83            [24] 1242 	mov	dph,r3
      000060 8C F0            [24] 1243 	mov	b,r4
      000062 12r00r00         [24] 1244 	lcall	__gptrget
      000065 FD               [12] 1245 	mov	r5,a
      000066 A3               [24] 1246 	inc	dptr
      000067 12r00r00         [24] 1247 	lcall	__gptrget
      00006A FE               [12] 1248 	mov	r6,a
      00006B A3               [24] 1249 	inc	dptr
      00006C 12r00r00         [24] 1250 	lcall	__gptrget
      00006F FF               [12] 1251 	mov	r7,a
      000070 8D 82            [24] 1252 	mov	dpl,r5
      000072 8E 83            [24] 1253 	mov	dph,r6
      000074 8F F0            [24] 1254 	mov	b,r7
      000076 C0 04            [24] 1255 	push	ar4
      000078 C0 03            [24] 1256 	push	ar3
      00007A C0 02            [24] 1257 	push	ar2
      00007C 12r00r00         [24] 1258 	lcall	_queuebuf_datalen
      00007F AE 82            [24] 1259 	mov	r6,dpl
      000081 AF 83            [24] 1260 	mov	r7,dph
      000083 D0 02            [24] 1261 	pop	ar2
      000085 D0 03            [24] 1262 	pop	ar3
      000087 D0 04            [24] 1263 	pop	ar4
      000089 C0 02            [24] 1264 	push	ar2
      00008B C0 03            [24] 1265 	push	ar3
      00008D C0 04            [24] 1266 	push	ar4
      00008F E5 81            [12] 1267 	mov	a,sp
      000091 24 F9            [12] 1268 	add	a,#0xf9
      000093 F8               [12] 1269 	mov	r0,a
      000094 86 04            [24] 1270 	mov	ar4,@r0
      000096 08               [12] 1271 	inc	r0
      000097 86 05            [24] 1272 	mov	ar5,@r0
      000099 EC               [12] 1273 	mov	a,r4
      00009A B5 06 06         [24] 1274 	cjne	a,ar6,00138$
      00009D ED               [12] 1275 	mov	a,r5
      00009E B5 07 02         [24] 1276 	cjne	a,ar7,00138$
      0000A1 80 09            [24] 1277 	sjmp	00139$
      0000A3                       1278 00138$:
      0000A3 D0 04            [24] 1279 	pop	ar4
      0000A5 D0 03            [24] 1280 	pop	ar3
      0000A7 D0 02            [24] 1281 	pop	ar2
      0000A9 02r02r70         [24] 1282 	ljmp	00104$
      0000AC                       1283 00139$:
      0000AC D0 04            [24] 1284 	pop	ar4
      0000AE D0 03            [24] 1285 	pop	ar3
      0000B0 D0 02            [24] 1286 	pop	ar2
                                   1287 ;	../../core/net/rime/polite.c:68: MIN(c->hdrsize, packetbuf_datalen())) == 0) {
      0000B2 C0 02            [24] 1288 	push	ar2
      0000B4 C0 03            [24] 1289 	push	ar3
      0000B6 C0 04            [24] 1290 	push	ar4
      0000B8 E5 81            [12] 1291 	mov	a,sp
      0000BA 24 FB            [12] 1292 	add	a,#0xfb
      0000BC F8               [12] 1293 	mov	r0,a
      0000BD 74 27            [12] 1294 	mov	a,#0x27
      0000BF 26               [12] 1295 	add	a,@r0
      0000C0 FD               [12] 1296 	mov	r5,a
      0000C1 E4               [12] 1297 	clr	a
      0000C2 08               [12] 1298 	inc	r0
      0000C3 36               [12] 1299 	addc	a,@r0
      0000C4 FE               [12] 1300 	mov	r6,a
      0000C5 08               [12] 1301 	inc	r0
      0000C6 86 07            [24] 1302 	mov	ar7,@r0
      0000C8 8D 82            [24] 1303 	mov	dpl,r5
      0000CA 8E 83            [24] 1304 	mov	dph,r6
      0000CC 8F F0            [24] 1305 	mov	b,r7
      0000CE 12r00r00         [24] 1306 	lcall	__gptrget
      0000D1 FC               [12] 1307 	mov	r4,a
      0000D2 C0 07            [24] 1308 	push	ar7
      0000D4 C0 06            [24] 1309 	push	ar6
      0000D6 C0 05            [24] 1310 	push	ar5
      0000D8 C0 04            [24] 1311 	push	ar4
      0000DA C0 03            [24] 1312 	push	ar3
      0000DC C0 02            [24] 1313 	push	ar2
      0000DE 12r00r00         [24] 1314 	lcall	_packetbuf_datalen
      0000E1 C8               [12] 1315 	xch	a,r0
      0000E2 E5 81            [12] 1316 	mov	a,sp
      0000E4 24 F3            [12] 1317 	add	a,#0xf3
      0000E6 C8               [12] 1318 	xch	a,r0
      0000E7 A6 82            [24] 1319 	mov	@r0,dpl
      0000E9 08               [12] 1320 	inc	r0
      0000EA A6 83            [24] 1321 	mov	@r0,dph
      0000EC D0 02            [24] 1322 	pop	ar2
      0000EE D0 03            [24] 1323 	pop	ar3
      0000F0 D0 04            [24] 1324 	pop	ar4
      0000F2 D0 05            [24] 1325 	pop	ar5
      0000F4 D0 06            [24] 1326 	pop	ar6
      0000F6 D0 07            [24] 1327 	pop	ar7
      0000F8 8C 03            [24] 1328 	mov	ar3,r4
      0000FA 7C 00            [12] 1329 	mov	r4,#0x00
      0000FC E5 81            [12] 1330 	mov	a,sp
      0000FE 24 F9            [12] 1331 	add	a,#0xf9
      000100 F8               [12] 1332 	mov	r0,a
      000101 C3               [12] 1333 	clr	c
      000102 EB               [12] 1334 	mov	a,r3
      000103 96               [12] 1335 	subb	a,@r0
      000104 EC               [12] 1336 	mov	a,r4
      000105 08               [12] 1337 	inc	r0
      000106 96               [12] 1338 	subb	a,@r0
      000107 D0 04            [24] 1339 	pop	ar4
      000109 D0 03            [24] 1340 	pop	ar3
      00010B D0 02            [24] 1341 	pop	ar2
      00010D 50 0E            [24] 1342 	jnc	00111$
      00010F 8D 82            [24] 1343 	mov	dpl,r5
      000111 8E 83            [24] 1344 	mov	dph,r6
      000113 8F F0            [24] 1345 	mov	b,r7
      000115 12r00r00         [24] 1346 	lcall	__gptrget
      000118 FD               [12] 1347 	mov	r5,a
      000119 7F 00            [12] 1348 	mov	r7,#0x00
      00011B 80 13            [24] 1349 	sjmp	00112$
      00011D                       1350 00111$:
      00011D C0 04            [24] 1351 	push	ar4
      00011F C0 03            [24] 1352 	push	ar3
      000121 C0 02            [24] 1353 	push	ar2
      000123 12r00r00         [24] 1354 	lcall	_packetbuf_datalen
      000126 AD 82            [24] 1355 	mov	r5,dpl
      000128 AF 83            [24] 1356 	mov	r7,dph
      00012A D0 02            [24] 1357 	pop	ar2
      00012C D0 03            [24] 1358 	pop	ar3
      00012E D0 04            [24] 1359 	pop	ar4
      000130                       1360 00112$:
      000130 E5 81            [12] 1361 	mov	a,sp
      000132 24 FC            [12] 1362 	add	a,#0xfc
      000134 F8               [12] 1363 	mov	r0,a
      000135 A6 05            [24] 1364 	mov	@r0,ar5
      000137 08               [12] 1365 	inc	r0
      000138 A6 07            [24] 1366 	mov	@r0,ar7
                                   1367 ;	../../core/net/rime/polite.c:67: memcmp(packetbuf_dataptr(), queuebuf_dataptr(c->q),
      00013A 8A 82            [24] 1368 	mov	dpl,r2
      00013C 8B 83            [24] 1369 	mov	dph,r3
      00013E 8C F0            [24] 1370 	mov	b,r4
      000140 12r00r00         [24] 1371 	lcall	__gptrget
      000143 FD               [12] 1372 	mov	r5,a
      000144 A3               [24] 1373 	inc	dptr
      000145 12r00r00         [24] 1374 	lcall	__gptrget
      000148 FE               [12] 1375 	mov	r6,a
      000149 A3               [24] 1376 	inc	dptr
      00014A 12r00r00         [24] 1377 	lcall	__gptrget
      00014D FF               [12] 1378 	mov	r7,a
      00014E 8D 82            [24] 1379 	mov	dpl,r5
      000150 8E 83            [24] 1380 	mov	dph,r6
      000152 8F F0            [24] 1381 	mov	b,r7
      000154 C0 04            [24] 1382 	push	ar4
      000156 C0 03            [24] 1383 	push	ar3
      000158 C0 02            [24] 1384 	push	ar2
      00015A 12r00r00         [24] 1385 	lcall	_queuebuf_dataptr
      00015D AD 82            [24] 1386 	mov	r5,dpl
      00015F AE 83            [24] 1387 	mov	r6,dph
      000161 AF F0            [24] 1388 	mov	r7,b
      000163 D0 02            [24] 1389 	pop	ar2
      000165 D0 03            [24] 1390 	pop	ar3
      000167 D0 04            [24] 1391 	pop	ar4
      000169 C0 02            [24] 1392 	push	ar2
      00016B C0 03            [24] 1393 	push	ar3
      00016D C0 04            [24] 1394 	push	ar4
      00016F C0 07            [24] 1395 	push	ar7
      000171 C0 06            [24] 1396 	push	ar6
      000173 C0 05            [24] 1397 	push	ar5
      000175 12r00r00         [24] 1398 	lcall	_packetbuf_dataptr
      000178 AA 82            [24] 1399 	mov	r2,dpl
      00017A AB 83            [24] 1400 	mov	r3,dph
      00017C AC F0            [24] 1401 	mov	r4,b
      00017E D0 05            [24] 1402 	pop	ar5
      000180 D0 06            [24] 1403 	pop	ar6
      000182 D0 07            [24] 1404 	pop	ar7
      000184 C0 04            [24] 1405 	push	ar4
      000186 C0 03            [24] 1406 	push	ar3
      000188 C0 02            [24] 1407 	push	ar2
      00018A E5 81            [12] 1408 	mov	a,sp
      00018C 24 F6            [12] 1409 	add	a,#0xf6
      00018E F8               [12] 1410 	mov	r0,a
      00018F E6               [12] 1411 	mov	a,@r0
      000190 C0 E0            [24] 1412 	push	acc
      000192 08               [12] 1413 	inc	r0
      000193 E6               [12] 1414 	mov	a,@r0
      000194 C0 E0            [24] 1415 	push	acc
      000196 C0 05            [24] 1416 	push	ar5
      000198 C0 06            [24] 1417 	push	ar6
      00019A C0 07            [24] 1418 	push	ar7
      00019C 8A 82            [24] 1419 	mov	dpl,r2
      00019E 8B 83            [24] 1420 	mov	dph,r3
      0001A0 8C F0            [24] 1421 	mov	b,r4
      0001A2 12r00r00         [24] 1422 	lcall	_memcmp
      0001A5 AE 82            [24] 1423 	mov	r6,dpl
      0001A7 AF 83            [24] 1424 	mov	r7,dph
      0001A9 E5 81            [12] 1425 	mov	a,sp
      0001AB 24 FB            [12] 1426 	add	a,#0xfb
      0001AD F5 81            [12] 1427 	mov	sp,a
      0001AF D0 02            [24] 1428 	pop	ar2
      0001B1 D0 03            [24] 1429 	pop	ar3
      0001B3 D0 04            [24] 1430 	pop	ar4
      0001B5 D0 04            [24] 1431 	pop	ar4
      0001B7 D0 03            [24] 1432 	pop	ar3
      0001B9 D0 02            [24] 1433 	pop	ar2
      0001BB EE               [12] 1434 	mov	a,r6
      0001BC 4F               [12] 1435 	orl	a,r7
      0001BD 60 03            [24] 1436 	jz	00141$
      0001BF 02r02r70         [24] 1437 	ljmp	00104$
      0001C2                       1438 00141$:
                                   1439 ;	../../core/net/rime/polite.c:71: queuebuf_free(c->q);
      0001C2 8A 82            [24] 1440 	mov	dpl,r2
      0001C4 8B 83            [24] 1441 	mov	dph,r3
      0001C6 8C F0            [24] 1442 	mov	b,r4
      0001C8 12r00r00         [24] 1443 	lcall	__gptrget
      0001CB FD               [12] 1444 	mov	r5,a
      0001CC A3               [24] 1445 	inc	dptr
      0001CD 12r00r00         [24] 1446 	lcall	__gptrget
      0001D0 FE               [12] 1447 	mov	r6,a
      0001D1 A3               [24] 1448 	inc	dptr
      0001D2 12r00r00         [24] 1449 	lcall	__gptrget
      0001D5 FF               [12] 1450 	mov	r7,a
      0001D6 8D 82            [24] 1451 	mov	dpl,r5
      0001D8 8E 83            [24] 1452 	mov	dph,r6
      0001DA 8F F0            [24] 1453 	mov	b,r7
      0001DC C0 04            [24] 1454 	push	ar4
      0001DE C0 03            [24] 1455 	push	ar3
      0001E0 C0 02            [24] 1456 	push	ar2
      0001E2 12r00r00         [24] 1457 	lcall	_queuebuf_free
      0001E5 D0 02            [24] 1458 	pop	ar2
      0001E7 D0 03            [24] 1459 	pop	ar3
      0001E9 D0 04            [24] 1460 	pop	ar4
                                   1461 ;	../../core/net/rime/polite.c:72: c->q = NULL;
      0001EB 8A 82            [24] 1462 	mov	dpl,r2
      0001ED 8B 83            [24] 1463 	mov	dph,r3
      0001EF 8C F0            [24] 1464 	mov	b,r4
      0001F1 E4               [12] 1465 	clr	a
      0001F2 12r00r00         [24] 1466 	lcall	__gptrput
      0001F5 A3               [24] 1467 	inc	dptr
      0001F6 12r00r00         [24] 1468 	lcall	__gptrput
      0001F9 A3               [24] 1469 	inc	dptr
      0001FA 12r00r00         [24] 1470 	lcall	__gptrput
                                   1471 ;	../../core/net/rime/polite.c:73: ctimer_stop(&c->t);
      0001FD A8 81            [24] 1472 	mov	r0,sp
      0001FF 18               [12] 1473 	dec	r0
      000200 18               [12] 1474 	dec	r0
      000201 74 0F            [12] 1475 	mov	a,#0x0f
      000203 26               [12] 1476 	add	a,@r0
      000204 FD               [12] 1477 	mov	r5,a
      000205 E4               [12] 1478 	clr	a
      000206 08               [12] 1479 	inc	r0
      000207 36               [12] 1480 	addc	a,@r0
      000208 FE               [12] 1481 	mov	r6,a
      000209 08               [12] 1482 	inc	r0
      00020A 86 07            [24] 1483 	mov	ar7,@r0
      00020C 8D 82            [24] 1484 	mov	dpl,r5
      00020E 8E 83            [24] 1485 	mov	dph,r6
      000210 8F F0            [24] 1486 	mov	b,r7
      000212 12r00r00         [24] 1487 	lcall	_ctimer_stop
                                   1488 ;	../../core/net/rime/polite.c:74: if(c->cb->dropped) {
      000215 A8 81            [24] 1489 	mov	r0,sp
      000217 18               [12] 1490 	dec	r0
      000218 18               [12] 1491 	dec	r0
      000219 74 0C            [12] 1492 	mov	a,#0x0c
      00021B 26               [12] 1493 	add	a,@r0
      00021C FE               [12] 1494 	mov	r6,a
      00021D E4               [12] 1495 	clr	a
      00021E 08               [12] 1496 	inc	r0
      00021F 36               [12] 1497 	addc	a,@r0
      000220 FD               [12] 1498 	mov	r5,a
      000221 08               [12] 1499 	inc	r0
      000222 86 07            [24] 1500 	mov	ar7,@r0
      000224 8E 82            [24] 1501 	mov	dpl,r6
      000226 8D 83            [24] 1502 	mov	dph,r5
      000228 8F F0            [24] 1503 	mov	b,r7
      00022A 12r00r00         [24] 1504 	lcall	__gptrget
      00022D FE               [12] 1505 	mov	r6,a
      00022E A3               [24] 1506 	inc	dptr
      00022F 12r00r00         [24] 1507 	lcall	__gptrget
      000232 FD               [12] 1508 	mov	r5,a
      000233 A3               [24] 1509 	inc	dptr
      000234 12r00r00         [24] 1510 	lcall	__gptrget
      000237 FF               [12] 1511 	mov	r7,a
      000238 74 04            [12] 1512 	mov	a,#0x04
      00023A 2E               [12] 1513 	add	a,r6
      00023B FE               [12] 1514 	mov	r6,a
      00023C E4               [12] 1515 	clr	a
      00023D 3D               [12] 1516 	addc	a,r5
      00023E FD               [12] 1517 	mov	r5,a
      00023F 8E 82            [24] 1518 	mov	dpl,r6
      000241 8D 83            [24] 1519 	mov	dph,r5
      000243 8F F0            [24] 1520 	mov	b,r7
      000245 12r00r00         [24] 1521 	lcall	__gptrget
      000248 FE               [12] 1522 	mov	r6,a
      000249 A3               [24] 1523 	inc	dptr
      00024A 12r00r00         [24] 1524 	lcall	__gptrget
      00024D FF               [12] 1525 	mov	r7,a
      00024E 4E               [12] 1526 	orl	a,r6
      00024F 60 1F            [24] 1527 	jz	00104$
                                   1528 ;	../../core/net/rime/polite.c:75: c->cb->dropped(c);
      000251 C0 07            [24] 1529 	push	ar7
      000253 C0 06            [24] 1530 	push	ar6
      000255 12r02r5A         [24] 1531 	lcall	00143$
      000258 80 12            [24] 1532 	sjmp	00144$
      00025A                       1533 00143$:
      00025A C0 06            [24] 1534 	push	ar6
      00025C C0 07            [24] 1535 	push	ar7
      00025E E5 81            [12] 1536 	mov	a,sp
      000260 24 F8            [12] 1537 	add	a,#0xf8
      000262 F8               [12] 1538 	mov	r0,a
      000263 86 82            [24] 1539 	mov	dpl,@r0
      000265 08               [12] 1540 	inc	r0
      000266 86 83            [24] 1541 	mov	dph,@r0
      000268 08               [12] 1542 	inc	r0
      000269 86 F0            [24] 1543 	mov	b,@r0
      00026B 22               [24] 1544 	ret
      00026C                       1545 00144$:
      00026C D0 06            [24] 1546 	pop	ar6
      00026E D0 07            [24] 1547 	pop	ar7
      000270                       1548 00104$:
                                   1549 ;	../../core/net/rime/polite.c:78: if(c->cb->recv) {
      000270 A8 81            [24] 1550 	mov	r0,sp
      000272 18               [12] 1551 	dec	r0
      000273 18               [12] 1552 	dec	r0
      000274 74 0C            [12] 1553 	mov	a,#0x0c
      000276 26               [12] 1554 	add	a,@r0
      000277 FE               [12] 1555 	mov	r6,a
      000278 E4               [12] 1556 	clr	a
      000279 08               [12] 1557 	inc	r0
      00027A 36               [12] 1558 	addc	a,@r0
      00027B FD               [12] 1559 	mov	r5,a
      00027C 08               [12] 1560 	inc	r0
      00027D 86 07            [24] 1561 	mov	ar7,@r0
      00027F 8E 82            [24] 1562 	mov	dpl,r6
      000281 8D 83            [24] 1563 	mov	dph,r5
      000283 8F F0            [24] 1564 	mov	b,r7
      000285 12r00r00         [24] 1565 	lcall	__gptrget
      000288 FE               [12] 1566 	mov	r6,a
      000289 A3               [24] 1567 	inc	dptr
      00028A 12r00r00         [24] 1568 	lcall	__gptrget
      00028D FD               [12] 1569 	mov	r5,a
      00028E A3               [24] 1570 	inc	dptr
      00028F 12r00r00         [24] 1571 	lcall	__gptrget
      000292 FF               [12] 1572 	mov	r7,a
      000293 8E 82            [24] 1573 	mov	dpl,r6
      000295 8D 83            [24] 1574 	mov	dph,r5
      000297 8F F0            [24] 1575 	mov	b,r7
      000299 12r00r00         [24] 1576 	lcall	__gptrget
      00029C FE               [12] 1577 	mov	r6,a
      00029D A3               [24] 1578 	inc	dptr
      00029E 12r00r00         [24] 1579 	lcall	__gptrget
      0002A1 FF               [12] 1580 	mov	r7,a
      0002A2 4E               [12] 1581 	orl	a,r6
      0002A3 60 1F            [24] 1582 	jz	00109$
                                   1583 ;	../../core/net/rime/polite.c:79: c->cb->recv(c);
      0002A5 C0 07            [24] 1584 	push	ar7
      0002A7 C0 06            [24] 1585 	push	ar6
      0002A9 12r02rAE         [24] 1586 	lcall	00146$
      0002AC 80 12            [24] 1587 	sjmp	00147$
      0002AE                       1588 00146$:
      0002AE C0 06            [24] 1589 	push	ar6
      0002B0 C0 07            [24] 1590 	push	ar7
      0002B2 E5 81            [12] 1591 	mov	a,sp
      0002B4 24 F8            [12] 1592 	add	a,#0xf8
      0002B6 F8               [12] 1593 	mov	r0,a
      0002B7 86 82            [24] 1594 	mov	dpl,@r0
      0002B9 08               [12] 1595 	inc	r0
      0002BA 86 83            [24] 1596 	mov	dph,@r0
      0002BC 08               [12] 1597 	inc	r0
      0002BD 86 F0            [24] 1598 	mov	b,@r0
      0002BF 22               [24] 1599 	ret
      0002C0                       1600 00147$:
      0002C0 D0 06            [24] 1601 	pop	ar6
      0002C2 D0 07            [24] 1602 	pop	ar7
      0002C4                       1603 00109$:
                                   1604 ;	../../core/net/rime/polite.c:81: }
      0002C4 E5 81            [12] 1605 	mov	a,sp
      0002C6 24 FB            [12] 1606 	add	a,#0xfb
      0002C8 F5 81            [12] 1607 	mov	sp,a
      0002CA 22               [24] 1608 	ret
                                   1609 ;------------------------------------------------------------
                                   1610 ;Allocation info for local variables in function 'sent'
                                   1611 ;------------------------------------------------------------
                                   1612 ;status                    Allocated to stack - sp -3
                                   1613 ;num_tx                    Allocated to stack - sp -5
                                   1614 ;c                         Allocated to registers 
                                   1615 ;------------------------------------------------------------
                                   1616 ;	../../core/net/rime/polite.c:84: sent(struct abc_conn *c, int status, int num_tx)
                                   1617 ;	-----------------------------------------
                                   1618 ;	 function sent
                                   1619 ;	-----------------------------------------
      0002CB                       1620 _sent:
                                   1621 ;	../../core/net/rime/polite.c:87: }
      0002CB 22               [24] 1622 	ret
                                   1623 ;------------------------------------------------------------
                                   1624 ;Allocation info for local variables in function 'send'
                                   1625 ;------------------------------------------------------------
                                   1626 ;ptr                       Allocated to registers r5 r6 r7 
                                   1627 ;c                         Allocated to stack - sp -2
                                   1628 ;sloc0                     Allocated to stack - sp +4
                                   1629 ;------------------------------------------------------------
                                   1630 ;	../../core/net/rime/polite.c:90: send(void *ptr)
                                   1631 ;	-----------------------------------------
                                   1632 ;	 function send
                                   1633 ;	-----------------------------------------
      0002CC                       1634 _send:
      0002CC 05 81            [12] 1635 	inc	sp
      0002CE 05 81            [12] 1636 	inc	sp
      0002D0 05 81            [12] 1637 	inc	sp
      0002D2 AD 82            [24] 1638 	mov	r5,dpl
      0002D4 AE 83            [24] 1639 	mov	r6,dph
      0002D6 AF F0            [24] 1640 	mov	r7,b
                                   1641 ;	../../core/net/rime/polite.c:92: struct polite_conn *c = ptr;
      0002D8 A8 81            [24] 1642 	mov	r0,sp
      0002DA 18               [12] 1643 	dec	r0
      0002DB 18               [12] 1644 	dec	r0
      0002DC A6 05            [24] 1645 	mov	@r0,ar5
      0002DE 08               [12] 1646 	inc	r0
      0002DF A6 06            [24] 1647 	mov	@r0,ar6
      0002E1 08               [12] 1648 	inc	r0
      0002E2 A6 07            [24] 1649 	mov	@r0,ar7
                                   1650 ;	../../core/net/rime/polite.c:94: if(c->q != NULL) {
      0002E4 A8 81            [24] 1651 	mov	r0,sp
      0002E6 18               [12] 1652 	dec	r0
      0002E7 18               [12] 1653 	dec	r0
      0002E8 74 24            [12] 1654 	mov	a,#0x24
      0002EA 26               [12] 1655 	add	a,@r0
      0002EB FA               [12] 1656 	mov	r2,a
      0002EC E4               [12] 1657 	clr	a
      0002ED 08               [12] 1658 	inc	r0
      0002EE 36               [12] 1659 	addc	a,@r0
      0002EF FB               [12] 1660 	mov	r3,a
      0002F0 08               [12] 1661 	inc	r0
      0002F1 86 04            [24] 1662 	mov	ar4,@r0
      0002F3 8A 82            [24] 1663 	mov	dpl,r2
      0002F5 8B 83            [24] 1664 	mov	dph,r3
      0002F7 8C F0            [24] 1665 	mov	b,r4
      0002F9 12r00r00         [24] 1666 	lcall	__gptrget
      0002FC FF               [12] 1667 	mov	r7,a
      0002FD A3               [24] 1668 	inc	dptr
      0002FE 12r00r00         [24] 1669 	lcall	__gptrget
      000301 FE               [12] 1670 	mov	r6,a
      000302 A3               [24] 1671 	inc	dptr
      000303 12r00r00         [24] 1672 	lcall	__gptrget
      000306 FD               [12] 1673 	mov	r5,a
      000307 EF               [12] 1674 	mov	a,r7
      000308 4E               [12] 1675 	orl	a,r6
      000309 70 03            [24] 1676 	jnz	00115$
      00030B 02r03rC8         [24] 1677 	ljmp	00105$
      00030E                       1678 00115$:
                                   1679 ;	../../core/net/rime/polite.c:95: queuebuf_to_packetbuf(c->q);
      00030E 8F 82            [24] 1680 	mov	dpl,r7
      000310 8E 83            [24] 1681 	mov	dph,r6
      000312 8D F0            [24] 1682 	mov	b,r5
      000314 C0 04            [24] 1683 	push	ar4
      000316 C0 03            [24] 1684 	push	ar3
      000318 C0 02            [24] 1685 	push	ar2
      00031A 12r00r00         [24] 1686 	lcall	_queuebuf_to_packetbuf
      00031D D0 02            [24] 1687 	pop	ar2
      00031F D0 03            [24] 1688 	pop	ar3
      000321 D0 04            [24] 1689 	pop	ar4
                                   1690 ;	../../core/net/rime/polite.c:96: queuebuf_free(c->q);
      000323 8A 82            [24] 1691 	mov	dpl,r2
      000325 8B 83            [24] 1692 	mov	dph,r3
      000327 8C F0            [24] 1693 	mov	b,r4
      000329 12r00r00         [24] 1694 	lcall	__gptrget
      00032C FD               [12] 1695 	mov	r5,a
      00032D A3               [24] 1696 	inc	dptr
      00032E 12r00r00         [24] 1697 	lcall	__gptrget
      000331 FE               [12] 1698 	mov	r6,a
      000332 A3               [24] 1699 	inc	dptr
      000333 12r00r00         [24] 1700 	lcall	__gptrget
      000336 FF               [12] 1701 	mov	r7,a
      000337 8D 82            [24] 1702 	mov	dpl,r5
      000339 8E 83            [24] 1703 	mov	dph,r6
      00033B 8F F0            [24] 1704 	mov	b,r7
      00033D C0 04            [24] 1705 	push	ar4
      00033F C0 03            [24] 1706 	push	ar3
      000341 C0 02            [24] 1707 	push	ar2
      000343 12r00r00         [24] 1708 	lcall	_queuebuf_free
      000346 D0 02            [24] 1709 	pop	ar2
      000348 D0 03            [24] 1710 	pop	ar3
      00034A D0 04            [24] 1711 	pop	ar4
                                   1712 ;	../../core/net/rime/polite.c:97: c->q = NULL;
      00034C 8A 82            [24] 1713 	mov	dpl,r2
      00034E 8B 83            [24] 1714 	mov	dph,r3
      000350 8C F0            [24] 1715 	mov	b,r4
      000352 E4               [12] 1716 	clr	a
      000353 12r00r00         [24] 1717 	lcall	__gptrput
      000356 A3               [24] 1718 	inc	dptr
      000357 12r00r00         [24] 1719 	lcall	__gptrput
      00035A A3               [24] 1720 	inc	dptr
      00035B 12r00r00         [24] 1721 	lcall	__gptrput
                                   1722 ;	../../core/net/rime/polite.c:98: abc_send(&c->c);
      00035E A8 81            [24] 1723 	mov	r0,sp
      000360 18               [12] 1724 	dec	r0
      000361 18               [12] 1725 	dec	r0
      000362 86 82            [24] 1726 	mov	dpl,@r0
      000364 08               [12] 1727 	inc	r0
      000365 86 83            [24] 1728 	mov	dph,@r0
      000367 08               [12] 1729 	inc	r0
      000368 86 F0            [24] 1730 	mov	b,@r0
      00036A 12r00r00         [24] 1731 	lcall	_abc_send
                                   1732 ;	../../core/net/rime/polite.c:99: if(c->cb->sent) {
      00036D A8 81            [24] 1733 	mov	r0,sp
      00036F 18               [12] 1734 	dec	r0
      000370 18               [12] 1735 	dec	r0
      000371 74 0C            [12] 1736 	mov	a,#0x0c
      000373 26               [12] 1737 	add	a,@r0
      000374 FE               [12] 1738 	mov	r6,a
      000375 E4               [12] 1739 	clr	a
      000376 08               [12] 1740 	inc	r0
      000377 36               [12] 1741 	addc	a,@r0
      000378 FD               [12] 1742 	mov	r5,a
      000379 08               [12] 1743 	inc	r0
      00037A 86 07            [24] 1744 	mov	ar7,@r0
      00037C 8E 82            [24] 1745 	mov	dpl,r6
      00037E 8D 83            [24] 1746 	mov	dph,r5
      000380 8F F0            [24] 1747 	mov	b,r7
      000382 12r00r00         [24] 1748 	lcall	__gptrget
      000385 FE               [12] 1749 	mov	r6,a
      000386 A3               [24] 1750 	inc	dptr
      000387 12r00r00         [24] 1751 	lcall	__gptrget
      00038A FD               [12] 1752 	mov	r5,a
      00038B A3               [24] 1753 	inc	dptr
      00038C 12r00r00         [24] 1754 	lcall	__gptrget
      00038F FF               [12] 1755 	mov	r7,a
      000390 74 02            [12] 1756 	mov	a,#0x02
      000392 2E               [12] 1757 	add	a,r6
      000393 FE               [12] 1758 	mov	r6,a
      000394 E4               [12] 1759 	clr	a
      000395 3D               [12] 1760 	addc	a,r5
      000396 FD               [12] 1761 	mov	r5,a
      000397 8E 82            [24] 1762 	mov	dpl,r6
      000399 8D 83            [24] 1763 	mov	dph,r5
      00039B 8F F0            [24] 1764 	mov	b,r7
      00039D 12r00r00         [24] 1765 	lcall	__gptrget
      0003A0 FE               [12] 1766 	mov	r6,a
      0003A1 A3               [24] 1767 	inc	dptr
      0003A2 12r00r00         [24] 1768 	lcall	__gptrget
      0003A5 FF               [12] 1769 	mov	r7,a
      0003A6 4E               [12] 1770 	orl	a,r6
      0003A7 60 1F            [24] 1771 	jz	00105$
                                   1772 ;	../../core/net/rime/polite.c:100: c->cb->sent(c);
      0003A9 C0 07            [24] 1773 	push	ar7
      0003AB C0 06            [24] 1774 	push	ar6
      0003AD 12r03rB2         [24] 1775 	lcall	00117$
      0003B0 80 12            [24] 1776 	sjmp	00118$
      0003B2                       1777 00117$:
      0003B2 C0 06            [24] 1778 	push	ar6
      0003B4 C0 07            [24] 1779 	push	ar7
      0003B6 E5 81            [12] 1780 	mov	a,sp
      0003B8 24 F8            [12] 1781 	add	a,#0xf8
      0003BA F8               [12] 1782 	mov	r0,a
      0003BB 86 82            [24] 1783 	mov	dpl,@r0
      0003BD 08               [12] 1784 	inc	r0
      0003BE 86 83            [24] 1785 	mov	dph,@r0
      0003C0 08               [12] 1786 	inc	r0
      0003C1 86 F0            [24] 1787 	mov	b,@r0
      0003C3 22               [24] 1788 	ret
      0003C4                       1789 00118$:
      0003C4 D0 06            [24] 1790 	pop	ar6
      0003C6 D0 07            [24] 1791 	pop	ar7
      0003C8                       1792 00105$:
                                   1793 ;	../../core/net/rime/polite.c:103: }
      0003C8 15 81            [12] 1794 	dec	sp
      0003CA 15 81            [12] 1795 	dec	sp
      0003CC 15 81            [12] 1796 	dec	sp
      0003CE 22               [24] 1797 	ret
                                   1798 ;------------------------------------------------------------
                                   1799 ;Allocation info for local variables in function 'polite_open'
                                   1800 ;------------------------------------------------------------
                                   1801 ;channel                   Allocated to stack - sp -3
                                   1802 ;cb                        Allocated to stack - sp -6
                                   1803 ;c                         Allocated to registers r5 r6 r7 
                                   1804 ;------------------------------------------------------------
                                   1805 ;	../../core/net/rime/polite.c:108: polite_open(struct polite_conn *c, uint16_t channel,
                                   1806 ;	-----------------------------------------
                                   1807 ;	 function polite_open
                                   1808 ;	-----------------------------------------
      0003CF                       1809 _polite_open:
      0003CF AD 82            [24] 1810 	mov	r5,dpl
      0003D1 AE 83            [24] 1811 	mov	r6,dph
      0003D3 AF F0            [24] 1812 	mov	r7,b
                                   1813 ;	../../core/net/rime/polite.c:111: abc_open(&c->c, channel, &abc);
      0003D5 C0 07            [24] 1814 	push	ar7
      0003D7 C0 06            [24] 1815 	push	ar6
      0003D9 C0 05            [24] 1816 	push	ar5
      0003DB 74r00            [12] 1817 	mov	a,#_abc
      0003DD C0 E0            [24] 1818 	push	acc
      0003DF 74s00            [12] 1819 	mov	a,#(_abc >> 8)
      0003E1 C0 E0            [24] 1820 	push	acc
      0003E3 74 80            [12] 1821 	mov	a,#0x80
      0003E5 C0 E0            [24] 1822 	push	acc
      0003E7 E5 81            [12] 1823 	mov	a,sp
      0003E9 24 F7            [12] 1824 	add	a,#0xf7
      0003EB F8               [12] 1825 	mov	r0,a
      0003EC E6               [12] 1826 	mov	a,@r0
      0003ED C0 E0            [24] 1827 	push	acc
      0003EF 08               [12] 1828 	inc	r0
      0003F0 E6               [12] 1829 	mov	a,@r0
      0003F1 C0 E0            [24] 1830 	push	acc
      0003F3 8D 82            [24] 1831 	mov	dpl,r5
      0003F5 8E 83            [24] 1832 	mov	dph,r6
      0003F7 8F F0            [24] 1833 	mov	b,r7
      0003F9 12r00r00         [24] 1834 	lcall	_abc_open
      0003FC E5 81            [12] 1835 	mov	a,sp
      0003FE 24 FB            [12] 1836 	add	a,#0xfb
      000400 F5 81            [12] 1837 	mov	sp,a
      000402 D0 05            [24] 1838 	pop	ar5
      000404 D0 06            [24] 1839 	pop	ar6
      000406 D0 07            [24] 1840 	pop	ar7
                                   1841 ;	../../core/net/rime/polite.c:112: c->cb = cb;
      000408 74 0C            [12] 1842 	mov	a,#0x0c
      00040A 2D               [12] 1843 	add	a,r5
      00040B FD               [12] 1844 	mov	r5,a
      00040C E4               [12] 1845 	clr	a
      00040D 3E               [12] 1846 	addc	a,r6
      00040E FE               [12] 1847 	mov	r6,a
      00040F 8D 82            [24] 1848 	mov	dpl,r5
      000411 8E 83            [24] 1849 	mov	dph,r6
      000413 8F F0            [24] 1850 	mov	b,r7
      000415 E5 81            [12] 1851 	mov	a,sp
      000417 24 FA            [12] 1852 	add	a,#0xfa
      000419 F8               [12] 1853 	mov	r0,a
      00041A E6               [12] 1854 	mov	a,@r0
      00041B 12r00r00         [24] 1855 	lcall	__gptrput
      00041E A3               [24] 1856 	inc	dptr
      00041F 08               [12] 1857 	inc	r0
      000420 E6               [12] 1858 	mov	a,@r0
      000421 12r00r00         [24] 1859 	lcall	__gptrput
      000424 A3               [24] 1860 	inc	dptr
      000425 08               [12] 1861 	inc	r0
      000426 E6               [12] 1862 	mov	a,@r0
                                   1863 ;	../../core/net/rime/polite.c:113: }
      000427 02r00r00         [24] 1864 	ljmp	__gptrput
                                   1865 ;------------------------------------------------------------
                                   1866 ;Allocation info for local variables in function 'polite_close'
                                   1867 ;------------------------------------------------------------
                                   1868 ;c                         Allocated to registers r5 r6 r7 
                                   1869 ;------------------------------------------------------------
                                   1870 ;	../../core/net/rime/polite.c:116: polite_close(struct polite_conn *c)
                                   1871 ;	-----------------------------------------
                                   1872 ;	 function polite_close
                                   1873 ;	-----------------------------------------
      00042A                       1874 _polite_close:
                                   1875 ;	../../core/net/rime/polite.c:118: abc_close(&c->c);
      00042A AD 82            [24] 1876 	mov	r5,dpl
      00042C AE 83            [24] 1877 	mov	r6,dph
      00042E AF F0            [24] 1878 	mov	r7,b
      000430 C0 07            [24] 1879 	push	ar7
      000432 C0 06            [24] 1880 	push	ar6
      000434 C0 05            [24] 1881 	push	ar5
      000436 12r00r00         [24] 1882 	lcall	_abc_close
      000439 D0 05            [24] 1883 	pop	ar5
      00043B D0 06            [24] 1884 	pop	ar6
      00043D D0 07            [24] 1885 	pop	ar7
                                   1886 ;	../../core/net/rime/polite.c:119: ctimer_stop(&c->t);
      00043F 74 0F            [12] 1887 	mov	a,#0x0f
      000441 2D               [12] 1888 	add	a,r5
      000442 FA               [12] 1889 	mov	r2,a
      000443 E4               [12] 1890 	clr	a
      000444 3E               [12] 1891 	addc	a,r6
      000445 FB               [12] 1892 	mov	r3,a
      000446 8F 04            [24] 1893 	mov	ar4,r7
      000448 8A 82            [24] 1894 	mov	dpl,r2
      00044A 8B 83            [24] 1895 	mov	dph,r3
      00044C 8C F0            [24] 1896 	mov	b,r4
      00044E C0 07            [24] 1897 	push	ar7
      000450 C0 06            [24] 1898 	push	ar6
      000452 C0 05            [24] 1899 	push	ar5
      000454 12r00r00         [24] 1900 	lcall	_ctimer_stop
      000457 D0 05            [24] 1901 	pop	ar5
      000459 D0 06            [24] 1902 	pop	ar6
      00045B D0 07            [24] 1903 	pop	ar7
                                   1904 ;	../../core/net/rime/polite.c:120: if(c->q != NULL) {
      00045D 74 24            [12] 1905 	mov	a,#0x24
      00045F 2D               [12] 1906 	add	a,r5
      000460 FD               [12] 1907 	mov	r5,a
      000461 E4               [12] 1908 	clr	a
      000462 3E               [12] 1909 	addc	a,r6
      000463 FE               [12] 1910 	mov	r6,a
      000464 8D 82            [24] 1911 	mov	dpl,r5
      000466 8E 83            [24] 1912 	mov	dph,r6
      000468 8F F0            [24] 1913 	mov	b,r7
      00046A 12r00r00         [24] 1914 	lcall	__gptrget
      00046D FA               [12] 1915 	mov	r2,a
      00046E A3               [24] 1916 	inc	dptr
      00046F 12r00r00         [24] 1917 	lcall	__gptrget
      000472 FB               [12] 1918 	mov	r3,a
      000473 A3               [24] 1919 	inc	dptr
      000474 12r00r00         [24] 1920 	lcall	__gptrget
      000477 FC               [12] 1921 	mov	r4,a
      000478 EA               [12] 1922 	mov	a,r2
      000479 4B               [12] 1923 	orl	a,r3
      00047A 60 27            [24] 1924 	jz	00103$
                                   1925 ;	../../core/net/rime/polite.c:121: queuebuf_free(c->q);
      00047C 8A 82            [24] 1926 	mov	dpl,r2
      00047E 8B 83            [24] 1927 	mov	dph,r3
      000480 8C F0            [24] 1928 	mov	b,r4
      000482 C0 07            [24] 1929 	push	ar7
      000484 C0 06            [24] 1930 	push	ar6
      000486 C0 05            [24] 1931 	push	ar5
      000488 12r00r00         [24] 1932 	lcall	_queuebuf_free
      00048B D0 05            [24] 1933 	pop	ar5
      00048D D0 06            [24] 1934 	pop	ar6
      00048F D0 07            [24] 1935 	pop	ar7
                                   1936 ;	../../core/net/rime/polite.c:122: c->q = NULL;
      000491 8D 82            [24] 1937 	mov	dpl,r5
      000493 8E 83            [24] 1938 	mov	dph,r6
      000495 8F F0            [24] 1939 	mov	b,r7
      000497 E4               [12] 1940 	clr	a
      000498 12r00r00         [24] 1941 	lcall	__gptrput
      00049B A3               [24] 1942 	inc	dptr
      00049C 12r00r00         [24] 1943 	lcall	__gptrput
      00049F A3               [24] 1944 	inc	dptr
                                   1945 ;	../../core/net/rime/polite.c:124: }
      0004A0 02r00r00         [24] 1946 	ljmp	__gptrput
      0004A3                       1947 00103$:
      0004A3 22               [24] 1948 	ret
                                   1949 ;------------------------------------------------------------
                                   1950 ;Allocation info for local variables in function 'polite_send'
                                   1951 ;------------------------------------------------------------
                                   1952 ;interval                  Allocated to stack - sp -9
                                   1953 ;hdrsize                   Allocated to stack - sp -10
                                   1954 ;c                         Allocated to stack - sp -5
                                   1955 ;sloc0                     Allocated to stack - sp -2
                                   1956 ;------------------------------------------------------------
                                   1957 ;	../../core/net/rime/polite.c:127: polite_send(struct polite_conn *c, clock_time_t interval, uint8_t hdrsize)
                                   1958 ;	-----------------------------------------
                                   1959 ;	 function polite_send
                                   1960 ;	-----------------------------------------
      0004A4                       1961 _polite_send:
      0004A4 C0 82            [24] 1962 	push	dpl
      0004A6 C0 83            [24] 1963 	push	dph
      0004A8 C0 F0            [24] 1964 	push	b
      0004AA 05 81            [12] 1965 	inc	sp
      0004AC 05 81            [12] 1966 	inc	sp
      0004AE 05 81            [12] 1967 	inc	sp
                                   1968 ;	../../core/net/rime/polite.c:129: if(c->q != NULL) {
      0004B0 E5 81            [12] 1969 	mov	a,sp
      0004B2 24 FB            [12] 1970 	add	a,#0xfb
      0004B4 F8               [12] 1971 	mov	r0,a
      0004B5 74 24            [12] 1972 	mov	a,#0x24
      0004B7 26               [12] 1973 	add	a,@r0
      0004B8 FA               [12] 1974 	mov	r2,a
      0004B9 E4               [12] 1975 	clr	a
      0004BA 08               [12] 1976 	inc	r0
      0004BB 36               [12] 1977 	addc	a,@r0
      0004BC FB               [12] 1978 	mov	r3,a
      0004BD 08               [12] 1979 	inc	r0
      0004BE 86 04            [24] 1980 	mov	ar4,@r0
      0004C0 8A 82            [24] 1981 	mov	dpl,r2
      0004C2 8B 83            [24] 1982 	mov	dph,r3
      0004C4 8C F0            [24] 1983 	mov	b,r4
      0004C6 12r00r00         [24] 1984 	lcall	__gptrget
      0004C9 FF               [12] 1985 	mov	r7,a
      0004CA A3               [24] 1986 	inc	dptr
      0004CB 12r00r00         [24] 1987 	lcall	__gptrget
      0004CE FE               [12] 1988 	mov	r6,a
      0004CF A3               [24] 1989 	inc	dptr
      0004D0 12r00r00         [24] 1990 	lcall	__gptrget
      0004D3 FD               [12] 1991 	mov	r5,a
      0004D4 EF               [12] 1992 	mov	a,r7
      0004D5 4E               [12] 1993 	orl	a,r6
      0004D6 60 15            [24] 1994 	jz	00102$
                                   1995 ;	../../core/net/rime/polite.c:131: queuebuf_free(c->q);
      0004D8 8F 82            [24] 1996 	mov	dpl,r7
      0004DA 8E 83            [24] 1997 	mov	dph,r6
      0004DC 8D F0            [24] 1998 	mov	b,r5
      0004DE C0 04            [24] 1999 	push	ar4
      0004E0 C0 03            [24] 2000 	push	ar3
      0004E2 C0 02            [24] 2001 	push	ar2
      0004E4 12r00r00         [24] 2002 	lcall	_queuebuf_free
      0004E7 D0 02            [24] 2003 	pop	ar2
      0004E9 D0 03            [24] 2004 	pop	ar3
      0004EB D0 04            [24] 2005 	pop	ar4
      0004ED                       2006 00102$:
                                   2007 ;	../../core/net/rime/polite.c:133: c->hdrsize = hdrsize;
      0004ED E5 81            [12] 2008 	mov	a,sp
      0004EF 24 FB            [12] 2009 	add	a,#0xfb
      0004F1 F8               [12] 2010 	mov	r0,a
      0004F2 74 27            [12] 2011 	mov	a,#0x27
      0004F4 26               [12] 2012 	add	a,@r0
      0004F5 FD               [12] 2013 	mov	r5,a
      0004F6 E4               [12] 2014 	clr	a
      0004F7 08               [12] 2015 	inc	r0
      0004F8 36               [12] 2016 	addc	a,@r0
      0004F9 FE               [12] 2017 	mov	r6,a
      0004FA 08               [12] 2018 	inc	r0
      0004FB 86 07            [24] 2019 	mov	ar7,@r0
      0004FD 8D 82            [24] 2020 	mov	dpl,r5
      0004FF 8E 83            [24] 2021 	mov	dph,r6
      000501 8F F0            [24] 2022 	mov	b,r7
      000503 E5 81            [12] 2023 	mov	a,sp
      000505 24 F6            [12] 2024 	add	a,#0xf6
      000507 F8               [12] 2025 	mov	r0,a
      000508 E6               [12] 2026 	mov	a,@r0
      000509 12r00r00         [24] 2027 	lcall	__gptrput
                                   2028 ;	../../core/net/rime/polite.c:134: c->q = queuebuf_new_from_packetbuf();
      00050C C0 04            [24] 2029 	push	ar4
      00050E C0 03            [24] 2030 	push	ar3
      000510 C0 02            [24] 2031 	push	ar2
      000512 12r00r00         [24] 2032 	lcall	_queuebuf_new_from_packetbuf
      000515 AD 82            [24] 2033 	mov	r5,dpl
      000517 AE 83            [24] 2034 	mov	r6,dph
      000519 AF F0            [24] 2035 	mov	r7,b
      00051B D0 02            [24] 2036 	pop	ar2
      00051D D0 03            [24] 2037 	pop	ar3
      00051F D0 04            [24] 2038 	pop	ar4
      000521 8A 82            [24] 2039 	mov	dpl,r2
      000523 8B 83            [24] 2040 	mov	dph,r3
      000525 8C F0            [24] 2041 	mov	b,r4
      000527 ED               [12] 2042 	mov	a,r5
      000528 12r00r00         [24] 2043 	lcall	__gptrput
      00052B A3               [24] 2044 	inc	dptr
      00052C EE               [12] 2045 	mov	a,r6
      00052D 12r00r00         [24] 2046 	lcall	__gptrput
      000530 A3               [24] 2047 	inc	dptr
      000531 EF               [12] 2048 	mov	a,r7
      000532 12r00r00         [24] 2049 	lcall	__gptrput
                                   2050 ;	../../core/net/rime/polite.c:135: if(c->q != NULL) {
      000535 ED               [12] 2051 	mov	a,r5
      000536 4E               [12] 2052 	orl	a,r6
      000537 70 03            [24] 2053 	jnz	00116$
      000539 02r05rCD         [24] 2054 	ljmp	00104$
      00053C                       2055 00116$:
                                   2056 ;	../../core/net/rime/polite.c:136: ctimer_set(&c->t, interval / 2 + (random_rand() % (interval / 2)), send, c);
      00053C E5 81            [12] 2057 	mov	a,sp
      00053E 24 FB            [12] 2058 	add	a,#0xfb
      000540 F8               [12] 2059 	mov	r0,a
      000541 A9 81            [24] 2060 	mov	r1,sp
      000543 19               [12] 2061 	dec	r1
      000544 19               [12] 2062 	dec	r1
      000545 E6               [12] 2063 	mov	a,@r0
      000546 F7               [12] 2064 	mov	@r1,a
      000547 08               [12] 2065 	inc	r0
      000548 09               [12] 2066 	inc	r1
      000549 E6               [12] 2067 	mov	a,@r0
      00054A F7               [12] 2068 	mov	@r1,a
      00054B 08               [12] 2069 	inc	r0
      00054C 09               [12] 2070 	inc	r1
      00054D E6               [12] 2071 	mov	a,@r0
      00054E F7               [12] 2072 	mov	@r1,a
      00054F E5 81            [12] 2073 	mov	a,sp
      000551 24 F7            [12] 2074 	add	a,#0xf7
      000553 F8               [12] 2075 	mov	r0,a
      000554 86 03            [24] 2076 	mov	ar3,@r0
      000556 08               [12] 2077 	inc	r0
      000557 E6               [12] 2078 	mov	a,@r0
      000558 C3               [12] 2079 	clr	c
      000559 13               [12] 2080 	rrc	a
      00055A CB               [12] 2081 	xch	a,r3
      00055B 13               [12] 2082 	rrc	a
      00055C CB               [12] 2083 	xch	a,r3
      00055D FC               [12] 2084 	mov	r4,a
      00055E C0 04            [24] 2085 	push	ar4
      000560 C0 03            [24] 2086 	push	ar3
      000562 12r00r00         [24] 2087 	lcall	_random_rand
      000565 AA 82            [24] 2088 	mov	r2,dpl
      000567 AF 83            [24] 2089 	mov	r7,dph
      000569 D0 03            [24] 2090 	pop	ar3
      00056B D0 04            [24] 2091 	pop	ar4
      00056D C0 04            [24] 2092 	push	ar4
      00056F C0 03            [24] 2093 	push	ar3
      000571 C0 03            [24] 2094 	push	ar3
      000573 C0 04            [24] 2095 	push	ar4
      000575 8A 82            [24] 2096 	mov	dpl,r2
      000577 8F 83            [24] 2097 	mov	dph,r7
      000579 12r00r00         [24] 2098 	lcall	__moduint
      00057C AE 82            [24] 2099 	mov	r6,dpl
      00057E AF 83            [24] 2100 	mov	r7,dph
      000580 15 81            [12] 2101 	dec	sp
      000582 15 81            [12] 2102 	dec	sp
      000584 D0 03            [24] 2103 	pop	ar3
      000586 D0 04            [24] 2104 	pop	ar4
      000588 EE               [12] 2105 	mov	a,r6
      000589 2B               [12] 2106 	add	a,r3
      00058A FB               [12] 2107 	mov	r3,a
      00058B EF               [12] 2108 	mov	a,r7
      00058C 3C               [12] 2109 	addc	a,r4
      00058D FC               [12] 2110 	mov	r4,a
      00058E E5 81            [12] 2111 	mov	a,sp
      000590 24 FB            [12] 2112 	add	a,#0xfb
      000592 F8               [12] 2113 	mov	r0,a
      000593 74 0F            [12] 2114 	mov	a,#0x0f
      000595 26               [12] 2115 	add	a,@r0
      000596 FD               [12] 2116 	mov	r5,a
      000597 E4               [12] 2117 	clr	a
      000598 08               [12] 2118 	inc	r0
      000599 36               [12] 2119 	addc	a,@r0
      00059A FE               [12] 2120 	mov	r6,a
      00059B 08               [12] 2121 	inc	r0
      00059C 86 07            [24] 2122 	mov	ar7,@r0
      00059E A8 81            [24] 2123 	mov	r0,sp
      0005A0 18               [12] 2124 	dec	r0
      0005A1 18               [12] 2125 	dec	r0
      0005A2 E6               [12] 2126 	mov	a,@r0
      0005A3 C0 E0            [24] 2127 	push	acc
      0005A5 08               [12] 2128 	inc	r0
      0005A6 E6               [12] 2129 	mov	a,@r0
      0005A7 C0 E0            [24] 2130 	push	acc
      0005A9 08               [12] 2131 	inc	r0
      0005AA E6               [12] 2132 	mov	a,@r0
      0005AB C0 E0            [24] 2133 	push	acc
      0005AD 74rCC            [12] 2134 	mov	a,#_send
      0005AF C0 E0            [24] 2135 	push	acc
      0005B1 74s02            [12] 2136 	mov	a,#(_send >> 8)
      0005B3 C0 E0            [24] 2137 	push	acc
      0005B5 C0 03            [24] 2138 	push	ar3
      0005B7 C0 04            [24] 2139 	push	ar4
      0005B9 8D 82            [24] 2140 	mov	dpl,r5
      0005BB 8E 83            [24] 2141 	mov	dph,r6
      0005BD 8F F0            [24] 2142 	mov	b,r7
      0005BF 12r00r00         [24] 2143 	lcall	_ctimer_set
      0005C2 E5 81            [12] 2144 	mov	a,sp
      0005C4 24 F9            [12] 2145 	add	a,#0xf9
      0005C6 F5 81            [12] 2146 	mov	sp,a
                                   2147 ;	../../core/net/rime/polite.c:137: return 1;
      0005C8 90 00 01         [24] 2148 	mov	dptr,#0x0001
      0005CB 80 03            [24] 2149 	sjmp	00105$
      0005CD                       2150 00104$:
                                   2151 ;	../../core/net/rime/polite.c:139: return 0;
      0005CD 90 00 00         [24] 2152 	mov	dptr,#0x0000
      0005D0                       2153 00105$:
                                   2154 ;	../../core/net/rime/polite.c:140: }
      0005D0 E5 81            [12] 2155 	mov	a,sp
      0005D2 24 FA            [12] 2156 	add	a,#0xfa
      0005D4 F5 81            [12] 2157 	mov	sp,a
      0005D6 22               [24] 2158 	ret
                                   2159 ;------------------------------------------------------------
                                   2160 ;Allocation info for local variables in function 'polite_cancel'
                                   2161 ;------------------------------------------------------------
                                   2162 ;c                         Allocated to registers r5 r6 r7 
                                   2163 ;------------------------------------------------------------
                                   2164 ;	../../core/net/rime/polite.c:143: polite_cancel(struct polite_conn *c)
                                   2165 ;	-----------------------------------------
                                   2166 ;	 function polite_cancel
                                   2167 ;	-----------------------------------------
      0005D7                       2168 _polite_cancel:
      0005D7 AD 82            [24] 2169 	mov	r5,dpl
      0005D9 AE 83            [24] 2170 	mov	r6,dph
      0005DB AF F0            [24] 2171 	mov	r7,b
                                   2172 ;	../../core/net/rime/polite.c:145: ctimer_stop(&c->t);
      0005DD 74 0F            [12] 2173 	mov	a,#0x0f
      0005DF 2D               [12] 2174 	add	a,r5
      0005E0 FA               [12] 2175 	mov	r2,a
      0005E1 E4               [12] 2176 	clr	a
      0005E2 3E               [12] 2177 	addc	a,r6
      0005E3 FB               [12] 2178 	mov	r3,a
      0005E4 8F 04            [24] 2179 	mov	ar4,r7
      0005E6 8A 82            [24] 2180 	mov	dpl,r2
      0005E8 8B 83            [24] 2181 	mov	dph,r3
      0005EA 8C F0            [24] 2182 	mov	b,r4
      0005EC C0 07            [24] 2183 	push	ar7
      0005EE C0 06            [24] 2184 	push	ar6
      0005F0 C0 05            [24] 2185 	push	ar5
      0005F2 12r00r00         [24] 2186 	lcall	_ctimer_stop
      0005F5 D0 05            [24] 2187 	pop	ar5
      0005F7 D0 06            [24] 2188 	pop	ar6
      0005F9 D0 07            [24] 2189 	pop	ar7
                                   2190 ;	../../core/net/rime/polite.c:146: if(c->q != NULL) {
      0005FB 74 24            [12] 2191 	mov	a,#0x24
      0005FD 2D               [12] 2192 	add	a,r5
      0005FE FD               [12] 2193 	mov	r5,a
      0005FF E4               [12] 2194 	clr	a
      000600 3E               [12] 2195 	addc	a,r6
      000601 FE               [12] 2196 	mov	r6,a
      000602 8D 82            [24] 2197 	mov	dpl,r5
      000604 8E 83            [24] 2198 	mov	dph,r6
      000606 8F F0            [24] 2199 	mov	b,r7
      000608 12r00r00         [24] 2200 	lcall	__gptrget
      00060B FA               [12] 2201 	mov	r2,a
      00060C A3               [24] 2202 	inc	dptr
      00060D 12r00r00         [24] 2203 	lcall	__gptrget
      000610 FB               [12] 2204 	mov	r3,a
      000611 A3               [24] 2205 	inc	dptr
      000612 12r00r00         [24] 2206 	lcall	__gptrget
      000615 FC               [12] 2207 	mov	r4,a
      000616 EA               [12] 2208 	mov	a,r2
      000617 4B               [12] 2209 	orl	a,r3
      000618 60 27            [24] 2210 	jz	00103$
                                   2211 ;	../../core/net/rime/polite.c:147: queuebuf_free(c->q);
      00061A 8A 82            [24] 2212 	mov	dpl,r2
      00061C 8B 83            [24] 2213 	mov	dph,r3
      00061E 8C F0            [24] 2214 	mov	b,r4
      000620 C0 07            [24] 2215 	push	ar7
      000622 C0 06            [24] 2216 	push	ar6
      000624 C0 05            [24] 2217 	push	ar5
      000626 12r00r00         [24] 2218 	lcall	_queuebuf_free
      000629 D0 05            [24] 2219 	pop	ar5
      00062B D0 06            [24] 2220 	pop	ar6
      00062D D0 07            [24] 2221 	pop	ar7
                                   2222 ;	../../core/net/rime/polite.c:148: c->q = NULL;
      00062F 8D 82            [24] 2223 	mov	dpl,r5
      000631 8E 83            [24] 2224 	mov	dph,r6
      000633 8F F0            [24] 2225 	mov	b,r7
      000635 E4               [12] 2226 	clr	a
      000636 12r00r00         [24] 2227 	lcall	__gptrput
      000639 A3               [24] 2228 	inc	dptr
      00063A 12r00r00         [24] 2229 	lcall	__gptrput
      00063D A3               [24] 2230 	inc	dptr
                                   2231 ;	../../core/net/rime/polite.c:150: }
      00063E 02r00r00         [24] 2232 	ljmp	__gptrput
      000641                       2233 00103$:
      000641 22               [24] 2234 	ret
                                   2235 	.area CSEG    (CODE)
                                   2236 	.area CONST   (CODE)
      000000                       2237 _abc:
      000000r00s00                 2238 	.byte _recv, (_recv >> 8)
      000002rCBs02                 2239 	.byte _sent, (_sent >> 8)
                                   2240 	.area XINIT   (CODE)
                                   2241 	.area CABS    (ABS,CODE)
