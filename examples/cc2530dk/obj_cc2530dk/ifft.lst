                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module ifft
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _ifft
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in internal ram 
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; indirectly addressable internal ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area ISEG    (DATA)
                                     38 ;--------------------------------------------------------
                                     39 ; absolute internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area IABS    (ABS,DATA)
                                     42 	.area IABS    (ABS,DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; bit data
                                     45 ;--------------------------------------------------------
                                     46 	.area BSEG    (BIT)
                                     47 ;--------------------------------------------------------
                                     48 ; paged external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area PSEG    (PAG,XDATA)
                                     51 ;--------------------------------------------------------
                                     52 ; external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area XSEG    (XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XABS    (ABS,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; external initialized ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XISEG   (XDATA)
                                     63 	.area HOME    (CODE)
                                     64 	.area GSINIT0 (CODE)
                                     65 	.area GSINIT1 (CODE)
                                     66 	.area GSINIT2 (CODE)
                                     67 	.area GSINIT3 (CODE)
                                     68 	.area GSINIT4 (CODE)
                                     69 	.area GSINIT5 (CODE)
                                     70 	.area GSINIT  (CODE)
                                     71 	.area GSFINAL (CODE)
                                     72 	.area CSEG    (CODE)
                                     73 ;--------------------------------------------------------
                                     74 ; global & static initialisations
                                     75 ;--------------------------------------------------------
                                     76 	.area HOME    (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; Home
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area HOME    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; code
                                     87 ;--------------------------------------------------------
                                     88 	.area CSEG    (CODE)
                                     89 ;------------------------------------------------------------
                                     90 ;Allocation info for local variables in function 'bitrev'
                                     91 ;------------------------------------------------------------
                                     92 ;nu                        Allocated to stack - sp -7
                                     93 ;j                         Allocated to stack - sp -3
                                     94 ;k                         Allocated to stack - sp -1
                                     95 ;------------------------------------------------------------
                                     96 ;	../../core/lib/ifft.c:62: static uint16_t bitrev(uint16_t j, uint16_t nu)
                                     97 ;	-----------------------------------------
                                     98 ;	 function bitrev
                                     99 ;	-----------------------------------------
      000000                        100 _bitrev:
                           000007   101 	ar7 = 0x07
                           000006   102 	ar6 = 0x06
                           000005   103 	ar5 = 0x05
                           000004   104 	ar4 = 0x04
                           000003   105 	ar3 = 0x03
                           000002   106 	ar2 = 0x02
                           000001   107 	ar1 = 0x01
                           000000   108 	ar0 = 0x00
      000000 C0 82            [24]  109 	push	dpl
      000002 C0 83            [24]  110 	push	dph
      000004 05 81            [12]  111 	inc	sp
      000006 05 81            [12]  112 	inc	sp
                                    113 ;	../../core/lib/ifft.c:65: k = 0;
      000008 A8 81            [24]  114 	mov	r0,sp
      00000A 18               [12]  115 	dec	r0
      00000B E4               [12]  116 	clr	a
      00000C F6               [12]  117 	mov	@r0,a
      00000D 08               [12]  118 	inc	r0
      00000E F6               [12]  119 	mov	@r0,a
      00000F E5 81            [12]  120 	mov	a,sp
      000011 24 F9            [12]  121 	add	a,#0xf9
      000013 F8               [12]  122 	mov	r0,a
      000014 86 02            [24]  123 	mov	ar2,@r0
      000016 08               [12]  124 	inc	r0
      000017 86 03            [24]  125 	mov	ar3,@r0
      000019                        126 00103$:
                                    127 ;	../../core/lib/ifft.c:66: for (; nu > 0; nu--) {
      000019 EA               [12]  128 	mov	a,r2
      00001A 4B               [12]  129 	orl	a,r3
      00001B 60 3D            [24]  130 	jz	00101$
                                    131 ;	../../core/lib/ifft.c:67: k  = (k << 1) + (j & 1);
      00001D A8 81            [24]  132 	mov	r0,sp
      00001F 18               [12]  133 	dec	r0
      000020 E6               [12]  134 	mov	a,@r0
      000021 26               [12]  135 	add	a,@r0
      000022 FC               [12]  136 	mov	r4,a
      000023 08               [12]  137 	inc	r0
      000024 E6               [12]  138 	mov	a,@r0
      000025 33               [12]  139 	rlc	a
      000026 FD               [12]  140 	mov	r5,a
      000027 E5 81            [12]  141 	mov	a,sp
      000029 24 FD            [12]  142 	add	a,#0xfd
      00002B F8               [12]  143 	mov	r0,a
      00002C 86 06            [24]  144 	mov	ar6,@r0
      00002E 08               [12]  145 	inc	r0
      00002F 86 07            [24]  146 	mov	ar7,@r0
      000031 53 06 01         [24]  147 	anl	ar6,#0x01
      000034 7F 00            [12]  148 	mov	r7,#0x00
      000036 EE               [12]  149 	mov	a,r6
      000037 2C               [12]  150 	add	a,r4
      000038 FE               [12]  151 	mov	r6,a
      000039 EF               [12]  152 	mov	a,r7
      00003A 3D               [12]  153 	addc	a,r5
      00003B FF               [12]  154 	mov	r7,a
      00003C A8 81            [24]  155 	mov	r0,sp
      00003E 18               [12]  156 	dec	r0
      00003F A6 06            [24]  157 	mov	@r0,ar6
      000041 08               [12]  158 	inc	r0
      000042 A6 07            [24]  159 	mov	@r0,ar7
                                    160 ;	../../core/lib/ifft.c:68: j = j >> 1;
      000044 E5 81            [12]  161 	mov	a,sp
      000046 24 FD            [12]  162 	add	a,#0xfd
      000048 F8               [12]  163 	mov	r0,a
      000049 08               [12]  164 	inc	r0
      00004A E6               [12]  165 	mov	a,@r0
      00004B 18               [12]  166 	dec	r0
      00004C C3               [12]  167 	clr	c
      00004D 13               [12]  168 	rrc	a
      00004E C6               [12]  169 	xch	a,@r0
      00004F 13               [12]  170 	rrc	a
      000050 C6               [12]  171 	xch	a,@r0
      000051 08               [12]  172 	inc	r0
      000052 F6               [12]  173 	mov	@r0,a
                                    174 ;	../../core/lib/ifft.c:66: for (; nu > 0; nu--) {
      000053 1A               [12]  175 	dec	r2
      000054 BA FF 01         [24]  176 	cjne	r2,#0xff,00119$
      000057 1B               [12]  177 	dec	r3
      000058                        178 00119$:
      000058 80 BF            [24]  179 	sjmp	00103$
      00005A                        180 00101$:
                                    181 ;	../../core/lib/ifft.c:70: return k;
      00005A A8 81            [24]  182 	mov	r0,sp
      00005C 18               [12]  183 	dec	r0
      00005D 86 82            [24]  184 	mov	dpl,@r0
      00005F 08               [12]  185 	inc	r0
      000060 86 83            [24]  186 	mov	dph,@r0
                                    187 ;	../../core/lib/ifft.c:71: }
      000062 E5 81            [12]  188 	mov	a,sp
      000064 24 FC            [12]  189 	add	a,#0xfc
      000066 F5 81            [12]  190 	mov	sp,a
      000068 22               [24]  191 	ret
                                    192 ;------------------------------------------------------------
                                    193 ;Allocation info for local variables in function 'sinI'
                                    194 ;------------------------------------------------------------
                                    195 ;angleMilli                Allocated to registers r6 r7 
                                    196 ;pos                       Allocated to registers r4 r5 
                                    197 ;------------------------------------------------------------
                                    198 ;	../../core/lib/ifft.c:75: static int16_t sinI(uint16_t angleMilli)
                                    199 ;	-----------------------------------------
                                    200 ;	 function sinI
                                    201 ;	-----------------------------------------
      000069                        202 _sinI:
      000069 AE 82            [24]  203 	mov	r6,dpl
      00006B AF 83            [24]  204 	mov	r7,dph
                                    205 ;	../../core/lib/ifft.c:78: pos = (uint16_t) ((SIN_TAB_LEN * (uint32_t) angleMilli) / 1000);
      00006D 7D 00            [12]  206 	mov	r5,#0x00
      00006F 7C 00            [12]  207 	mov	r4,#0x00
      000071 C0 06            [24]  208 	push	ar6
      000073 C0 07            [24]  209 	push	ar7
      000075 C0 05            [24]  210 	push	ar5
      000077 C0 04            [24]  211 	push	ar4
      000079 90 00 78         [24]  212 	mov	dptr,#(0x78&0x00ff)
      00007C E4               [12]  213 	clr	a
      00007D F5 F0            [12]  214 	mov	b,a
      00007F 12r00r00         [24]  215 	lcall	__mullong
      000082 AC 82            [24]  216 	mov	r4,dpl
      000084 AD 83            [24]  217 	mov	r5,dph
      000086 AE F0            [24]  218 	mov	r6,b
      000088 FF               [12]  219 	mov	r7,a
      000089 E5 81            [12]  220 	mov	a,sp
      00008B 24 FC            [12]  221 	add	a,#0xfc
      00008D F5 81            [12]  222 	mov	sp,a
      00008F 74 E8            [12]  223 	mov	a,#0xe8
      000091 C0 E0            [24]  224 	push	acc
      000093 74 03            [12]  225 	mov	a,#0x03
      000095 C0 E0            [24]  226 	push	acc
      000097 E4               [12]  227 	clr	a
      000098 C0 E0            [24]  228 	push	acc
      00009A C0 E0            [24]  229 	push	acc
      00009C 8C 82            [24]  230 	mov	dpl,r4
      00009E 8D 83            [24]  231 	mov	dph,r5
      0000A0 8E F0            [24]  232 	mov	b,r6
      0000A2 EF               [12]  233 	mov	a,r7
      0000A3 12r00r00         [24]  234 	lcall	__divulong
      0000A6 AC 82            [24]  235 	mov	r4,dpl
      0000A8 AD 83            [24]  236 	mov	r5,dph
      0000AA E5 81            [12]  237 	mov	a,sp
      0000AC 24 FC            [12]  238 	add	a,#0xfc
      0000AE F5 81            [12]  239 	mov	sp,a
                                    240 ;	../../core/lib/ifft.c:79: return SIN_TAB[pos % SIN_TAB_LEN];
      0000B0 74 78            [12]  241 	mov	a,#0x78
      0000B2 C0 E0            [24]  242 	push	acc
      0000B4 E4               [12]  243 	clr	a
      0000B5 C0 E0            [24]  244 	push	acc
      0000B7 8C 82            [24]  245 	mov	dpl,r4
      0000B9 8D 83            [24]  246 	mov	dph,r5
      0000BB 12r00r00         [24]  247 	lcall	__moduint
      0000BE AE 82            [24]  248 	mov	r6,dpl
      0000C0 AF 83            [24]  249 	mov	r7,dph
      0000C2 15 81            [12]  250 	dec	sp
      0000C4 15 81            [12]  251 	dec	sp
      0000C6 EE               [12]  252 	mov	a,r6
      0000C7 24r00            [12]  253 	add	a,#_SIN_TAB
      0000C9 F5 82            [12]  254 	mov	dpl,a
      0000CB EF               [12]  255 	mov	a,r7
      0000CC 34s00            [12]  256 	addc	a,#(_SIN_TAB >> 8)
      0000CE F5 83            [12]  257 	mov	dph,a
      0000D0 E4               [12]  258 	clr	a
      0000D1 93               [24]  259 	movc	a,@a+dptr
      0000D2 FF               [12]  260 	mov	r7,a
      0000D3 33               [12]  261 	rlc	a
      0000D4 95 E0            [12]  262 	subb	a,acc
                                    263 ;	../../core/lib/ifft.c:80: }
      0000D6 8F 82            [24]  264 	mov	dpl,r7
      0000D8 F5 83            [12]  265 	mov	dph,a
      0000DA 22               [24]  266 	ret
                                    267 ;------------------------------------------------------------
                                    268 ;Allocation info for local variables in function 'cosI'
                                    269 ;------------------------------------------------------------
                                    270 ;angleMilli                Allocated to registers r6 r7 
                                    271 ;------------------------------------------------------------
                                    272 ;	../../core/lib/ifft.c:82: static int16_t cosI(uint16_t angleMilli)
                                    273 ;	-----------------------------------------
                                    274 ;	 function cosI
                                    275 ;	-----------------------------------------
      0000DB                        276 _cosI:
      0000DB AE 82            [24]  277 	mov	r6,dpl
      0000DD AF 83            [24]  278 	mov	r7,dph
                                    279 ;	../../core/lib/ifft.c:84: return sinI(angleMilli + 250);
      0000DF 74 FA            [12]  280 	mov	a,#0xfa
      0000E1 2E               [12]  281 	add	a,r6
      0000E2 FE               [12]  282 	mov	r6,a
      0000E3 E4               [12]  283 	clr	a
      0000E4 3F               [12]  284 	addc	a,r7
      0000E5 FF               [12]  285 	mov	r7,a
      0000E6 8E 82            [24]  286 	mov	dpl,r6
      0000E8 8F 83            [24]  287 	mov	dph,r7
                                    288 ;	../../core/lib/ifft.c:85: }
      0000EA 02r00r69         [24]  289 	ljmp	_sinI
                                    290 ;------------------------------------------------------------
                                    291 ;Allocation info for local variables in function 'ilog2'
                                    292 ;------------------------------------------------------------
                                    293 ;val                       Allocated to registers r6 r7 
                                    294 ;log                       Allocated to registers r4 r5 
                                    295 ;------------------------------------------------------------
                                    296 ;	../../core/lib/ifft.c:87: static uint16_t ilog2(uint16_t val)
                                    297 ;	-----------------------------------------
                                    298 ;	 function ilog2
                                    299 ;	-----------------------------------------
      0000ED                        300 _ilog2:
      0000ED AE 82            [24]  301 	mov	r6,dpl
                                    302 ;	../../core/lib/ifft.c:91: val = val >> 1; /* The 20 = 1 => log = 0 => val = 0 */
      0000EF E5 83            [12]  303 	mov	a,dph
      0000F1 C3               [12]  304 	clr	c
      0000F2 13               [12]  305 	rrc	a
      0000F3 CE               [12]  306 	xch	a,r6
      0000F4 13               [12]  307 	rrc	a
      0000F5 CE               [12]  308 	xch	a,r6
      0000F6 FF               [12]  309 	mov	r7,a
                                    310 ;	../../core/lib/ifft.c:92: while (val > 0) {
      0000F7 7C 00            [12]  311 	mov	r4,#0x00
      0000F9 7D 00            [12]  312 	mov	r5,#0x00
      0000FB                        313 00101$:
      0000FB EE               [12]  314 	mov	a,r6
      0000FC 4F               [12]  315 	orl	a,r7
      0000FD 60 0E            [24]  316 	jz	00103$
                                    317 ;	../../core/lib/ifft.c:93: val = val >> 1;
      0000FF EF               [12]  318 	mov	a,r7
      000100 C3               [12]  319 	clr	c
      000101 13               [12]  320 	rrc	a
      000102 CE               [12]  321 	xch	a,r6
      000103 13               [12]  322 	rrc	a
      000104 CE               [12]  323 	xch	a,r6
      000105 FF               [12]  324 	mov	r7,a
                                    325 ;	../../core/lib/ifft.c:94: log++;
      000106 0C               [12]  326 	inc	r4
      000107 BC 00 F1         [24]  327 	cjne	r4,#0x00,00101$
      00010A 0D               [12]  328 	inc	r5
      00010B 80 EE            [24]  329 	sjmp	00101$
      00010D                        330 00103$:
                                    331 ;	../../core/lib/ifft.c:96: return log;
      00010D 8C 82            [24]  332 	mov	dpl,r4
      00010F 8D 83            [24]  333 	mov	dph,r5
                                    334 ;	../../core/lib/ifft.c:97: }
      000111 22               [24]  335 	ret
                                    336 ;------------------------------------------------------------
                                    337 ;Allocation info for local variables in function 'ifft'
                                    338 ;------------------------------------------------------------
                                    339 ;xim                       Allocated to stack - sp -59
                                    340 ;n                         Allocated to stack - sp -61
                                    341 ;xre                       Allocated to stack - sp -54
                                    342 ;nu                        Allocated to stack - sp -25
                                    343 ;n2                        Allocated to stack - sp -23
                                    344 ;nu1                       Allocated to stack - sp -21
                                    345 ;p                         Allocated to registers r3 r4 
                                    346 ;k                         Allocated to registers r2 r5 
                                    347 ;l                         Allocated to stack - sp -19
                                    348 ;i                         Allocated to stack - sp -17
                                    349 ;c                         Allocated to stack - sp -15
                                    350 ;s                         Allocated to stack - sp -11
                                    351 ;tr                        Allocated to stack - sp -7
                                    352 ;ti                        Allocated to stack - sp -3
                                    353 ;sloc0                     Allocated to stack - sp -51
                                    354 ;sloc1                     Allocated to stack - sp -49
                                    355 ;sloc2                     Allocated to stack - sp -47
                                    356 ;sloc3                     Allocated to stack - sp -45
                                    357 ;sloc4                     Allocated to stack - sp -13
                                    358 ;sloc5                     Allocated to stack - sp -43
                                    359 ;sloc6                     Allocated to stack - sp -40
                                    360 ;sloc7                     Allocated to stack - sp -36
                                    361 ;sloc8                     Allocated to stack - sp -32
                                    362 ;sloc9                     Allocated to stack - sp -29
                                    363 ;------------------------------------------------------------
                                    364 ;	../../core/lib/ifft.c:114: ifft(int16_t xre[], int16_t xim[], uint16_t n)
                                    365 ;	-----------------------------------------
                                    366 ;	 function ifft
                                    367 ;	-----------------------------------------
      000112                        368 _ifft:
      000112 C0 82            [24]  369 	push	dpl
      000114 C0 83            [24]  370 	push	dph
      000116 C0 F0            [24]  371 	push	b
      000118 E5 81            [12]  372 	mov	a,sp
      00011A 24 34            [12]  373 	add	a,#0x34
                                    374 ;	../../core/lib/ifft.c:122: nu = ilog2(n);
      00011C F5 81            [12]  375 	mov	sp,a
      00011E 24 C3            [12]  376 	add	a,#0xc3
      000120 F8               [12]  377 	mov	r0,a
      000121 86 82            [24]  378 	mov	dpl,@r0
      000123 08               [12]  379 	inc	r0
      000124 86 83            [24]  380 	mov	dph,@r0
      000126 12r00rED         [24]  381 	lcall	_ilog2
      000129 AB 82            [24]  382 	mov	r3,dpl
      00012B AC 83            [24]  383 	mov	r4,dph
      00012D E5 81            [12]  384 	mov	a,sp
      00012F 24 E7            [12]  385 	add	a,#0xe7
      000131 F8               [12]  386 	mov	r0,a
      000132 A6 03            [24]  387 	mov	@r0,ar3
      000134 08               [12]  388 	inc	r0
      000135 A6 04            [24]  389 	mov	@r0,ar4
                                    390 ;	../../core/lib/ifft.c:123: nu1 = nu - 1;
      000137 E5 81            [12]  391 	mov	a,sp
      000139 24 E7            [12]  392 	add	a,#0xe7
      00013B F8               [12]  393 	mov	r0,a
      00013C 86 02            [24]  394 	mov	ar2,@r0
      00013E 08               [12]  395 	inc	r0
      00013F 86 04            [24]  396 	mov	ar4,@r0
      000141 1A               [12]  397 	dec	r2
      000142 BA FF 01         [24]  398 	cjne	r2,#0xff,00213$
      000145 1C               [12]  399 	dec	r4
      000146                        400 00213$:
      000146 E5 81            [12]  401 	mov	a,sp
      000148 24 EB            [12]  402 	add	a,#0xeb
      00014A F8               [12]  403 	mov	r0,a
      00014B A6 02            [24]  404 	mov	@r0,ar2
      00014D 08               [12]  405 	inc	r0
      00014E A6 04            [24]  406 	mov	@r0,ar4
                                    407 ;	../../core/lib/ifft.c:124: n2 = n / 2;
      000150 E5 81            [12]  408 	mov	a,sp
      000152 24 C3            [12]  409 	add	a,#0xc3
      000154 F8               [12]  410 	mov	r0,a
      000155 86 03            [24]  411 	mov	ar3,@r0
      000157 08               [12]  412 	inc	r0
      000158 E6               [12]  413 	mov	a,@r0
      000159 C3               [12]  414 	clr	c
      00015A 13               [12]  415 	rrc	a
      00015B CB               [12]  416 	xch	a,r3
      00015C 13               [12]  417 	rrc	a
      00015D CB               [12]  418 	xch	a,r3
      00015E FC               [12]  419 	mov	r4,a
      00015F E5 81            [12]  420 	mov	a,sp
      000161 24 D1            [12]  421 	add	a,#0xd1
      000163 F8               [12]  422 	mov	r0,a
      000164 A6 03            [24]  423 	mov	@r0,ar3
      000166 08               [12]  424 	inc	r0
      000167 A6 04            [24]  425 	mov	@r0,ar4
      000169 E5 81            [12]  426 	mov	a,sp
      00016B 24 D1            [12]  427 	add	a,#0xd1
      00016D F8               [12]  428 	mov	r0,a
      00016E E5 81            [12]  429 	mov	a,sp
      000170 24 CD            [12]  430 	add	a,#0xcd
      000172 F9               [12]  431 	mov	r1,a
      000173 E6               [12]  432 	mov	a,@r0
      000174 F7               [12]  433 	mov	@r1,a
      000175 08               [12]  434 	inc	r0
      000176 09               [12]  435 	inc	r1
      000177 E6               [12]  436 	mov	a,@r0
      000178 F7               [12]  437 	mov	@r1,a
                                    438 ;	../../core/lib/ifft.c:126: for (i = 0; i < n; i++)
      000179 7A 00            [12]  439 	mov	r2,#0x00
      00017B 7F 00            [12]  440 	mov	r7,#0x00
      00017D                        441 00110$:
      00017D 8A 05            [24]  442 	mov	ar5,r2
      00017F 8F 06            [24]  443 	mov	ar6,r7
      000181 E5 81            [12]  444 	mov	a,sp
      000183 24 C3            [12]  445 	add	a,#0xc3
      000185 F8               [12]  446 	mov	r0,a
      000186 C3               [12]  447 	clr	c
      000187 ED               [12]  448 	mov	a,r5
      000188 96               [12]  449 	subb	a,@r0
      000189 EE               [12]  450 	mov	a,r6
      00018A 08               [12]  451 	inc	r0
      00018B 96               [12]  452 	subb	a,@r0
      00018C 50 2A            [24]  453 	jnc	00101$
                                    454 ;	../../core/lib/ifft.c:127: xim[i] = 0;
      00018E EA               [12]  455 	mov	a,r2
      00018F 2A               [12]  456 	add	a,r2
      000190 FD               [12]  457 	mov	r5,a
      000191 EF               [12]  458 	mov	a,r7
      000192 33               [12]  459 	rlc	a
      000193 FE               [12]  460 	mov	r6,a
      000194 E5 81            [12]  461 	mov	a,sp
      000196 24 C5            [12]  462 	add	a,#0xc5
      000198 F8               [12]  463 	mov	r0,a
      000199 ED               [12]  464 	mov	a,r5
      00019A 26               [12]  465 	add	a,@r0
      00019B FD               [12]  466 	mov	r5,a
      00019C EE               [12]  467 	mov	a,r6
      00019D 08               [12]  468 	inc	r0
      00019E 36               [12]  469 	addc	a,@r0
      00019F FC               [12]  470 	mov	r4,a
      0001A0 08               [12]  471 	inc	r0
      0001A1 86 06            [24]  472 	mov	ar6,@r0
      0001A3 8D 82            [24]  473 	mov	dpl,r5
      0001A5 8C 83            [24]  474 	mov	dph,r4
      0001A7 8E F0            [24]  475 	mov	b,r6
      0001A9 E4               [12]  476 	clr	a
      0001AA 12r00r00         [24]  477 	lcall	__gptrput
      0001AD A3               [24]  478 	inc	dptr
      0001AE 12r00r00         [24]  479 	lcall	__gptrput
                                    480 ;	../../core/lib/ifft.c:126: for (i = 0; i < n; i++)
      0001B1 0A               [12]  481 	inc	r2
      0001B2 BA 00 C8         [24]  482 	cjne	r2,#0x00,00110$
      0001B5 0F               [12]  483 	inc	r7
      0001B6 80 C5            [24]  484 	sjmp	00110$
      0001B8                        485 00101$:
                                    486 ;	../../core/lib/ifft.c:129: for (l = 1; l <= nu; l++) {
      0001B8 E5 81            [12]  487 	mov	a,sp
      0001BA 24 EB            [12]  488 	add	a,#0xeb
      0001BC F8               [12]  489 	mov	r0,a
      0001BD E5 81            [12]  490 	mov	a,sp
      0001BF 24 D3            [12]  491 	add	a,#0xd3
      0001C1 F9               [12]  492 	mov	r1,a
      0001C2 E6               [12]  493 	mov	a,@r0
      0001C3 F7               [12]  494 	mov	@r1,a
      0001C4 08               [12]  495 	inc	r0
      0001C5 09               [12]  496 	inc	r1
      0001C6 E6               [12]  497 	mov	a,@r0
      0001C7 F7               [12]  498 	mov	@r1,a
      0001C8 E5 81            [12]  499 	mov	a,sp
      0001CA 24 ED            [12]  500 	add	a,#0xed
      0001CC F8               [12]  501 	mov	r0,a
      0001CD 76 01            [12]  502 	mov	@r0,#0x01
      0001CF 08               [12]  503 	inc	r0
      0001D0 76 00            [12]  504 	mov	@r0,#0x00
      0001D2                        505 00119$:
      0001D2 E5 81            [12]  506 	mov	a,sp
      0001D4 24 ED            [12]  507 	add	a,#0xed
      0001D6 F8               [12]  508 	mov	r0,a
      0001D7 86 03            [24]  509 	mov	ar3,@r0
      0001D9 08               [12]  510 	inc	r0
      0001DA 86 04            [24]  511 	mov	ar4,@r0
      0001DC E5 81            [12]  512 	mov	a,sp
      0001DE 24 E7            [12]  513 	add	a,#0xe7
      0001E0 F8               [12]  514 	mov	r0,a
      0001E1 C3               [12]  515 	clr	c
      0001E2 E6               [12]  516 	mov	a,@r0
      0001E3 9B               [12]  517 	subb	a,r3
      0001E4 08               [12]  518 	inc	r0
      0001E5 E6               [12]  519 	mov	a,@r0
      0001E6 9C               [12]  520 	subb	a,r4
      0001E7 50 03            [24]  521 	jnc	00216$
      0001E9 02r06r66         [24]  522 	ljmp	00104$
      0001EC                        523 00216$:
                                    524 ;	../../core/lib/ifft.c:130: for (k = 0; k < n; k += n2) {
      0001EC 7A 00            [12]  525 	mov	r2,#0x00
      0001EE 7D 00            [12]  526 	mov	r5,#0x00
      0001F0                        527 00116$:
      0001F0 8A 03            [24]  528 	mov	ar3,r2
      0001F2 8D 04            [24]  529 	mov	ar4,r5
      0001F4 E5 81            [12]  530 	mov	a,sp
      0001F6 24 C3            [12]  531 	add	a,#0xc3
      0001F8 F8               [12]  532 	mov	r0,a
      0001F9 C3               [12]  533 	clr	c
      0001FA EB               [12]  534 	mov	a,r3
      0001FB 96               [12]  535 	subb	a,@r0
      0001FC EC               [12]  536 	mov	a,r4
      0001FD 08               [12]  537 	inc	r0
      0001FE 96               [12]  538 	subb	a,@r0
      0001FF 40 03            [24]  539 	jc	00217$
      000201 02r06r34         [24]  540 	ljmp	00103$
      000204                        541 00217$:
                                    542 ;	../../core/lib/ifft.c:131: for (i = 1; i <= n2; i++) {
      000204 E5 81            [12]  543 	mov	a,sp
      000206 24 CF            [12]  544 	add	a,#0xcf
      000208 F8               [12]  545 	mov	r0,a
      000209 A6 02            [24]  546 	mov	@r0,ar2
      00020B 08               [12]  547 	inc	r0
      00020C A6 05            [24]  548 	mov	@r0,ar5
      00020E E5 81            [12]  549 	mov	a,sp
      000210 24 EF            [12]  550 	add	a,#0xef
      000212 F8               [12]  551 	mov	r0,a
      000213 76 01            [12]  552 	mov	@r0,#0x01
      000215 08               [12]  553 	inc	r0
      000216 76 00            [12]  554 	mov	@r0,#0x00
      000218                        555 00113$:
      000218 E5 81            [12]  556 	mov	a,sp
      00021A 24 EF            [12]  557 	add	a,#0xef
      00021C F8               [12]  558 	mov	r0,a
      00021D 86 06            [24]  559 	mov	ar6,@r0
      00021F 08               [12]  560 	inc	r0
      000220 86 07            [24]  561 	mov	ar7,@r0
      000222 E5 81            [12]  562 	mov	a,sp
      000224 24 CD            [12]  563 	add	a,#0xcd
      000226 F8               [12]  564 	mov	r0,a
      000227 C3               [12]  565 	clr	c
      000228 E6               [12]  566 	mov	a,@r0
      000229 9E               [12]  567 	subb	a,r6
      00022A 08               [12]  568 	inc	r0
      00022B E6               [12]  569 	mov	a,@r0
      00022C 9F               [12]  570 	subb	a,r7
      00022D 50 03            [24]  571 	jnc	00218$
      00022F 02r06r17         [24]  572 	ljmp	00117$
      000232                        573 00218$:
                                    574 ;	../../core/lib/ifft.c:132: p = bitrev(k >> nu1, nu);
      000232 E5 81            [12]  575 	mov	a,sp
      000234 24 D3            [12]  576 	add	a,#0xd3
      000236 F8               [12]  577 	mov	r0,a
      000237 86 F0            [24]  578 	mov	b,@r0
      000239 05 F0            [12]  579 	inc	b
      00023B E5 81            [12]  580 	mov	a,sp
      00023D 24 CF            [12]  581 	add	a,#0xcf
      00023F F8               [12]  582 	mov	r0,a
      000240 86 03            [24]  583 	mov	ar3,@r0
      000242 08               [12]  584 	inc	r0
      000243 E6               [12]  585 	mov	a,@r0
      000244 FC               [12]  586 	mov	r4,a
      000245 33               [12]  587 	rlc	a
      000246 92 D2            [24]  588 	mov	ov,c
      000248 80 08            [24]  589 	sjmp	00220$
      00024A                        590 00219$:
      00024A A2 D2            [12]  591 	mov	c,ov
      00024C EC               [12]  592 	mov	a,r4
      00024D 13               [12]  593 	rrc	a
      00024E FC               [12]  594 	mov	r4,a
      00024F EB               [12]  595 	mov	a,r3
      000250 13               [12]  596 	rrc	a
      000251 FB               [12]  597 	mov	r3,a
      000252                        598 00220$:
      000252 D5 F0 F5         [24]  599 	djnz	b,00219$
      000255 E5 81            [12]  600 	mov	a,sp
      000257 24 E7            [12]  601 	add	a,#0xe7
      000259 F8               [12]  602 	mov	r0,a
      00025A E6               [12]  603 	mov	a,@r0
      00025B C0 E0            [24]  604 	push	acc
      00025D 08               [12]  605 	inc	r0
      00025E E6               [12]  606 	mov	a,@r0
      00025F C0 E0            [24]  607 	push	acc
      000261 8B 82            [24]  608 	mov	dpl,r3
      000263 8C 83            [24]  609 	mov	dph,r4
      000265 12r00r00         [24]  610 	lcall	_bitrev
      000268 AB 82            [24]  611 	mov	r3,dpl
      00026A AC 83            [24]  612 	mov	r4,dph
      00026C 15 81            [12]  613 	dec	sp
      00026E 15 81            [12]  614 	dec	sp
                                    615 ;	../../core/lib/ifft.c:133: c = cosI((1000 * p) / n);
      000270 C0 03            [24]  616 	push	ar3
      000272 C0 04            [24]  617 	push	ar4
      000274 90 03 E8         [24]  618 	mov	dptr,#0x03e8
      000277 12r00r00         [24]  619 	lcall	__mulint
      00027A AB 82            [24]  620 	mov	r3,dpl
      00027C AC 83            [24]  621 	mov	r4,dph
      00027E 15 81            [12]  622 	dec	sp
      000280 15 81            [12]  623 	dec	sp
      000282 E5 81            [12]  624 	mov	a,sp
      000284 24 C3            [12]  625 	add	a,#0xc3
      000286 F8               [12]  626 	mov	r0,a
      000287 E6               [12]  627 	mov	a,@r0
      000288 C0 E0            [24]  628 	push	acc
      00028A 08               [12]  629 	inc	r0
      00028B E6               [12]  630 	mov	a,@r0
      00028C C0 E0            [24]  631 	push	acc
      00028E 8B 82            [24]  632 	mov	dpl,r3
      000290 8C 83            [24]  633 	mov	dph,r4
      000292 12r00r00         [24]  634 	lcall	__divuint
      000295 AD 82            [24]  635 	mov	r5,dpl
      000297 AC 83            [24]  636 	mov	r4,dph
      000299 15 81            [12]  637 	dec	sp
      00029B 15 81            [12]  638 	dec	sp
      00029D 8D 82            [24]  639 	mov	dpl,r5
      00029F 8C 83            [24]  640 	mov	dph,r4
      0002A1 C0 05            [24]  641 	push	ar5
      0002A3 C0 04            [24]  642 	push	ar4
      0002A5 12r00rDB         [24]  643 	lcall	_cosI
      0002A8 AE 82            [24]  644 	mov	r6,dpl
      0002AA AF 83            [24]  645 	mov	r7,dph
      0002AC D0 04            [24]  646 	pop	ar4
      0002AE D0 05            [24]  647 	pop	ar5
      0002B0 E5 81            [12]  648 	mov	a,sp
      0002B2 24 F1            [12]  649 	add	a,#0xf1
      0002B4 F8               [12]  650 	mov	r0,a
      0002B5 A6 06            [24]  651 	mov	@r0,ar6
      0002B7 08               [12]  652 	inc	r0
      0002B8 A6 07            [24]  653 	mov	@r0,ar7
      0002BA EF               [12]  654 	mov	a,r7
      0002BB 33               [12]  655 	rlc	a
      0002BC 95 E0            [12]  656 	subb	a,acc
      0002BE 08               [12]  657 	inc	r0
      0002BF F6               [12]  658 	mov	@r0,a
      0002C0 08               [12]  659 	inc	r0
      0002C1 F6               [12]  660 	mov	@r0,a
                                    661 ;	../../core/lib/ifft.c:134: s = sinI((1000 * p) / n);
      0002C2 8D 82            [24]  662 	mov	dpl,r5
      0002C4 8C 83            [24]  663 	mov	dph,r4
      0002C6 12r00r69         [24]  664 	lcall	_sinI
      0002C9 AE 82            [24]  665 	mov	r6,dpl
      0002CB AF 83            [24]  666 	mov	r7,dph
      0002CD E5 81            [12]  667 	mov	a,sp
      0002CF 24 F5            [12]  668 	add	a,#0xf5
      0002D1 F8               [12]  669 	mov	r0,a
      0002D2 A6 06            [24]  670 	mov	@r0,ar6
      0002D4 08               [12]  671 	inc	r0
      0002D5 A6 07            [24]  672 	mov	@r0,ar7
      0002D7 EF               [12]  673 	mov	a,r7
      0002D8 33               [12]  674 	rlc	a
      0002D9 95 E0            [12]  675 	subb	a,acc
      0002DB 08               [12]  676 	inc	r0
      0002DC F6               [12]  677 	mov	@r0,a
      0002DD 08               [12]  678 	inc	r0
      0002DE F6               [12]  679 	mov	@r0,a
                                    680 ;	../../core/lib/ifft.c:136: tr = ((xre[k + n2] * c + xim[k + n2] * s) >> RESOLUTION);
      0002DF E5 81            [12]  681 	mov	a,sp
      0002E1 24 CF            [12]  682 	add	a,#0xcf
      0002E3 F8               [12]  683 	mov	r0,a
      0002E4 86 06            [24]  684 	mov	ar6,@r0
      0002E6 08               [12]  685 	inc	r0
      0002E7 86 07            [24]  686 	mov	ar7,@r0
      0002E9 E5 81            [12]  687 	mov	a,sp
      0002EB 24 CD            [12]  688 	add	a,#0xcd
      0002ED F8               [12]  689 	mov	r0,a
      0002EE E6               [12]  690 	mov	a,@r0
      0002EF 2E               [12]  691 	add	a,r6
      0002F0 FE               [12]  692 	mov	r6,a
      0002F1 08               [12]  693 	inc	r0
      0002F2 E6               [12]  694 	mov	a,@r0
      0002F3 3F               [12]  695 	addc	a,r7
      0002F4 FF               [12]  696 	mov	r7,a
      0002F5 EE               [12]  697 	mov	a,r6
      0002F6 2E               [12]  698 	add	a,r6
      0002F7 FD               [12]  699 	mov	r5,a
      0002F8 EF               [12]  700 	mov	a,r7
      0002F9 33               [12]  701 	rlc	a
      0002FA FC               [12]  702 	mov	r4,a
      0002FB E5 81            [12]  703 	mov	a,sp
      0002FD 24 CA            [12]  704 	add	a,#0xca
      0002FF F8               [12]  705 	mov	r0,a
      000300 E5 81            [12]  706 	mov	a,sp
      000302 24 D5            [12]  707 	add	a,#0xd5
      000304 F9               [12]  708 	mov	r1,a
      000305 ED               [12]  709 	mov	a,r5
      000306 26               [12]  710 	add	a,@r0
      000307 F7               [12]  711 	mov	@r1,a
      000308 EC               [12]  712 	mov	a,r4
      000309 08               [12]  713 	inc	r0
      00030A 36               [12]  714 	addc	a,@r0
      00030B 09               [12]  715 	inc	r1
      00030C F7               [12]  716 	mov	@r1,a
      00030D 08               [12]  717 	inc	r0
      00030E 09               [12]  718 	inc	r1
      00030F E6               [12]  719 	mov	a,@r0
      000310 F7               [12]  720 	mov	@r1,a
      000311 E5 81            [12]  721 	mov	a,sp
      000313 24 D5            [12]  722 	add	a,#0xd5
      000315 F8               [12]  723 	mov	r0,a
      000316 86 82            [24]  724 	mov	dpl,@r0
      000318 08               [12]  725 	inc	r0
      000319 86 83            [24]  726 	mov	dph,@r0
      00031B 08               [12]  727 	inc	r0
      00031C 86 F0            [24]  728 	mov	b,@r0
      00031E 12r00r00         [24]  729 	lcall	__gptrget
      000321 FE               [12]  730 	mov	r6,a
      000322 A3               [24]  731 	inc	dptr
      000323 12r00r00         [24]  732 	lcall	__gptrget
      000326 FF               [12]  733 	mov	r7,a
      000327 E5 81            [12]  734 	mov	a,sp
      000329 24 D8            [12]  735 	add	a,#0xd8
      00032B F8               [12]  736 	mov	r0,a
      00032C A6 06            [24]  737 	mov	@r0,ar6
      00032E 08               [12]  738 	inc	r0
      00032F A6 07            [24]  739 	mov	@r0,ar7
      000331 EF               [12]  740 	mov	a,r7
      000332 33               [12]  741 	rlc	a
      000333 95 E0            [12]  742 	subb	a,acc
      000335 08               [12]  743 	inc	r0
      000336 F6               [12]  744 	mov	@r0,a
      000337 08               [12]  745 	inc	r0
      000338 F6               [12]  746 	mov	@r0,a
      000339 C0 05            [24]  747 	push	ar5
      00033B C0 04            [24]  748 	push	ar4
      00033D E5 81            [12]  749 	mov	a,sp
      00033F 24 EF            [12]  750 	add	a,#0xef
      000341 F8               [12]  751 	mov	r0,a
      000342 E6               [12]  752 	mov	a,@r0
      000343 C0 E0            [24]  753 	push	acc
      000345 08               [12]  754 	inc	r0
      000346 E6               [12]  755 	mov	a,@r0
      000347 C0 E0            [24]  756 	push	acc
      000349 08               [12]  757 	inc	r0
      00034A E6               [12]  758 	mov	a,@r0
      00034B C0 E0            [24]  759 	push	acc
      00034D 08               [12]  760 	inc	r0
      00034E E6               [12]  761 	mov	a,@r0
      00034F C0 E0            [24]  762 	push	acc
      000351 E5 81            [12]  763 	mov	a,sp
      000353 24 D2            [12]  764 	add	a,#0xd2
      000355 F8               [12]  765 	mov	r0,a
      000356 86 82            [24]  766 	mov	dpl,@r0
      000358 08               [12]  767 	inc	r0
      000359 86 83            [24]  768 	mov	dph,@r0
      00035B 08               [12]  769 	inc	r0
      00035C 86 F0            [24]  770 	mov	b,@r0
      00035E 08               [12]  771 	inc	r0
      00035F E6               [12]  772 	mov	a,@r0
      000360 12r00r00         [24]  773 	lcall	__mullong
      000363 C8               [12]  774 	xch	a,r0
      000364 E5 81            [12]  775 	mov	a,sp
      000366 24 D6            [12]  776 	add	a,#0xd6
      000368 C8               [12]  777 	xch	a,r0
      000369 A6 82            [24]  778 	mov	@r0,dpl
      00036B 08               [12]  779 	inc	r0
      00036C A6 83            [24]  780 	mov	@r0,dph
      00036E 08               [12]  781 	inc	r0
      00036F A6 F0            [24]  782 	mov	@r0,b
      000371 08               [12]  783 	inc	r0
      000372 F6               [12]  784 	mov	@r0,a
      000373 E5 81            [12]  785 	mov	a,sp
      000375 24 FC            [12]  786 	add	a,#0xfc
      000377 F5 81            [12]  787 	mov	sp,a
      000379 D0 04            [24]  788 	pop	ar4
      00037B D0 05            [24]  789 	pop	ar5
      00037D E5 81            [12]  790 	mov	a,sp
      00037F 24 C5            [12]  791 	add	a,#0xc5
      000381 F8               [12]  792 	mov	r0,a
      000382 E5 81            [12]  793 	mov	a,sp
      000384 24 E0            [12]  794 	add	a,#0xe0
      000386 F9               [12]  795 	mov	r1,a
      000387 ED               [12]  796 	mov	a,r5
      000388 26               [12]  797 	add	a,@r0
      000389 F7               [12]  798 	mov	@r1,a
      00038A EC               [12]  799 	mov	a,r4
      00038B 08               [12]  800 	inc	r0
      00038C 36               [12]  801 	addc	a,@r0
      00038D 09               [12]  802 	inc	r1
      00038E F7               [12]  803 	mov	@r1,a
      00038F 08               [12]  804 	inc	r0
      000390 09               [12]  805 	inc	r1
      000391 E6               [12]  806 	mov	a,@r0
      000392 F7               [12]  807 	mov	@r1,a
      000393 E5 81            [12]  808 	mov	a,sp
      000395 24 E0            [12]  809 	add	a,#0xe0
      000397 F8               [12]  810 	mov	r0,a
      000398 86 82            [24]  811 	mov	dpl,@r0
      00039A 08               [12]  812 	inc	r0
      00039B 86 83            [24]  813 	mov	dph,@r0
      00039D 08               [12]  814 	inc	r0
      00039E 86 F0            [24]  815 	mov	b,@r0
      0003A0 12r00r00         [24]  816 	lcall	__gptrget
      0003A3 FB               [12]  817 	mov	r3,a
      0003A4 A3               [24]  818 	inc	dptr
      0003A5 12r00r00         [24]  819 	lcall	__gptrget
      0003A8 FF               [12]  820 	mov	r7,a
      0003A9 E5 81            [12]  821 	mov	a,sp
      0003AB 24 E3            [12]  822 	add	a,#0xe3
      0003AD F8               [12]  823 	mov	r0,a
      0003AE A6 03            [24]  824 	mov	@r0,ar3
      0003B0 08               [12]  825 	inc	r0
      0003B1 A6 07            [24]  826 	mov	@r0,ar7
      0003B3 EF               [12]  827 	mov	a,r7
      0003B4 33               [12]  828 	rlc	a
      0003B5 95 E0            [12]  829 	subb	a,acc
      0003B7 08               [12]  830 	inc	r0
      0003B8 F6               [12]  831 	mov	@r0,a
      0003B9 08               [12]  832 	inc	r0
      0003BA F6               [12]  833 	mov	@r0,a
      0003BB E5 81            [12]  834 	mov	a,sp
      0003BD 24 F5            [12]  835 	add	a,#0xf5
      0003BF F8               [12]  836 	mov	r0,a
      0003C0 E6               [12]  837 	mov	a,@r0
      0003C1 C0 E0            [24]  838 	push	acc
      0003C3 08               [12]  839 	inc	r0
      0003C4 E6               [12]  840 	mov	a,@r0
      0003C5 C0 E0            [24]  841 	push	acc
      0003C7 08               [12]  842 	inc	r0
      0003C8 E6               [12]  843 	mov	a,@r0
      0003C9 C0 E0            [24]  844 	push	acc
      0003CB 08               [12]  845 	inc	r0
      0003CC E6               [12]  846 	mov	a,@r0
      0003CD C0 E0            [24]  847 	push	acc
      0003CF E5 81            [12]  848 	mov	a,sp
      0003D1 24 DF            [12]  849 	add	a,#0xdf
      0003D3 F8               [12]  850 	mov	r0,a
      0003D4 86 82            [24]  851 	mov	dpl,@r0
      0003D6 08               [12]  852 	inc	r0
      0003D7 86 83            [24]  853 	mov	dph,@r0
      0003D9 08               [12]  854 	inc	r0
      0003DA 86 F0            [24]  855 	mov	b,@r0
      0003DC 08               [12]  856 	inc	r0
      0003DD E6               [12]  857 	mov	a,@r0
      0003DE 12r00r00         [24]  858 	lcall	__mullong
      0003E1 AB 82            [24]  859 	mov	r3,dpl
      0003E3 AC 83            [24]  860 	mov	r4,dph
      0003E5 AE F0            [24]  861 	mov	r6,b
      0003E7 FF               [12]  862 	mov	r7,a
      0003E8 E5 81            [12]  863 	mov	a,sp
      0003EA 24 FC            [12]  864 	add	a,#0xfc
      0003EC F5 81            [12]  865 	mov	sp,a
      0003EE 24 DC            [12]  866 	add	a,#0xdc
      0003F0 F8               [12]  867 	mov	r0,a
      0003F1 EB               [12]  868 	mov	a,r3
      0003F2 26               [12]  869 	add	a,@r0
      0003F3 FB               [12]  870 	mov	r3,a
      0003F4 EC               [12]  871 	mov	a,r4
      0003F5 08               [12]  872 	inc	r0
      0003F6 36               [12]  873 	addc	a,@r0
      0003F7 FC               [12]  874 	mov	r4,a
      0003F8 EE               [12]  875 	mov	a,r6
      0003F9 08               [12]  876 	inc	r0
      0003FA 36               [12]  877 	addc	a,@r0
      0003FB FE               [12]  878 	mov	r6,a
      0003FC EF               [12]  879 	mov	a,r7
      0003FD 08               [12]  880 	inc	r0
      0003FE 36               [12]  881 	addc	a,@r0
      0003FF FF               [12]  882 	mov	r7,a
      000400 E5 81            [12]  883 	mov	a,sp
      000402 24 F9            [12]  884 	add	a,#0xf9
      000404 F8               [12]  885 	mov	r0,a
      000405 A6 03            [24]  886 	mov	@r0,ar3
      000407 EC               [12]  887 	mov	a,r4
      000408 A2 E7            [12]  888 	mov	c,acc.7
      00040A C6               [12]  889 	xch	a,@r0
      00040B 33               [12]  890 	rlc	a
      00040C C6               [12]  891 	xch	a,@r0
      00040D 33               [12]  892 	rlc	a
      00040E C6               [12]  893 	xch	a,@r0
      00040F 54 01            [12]  894 	anl	a,#0x01
      000411 08               [12]  895 	inc	r0
      000412 F6               [12]  896 	mov	@r0,a
      000413 EE               [12]  897 	mov	a,r6
      000414 2E               [12]  898 	add	a,r6
      000415 46               [12]  899 	orl	a,@r0
      000416 F6               [12]  900 	mov	@r0,a
      000417 08               [12]  901 	inc	r0
      000418 A6 06            [24]  902 	mov	@r0,ar6
      00041A EF               [12]  903 	mov	a,r7
      00041B A2 E7            [12]  904 	mov	c,acc.7
      00041D C6               [12]  905 	xch	a,@r0
      00041E 33               [12]  906 	rlc	a
      00041F C6               [12]  907 	xch	a,@r0
      000420 33               [12]  908 	rlc	a
      000421 C6               [12]  909 	xch	a,@r0
      000422 54 01            [12]  910 	anl	a,#0x01
      000424 30 E0 02         [24]  911 	jnb	acc.0,00221$
      000427 44 FE            [12]  912 	orl	a,#0xfe
      000429                        913 00221$:
      000429 08               [12]  914 	inc	r0
      00042A F6               [12]  915 	mov	@r0,a
                                    916 ;	../../core/lib/ifft.c:137: ti = ((xim[k + n2] * c - xre[k + n2] * s) >> RESOLUTION);
      00042B E5 81            [12]  917 	mov	a,sp
      00042D 24 F1            [12]  918 	add	a,#0xf1
      00042F F8               [12]  919 	mov	r0,a
      000430 E6               [12]  920 	mov	a,@r0
      000431 C0 E0            [24]  921 	push	acc
      000433 08               [12]  922 	inc	r0
      000434 E6               [12]  923 	mov	a,@r0
      000435 C0 E0            [24]  924 	push	acc
      000437 08               [12]  925 	inc	r0
      000438 E6               [12]  926 	mov	a,@r0
      000439 C0 E0            [24]  927 	push	acc
      00043B 08               [12]  928 	inc	r0
      00043C E6               [12]  929 	mov	a,@r0
      00043D C0 E0            [24]  930 	push	acc
      00043F E5 81            [12]  931 	mov	a,sp
      000441 24 DF            [12]  932 	add	a,#0xdf
      000443 F8               [12]  933 	mov	r0,a
      000444 86 82            [24]  934 	mov	dpl,@r0
      000446 08               [12]  935 	inc	r0
      000447 86 83            [24]  936 	mov	dph,@r0
      000449 08               [12]  937 	inc	r0
      00044A 86 F0            [24]  938 	mov	b,@r0
      00044C 08               [12]  939 	inc	r0
      00044D E6               [12]  940 	mov	a,@r0
      00044E 12r00r00         [24]  941 	lcall	__mullong
      000451 C8               [12]  942 	xch	a,r0
      000452 E5 81            [12]  943 	mov	a,sp
      000454 24 DF            [12]  944 	add	a,#0xdf
      000456 C8               [12]  945 	xch	a,r0
      000457 A6 82            [24]  946 	mov	@r0,dpl
      000459 08               [12]  947 	inc	r0
      00045A A6 83            [24]  948 	mov	@r0,dph
      00045C 08               [12]  949 	inc	r0
      00045D A6 F0            [24]  950 	mov	@r0,b
      00045F 08               [12]  951 	inc	r0
      000460 F6               [12]  952 	mov	@r0,a
      000461 E5 81            [12]  953 	mov	a,sp
      000463 24 FC            [12]  954 	add	a,#0xfc
      000465 F5 81            [12]  955 	mov	sp,a
      000467 24 F5            [12]  956 	add	a,#0xf5
      000469 F8               [12]  957 	mov	r0,a
      00046A E6               [12]  958 	mov	a,@r0
      00046B C0 E0            [24]  959 	push	acc
      00046D 08               [12]  960 	inc	r0
      00046E E6               [12]  961 	mov	a,@r0
      00046F C0 E0            [24]  962 	push	acc
      000471 08               [12]  963 	inc	r0
      000472 E6               [12]  964 	mov	a,@r0
      000473 C0 E0            [24]  965 	push	acc
      000475 08               [12]  966 	inc	r0
      000476 E6               [12]  967 	mov	a,@r0
      000477 C0 E0            [24]  968 	push	acc
      000479 E5 81            [12]  969 	mov	a,sp
      00047B 24 D4            [12]  970 	add	a,#0xd4
      00047D F8               [12]  971 	mov	r0,a
      00047E 86 82            [24]  972 	mov	dpl,@r0
      000480 08               [12]  973 	inc	r0
      000481 86 83            [24]  974 	mov	dph,@r0
      000483 08               [12]  975 	inc	r0
      000484 86 F0            [24]  976 	mov	b,@r0
      000486 08               [12]  977 	inc	r0
      000487 E6               [12]  978 	mov	a,@r0
      000488 12r00r00         [24]  979 	lcall	__mullong
      00048B AB 82            [24]  980 	mov	r3,dpl
      00048D AC 83            [24]  981 	mov	r4,dph
      00048F AE F0            [24]  982 	mov	r6,b
      000491 FF               [12]  983 	mov	r7,a
      000492 E5 81            [12]  984 	mov	a,sp
      000494 24 FC            [12]  985 	add	a,#0xfc
      000496 F5 81            [12]  986 	mov	sp,a
      000498 24 E3            [12]  987 	add	a,#0xe3
      00049A F8               [12]  988 	mov	r0,a
      00049B E6               [12]  989 	mov	a,@r0
      00049C C3               [12]  990 	clr	c
      00049D 9B               [12]  991 	subb	a,r3
      00049E FB               [12]  992 	mov	r3,a
      00049F 08               [12]  993 	inc	r0
      0004A0 E6               [12]  994 	mov	a,@r0
      0004A1 9C               [12]  995 	subb	a,r4
      0004A2 FC               [12]  996 	mov	r4,a
      0004A3 08               [12]  997 	inc	r0
      0004A4 E6               [12]  998 	mov	a,@r0
      0004A5 9E               [12]  999 	subb	a,r6
      0004A6 FE               [12] 1000 	mov	r6,a
      0004A7 08               [12] 1001 	inc	r0
      0004A8 E6               [12] 1002 	mov	a,@r0
      0004A9 9F               [12] 1003 	subb	a,r7
      0004AA FF               [12] 1004 	mov	r7,a
      0004AB E5 81            [12] 1005 	mov	a,sp
      0004AD 24 FD            [12] 1006 	add	a,#0xfd
      0004AF F8               [12] 1007 	mov	r0,a
      0004B0 A6 03            [24] 1008 	mov	@r0,ar3
      0004B2 EC               [12] 1009 	mov	a,r4
      0004B3 A2 E7            [12] 1010 	mov	c,acc.7
      0004B5 C6               [12] 1011 	xch	a,@r0
      0004B6 33               [12] 1012 	rlc	a
      0004B7 C6               [12] 1013 	xch	a,@r0
      0004B8 33               [12] 1014 	rlc	a
      0004B9 C6               [12] 1015 	xch	a,@r0
      0004BA 54 01            [12] 1016 	anl	a,#0x01
      0004BC 08               [12] 1017 	inc	r0
      0004BD F6               [12] 1018 	mov	@r0,a
      0004BE EE               [12] 1019 	mov	a,r6
      0004BF 2E               [12] 1020 	add	a,r6
      0004C0 46               [12] 1021 	orl	a,@r0
      0004C1 F6               [12] 1022 	mov	@r0,a
      0004C2 08               [12] 1023 	inc	r0
      0004C3 A6 06            [24] 1024 	mov	@r0,ar6
      0004C5 EF               [12] 1025 	mov	a,r7
      0004C6 A2 E7            [12] 1026 	mov	c,acc.7
      0004C8 C6               [12] 1027 	xch	a,@r0
      0004C9 33               [12] 1028 	rlc	a
      0004CA C6               [12] 1029 	xch	a,@r0
      0004CB 33               [12] 1030 	rlc	a
      0004CC C6               [12] 1031 	xch	a,@r0
      0004CD 54 01            [12] 1032 	anl	a,#0x01
      0004CF 30 E0 02         [24] 1033 	jnb	acc.0,00222$
      0004D2 44 FE            [12] 1034 	orl	a,#0xfe
      0004D4                       1035 00222$:
      0004D4 08               [12] 1036 	inc	r0
      0004D5 F6               [12] 1037 	mov	@r0,a
                                   1038 ;	../../core/lib/ifft.c:139: xre[k + n2] = xre[k] - tr;
      0004D6 E5 81            [12] 1039 	mov	a,sp
      0004D8 24 CF            [12] 1040 	add	a,#0xcf
      0004DA F8               [12] 1041 	mov	r0,a
      0004DB E6               [12] 1042 	mov	a,@r0
      0004DC 26               [12] 1043 	add	a,@r0
      0004DD FD               [12] 1044 	mov	r5,a
      0004DE 08               [12] 1045 	inc	r0
      0004DF E6               [12] 1046 	mov	a,@r0
      0004E0 33               [12] 1047 	rlc	a
      0004E1 FC               [12] 1048 	mov	r4,a
      0004E2 E5 81            [12] 1049 	mov	a,sp
      0004E4 24 CA            [12] 1050 	add	a,#0xca
      0004E6 F8               [12] 1051 	mov	r0,a
      0004E7 E5 81            [12] 1052 	mov	a,sp
      0004E9 24 DC            [12] 1053 	add	a,#0xdc
      0004EB F9               [12] 1054 	mov	r1,a
      0004EC ED               [12] 1055 	mov	a,r5
      0004ED 26               [12] 1056 	add	a,@r0
      0004EE F7               [12] 1057 	mov	@r1,a
      0004EF EC               [12] 1058 	mov	a,r4
      0004F0 08               [12] 1059 	inc	r0
      0004F1 36               [12] 1060 	addc	a,@r0
      0004F2 09               [12] 1061 	inc	r1
      0004F3 F7               [12] 1062 	mov	@r1,a
      0004F4 08               [12] 1063 	inc	r0
      0004F5 09               [12] 1064 	inc	r1
      0004F6 E6               [12] 1065 	mov	a,@r0
      0004F7 F7               [12] 1066 	mov	@r1,a
      0004F8 E5 81            [12] 1067 	mov	a,sp
      0004FA 24 DC            [12] 1068 	add	a,#0xdc
      0004FC F8               [12] 1069 	mov	r0,a
      0004FD 86 82            [24] 1070 	mov	dpl,@r0
      0004FF 08               [12] 1071 	inc	r0
      000500 86 83            [24] 1072 	mov	dph,@r0
      000502 08               [12] 1073 	inc	r0
      000503 86 F0            [24] 1074 	mov	b,@r0
      000505 12r00r00         [24] 1075 	lcall	__gptrget
      000508 FE               [12] 1076 	mov	r6,a
      000509 A3               [24] 1077 	inc	dptr
      00050A 12r00r00         [24] 1078 	lcall	__gptrget
      00050D FF               [12] 1079 	mov	r7,a
      00050E E5 81            [12] 1080 	mov	a,sp
      000510 24 F9            [12] 1081 	add	a,#0xf9
      000512 F8               [12] 1082 	mov	r0,a
      000513 E5 81            [12] 1083 	mov	a,sp
      000515 24 D8            [12] 1084 	add	a,#0xd8
      000517 F9               [12] 1085 	mov	r1,a
      000518 E6               [12] 1086 	mov	a,@r0
      000519 F7               [12] 1087 	mov	@r1,a
      00051A 08               [12] 1088 	inc	r0
      00051B 09               [12] 1089 	inc	r1
      00051C E6               [12] 1090 	mov	a,@r0
      00051D F7               [12] 1091 	mov	@r1,a
      00051E E5 81            [12] 1092 	mov	a,sp
      000520 24 D8            [12] 1093 	add	a,#0xd8
      000522 F8               [12] 1094 	mov	r0,a
      000523 EE               [12] 1095 	mov	a,r6
      000524 C3               [12] 1096 	clr	c
      000525 96               [12] 1097 	subb	a,@r0
      000526 FE               [12] 1098 	mov	r6,a
      000527 EF               [12] 1099 	mov	a,r7
      000528 08               [12] 1100 	inc	r0
      000529 96               [12] 1101 	subb	a,@r0
      00052A FF               [12] 1102 	mov	r7,a
      00052B E5 81            [12] 1103 	mov	a,sp
      00052D 24 D5            [12] 1104 	add	a,#0xd5
      00052F F8               [12] 1105 	mov	r0,a
      000530 86 82            [24] 1106 	mov	dpl,@r0
      000532 08               [12] 1107 	inc	r0
      000533 86 83            [24] 1108 	mov	dph,@r0
      000535 08               [12] 1109 	inc	r0
      000536 86 F0            [24] 1110 	mov	b,@r0
      000538 EE               [12] 1111 	mov	a,r6
      000539 12r00r00         [24] 1112 	lcall	__gptrput
      00053C A3               [24] 1113 	inc	dptr
      00053D EF               [12] 1114 	mov	a,r7
      00053E 12r00r00         [24] 1115 	lcall	__gptrput
                                   1116 ;	../../core/lib/ifft.c:140: xim[k + n2] = xim[k] - ti;
      000541 E5 81            [12] 1117 	mov	a,sp
      000543 24 C5            [12] 1118 	add	a,#0xc5
      000545 F8               [12] 1119 	mov	r0,a
      000546 E5 81            [12] 1120 	mov	a,sp
      000548 24 E3            [12] 1121 	add	a,#0xe3
      00054A F9               [12] 1122 	mov	r1,a
      00054B ED               [12] 1123 	mov	a,r5
      00054C 26               [12] 1124 	add	a,@r0
      00054D F7               [12] 1125 	mov	@r1,a
      00054E EC               [12] 1126 	mov	a,r4
      00054F 08               [12] 1127 	inc	r0
      000550 36               [12] 1128 	addc	a,@r0
      000551 09               [12] 1129 	inc	r1
      000552 F7               [12] 1130 	mov	@r1,a
      000553 08               [12] 1131 	inc	r0
      000554 09               [12] 1132 	inc	r1
      000555 E6               [12] 1133 	mov	a,@r0
      000556 F7               [12] 1134 	mov	@r1,a
      000557 E5 81            [12] 1135 	mov	a,sp
      000559 24 E3            [12] 1136 	add	a,#0xe3
      00055B F8               [12] 1137 	mov	r0,a
      00055C 86 82            [24] 1138 	mov	dpl,@r0
      00055E 08               [12] 1139 	inc	r0
      00055F 86 83            [24] 1140 	mov	dph,@r0
      000561 08               [12] 1141 	inc	r0
      000562 86 F0            [24] 1142 	mov	b,@r0
      000564 12r00r00         [24] 1143 	lcall	__gptrget
      000567 FB               [12] 1144 	mov	r3,a
      000568 A3               [24] 1145 	inc	dptr
      000569 12r00r00         [24] 1146 	lcall	__gptrget
      00056C FF               [12] 1147 	mov	r7,a
      00056D E5 81            [12] 1148 	mov	a,sp
      00056F 24 FD            [12] 1149 	add	a,#0xfd
      000571 F8               [12] 1150 	mov	r0,a
      000572 86 04            [24] 1151 	mov	ar4,@r0
      000574 08               [12] 1152 	inc	r0
      000575 86 06            [24] 1153 	mov	ar6,@r0
      000577 EB               [12] 1154 	mov	a,r3
      000578 C3               [12] 1155 	clr	c
      000579 9C               [12] 1156 	subb	a,r4
      00057A FB               [12] 1157 	mov	r3,a
      00057B EF               [12] 1158 	mov	a,r7
      00057C 9E               [12] 1159 	subb	a,r6
      00057D FF               [12] 1160 	mov	r7,a
      00057E E5 81            [12] 1161 	mov	a,sp
      000580 24 E0            [12] 1162 	add	a,#0xe0
      000582 F8               [12] 1163 	mov	r0,a
      000583 86 82            [24] 1164 	mov	dpl,@r0
      000585 08               [12] 1165 	inc	r0
      000586 86 83            [24] 1166 	mov	dph,@r0
      000588 08               [12] 1167 	inc	r0
      000589 86 F0            [24] 1168 	mov	b,@r0
      00058B EB               [12] 1169 	mov	a,r3
      00058C 12r00r00         [24] 1170 	lcall	__gptrput
      00058F A3               [24] 1171 	inc	dptr
      000590 EF               [12] 1172 	mov	a,r7
      000591 12r00r00         [24] 1173 	lcall	__gptrput
                                   1174 ;	../../core/lib/ifft.c:141: xre[k] += tr;
      000594 E5 81            [12] 1175 	mov	a,sp
      000596 24 DC            [12] 1176 	add	a,#0xdc
      000598 F8               [12] 1177 	mov	r0,a
      000599 86 82            [24] 1178 	mov	dpl,@r0
      00059B 08               [12] 1179 	inc	r0
      00059C 86 83            [24] 1180 	mov	dph,@r0
      00059E 08               [12] 1181 	inc	r0
      00059F 86 F0            [24] 1182 	mov	b,@r0
      0005A1 12r00r00         [24] 1183 	lcall	__gptrget
      0005A4 FB               [12] 1184 	mov	r3,a
      0005A5 A3               [24] 1185 	inc	dptr
      0005A6 12r00r00         [24] 1186 	lcall	__gptrget
      0005A9 FF               [12] 1187 	mov	r7,a
      0005AA E5 81            [12] 1188 	mov	a,sp
      0005AC 24 D8            [12] 1189 	add	a,#0xd8
      0005AE F8               [12] 1190 	mov	r0,a
      0005AF E6               [12] 1191 	mov	a,@r0
      0005B0 2B               [12] 1192 	add	a,r3
      0005B1 FB               [12] 1193 	mov	r3,a
      0005B2 08               [12] 1194 	inc	r0
      0005B3 E6               [12] 1195 	mov	a,@r0
      0005B4 3F               [12] 1196 	addc	a,r7
      0005B5 FF               [12] 1197 	mov	r7,a
      0005B6 E5 81            [12] 1198 	mov	a,sp
      0005B8 24 DC            [12] 1199 	add	a,#0xdc
      0005BA F8               [12] 1200 	mov	r0,a
      0005BB 86 82            [24] 1201 	mov	dpl,@r0
      0005BD 08               [12] 1202 	inc	r0
      0005BE 86 83            [24] 1203 	mov	dph,@r0
      0005C0 08               [12] 1204 	inc	r0
      0005C1 86 F0            [24] 1205 	mov	b,@r0
      0005C3 EB               [12] 1206 	mov	a,r3
      0005C4 12r00r00         [24] 1207 	lcall	__gptrput
      0005C7 A3               [24] 1208 	inc	dptr
      0005C8 EF               [12] 1209 	mov	a,r7
      0005C9 12r00r00         [24] 1210 	lcall	__gptrput
                                   1211 ;	../../core/lib/ifft.c:142: xim[k] += ti;
      0005CC E5 81            [12] 1212 	mov	a,sp
      0005CE 24 E3            [12] 1213 	add	a,#0xe3
      0005D0 F8               [12] 1214 	mov	r0,a
      0005D1 86 82            [24] 1215 	mov	dpl,@r0
      0005D3 08               [12] 1216 	inc	r0
      0005D4 86 83            [24] 1217 	mov	dph,@r0
      0005D6 08               [12] 1218 	inc	r0
      0005D7 86 F0            [24] 1219 	mov	b,@r0
      0005D9 12r00r00         [24] 1220 	lcall	__gptrget
      0005DC FB               [12] 1221 	mov	r3,a
      0005DD A3               [24] 1222 	inc	dptr
      0005DE 12r00r00         [24] 1223 	lcall	__gptrget
      0005E1 FF               [12] 1224 	mov	r7,a
      0005E2 EC               [12] 1225 	mov	a,r4
      0005E3 2B               [12] 1226 	add	a,r3
      0005E4 FB               [12] 1227 	mov	r3,a
      0005E5 EE               [12] 1228 	mov	a,r6
      0005E6 3F               [12] 1229 	addc	a,r7
      0005E7 FF               [12] 1230 	mov	r7,a
      0005E8 E5 81            [12] 1231 	mov	a,sp
      0005EA 24 E3            [12] 1232 	add	a,#0xe3
      0005EC F8               [12] 1233 	mov	r0,a
      0005ED 86 82            [24] 1234 	mov	dpl,@r0
      0005EF 08               [12] 1235 	inc	r0
      0005F0 86 83            [24] 1236 	mov	dph,@r0
      0005F2 08               [12] 1237 	inc	r0
      0005F3 86 F0            [24] 1238 	mov	b,@r0
      0005F5 EB               [12] 1239 	mov	a,r3
      0005F6 12r00r00         [24] 1240 	lcall	__gptrput
      0005F9 A3               [24] 1241 	inc	dptr
      0005FA EF               [12] 1242 	mov	a,r7
      0005FB 12r00r00         [24] 1243 	lcall	__gptrput
                                   1244 ;	../../core/lib/ifft.c:143: k++;
      0005FE E5 81            [12] 1245 	mov	a,sp
      000600 24 CF            [12] 1246 	add	a,#0xcf
      000602 F8               [12] 1247 	mov	r0,a
      000603 06               [12] 1248 	inc	@r0
      000604 B6 00 02         [24] 1249 	cjne	@r0,#0x00,00223$
      000607 08               [12] 1250 	inc	r0
      000608 06               [12] 1251 	inc	@r0
      000609                       1252 00223$:
                                   1253 ;	../../core/lib/ifft.c:131: for (i = 1; i <= n2; i++) {
      000609 E5 81            [12] 1254 	mov	a,sp
      00060B 24 EF            [12] 1255 	add	a,#0xef
      00060D F8               [12] 1256 	mov	r0,a
      00060E 06               [12] 1257 	inc	@r0
      00060F B6 00 02         [24] 1258 	cjne	@r0,#0x00,00224$
      000612 08               [12] 1259 	inc	r0
      000613 06               [12] 1260 	inc	@r0
      000614                       1261 00224$:
      000614 02r02r18         [24] 1262 	ljmp	00113$
      000617                       1263 00117$:
                                   1264 ;	../../core/lib/ifft.c:130: for (k = 0; k < n; k += n2) {
      000617 E5 81            [12] 1265 	mov	a,sp
      000619 24 CF            [12] 1266 	add	a,#0xcf
      00061B F8               [12] 1267 	mov	r0,a
      00061C 86 06            [24] 1268 	mov	ar6,@r0
      00061E 08               [12] 1269 	inc	r0
      00061F 86 07            [24] 1270 	mov	ar7,@r0
      000621 E5 81            [12] 1271 	mov	a,sp
      000623 24 CD            [12] 1272 	add	a,#0xcd
      000625 F8               [12] 1273 	mov	r0,a
      000626 E6               [12] 1274 	mov	a,@r0
      000627 2E               [12] 1275 	add	a,r6
      000628 FE               [12] 1276 	mov	r6,a
      000629 08               [12] 1277 	inc	r0
      00062A E6               [12] 1278 	mov	a,@r0
      00062B 3F               [12] 1279 	addc	a,r7
      00062C FF               [12] 1280 	mov	r7,a
      00062D 8E 02            [24] 1281 	mov	ar2,r6
      00062F 8F 05            [24] 1282 	mov	ar5,r7
      000631 02r01rF0         [24] 1283 	ljmp	00116$
      000634                       1284 00103$:
                                   1285 ;	../../core/lib/ifft.c:146: nu1--;
      000634 E5 81            [12] 1286 	mov	a,sp
      000636 24 D3            [12] 1287 	add	a,#0xd3
      000638 F8               [12] 1288 	mov	r0,a
      000639 16               [12] 1289 	dec	@r0
      00063A B6 FF 02         [24] 1290 	cjne	@r0,#0xff,00225$
      00063D 08               [12] 1291 	inc	r0
      00063E 16               [12] 1292 	dec	@r0
      00063F                       1293 00225$:
                                   1294 ;	../../core/lib/ifft.c:147: n2 = n2 / 2;
      00063F E5 81            [12] 1295 	mov	a,sp
      000641 24 CD            [12] 1296 	add	a,#0xcd
      000643 F8               [12] 1297 	mov	r0,a
      000644 86 06            [24] 1298 	mov	ar6,@r0
      000646 08               [12] 1299 	inc	r0
      000647 E6               [12] 1300 	mov	a,@r0
      000648 C3               [12] 1301 	clr	c
      000649 13               [12] 1302 	rrc	a
      00064A CE               [12] 1303 	xch	a,r6
      00064B 13               [12] 1304 	rrc	a
      00064C CE               [12] 1305 	xch	a,r6
      00064D FF               [12] 1306 	mov	r7,a
      00064E E5 81            [12] 1307 	mov	a,sp
      000650 24 CD            [12] 1308 	add	a,#0xcd
      000652 F8               [12] 1309 	mov	r0,a
      000653 A6 06            [24] 1310 	mov	@r0,ar6
      000655 08               [12] 1311 	inc	r0
      000656 A6 07            [24] 1312 	mov	@r0,ar7
                                   1313 ;	../../core/lib/ifft.c:129: for (l = 1; l <= nu; l++) {
      000658 E5 81            [12] 1314 	mov	a,sp
      00065A 24 ED            [12] 1315 	add	a,#0xed
      00065C F8               [12] 1316 	mov	r0,a
      00065D 06               [12] 1317 	inc	@r0
      00065E B6 00 02         [24] 1318 	cjne	@r0,#0x00,00226$
      000661 08               [12] 1319 	inc	r0
      000662 06               [12] 1320 	inc	@r0
      000663                       1321 00226$:
      000663 02r01rD2         [24] 1322 	ljmp	00119$
      000666                       1323 00104$:
                                   1324 ;	../../core/lib/ifft.c:150: for (k = 0; k < n; k++) {
      000666 7E 00            [12] 1325 	mov	r6,#0x00
      000668 7F 00            [12] 1326 	mov	r7,#0x00
      00066A                       1327 00122$:
      00066A 8E 04            [24] 1328 	mov	ar4,r6
      00066C 8F 05            [24] 1329 	mov	ar5,r7
      00066E E5 81            [12] 1330 	mov	a,sp
      000670 24 C3            [12] 1331 	add	a,#0xc3
      000672 F8               [12] 1332 	mov	r0,a
      000673 C3               [12] 1333 	clr	c
      000674 EC               [12] 1334 	mov	a,r4
      000675 96               [12] 1335 	subb	a,@r0
      000676 ED               [12] 1336 	mov	a,r5
      000677 08               [12] 1337 	inc	r0
      000678 96               [12] 1338 	subb	a,@r0
      000679 40 03            [24] 1339 	jc	00227$
      00067B 02r08r03         [24] 1340 	ljmp	00107$
      00067E                       1341 00227$:
                                   1342 ;	../../core/lib/ifft.c:151: p = bitrev(k, nu);
      00067E C0 07            [24] 1343 	push	ar7
      000680 C0 06            [24] 1344 	push	ar6
      000682 E5 81            [12] 1345 	mov	a,sp
      000684 24 E5            [12] 1346 	add	a,#0xe5
      000686 F8               [12] 1347 	mov	r0,a
      000687 E6               [12] 1348 	mov	a,@r0
      000688 C0 E0            [24] 1349 	push	acc
      00068A 08               [12] 1350 	inc	r0
      00068B E6               [12] 1351 	mov	a,@r0
      00068C C0 E0            [24] 1352 	push	acc
      00068E 8C 82            [24] 1353 	mov	dpl,r4
      000690 8D 83            [24] 1354 	mov	dph,r5
      000692 12r00r00         [24] 1355 	lcall	_bitrev
      000695 AD 82            [24] 1356 	mov	r5,dpl
      000697 AC 83            [24] 1357 	mov	r4,dph
      000699 15 81            [12] 1358 	dec	sp
      00069B 15 81            [12] 1359 	dec	sp
      00069D D0 06            [24] 1360 	pop	ar6
      00069F D0 07            [24] 1361 	pop	ar7
      0006A1 8D 03            [24] 1362 	mov	ar3,r5
                                   1363 ;	../../core/lib/ifft.c:152: if (p > k) {
      0006A3 C3               [12] 1364 	clr	c
      0006A4 EE               [12] 1365 	mov	a,r6
      0006A5 9B               [12] 1366 	subb	a,r3
      0006A6 EF               [12] 1367 	mov	a,r7
      0006A7 64 80            [12] 1368 	xrl	a,#0x80
      0006A9 8C F0            [24] 1369 	mov	b,r4
      0006AB 63 F0 80         [24] 1370 	xrl	b,#0x80
      0006AE 95 F0            [12] 1371 	subb	a,b
      0006B0 40 03            [24] 1372 	jc	00228$
      0006B2 02r07rFB         [24] 1373 	ljmp	00123$
      0006B5                       1374 00228$:
                                   1375 ;	../../core/lib/ifft.c:153: n2 = xre[k];
      0006B5 E5 81            [12] 1376 	mov	a,sp
      0006B7 24 E3            [12] 1377 	add	a,#0xe3
      0006B9 F8               [12] 1378 	mov	r0,a
      0006BA EE               [12] 1379 	mov	a,r6
      0006BB 2E               [12] 1380 	add	a,r6
      0006BC F6               [12] 1381 	mov	@r0,a
      0006BD EF               [12] 1382 	mov	a,r7
      0006BE 33               [12] 1383 	rlc	a
      0006BF 08               [12] 1384 	inc	r0
      0006C0 F6               [12] 1385 	mov	@r0,a
      0006C1 C0 06            [24] 1386 	push	ar6
      0006C3 C0 07            [24] 1387 	push	ar7
      0006C5 E5 81            [12] 1388 	mov	a,sp
      0006C7 24 C8            [12] 1389 	add	a,#0xc8
      0006C9 F8               [12] 1390 	mov	r0,a
      0006CA E5 81            [12] 1391 	mov	a,sp
      0006CC 24 E1            [12] 1392 	add	a,#0xe1
      0006CE F9               [12] 1393 	mov	r1,a
      0006CF E7               [12] 1394 	mov	a,@r1
      0006D0 26               [12] 1395 	add	a,@r0
      0006D1 FD               [12] 1396 	mov	r5,a
      0006D2 09               [12] 1397 	inc	r1
      0006D3 E7               [12] 1398 	mov	a,@r1
      0006D4 08               [12] 1399 	inc	r0
      0006D5 36               [12] 1400 	addc	a,@r0
      0006D6 FE               [12] 1401 	mov	r6,a
      0006D7 08               [12] 1402 	inc	r0
      0006D8 86 07            [24] 1403 	mov	ar7,@r0
      0006DA 8D 82            [24] 1404 	mov	dpl,r5
      0006DC 8E 83            [24] 1405 	mov	dph,r6
      0006DE 8F F0            [24] 1406 	mov	b,r7
      0006E0 E5 81            [12] 1407 	mov	a,sp
      0006E2 24 DE            [12] 1408 	add	a,#0xde
      0006E4 F8               [12] 1409 	mov	r0,a
      0006E5 12r00r00         [24] 1410 	lcall	__gptrget
      0006E8 F6               [12] 1411 	mov	@r0,a
      0006E9 A3               [24] 1412 	inc	dptr
      0006EA 12r00r00         [24] 1413 	lcall	__gptrget
      0006ED 08               [12] 1414 	inc	r0
      0006EE F6               [12] 1415 	mov	@r0,a
                                   1416 ;	../../core/lib/ifft.c:154: xre[k] = xre[p];
      0006EF E5 81            [12] 1417 	mov	a,sp
      0006F1 24 DA            [12] 1418 	add	a,#0xda
      0006F3 F8               [12] 1419 	mov	r0,a
      0006F4 EB               [12] 1420 	mov	a,r3
      0006F5 2B               [12] 1421 	add	a,r3
      0006F6 F6               [12] 1422 	mov	@r0,a
      0006F7 EC               [12] 1423 	mov	a,r4
      0006F8 33               [12] 1424 	rlc	a
      0006F9 08               [12] 1425 	inc	r0
      0006FA F6               [12] 1426 	mov	@r0,a
      0006FB E5 81            [12] 1427 	mov	a,sp
      0006FD 24 C8            [12] 1428 	add	a,#0xc8
      0006FF F8               [12] 1429 	mov	r0,a
      000700 E5 81            [12] 1430 	mov	a,sp
      000702 24 DA            [12] 1431 	add	a,#0xda
      000704 F9               [12] 1432 	mov	r1,a
      000705 E7               [12] 1433 	mov	a,@r1
      000706 26               [12] 1434 	add	a,@r0
      000707 C0 E0            [24] 1435 	push	acc
      000709 09               [12] 1436 	inc	r1
      00070A E7               [12] 1437 	mov	a,@r1
      00070B 08               [12] 1438 	inc	r0
      00070C 36               [12] 1439 	addc	a,@r0
      00070D C0 E0            [24] 1440 	push	acc
      00070F 08               [12] 1441 	inc	r0
      000710 E6               [12] 1442 	mov	a,@r0
      000711 C0 E0            [24] 1443 	push	acc
      000713 E5 81            [12] 1444 	mov	a,sp
      000715 24 D5            [12] 1445 	add	a,#0xd5
      000717 F8               [12] 1446 	mov	r0,a
      000718 D0 E0            [24] 1447 	pop	acc
      00071A F6               [12] 1448 	mov	@r0,a
      00071B 18               [12] 1449 	dec	r0
      00071C D0 E0            [24] 1450 	pop	acc
      00071E F6               [12] 1451 	mov	@r0,a
      00071F 18               [12] 1452 	dec	r0
      000720 D0 E0            [24] 1453 	pop	acc
      000722 F6               [12] 1454 	mov	@r0,a
      000723 E5 81            [12] 1455 	mov	a,sp
      000725 24 D6            [12] 1456 	add	a,#0xd6
      000727 F8               [12] 1457 	mov	r0,a
      000728 86 82            [24] 1458 	mov	dpl,@r0
      00072A 08               [12] 1459 	inc	r0
      00072B 86 83            [24] 1460 	mov	dph,@r0
      00072D 08               [12] 1461 	inc	r0
      00072E 86 F0            [24] 1462 	mov	b,@r0
      000730 12r00r00         [24] 1463 	lcall	__gptrget
      000733 FB               [12] 1464 	mov	r3,a
      000734 A3               [24] 1465 	inc	dptr
      000735 12r00r00         [24] 1466 	lcall	__gptrget
      000738 FC               [12] 1467 	mov	r4,a
      000739 8D 82            [24] 1468 	mov	dpl,r5
      00073B 8E 83            [24] 1469 	mov	dph,r6
      00073D 8F F0            [24] 1470 	mov	b,r7
      00073F EB               [12] 1471 	mov	a,r3
      000740 12r00r00         [24] 1472 	lcall	__gptrput
      000743 A3               [24] 1473 	inc	dptr
      000744 EC               [12] 1474 	mov	a,r4
      000745 12r00r00         [24] 1475 	lcall	__gptrput
                                   1476 ;	../../core/lib/ifft.c:155: xre[p] = n2;
      000748 E5 81            [12] 1477 	mov	a,sp
      00074A 24 D6            [12] 1478 	add	a,#0xd6
      00074C F8               [12] 1479 	mov	r0,a
      00074D 86 82            [24] 1480 	mov	dpl,@r0
      00074F 08               [12] 1481 	inc	r0
      000750 86 83            [24] 1482 	mov	dph,@r0
      000752 08               [12] 1483 	inc	r0
      000753 86 F0            [24] 1484 	mov	b,@r0
      000755 E5 81            [12] 1485 	mov	a,sp
      000757 24 DE            [12] 1486 	add	a,#0xde
      000759 F9               [12] 1487 	mov	r1,a
      00075A E7               [12] 1488 	mov	a,@r1
      00075B 12r00r00         [24] 1489 	lcall	__gptrput
      00075E A3               [24] 1490 	inc	dptr
      00075F 09               [12] 1491 	inc	r1
      000760 E7               [12] 1492 	mov	a,@r1
      000761 12r00r00         [24] 1493 	lcall	__gptrput
                                   1494 ;	../../core/lib/ifft.c:157: n2 = xim[k];
      000764 E5 81            [12] 1495 	mov	a,sp
      000766 24 C3            [12] 1496 	add	a,#0xc3
      000768 F8               [12] 1497 	mov	r0,a
      000769 E5 81            [12] 1498 	mov	a,sp
      00076B 24 E1            [12] 1499 	add	a,#0xe1
      00076D F9               [12] 1500 	mov	r1,a
      00076E E7               [12] 1501 	mov	a,@r1
      00076F 26               [12] 1502 	add	a,@r0
      000770 FD               [12] 1503 	mov	r5,a
      000771 09               [12] 1504 	inc	r1
      000772 E7               [12] 1505 	mov	a,@r1
      000773 08               [12] 1506 	inc	r0
      000774 36               [12] 1507 	addc	a,@r0
      000775 FE               [12] 1508 	mov	r6,a
      000776 08               [12] 1509 	inc	r0
      000777 86 07            [24] 1510 	mov	ar7,@r0
      000779 8D 82            [24] 1511 	mov	dpl,r5
      00077B 8E 83            [24] 1512 	mov	dph,r6
      00077D 8F F0            [24] 1513 	mov	b,r7
      00077F E5 81            [12] 1514 	mov	a,sp
      000781 24 E7            [12] 1515 	add	a,#0xe7
      000783 F8               [12] 1516 	mov	r0,a
      000784 12r00r00         [24] 1517 	lcall	__gptrget
      000787 F6               [12] 1518 	mov	@r0,a
      000788 A3               [24] 1519 	inc	dptr
      000789 12r00r00         [24] 1520 	lcall	__gptrget
      00078C 08               [12] 1521 	inc	r0
      00078D F6               [12] 1522 	mov	@r0,a
                                   1523 ;	../../core/lib/ifft.c:158: xim[k] = xim[p];
      00078E E5 81            [12] 1524 	mov	a,sp
      000790 24 C3            [12] 1525 	add	a,#0xc3
      000792 F8               [12] 1526 	mov	r0,a
      000793 E5 81            [12] 1527 	mov	a,sp
      000795 24 DA            [12] 1528 	add	a,#0xda
      000797 F9               [12] 1529 	mov	r1,a
      000798 E7               [12] 1530 	mov	a,@r1
      000799 26               [12] 1531 	add	a,@r0
      00079A C0 E0            [24] 1532 	push	acc
      00079C 09               [12] 1533 	inc	r1
      00079D E7               [12] 1534 	mov	a,@r1
      00079E 08               [12] 1535 	inc	r0
      00079F 36               [12] 1536 	addc	a,@r0
      0007A0 C0 E0            [24] 1537 	push	acc
      0007A2 08               [12] 1538 	inc	r0
      0007A3 E6               [12] 1539 	mov	a,@r0
      0007A4 C0 E0            [24] 1540 	push	acc
      0007A6 E5 81            [12] 1541 	mov	a,sp
      0007A8 24 E0            [12] 1542 	add	a,#0xe0
      0007AA F8               [12] 1543 	mov	r0,a
      0007AB D0 E0            [24] 1544 	pop	acc
      0007AD F6               [12] 1545 	mov	@r0,a
      0007AE 18               [12] 1546 	dec	r0
      0007AF D0 E0            [24] 1547 	pop	acc
      0007B1 F6               [12] 1548 	mov	@r0,a
      0007B2 18               [12] 1549 	dec	r0
      0007B3 D0 E0            [24] 1550 	pop	acc
      0007B5 F6               [12] 1551 	mov	@r0,a
      0007B6 E5 81            [12] 1552 	mov	a,sp
      0007B8 24 E1            [12] 1553 	add	a,#0xe1
      0007BA F8               [12] 1554 	mov	r0,a
      0007BB 86 82            [24] 1555 	mov	dpl,@r0
      0007BD 08               [12] 1556 	inc	r0
      0007BE 86 83            [24] 1557 	mov	dph,@r0
      0007C0 08               [12] 1558 	inc	r0
      0007C1 86 F0            [24] 1559 	mov	b,@r0
      0007C3 12r00r00         [24] 1560 	lcall	__gptrget
      0007C6 FB               [12] 1561 	mov	r3,a
      0007C7 A3               [24] 1562 	inc	dptr
      0007C8 12r00r00         [24] 1563 	lcall	__gptrget
      0007CB FC               [12] 1564 	mov	r4,a
      0007CC 8D 82            [24] 1565 	mov	dpl,r5
      0007CE 8E 83            [24] 1566 	mov	dph,r6
      0007D0 8F F0            [24] 1567 	mov	b,r7
      0007D2 EB               [12] 1568 	mov	a,r3
      0007D3 12r00r00         [24] 1569 	lcall	__gptrput
      0007D6 A3               [24] 1570 	inc	dptr
      0007D7 EC               [12] 1571 	mov	a,r4
      0007D8 12r00r00         [24] 1572 	lcall	__gptrput
                                   1573 ;	../../core/lib/ifft.c:159: xim[p] = n2;
      0007DB E5 81            [12] 1574 	mov	a,sp
      0007DD 24 E1            [12] 1575 	add	a,#0xe1
      0007DF F8               [12] 1576 	mov	r0,a
      0007E0 86 82            [24] 1577 	mov	dpl,@r0
      0007E2 08               [12] 1578 	inc	r0
      0007E3 86 83            [24] 1579 	mov	dph,@r0
      0007E5 08               [12] 1580 	inc	r0
      0007E6 86 F0            [24] 1581 	mov	b,@r0
      0007E8 E5 81            [12] 1582 	mov	a,sp
      0007EA 24 E7            [12] 1583 	add	a,#0xe7
      0007EC F9               [12] 1584 	mov	r1,a
      0007ED E7               [12] 1585 	mov	a,@r1
      0007EE 12r00r00         [24] 1586 	lcall	__gptrput
      0007F1 A3               [24] 1587 	inc	dptr
      0007F2 09               [12] 1588 	inc	r1
      0007F3 E7               [12] 1589 	mov	a,@r1
      0007F4 12r00r00         [24] 1590 	lcall	__gptrput
                                   1591 ;	../../core/lib/ifft.c:165: for (i = 0, n2 = n / 2; i < n2; i++) {
      0007F7 D0 07            [24] 1592 	pop	ar7
      0007F9 D0 06            [24] 1593 	pop	ar6
                                   1594 ;	../../core/lib/ifft.c:159: xim[p] = n2;
      0007FB                       1595 00123$:
                                   1596 ;	../../core/lib/ifft.c:150: for (k = 0; k < n; k++) {
      0007FB 0E               [12] 1597 	inc	r6
      0007FC BE 00 01         [24] 1598 	cjne	r6,#0x00,00229$
      0007FF 0F               [12] 1599 	inc	r7
      000800                       1600 00229$:
      000800 02r06r6A         [24] 1601 	ljmp	00122$
      000803                       1602 00107$:
                                   1603 ;	../../core/lib/ifft.c:165: for (i = 0, n2 = n / 2; i < n2; i++) {
      000803 E5 81            [12] 1604 	mov	a,sp
      000805 24 D1            [12] 1605 	add	a,#0xd1
      000807 F8               [12] 1606 	mov	r0,a
      000808 86 06            [24] 1607 	mov	ar6,@r0
      00080A 08               [12] 1608 	inc	r0
      00080B 86 07            [24] 1609 	mov	ar7,@r0
      00080D E5 81            [12] 1610 	mov	a,sp
      00080F 24 EF            [12] 1611 	add	a,#0xef
      000811 F8               [12] 1612 	mov	r0,a
      000812 E4               [12] 1613 	clr	a
      000813 F6               [12] 1614 	mov	@r0,a
      000814 08               [12] 1615 	inc	r0
      000815 F6               [12] 1616 	mov	@r0,a
      000816                       1617 00125$:
      000816 E5 81            [12] 1618 	mov	a,sp
      000818 24 EF            [12] 1619 	add	a,#0xef
      00081A F8               [12] 1620 	mov	r0,a
      00081B 86 02            [24] 1621 	mov	ar2,@r0
      00081D 08               [12] 1622 	inc	r0
      00081E 86 03            [24] 1623 	mov	ar3,@r0
      000820 C3               [12] 1624 	clr	c
      000821 EA               [12] 1625 	mov	a,r2
      000822 9E               [12] 1626 	subb	a,r6
      000823 EB               [12] 1627 	mov	a,r3
      000824 9F               [12] 1628 	subb	a,r7
      000825 40 03            [24] 1629 	jc	00230$
      000827 02r09r1F         [24] 1630 	ljmp	00127$
      00082A                       1631 00230$:
                                   1632 ;	../../core/lib/ifft.c:166: xre[i] = (ABS(xre[i]) + ABS(xim[i]));
      00082A E5 81            [12] 1633 	mov	a,sp
      00082C 24 EF            [12] 1634 	add	a,#0xef
      00082E F8               [12] 1635 	mov	r0,a
      00082F E6               [12] 1636 	mov	a,@r0
      000830 26               [12] 1637 	add	a,@r0
      000831 FA               [12] 1638 	mov	r2,a
      000832 08               [12] 1639 	inc	r0
      000833 E6               [12] 1640 	mov	a,@r0
      000834 33               [12] 1641 	rlc	a
      000835 FB               [12] 1642 	mov	r3,a
      000836 E5 81            [12] 1643 	mov	a,sp
      000838 24 CA            [12] 1644 	add	a,#0xca
      00083A F8               [12] 1645 	mov	r0,a
      00083B E5 81            [12] 1646 	mov	a,sp
      00083D 24 E3            [12] 1647 	add	a,#0xe3
      00083F F9               [12] 1648 	mov	r1,a
      000840 EA               [12] 1649 	mov	a,r2
      000841 26               [12] 1650 	add	a,@r0
      000842 F7               [12] 1651 	mov	@r1,a
      000843 EB               [12] 1652 	mov	a,r3
      000844 08               [12] 1653 	inc	r0
      000845 36               [12] 1654 	addc	a,@r0
      000846 09               [12] 1655 	inc	r1
      000847 F7               [12] 1656 	mov	@r1,a
      000848 08               [12] 1657 	inc	r0
      000849 09               [12] 1658 	inc	r1
      00084A E6               [12] 1659 	mov	a,@r0
      00084B F7               [12] 1660 	mov	@r1,a
      00084C E5 81            [12] 1661 	mov	a,sp
      00084E 24 E3            [12] 1662 	add	a,#0xe3
      000850 F8               [12] 1663 	mov	r0,a
      000851 86 82            [24] 1664 	mov	dpl,@r0
      000853 08               [12] 1665 	inc	r0
      000854 86 83            [24] 1666 	mov	dph,@r0
      000856 08               [12] 1667 	inc	r0
      000857 86 F0            [24] 1668 	mov	b,@r0
      000859 12r00r00         [24] 1669 	lcall	__gptrget
      00085C A3               [24] 1670 	inc	dptr
      00085D 12r00r00         [24] 1671 	lcall	__gptrget
      000860 30 E7 1F         [24] 1672 	jnb	acc.7,00129$
      000863 E5 81            [12] 1673 	mov	a,sp
      000865 24 E3            [12] 1674 	add	a,#0xe3
      000867 F8               [12] 1675 	mov	r0,a
      000868 86 82            [24] 1676 	mov	dpl,@r0
      00086A 08               [12] 1677 	inc	r0
      00086B 86 83            [24] 1678 	mov	dph,@r0
      00086D 08               [12] 1679 	inc	r0
      00086E 86 F0            [24] 1680 	mov	b,@r0
      000870 12r00r00         [24] 1681 	lcall	__gptrget
      000873 FA               [12] 1682 	mov	r2,a
      000874 A3               [24] 1683 	inc	dptr
      000875 12r00r00         [24] 1684 	lcall	__gptrget
      000878 FB               [12] 1685 	mov	r3,a
      000879 C3               [12] 1686 	clr	c
      00087A E4               [12] 1687 	clr	a
      00087B 9A               [12] 1688 	subb	a,r2
      00087C FA               [12] 1689 	mov	r2,a
      00087D E4               [12] 1690 	clr	a
      00087E 9B               [12] 1691 	subb	a,r3
      00087F FB               [12] 1692 	mov	r3,a
      000880 80 16            [24] 1693 	sjmp	00130$
      000882                       1694 00129$:
      000882 E5 81            [12] 1695 	mov	a,sp
      000884 24 E3            [12] 1696 	add	a,#0xe3
      000886 F8               [12] 1697 	mov	r0,a
      000887 86 82            [24] 1698 	mov	dpl,@r0
      000889 08               [12] 1699 	inc	r0
      00088A 86 83            [24] 1700 	mov	dph,@r0
      00088C 08               [12] 1701 	inc	r0
      00088D 86 F0            [24] 1702 	mov	b,@r0
      00088F 12r00r00         [24] 1703 	lcall	__gptrget
      000892 FA               [12] 1704 	mov	r2,a
      000893 A3               [24] 1705 	inc	dptr
      000894 12r00r00         [24] 1706 	lcall	__gptrget
      000897 FB               [12] 1707 	mov	r3,a
      000898                       1708 00130$:
      000898 C0 06            [24] 1709 	push	ar6
      00089A C0 07            [24] 1710 	push	ar7
      00089C E5 81            [12] 1711 	mov	a,sp
      00089E 24 ED            [12] 1712 	add	a,#0xed
      0008A0 F8               [12] 1713 	mov	r0,a
      0008A1 E6               [12] 1714 	mov	a,@r0
      0008A2 26               [12] 1715 	add	a,@r0
      0008A3 FE               [12] 1716 	mov	r6,a
      0008A4 08               [12] 1717 	inc	r0
      0008A5 E6               [12] 1718 	mov	a,@r0
      0008A6 33               [12] 1719 	rlc	a
      0008A7 FF               [12] 1720 	mov	r7,a
      0008A8 E5 81            [12] 1721 	mov	a,sp
      0008AA 24 C3            [12] 1722 	add	a,#0xc3
      0008AC F8               [12] 1723 	mov	r0,a
      0008AD EE               [12] 1724 	mov	a,r6
      0008AE 26               [12] 1725 	add	a,@r0
      0008AF FE               [12] 1726 	mov	r6,a
      0008B0 EF               [12] 1727 	mov	a,r7
      0008B1 08               [12] 1728 	inc	r0
      0008B2 36               [12] 1729 	addc	a,@r0
      0008B3 FD               [12] 1730 	mov	r5,a
      0008B4 08               [12] 1731 	inc	r0
      0008B5 86 07            [24] 1732 	mov	ar7,@r0
      0008B7 8E 82            [24] 1733 	mov	dpl,r6
      0008B9 8D 83            [24] 1734 	mov	dph,r5
      0008BB 8F F0            [24] 1735 	mov	b,r7
      0008BD E5 81            [12] 1736 	mov	a,sp
      0008BF 24 DE            [12] 1737 	add	a,#0xde
      0008C1 F8               [12] 1738 	mov	r0,a
      0008C2 12r00r00         [24] 1739 	lcall	__gptrget
      0008C5 F6               [12] 1740 	mov	@r0,a
      0008C6 A3               [24] 1741 	inc	dptr
      0008C7 12r00r00         [24] 1742 	lcall	__gptrget
      0008CA 08               [12] 1743 	inc	r0
      0008CB F6               [12] 1744 	mov	@r0,a
      0008CC E5 81            [12] 1745 	mov	a,sp
      0008CE 24 DE            [12] 1746 	add	a,#0xde
      0008D0 F8               [12] 1747 	mov	r0,a
      0008D1 86 06            [24] 1748 	mov	ar6,@r0
      0008D3 08               [12] 1749 	inc	r0
      0008D4 E6               [12] 1750 	mov	a,@r0
      0008D5 D0 07            [24] 1751 	pop	ar7
      0008D7 D0 06            [24] 1752 	pop	ar6
      0008D9 30 E7 0F         [24] 1753 	jnb	acc.7,00131$
      0008DC E5 81            [12] 1754 	mov	a,sp
      0008DE 24 E0            [12] 1755 	add	a,#0xe0
      0008E0 F8               [12] 1756 	mov	r0,a
      0008E1 C3               [12] 1757 	clr	c
      0008E2 E4               [12] 1758 	clr	a
      0008E3 96               [12] 1759 	subb	a,@r0
      0008E4 FC               [12] 1760 	mov	r4,a
      0008E5 08               [12] 1761 	inc	r0
      0008E6 E4               [12] 1762 	clr	a
      0008E7 96               [12] 1763 	subb	a,@r0
      0008E8 FD               [12] 1764 	mov	r5,a
      0008E9 80 0A            [24] 1765 	sjmp	00132$
      0008EB                       1766 00131$:
      0008EB E5 81            [12] 1767 	mov	a,sp
      0008ED 24 E0            [12] 1768 	add	a,#0xe0
      0008EF F8               [12] 1769 	mov	r0,a
      0008F0 86 04            [24] 1770 	mov	ar4,@r0
      0008F2 08               [12] 1771 	inc	r0
      0008F3 86 05            [24] 1772 	mov	ar5,@r0
      0008F5                       1773 00132$:
      0008F5 EC               [12] 1774 	mov	a,r4
      0008F6 2A               [12] 1775 	add	a,r2
      0008F7 FA               [12] 1776 	mov	r2,a
      0008F8 ED               [12] 1777 	mov	a,r5
      0008F9 3B               [12] 1778 	addc	a,r3
      0008FA FB               [12] 1779 	mov	r3,a
      0008FB E5 81            [12] 1780 	mov	a,sp
      0008FD 24 E3            [12] 1781 	add	a,#0xe3
      0008FF F8               [12] 1782 	mov	r0,a
      000900 86 82            [24] 1783 	mov	dpl,@r0
      000902 08               [12] 1784 	inc	r0
      000903 86 83            [24] 1785 	mov	dph,@r0
      000905 08               [12] 1786 	inc	r0
      000906 86 F0            [24] 1787 	mov	b,@r0
      000908 EA               [12] 1788 	mov	a,r2
      000909 12r00r00         [24] 1789 	lcall	__gptrput
      00090C A3               [24] 1790 	inc	dptr
      00090D EB               [12] 1791 	mov	a,r3
      00090E 12r00r00         [24] 1792 	lcall	__gptrput
                                   1793 ;	../../core/lib/ifft.c:165: for (i = 0, n2 = n / 2; i < n2; i++) {
      000911 E5 81            [12] 1794 	mov	a,sp
      000913 24 EF            [12] 1795 	add	a,#0xef
      000915 F8               [12] 1796 	mov	r0,a
      000916 06               [12] 1797 	inc	@r0
      000917 B6 00 02         [24] 1798 	cjne	@r0,#0x00,00233$
      00091A 08               [12] 1799 	inc	r0
      00091B 06               [12] 1800 	inc	@r0
      00091C                       1801 00233$:
      00091C 02r08r16         [24] 1802 	ljmp	00125$
      00091F                       1803 00127$:
                                   1804 ;	../../core/lib/ifft.c:168: }
      00091F E5 81            [12] 1805 	mov	a,sp
      000921 24 C9            [12] 1806 	add	a,#0xc9
      000923 F5 81            [12] 1807 	mov	sp,a
      000925 22               [24] 1808 	ret
                                   1809 	.area CSEG    (CODE)
                                   1810 	.area CONST   (CODE)
      000000                       1811 _SIN_TAB:
      000000 00                    1812 	.db #0x00	;  0
      000001 06                    1813 	.db #0x06	;  6
      000002 0D                    1814 	.db #0x0d	;  13
      000003 14                    1815 	.db #0x14	;  20
      000004 1A                    1816 	.db #0x1a	;  26
      000005 21                    1817 	.db #0x21	;  33
      000006 27                    1818 	.db #0x27	;  39
      000007 2D                    1819 	.db #0x2d	;  45
      000008 34                    1820 	.db #0x34	;  52	'4'
      000009 3A                    1821 	.db #0x3a	;  58
      00000A 3F                    1822 	.db #0x3f	;  63
      00000B 45                    1823 	.db #0x45	;  69	'E'
      00000C 4B                    1824 	.db #0x4b	;  75	'K'
      00000D 50                    1825 	.db #0x50	;  80	'P'
      00000E 55                    1826 	.db #0x55	;  85	'U'
      00000F 5A                    1827 	.db #0x5a	;  90	'Z'
      000010 5F                    1828 	.db #0x5f	;  95
      000011 63                    1829 	.db #0x63	;  99	'c'
      000012 67                    1830 	.db #0x67	;  103	'g'
      000013 6B                    1831 	.db #0x6b	;  107	'k'
      000014 6E                    1832 	.db #0x6e	;  110	'n'
      000015 72                    1833 	.db #0x72	;  114	'r'
      000016 74                    1834 	.db #0x74	;  116	't'
      000017 77                    1835 	.db #0x77	;  119	'w'
      000018 79                    1836 	.db #0x79	;  121	'y'
      000019 7B                    1837 	.db #0x7b	;  123
      00001A 7D                    1838 	.db #0x7d	;  125
      00001B 7E                    1839 	.db #0x7e	;  126
      00001C 7F                    1840 	.db #0x7f	;  127
      00001D 7F                    1841 	.db #0x7f	;  127
      00001E 7F                    1842 	.db #0x7f	;  127
      00001F 7F                    1843 	.db #0x7f	;  127
      000020 7F                    1844 	.db #0x7f	;  127
      000021 7E                    1845 	.db #0x7e	;  126
      000022 7D                    1846 	.db #0x7d	;  125
      000023 7B                    1847 	.db #0x7b	;  123
      000024 79                    1848 	.db #0x79	;  121	'y'
      000025 77                    1849 	.db #0x77	;  119	'w'
      000026 74                    1850 	.db #0x74	;  116	't'
      000027 72                    1851 	.db #0x72	;  114	'r'
      000028 6E                    1852 	.db #0x6e	;  110	'n'
      000029 6B                    1853 	.db #0x6b	;  107	'k'
      00002A 67                    1854 	.db #0x67	;  103	'g'
      00002B 63                    1855 	.db #0x63	;  99	'c'
      00002C 5F                    1856 	.db #0x5f	;  95
      00002D 5A                    1857 	.db #0x5a	;  90	'Z'
      00002E 55                    1858 	.db #0x55	;  85	'U'
      00002F 50                    1859 	.db #0x50	;  80	'P'
      000030 4B                    1860 	.db #0x4b	;  75	'K'
      000031 45                    1861 	.db #0x45	;  69	'E'
      000032 3F                    1862 	.db #0x3f	;  63
      000033 3A                    1863 	.db #0x3a	;  58
      000034 34                    1864 	.db #0x34	;  52	'4'
      000035 2D                    1865 	.db #0x2d	;  45
      000036 27                    1866 	.db #0x27	;  39
      000037 21                    1867 	.db #0x21	;  33
      000038 1A                    1868 	.db #0x1a	;  26
      000039 14                    1869 	.db #0x14	;  20
      00003A 0D                    1870 	.db #0x0d	;  13
      00003B 06                    1871 	.db #0x06	;  6
      00003C 00                    1872 	.db #0x00	;  0
      00003D FA                    1873 	.db #0xfa	; -6
      00003E F3                    1874 	.db #0xf3	; -13
      00003F EC                    1875 	.db #0xec	; -20
      000040 E6                    1876 	.db #0xe6	; -26
      000041 DF                    1877 	.db #0xdf	; -33
      000042 D9                    1878 	.db #0xd9	; -39
      000043 D3                    1879 	.db #0xd3	; -45
      000044 CC                    1880 	.db #0xcc	; -52
      000045 C6                    1881 	.db #0xc6	; -58
      000046 C1                    1882 	.db #0xc1	; -63
      000047 BB                    1883 	.db #0xbb	; -69
      000048 B5                    1884 	.db #0xb5	; -75
      000049 B0                    1885 	.db #0xb0	; -80
      00004A AB                    1886 	.db #0xab	; -85
      00004B A6                    1887 	.db #0xa6	; -90
      00004C A1                    1888 	.db #0xa1	; -95
      00004D 9D                    1889 	.db #0x9d	; -99
      00004E 99                    1890 	.db #0x99	; -103
      00004F 95                    1891 	.db #0x95	; -107
      000050 92                    1892 	.db #0x92	; -110
      000051 8E                    1893 	.db #0x8e	; -114
      000052 8C                    1894 	.db #0x8c	; -116
      000053 89                    1895 	.db #0x89	; -119
      000054 87                    1896 	.db #0x87	; -121
      000055 85                    1897 	.db #0x85	; -123
      000056 83                    1898 	.db #0x83	; -125
      000057 82                    1899 	.db #0x82	; -126
      000058 81                    1900 	.db #0x81	; -127
      000059 81                    1901 	.db #0x81	; -127
      00005A 81                    1902 	.db #0x81	; -127
      00005B 81                    1903 	.db #0x81	; -127
      00005C 81                    1904 	.db #0x81	; -127
      00005D 82                    1905 	.db #0x82	; -126
      00005E 83                    1906 	.db #0x83	; -125
      00005F 85                    1907 	.db #0x85	; -123
      000060 87                    1908 	.db #0x87	; -121
      000061 89                    1909 	.db #0x89	; -119
      000062 8C                    1910 	.db #0x8c	; -116
      000063 8E                    1911 	.db #0x8e	; -114
      000064 92                    1912 	.db #0x92	; -110
      000065 95                    1913 	.db #0x95	; -107
      000066 99                    1914 	.db #0x99	; -103
      000067 9D                    1915 	.db #0x9d	; -99
      000068 A1                    1916 	.db #0xa1	; -95
      000069 A6                    1917 	.db #0xa6	; -90
      00006A AB                    1918 	.db #0xab	; -85
      00006B B0                    1919 	.db #0xb0	; -80
      00006C B5                    1920 	.db #0xb5	; -75
      00006D BB                    1921 	.db #0xbb	; -69
      00006E C1                    1922 	.db #0xc1	; -63
      00006F C6                    1923 	.db #0xc6	; -58
      000070 CC                    1924 	.db #0xcc	; -52
      000071 D3                    1925 	.db #0xd3	; -45
      000072 D9                    1926 	.db #0xd9	; -39
      000073 DF                    1927 	.db #0xdf	; -33
      000074 E6                    1928 	.db #0xe6	; -26
      000075 EC                    1929 	.db #0xec	; -20
      000076 F3                    1930 	.db #0xf3	; -13
      000077 FA                    1931 	.db #0xfa	; -6
                                   1932 	.area XINIT   (CODE)
                                   1933 	.area CABS    (ABS,CODE)
