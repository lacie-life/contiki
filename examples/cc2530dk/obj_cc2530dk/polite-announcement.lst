                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module polite_announcement
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _polite_announcement_stop
                                     12 	.globl _ipolite_send
                                     13 	.globl _ipolite_close
                                     14 	.globl _ipolite_open
                                     15 	.globl _packetbuf_set_datalen
                                     16 	.globl _packetbuf_datalen
                                     17 	.globl _packetbuf_dataptr
                                     18 	.globl _packetbuf_clear
                                     19 	.globl _announcement_register_observer_callback
                                     20 	.globl _announcement_heard
                                     21 	.globl _announcement_list
                                     22 	.globl _list_item_next
                                     23 	.globl _ctimer_stop
                                     24 	.globl _ctimer_set
                                     25 	.globl ___memcpy
                                     26 	.globl _ACTIVE
                                     27 	.globl _TX_BYTE
                                     28 	.globl _RX_BYTE
                                     29 	.globl _ERR
                                     30 	.globl _FE
                                     31 	.globl _SLAVE
                                     32 	.globl _RE
                                     33 	.globl _MODE
                                     34 	.globl _T3OVFIF
                                     35 	.globl _T3CH0IF
                                     36 	.globl _T3CH1IF
                                     37 	.globl _T4OVFIF
                                     38 	.globl _T4CH0IF
                                     39 	.globl _T4CH1IF
                                     40 	.globl _OVFIM
                                     41 	.globl _B_0
                                     42 	.globl _B_1
                                     43 	.globl _B_2
                                     44 	.globl _B_3
                                     45 	.globl _B_4
                                     46 	.globl _B_5
                                     47 	.globl _B_6
                                     48 	.globl _B_7
                                     49 	.globl _P2IF
                                     50 	.globl _UTX0IF
                                     51 	.globl _UTX1IF
                                     52 	.globl _P1IF
                                     53 	.globl _WDTIF
                                     54 	.globl _ACC_0
                                     55 	.globl _ACC_1
                                     56 	.globl _ACC_2
                                     57 	.globl _ACC_3
                                     58 	.globl _ACC_4
                                     59 	.globl _ACC_5
                                     60 	.globl _ACC_6
                                     61 	.globl _ACC_7
                                     62 	.globl _P
                                     63 	.globl _F1
                                     64 	.globl _OV
                                     65 	.globl _RS0
                                     66 	.globl _RS1
                                     67 	.globl _F0
                                     68 	.globl _AC
                                     69 	.globl _CY
                                     70 	.globl _DMAIF
                                     71 	.globl _T1IF
                                     72 	.globl _T2IF
                                     73 	.globl _T3IF
                                     74 	.globl _T4IF
                                     75 	.globl _P0IF
                                     76 	.globl _STIF
                                     77 	.globl _DMAIE
                                     78 	.globl _T1IE
                                     79 	.globl _T2IE
                                     80 	.globl _T3IE
                                     81 	.globl _T4IE
                                     82 	.globl _P0IE
                                     83 	.globl _RFERRIE
                                     84 	.globl _ADCIE
                                     85 	.globl _URX0IE
                                     86 	.globl _URX1IE
                                     87 	.globl _ENCIE
                                     88 	.globl _STIE
                                     89 	.globl _EA
                                     90 	.globl _P2_0
                                     91 	.globl _P2_1
                                     92 	.globl _P2_2
                                     93 	.globl _P2_3
                                     94 	.globl _P2_4
                                     95 	.globl _P2_5
                                     96 	.globl _P2_6
                                     97 	.globl _P2_7
                                     98 	.globl _ENCIF_0
                                     99 	.globl _ENCIF_1
                                    100 	.globl _P1_0
                                    101 	.globl _P1_1
                                    102 	.globl _P1_2
                                    103 	.globl _P1_3
                                    104 	.globl _P1_4
                                    105 	.globl _P1_5
                                    106 	.globl _P1_6
                                    107 	.globl _P1_7
                                    108 	.globl _IT0
                                    109 	.globl _RFERRIF
                                    110 	.globl _IT1
                                    111 	.globl _URX0IF
                                    112 	.globl _ADCIF
                                    113 	.globl _URX1IF
                                    114 	.globl _P0_0
                                    115 	.globl _P0_1
                                    116 	.globl _P0_2
                                    117 	.globl _P0_3
                                    118 	.globl _P0_4
                                    119 	.globl _P0_5
                                    120 	.globl _P0_6
                                    121 	.globl _P0_7
                                    122 	.globl _WDCTL
                                    123 	.globl _U1GCR
                                    124 	.globl _U1UCR
                                    125 	.globl _U1BAUD
                                    126 	.globl _U1DBUF
                                    127 	.globl _U1CSR
                                    128 	.globl _U0GCR
                                    129 	.globl _U0UCR
                                    130 	.globl _U0BAUD
                                    131 	.globl _U0DBUF
                                    132 	.globl _U0CSR
                                    133 	.globl _TIMIF
                                    134 	.globl _T4CC1
                                    135 	.globl _T4CCTL1
                                    136 	.globl _T4CC0
                                    137 	.globl _T4CCTL0
                                    138 	.globl _T4CTL
                                    139 	.globl _T4CNT
                                    140 	.globl _T3CC1
                                    141 	.globl _T3CCTL1
                                    142 	.globl _T3CC0
                                    143 	.globl _T3CCTL0
                                    144 	.globl _T3CTL
                                    145 	.globl _T3CNT
                                    146 	.globl _T2MSEL
                                    147 	.globl _T2IRQM
                                    148 	.globl _T2MOVF2
                                    149 	.globl _T2MOVF1
                                    150 	.globl _T2MOVF0
                                    151 	.globl _T2M1
                                    152 	.globl _T2M0
                                    153 	.globl _T2IRQF
                                    154 	.globl _T2EVTCFG
                                    155 	.globl _T2CTRL
                                    156 	.globl _T1STAT
                                    157 	.globl _T1CCTL2
                                    158 	.globl _T1CCTL1
                                    159 	.globl _T1CCTL0
                                    160 	.globl _T1CTL
                                    161 	.globl _T1CNTH
                                    162 	.globl _T1CNTL
                                    163 	.globl _T1CC2H
                                    164 	.globl _T1CC2L
                                    165 	.globl _T1CC1H
                                    166 	.globl _T1CC1L
                                    167 	.globl _T1CC0H
                                    168 	.globl _T1CC0L
                                    169 	.globl _CLKCONSTA
                                    170 	.globl _CLKCONCMD
                                    171 	.globl _SLEEPSTA
                                    172 	.globl _SLEEPCMD
                                    173 	.globl _STLOAD
                                    174 	.globl _ST2
                                    175 	.globl _ST1
                                    176 	.globl _ST0
                                    177 	.globl _RFERRF
                                    178 	.globl _RFIRQF0
                                    179 	.globl _RFST
                                    180 	.globl _RFD
                                    181 	.globl _RFIRQF1
                                    182 	.globl _PSBANK
                                    183 	.globl _FMAP
                                    184 	.globl _MEMCTR
                                    185 	.globl __XPAGE
                                    186 	.globl _MPAGE
                                    187 	.globl _PMUX
                                    188 	.globl _P2DIR
                                    189 	.globl _P1DIR
                                    190 	.globl _P0DIR
                                    191 	.globl _P2INP
                                    192 	.globl _P1INP
                                    193 	.globl _P2SEL
                                    194 	.globl _P1SEL
                                    195 	.globl _P0SEL
                                    196 	.globl _APCFG
                                    197 	.globl _PERCFG
                                    198 	.globl _P0INP
                                    199 	.globl _P2IEN
                                    200 	.globl _P1IEN
                                    201 	.globl _P0IEN
                                    202 	.globl _PICTL
                                    203 	.globl _P2IFG
                                    204 	.globl _P1IFG
                                    205 	.globl _P0IFG
                                    206 	.globl _DMAREQ
                                    207 	.globl _DMAARM
                                    208 	.globl _DMA0CFGH
                                    209 	.globl _DMA0CFGL
                                    210 	.globl _DMA1CFGH
                                    211 	.globl _DMA1CFGL
                                    212 	.globl _DMAIRQ
                                    213 	.globl _ENCCS
                                    214 	.globl _ENCDO
                                    215 	.globl _ENCDI
                                    216 	.globl _RNDH
                                    217 	.globl _RNDL
                                    218 	.globl _ADCH
                                    219 	.globl _ADCL
                                    220 	.globl _ADCCON3
                                    221 	.globl _ADCCON2
                                    222 	.globl _ADCCON1
                                    223 	.globl _B
                                    224 	.globl _IRCON2
                                    225 	.globl _ACC
                                    226 	.globl _PSW
                                    227 	.globl _IRCON
                                    228 	.globl _IP1
                                    229 	.globl _IEN1
                                    230 	.globl _IP0
                                    231 	.globl _IEN0
                                    232 	.globl _P2
                                    233 	.globl _S1CON
                                    234 	.globl _IEN2
                                    235 	.globl _S0CON
                                    236 	.globl _DPS
                                    237 	.globl _P1
                                    238 	.globl _TCON
                                    239 	.globl _PCON
                                    240 	.globl _DPH1
                                    241 	.globl _DPL1
                                    242 	.globl _DPH0
                                    243 	.globl _DPL0
                                    244 	.globl _SP
                                    245 	.globl _P0
                                    246 	.globl _X_IEEE_ADDR
                                    247 	.globl _X_INFOPAGE
                                    248 	.globl _X_P2DIR
                                    249 	.globl _X_P1DIR
                                    250 	.globl _X_P0DIR
                                    251 	.globl _X_U1GCR
                                    252 	.globl _X_U1UCR
                                    253 	.globl _X_U1BAUD
                                    254 	.globl _X_U1DBUF
                                    255 	.globl _X_U1CSR
                                    256 	.globl _X_P2INP
                                    257 	.globl _X_P1INP
                                    258 	.globl _X_P2SEL
                                    259 	.globl _X_P1SEL
                                    260 	.globl _X_P0SEL
                                    261 	.globl _X_APCFG
                                    262 	.globl _X_PERCFG
                                    263 	.globl _X_T4CC1
                                    264 	.globl _X_T4CCTL1
                                    265 	.globl _X_T4CC0
                                    266 	.globl _X_T4CCTL0
                                    267 	.globl _X_T4CTL
                                    268 	.globl _X_T4CNT
                                    269 	.globl _X_RFIRQF0
                                    270 	.globl _X_T1CCTL2
                                    271 	.globl _X_T1CCTL1
                                    272 	.globl _X_T1CCTL0
                                    273 	.globl _X_T1CTL
                                    274 	.globl _X_T1CNTH
                                    275 	.globl _X_T1CNTL
                                    276 	.globl _X_RFST
                                    277 	.globl _X_T1CC2H
                                    278 	.globl _X_T1CC2L
                                    279 	.globl _X_T1CC1H
                                    280 	.globl _X_T1CC1L
                                    281 	.globl _X_T1CC0H
                                    282 	.globl _X_T1CC0L
                                    283 	.globl _X_RFD
                                    284 	.globl _X_TIMIF
                                    285 	.globl _X_DMAREQ
                                    286 	.globl _X_DMAARM
                                    287 	.globl _X_DMA0CFGH
                                    288 	.globl _X_DMA0CFGL
                                    289 	.globl _X_DMA1CFGH
                                    290 	.globl _X_DMA1CFGL
                                    291 	.globl _X_DMAIRQ
                                    292 	.globl _X_T3CC1
                                    293 	.globl _X_T3CCTL1
                                    294 	.globl _X_T3CC0
                                    295 	.globl _X_T3CCTL0
                                    296 	.globl _X_T3CTL
                                    297 	.globl _X_T3CNT
                                    298 	.globl _X_WDCTL
                                    299 	.globl _X_MEMCTR
                                    300 	.globl _X_CLKCONCMD
                                    301 	.globl _X_U0GCR
                                    302 	.globl _X_U0UCR
                                    303 	.globl _X_T2MSEL
                                    304 	.globl _X_U0BAUD
                                    305 	.globl _X_U0DBUF
                                    306 	.globl _X_RFERRF
                                    307 	.globl _X_SLEEPCMD
                                    308 	.globl _X_RNDH
                                    309 	.globl _X_RNDL
                                    310 	.globl _X_ADCH
                                    311 	.globl _X_ADCL
                                    312 	.globl _X_ADCCON3
                                    313 	.globl _X_ADCCON2
                                    314 	.globl _X_ADCCON1
                                    315 	.globl _X_ENCCS
                                    316 	.globl _X_ENCDO
                                    317 	.globl _X_ENCDI
                                    318 	.globl _X_T1STAT
                                    319 	.globl _X_PMUX
                                    320 	.globl _X_STLOAD
                                    321 	.globl _X_P2IEN
                                    322 	.globl _X_P0IEN
                                    323 	.globl _X_T2IRQM
                                    324 	.globl _X_T2MOVF2
                                    325 	.globl _X_T2MOVF1
                                    326 	.globl _X_T2MOVF0
                                    327 	.globl _X_T2M1
                                    328 	.globl _X_T2M0
                                    329 	.globl _X_T2IRQF
                                    330 	.globl _X_P2
                                    331 	.globl _X_PSBANK
                                    332 	.globl _X_FMAP
                                    333 	.globl _X_CLKCONSTA
                                    334 	.globl _X_SLEEPSTA
                                    335 	.globl _X_T2EVTCFG
                                    336 	.globl _X_ST2
                                    337 	.globl _X_ST1
                                    338 	.globl _X_ST0
                                    339 	.globl _X_T2CTRL
                                    340 	.globl _X__XPAGE
                                    341 	.globl _X_MPAGE
                                    342 	.globl _X_RFIRQF1
                                    343 	.globl _X_P1
                                    344 	.globl _X_P0INP
                                    345 	.globl _X_P1IEN
                                    346 	.globl _X_PICTL
                                    347 	.globl _X_P2IFG
                                    348 	.globl _X_P1IFG
                                    349 	.globl _X_P0IFG
                                    350 	.globl _X_U0CSR
                                    351 	.globl _X_P0
                                    352 	.globl _USBF5
                                    353 	.globl _USBF4
                                    354 	.globl _USBF3
                                    355 	.globl _USBF2
                                    356 	.globl _USBF1
                                    357 	.globl _USBF0
                                    358 	.globl _USBCNTH
                                    359 	.globl _USBCNTL
                                    360 	.globl _USBCNT0
                                    361 	.globl _USBCSOH
                                    362 	.globl _USBCSOL
                                    363 	.globl _USBMAXO
                                    364 	.globl _USBCSIH
                                    365 	.globl _USBCSIL
                                    366 	.globl _USBCS0
                                    367 	.globl _USBMAXI
                                    368 	.globl _USBCTRL
                                    369 	.globl _USBINDEX
                                    370 	.globl _USBFRMH
                                    371 	.globl _USBFRML
                                    372 	.globl _USBCIE
                                    373 	.globl _USBOIE
                                    374 	.globl _USBIIE
                                    375 	.globl _USBCIF
                                    376 	.globl _USBOIF
                                    377 	.globl _USBIIF
                                    378 	.globl _USBPOW
                                    379 	.globl _USBADDR
                                    380 	.globl _CSPT
                                    381 	.globl _CSPZ
                                    382 	.globl _CSPY
                                    383 	.globl _CSPX
                                    384 	.globl _CSPSTAT
                                    385 	.globl _CSPCTRL
                                    386 	.globl _CSPPROG23
                                    387 	.globl _CSPPROG22
                                    388 	.globl _CSPPROG21
                                    389 	.globl _CSPPROG20
                                    390 	.globl _CSPPROG19
                                    391 	.globl _CSPPROG18
                                    392 	.globl _CSPPROG17
                                    393 	.globl _CSPPROG16
                                    394 	.globl _CSPPROG15
                                    395 	.globl _CSPPROG14
                                    396 	.globl _CSPPROG13
                                    397 	.globl _CSPPROG12
                                    398 	.globl _CSPPROG11
                                    399 	.globl _CSPPROG10
                                    400 	.globl _CSPPROG9
                                    401 	.globl _CSPPROG8
                                    402 	.globl _CSPPROG7
                                    403 	.globl _CSPPROG6
                                    404 	.globl _CSPPROG5
                                    405 	.globl _CSPPROG4
                                    406 	.globl _CSPPROG3
                                    407 	.globl _CSPPROG2
                                    408 	.globl _CSPPROG1
                                    409 	.globl _CSPPROG0
                                    410 	.globl _RFC_OBS_CTRL2
                                    411 	.globl _RFC_OBS_CTRL1
                                    412 	.globl _RFC_OBS_CTRL0
                                    413 	.globl _TXFILTCFG
                                    414 	.globl _PTEST1
                                    415 	.globl _PTEST0
                                    416 	.globl _ATEST
                                    417 	.globl _DACTEST2
                                    418 	.globl _DACTEST1
                                    419 	.globl _DACTEST0
                                    420 	.globl _MDMTEST1
                                    421 	.globl _MDMTEST0
                                    422 	.globl _ADCTEST2
                                    423 	.globl _ADCTEST1
                                    424 	.globl _ADCTEST0
                                    425 	.globl _AGCCTRL3
                                    426 	.globl _AGCCTRL2
                                    427 	.globl _AGCCTRL1
                                    428 	.globl _AGCCTRL0
                                    429 	.globl _FSCAL3
                                    430 	.globl _FSCAL2
                                    431 	.globl _FSCAL1
                                    432 	.globl _FSCAL0
                                    433 	.globl _FSCTRL
                                    434 	.globl _RXCTRL
                                    435 	.globl _FREQEST
                                    436 	.globl _MDMCTRL1
                                    437 	.globl _MDMCTRL0
                                    438 	.globl _RFRND
                                    439 	.globl _RFERRM
                                    440 	.globl _RFIRQM1
                                    441 	.globl _RFIRQM0
                                    442 	.globl _TXLAST_PTR
                                    443 	.globl _TXFIRST_PTR
                                    444 	.globl _RXP1_PTR
                                    445 	.globl _RXLAST_PTR
                                    446 	.globl _RXFIRST_PTR
                                    447 	.globl _TXFIFOCNT
                                    448 	.globl _RXFIFOCNT
                                    449 	.globl _RXFIRST
                                    450 	.globl _RSSISTAT
                                    451 	.globl _RSSI
                                    452 	.globl _CCACTRL1
                                    453 	.globl _CCACTRL0
                                    454 	.globl _FSMCTRL
                                    455 	.globl _FIFOPCTRL
                                    456 	.globl _FSMSTAT1
                                    457 	.globl _FSMSTAT0
                                    458 	.globl _TXCTRL
                                    459 	.globl _TXPOWER
                                    460 	.globl _FREQCTRL
                                    461 	.globl _FREQTUNE
                                    462 	.globl _RXMASKCLR
                                    463 	.globl _RXMASKSET
                                    464 	.globl _RXENABLE
                                    465 	.globl _FRMCTRL1
                                    466 	.globl _FRMCTRL0
                                    467 	.globl _SRCEXTEN2
                                    468 	.globl _SRCEXTEN1
                                    469 	.globl _SRCEXTEN0
                                    470 	.globl _SRCSHORTEN2
                                    471 	.globl _SRCSHORTEN1
                                    472 	.globl _SRCSHORTEN0
                                    473 	.globl _SRCMATCH
                                    474 	.globl _FRMFILT1
                                    475 	.globl _FRMFILT0
                                    476 	.globl _SHORT_ADDR1
                                    477 	.globl _SHORT_ADDR0
                                    478 	.globl _PAN_ID1
                                    479 	.globl _PAN_ID0
                                    480 	.globl _EXT_ADDR7
                                    481 	.globl _EXT_ADDR6
                                    482 	.globl _EXT_ADDR5
                                    483 	.globl _EXT_ADDR4
                                    484 	.globl _EXT_ADDR3
                                    485 	.globl _EXT_ADDR2
                                    486 	.globl _EXT_ADDR1
                                    487 	.globl _EXT_ADDR0
                                    488 	.globl _SRCSHORTPENDEN2
                                    489 	.globl _SRCSHORTPENDEN1
                                    490 	.globl _SRCSHORTPENDEN0
                                    491 	.globl _SRCEXTPENDEN2
                                    492 	.globl _SRCEXTPENDEN1
                                    493 	.globl _SRCEXTPENDEN0
                                    494 	.globl _SRCRESINDEX
                                    495 	.globl _SRCRESMASK2
                                    496 	.globl _SRCRESMASK1
                                    497 	.globl _SRCRESMASK0
                                    498 	.globl _SRC_ADDR_TABLE
                                    499 	.globl _TXFIFO
                                    500 	.globl _RXFIFO
                                    501 	.globl _RFCORE_RAM
                                    502 	.globl _CMPCTL
                                    503 	.globl _OPAMPS
                                    504 	.globl _OPAMPC
                                    505 	.globl _STCV2
                                    506 	.globl _STCV1
                                    507 	.globl _STCV0
                                    508 	.globl _STCS
                                    509 	.globl _STCC
                                    510 	.globl _T1CC4H
                                    511 	.globl _T1CC4L
                                    512 	.globl _T1CC3H
                                    513 	.globl _T1CC3L
                                    514 	.globl _XX_T1CC2H
                                    515 	.globl _XX_T1CC2L
                                    516 	.globl _XX_T1CC1H
                                    517 	.globl _XX_T1CC1L
                                    518 	.globl _XX_T1CC0H
                                    519 	.globl _XX_T1CC0L
                                    520 	.globl _T1CCTL4
                                    521 	.globl _T1CCTL3
                                    522 	.globl _XX_T1CCTL2
                                    523 	.globl _XX_T1CCTL1
                                    524 	.globl _XX_T1CCTL0
                                    525 	.globl _CLD
                                    526 	.globl _IRCTL
                                    527 	.globl _CHIPINFO1
                                    528 	.globl _CHIPINFO0
                                    529 	.globl _FWDATA
                                    530 	.globl _FADDRH
                                    531 	.globl _FADDRL
                                    532 	.globl _FCTL
                                    533 	.globl _IVCTRL
                                    534 	.globl _BATTMON
                                    535 	.globl _SRCRC
                                    536 	.globl _DBGDATA
                                    537 	.globl _TESTREG0
                                    538 	.globl _CHIPID
                                    539 	.globl _CHVER
                                    540 	.globl _OBSSEL5
                                    541 	.globl _OBSSEL4
                                    542 	.globl _OBSSEL3
                                    543 	.globl _OBSSEL2
                                    544 	.globl _OBSSEL1
                                    545 	.globl _OBSSEL0
                                    546 	.globl _I2CIO
                                    547 	.globl _I2CWC
                                    548 	.globl _I2CADDR
                                    549 	.globl _I2CDATA
                                    550 	.globl _I2CSTAT
                                    551 	.globl _I2CCFG
                                    552 	.globl _OPAMPMC
                                    553 	.globl _MONMUX
                                    554 	.globl _polite_announcement_init
                                    555 ;--------------------------------------------------------
                                    556 ; special function registers
                                    557 ;--------------------------------------------------------
                                    558 	.area RSEG    (ABS,DATA)
      000000                        559 	.org 0x0000
                           000080   560 _P0	=	0x0080
                           000081   561 _SP	=	0x0081
                           000082   562 _DPL0	=	0x0082
                           000083   563 _DPH0	=	0x0083
                           000084   564 _DPL1	=	0x0084
                           000085   565 _DPH1	=	0x0085
                           000087   566 _PCON	=	0x0087
                           000088   567 _TCON	=	0x0088
                           000090   568 _P1	=	0x0090
                           000092   569 _DPS	=	0x0092
                           000098   570 _S0CON	=	0x0098
                           00009A   571 _IEN2	=	0x009a
                           00009B   572 _S1CON	=	0x009b
                           0000A0   573 _P2	=	0x00a0
                           0000A8   574 _IEN0	=	0x00a8
                           0000A9   575 _IP0	=	0x00a9
                           0000B8   576 _IEN1	=	0x00b8
                           0000B9   577 _IP1	=	0x00b9
                           0000C0   578 _IRCON	=	0x00c0
                           0000D0   579 _PSW	=	0x00d0
                           0000E0   580 _ACC	=	0x00e0
                           0000E8   581 _IRCON2	=	0x00e8
                           0000F0   582 _B	=	0x00f0
                           0000B4   583 _ADCCON1	=	0x00b4
                           0000B5   584 _ADCCON2	=	0x00b5
                           0000B6   585 _ADCCON3	=	0x00b6
                           0000BA   586 _ADCL	=	0x00ba
                           0000BB   587 _ADCH	=	0x00bb
                           0000BC   588 _RNDL	=	0x00bc
                           0000BD   589 _RNDH	=	0x00bd
                           0000B1   590 _ENCDI	=	0x00b1
                           0000B2   591 _ENCDO	=	0x00b2
                           0000B3   592 _ENCCS	=	0x00b3
                           0000D1   593 _DMAIRQ	=	0x00d1
                           0000D2   594 _DMA1CFGL	=	0x00d2
                           0000D3   595 _DMA1CFGH	=	0x00d3
                           0000D4   596 _DMA0CFGL	=	0x00d4
                           0000D5   597 _DMA0CFGH	=	0x00d5
                           0000D6   598 _DMAARM	=	0x00d6
                           0000D7   599 _DMAREQ	=	0x00d7
                           000089   600 _P0IFG	=	0x0089
                           00008A   601 _P1IFG	=	0x008a
                           00008B   602 _P2IFG	=	0x008b
                           00008C   603 _PICTL	=	0x008c
                           0000AB   604 _P0IEN	=	0x00ab
                           00008D   605 _P1IEN	=	0x008d
                           0000AC   606 _P2IEN	=	0x00ac
                           00008F   607 _P0INP	=	0x008f
                           0000F1   608 _PERCFG	=	0x00f1
                           0000F2   609 _APCFG	=	0x00f2
                           0000F3   610 _P0SEL	=	0x00f3
                           0000F4   611 _P1SEL	=	0x00f4
                           0000F5   612 _P2SEL	=	0x00f5
                           0000F6   613 _P1INP	=	0x00f6
                           0000F7   614 _P2INP	=	0x00f7
                           0000FD   615 _P0DIR	=	0x00fd
                           0000FE   616 _P1DIR	=	0x00fe
                           0000FF   617 _P2DIR	=	0x00ff
                           0000AE   618 _PMUX	=	0x00ae
                           000093   619 _MPAGE	=	0x0093
                           000093   620 __XPAGE	=	0x0093
                           0000C7   621 _MEMCTR	=	0x00c7
                           00009F   622 _FMAP	=	0x009f
                           00009F   623 _PSBANK	=	0x009f
                           000091   624 _RFIRQF1	=	0x0091
                           0000D9   625 _RFD	=	0x00d9
                           0000E1   626 _RFST	=	0x00e1
                           0000E9   627 _RFIRQF0	=	0x00e9
                           0000BF   628 _RFERRF	=	0x00bf
                           000095   629 _ST0	=	0x0095
                           000096   630 _ST1	=	0x0096
                           000097   631 _ST2	=	0x0097
                           0000AD   632 _STLOAD	=	0x00ad
                           0000BE   633 _SLEEPCMD	=	0x00be
                           00009D   634 _SLEEPSTA	=	0x009d
                           0000C6   635 _CLKCONCMD	=	0x00c6
                           00009E   636 _CLKCONSTA	=	0x009e
                           0000DA   637 _T1CC0L	=	0x00da
                           0000DB   638 _T1CC0H	=	0x00db
                           0000DC   639 _T1CC1L	=	0x00dc
                           0000DD   640 _T1CC1H	=	0x00dd
                           0000DE   641 _T1CC2L	=	0x00de
                           0000DF   642 _T1CC2H	=	0x00df
                           0000E2   643 _T1CNTL	=	0x00e2
                           0000E3   644 _T1CNTH	=	0x00e3
                           0000E4   645 _T1CTL	=	0x00e4
                           0000E5   646 _T1CCTL0	=	0x00e5
                           0000E6   647 _T1CCTL1	=	0x00e6
                           0000E7   648 _T1CCTL2	=	0x00e7
                           0000AF   649 _T1STAT	=	0x00af
                           000094   650 _T2CTRL	=	0x0094
                           00009C   651 _T2EVTCFG	=	0x009c
                           0000A1   652 _T2IRQF	=	0x00a1
                           0000A2   653 _T2M0	=	0x00a2
                           0000A3   654 _T2M1	=	0x00a3
                           0000A4   655 _T2MOVF0	=	0x00a4
                           0000A5   656 _T2MOVF1	=	0x00a5
                           0000A6   657 _T2MOVF2	=	0x00a6
                           0000A7   658 _T2IRQM	=	0x00a7
                           0000C3   659 _T2MSEL	=	0x00c3
                           0000CA   660 _T3CNT	=	0x00ca
                           0000CB   661 _T3CTL	=	0x00cb
                           0000CC   662 _T3CCTL0	=	0x00cc
                           0000CD   663 _T3CC0	=	0x00cd
                           0000CE   664 _T3CCTL1	=	0x00ce
                           0000CF   665 _T3CC1	=	0x00cf
                           0000EA   666 _T4CNT	=	0x00ea
                           0000EB   667 _T4CTL	=	0x00eb
                           0000EC   668 _T4CCTL0	=	0x00ec
                           0000ED   669 _T4CC0	=	0x00ed
                           0000EE   670 _T4CCTL1	=	0x00ee
                           0000EF   671 _T4CC1	=	0x00ef
                           0000D8   672 _TIMIF	=	0x00d8
                           000086   673 _U0CSR	=	0x0086
                           0000C1   674 _U0DBUF	=	0x00c1
                           0000C2   675 _U0BAUD	=	0x00c2
                           0000C4   676 _U0UCR	=	0x00c4
                           0000C5   677 _U0GCR	=	0x00c5
                           0000F8   678 _U1CSR	=	0x00f8
                           0000F9   679 _U1DBUF	=	0x00f9
                           0000FA   680 _U1BAUD	=	0x00fa
                           0000FB   681 _U1UCR	=	0x00fb
                           0000FC   682 _U1GCR	=	0x00fc
                           0000C9   683 _WDCTL	=	0x00c9
                                    684 ;--------------------------------------------------------
                                    685 ; special function bits
                                    686 ;--------------------------------------------------------
                                    687 	.area RSEG    (ABS,DATA)
      000000                        688 	.org 0x0000
                           000087   689 _P0_7	=	0x0087
                           000086   690 _P0_6	=	0x0086
                           000085   691 _P0_5	=	0x0085
                           000084   692 _P0_4	=	0x0084
                           000083   693 _P0_3	=	0x0083
                           000082   694 _P0_2	=	0x0082
                           000081   695 _P0_1	=	0x0081
                           000080   696 _P0_0	=	0x0080
                           00008F   697 _URX1IF	=	0x008f
                           00008D   698 _ADCIF	=	0x008d
                           00008B   699 _URX0IF	=	0x008b
                           00008A   700 _IT1	=	0x008a
                           000089   701 _RFERRIF	=	0x0089
                           000088   702 _IT0	=	0x0088
                           000097   703 _P1_7	=	0x0097
                           000096   704 _P1_6	=	0x0096
                           000095   705 _P1_5	=	0x0095
                           000094   706 _P1_4	=	0x0094
                           000093   707 _P1_3	=	0x0093
                           000092   708 _P1_2	=	0x0092
                           000091   709 _P1_1	=	0x0091
                           000090   710 _P1_0	=	0x0090
                           000099   711 _ENCIF_1	=	0x0099
                           000098   712 _ENCIF_0	=	0x0098
                           0000A7   713 _P2_7	=	0x00a7
                           0000A6   714 _P2_6	=	0x00a6
                           0000A5   715 _P2_5	=	0x00a5
                           0000A4   716 _P2_4	=	0x00a4
                           0000A3   717 _P2_3	=	0x00a3
                           0000A2   718 _P2_2	=	0x00a2
                           0000A1   719 _P2_1	=	0x00a1
                           0000A0   720 _P2_0	=	0x00a0
                           0000AF   721 _EA	=	0x00af
                           0000AD   722 _STIE	=	0x00ad
                           0000AC   723 _ENCIE	=	0x00ac
                           0000AB   724 _URX1IE	=	0x00ab
                           0000AA   725 _URX0IE	=	0x00aa
                           0000A9   726 _ADCIE	=	0x00a9
                           0000A8   727 _RFERRIE	=	0x00a8
                           0000BD   728 _P0IE	=	0x00bd
                           0000BC   729 _T4IE	=	0x00bc
                           0000BB   730 _T3IE	=	0x00bb
                           0000BA   731 _T2IE	=	0x00ba
                           0000B9   732 _T1IE	=	0x00b9
                           0000B8   733 _DMAIE	=	0x00b8
                           0000C7   734 _STIF	=	0x00c7
                           0000C5   735 _P0IF	=	0x00c5
                           0000C4   736 _T4IF	=	0x00c4
                           0000C3   737 _T3IF	=	0x00c3
                           0000C2   738 _T2IF	=	0x00c2
                           0000C1   739 _T1IF	=	0x00c1
                           0000C0   740 _DMAIF	=	0x00c0
                           0000D7   741 _CY	=	0x00d7
                           0000D6   742 _AC	=	0x00d6
                           0000D5   743 _F0	=	0x00d5
                           0000D4   744 _RS1	=	0x00d4
                           0000D3   745 _RS0	=	0x00d3
                           0000D2   746 _OV	=	0x00d2
                           0000D1   747 _F1	=	0x00d1
                           0000D0   748 _P	=	0x00d0
                           0000E7   749 _ACC_7	=	0x00e7
                           0000E6   750 _ACC_6	=	0x00e6
                           0000E5   751 _ACC_5	=	0x00e5
                           0000E4   752 _ACC_4	=	0x00e4
                           0000E3   753 _ACC_3	=	0x00e3
                           0000E2   754 _ACC_2	=	0x00e2
                           0000E1   755 _ACC_1	=	0x00e1
                           0000E0   756 _ACC_0	=	0x00e0
                           0000EC   757 _WDTIF	=	0x00ec
                           0000EB   758 _P1IF	=	0x00eb
                           0000EA   759 _UTX1IF	=	0x00ea
                           0000E9   760 _UTX0IF	=	0x00e9
                           0000E8   761 _P2IF	=	0x00e8
                           0000F7   762 _B_7	=	0x00f7
                           0000F6   763 _B_6	=	0x00f6
                           0000F5   764 _B_5	=	0x00f5
                           0000F4   765 _B_4	=	0x00f4
                           0000F3   766 _B_3	=	0x00f3
                           0000F2   767 _B_2	=	0x00f2
                           0000F1   768 _B_1	=	0x00f1
                           0000F0   769 _B_0	=	0x00f0
                           0000DE   770 _OVFIM	=	0x00de
                           0000DD   771 _T4CH1IF	=	0x00dd
                           0000DC   772 _T4CH0IF	=	0x00dc
                           0000DB   773 _T4OVFIF	=	0x00db
                           0000DA   774 _T3CH1IF	=	0x00da
                           0000D9   775 _T3CH0IF	=	0x00d9
                           0000D8   776 _T3OVFIF	=	0x00d8
                           0000FF   777 _MODE	=	0x00ff
                           0000FE   778 _RE	=	0x00fe
                           0000FD   779 _SLAVE	=	0x00fd
                           0000FC   780 _FE	=	0x00fc
                           0000FB   781 _ERR	=	0x00fb
                           0000FA   782 _RX_BYTE	=	0x00fa
                           0000F9   783 _TX_BYTE	=	0x00f9
                           0000F8   784 _ACTIVE	=	0x00f8
                                    785 ;--------------------------------------------------------
                                    786 ; overlayable register banks
                                    787 ;--------------------------------------------------------
                                    788 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        789 	.ds 8
                                    790 ;--------------------------------------------------------
                                    791 ; internal ram data
                                    792 ;--------------------------------------------------------
                                    793 	.area DSEG    (DATA)
                                    794 ;--------------------------------------------------------
                                    795 ; overlayable items in internal ram 
                                    796 ;--------------------------------------------------------
                                    797 ;--------------------------------------------------------
                                    798 ; indirectly addressable internal ram data
                                    799 ;--------------------------------------------------------
                                    800 	.area ISEG    (DATA)
                                    801 ;--------------------------------------------------------
                                    802 ; absolute internal ram data
                                    803 ;--------------------------------------------------------
                                    804 	.area IABS    (ABS,DATA)
                                    805 	.area IABS    (ABS,DATA)
                                    806 ;--------------------------------------------------------
                                    807 ; bit data
                                    808 ;--------------------------------------------------------
                                    809 	.area BSEG    (BIT)
                                    810 ;--------------------------------------------------------
                                    811 ; paged external ram data
                                    812 ;--------------------------------------------------------
                                    813 	.area PSEG    (PAG,XDATA)
                                    814 ;--------------------------------------------------------
                                    815 ; external ram data
                                    816 ;--------------------------------------------------------
                                    817 	.area XSEG    (XDATA)
                           0061A6   818 _MONMUX	=	0x61a6
                           0061A6   819 _OPAMPMC	=	0x61a6
                           006230   820 _I2CCFG	=	0x6230
                           006231   821 _I2CSTAT	=	0x6231
                           006232   822 _I2CDATA	=	0x6232
                           006233   823 _I2CADDR	=	0x6233
                           006234   824 _I2CWC	=	0x6234
                           006235   825 _I2CIO	=	0x6235
                           006243   826 _OBSSEL0	=	0x6243
                           006244   827 _OBSSEL1	=	0x6244
                           006245   828 _OBSSEL2	=	0x6245
                           006246   829 _OBSSEL3	=	0x6246
                           006247   830 _OBSSEL4	=	0x6247
                           006248   831 _OBSSEL5	=	0x6248
                           006249   832 _CHVER	=	0x6249
                           00624A   833 _CHIPID	=	0x624a
                           00624B   834 _TESTREG0	=	0x624b
                           006260   835 _DBGDATA	=	0x6260
                           006262   836 _SRCRC	=	0x6262
                           006264   837 _BATTMON	=	0x6264
                           006265   838 _IVCTRL	=	0x6265
                           006270   839 _FCTL	=	0x6270
                           006271   840 _FADDRL	=	0x6271
                           006272   841 _FADDRH	=	0x6272
                           006273   842 _FWDATA	=	0x6273
                           006276   843 _CHIPINFO0	=	0x6276
                           006277   844 _CHIPINFO1	=	0x6277
                           006281   845 _IRCTL	=	0x6281
                           006290   846 _CLD	=	0x6290
                           0062A0   847 _XX_T1CCTL0	=	0x62a0
                           0062A1   848 _XX_T1CCTL1	=	0x62a1
                           0062A2   849 _XX_T1CCTL2	=	0x62a2
                           0062A3   850 _T1CCTL3	=	0x62a3
                           0062A4   851 _T1CCTL4	=	0x62a4
                           0062A6   852 _XX_T1CC0L	=	0x62a6
                           0062A7   853 _XX_T1CC0H	=	0x62a7
                           0062A8   854 _XX_T1CC1L	=	0x62a8
                           0062A9   855 _XX_T1CC1H	=	0x62a9
                           0062AA   856 _XX_T1CC2L	=	0x62aa
                           0062AB   857 _XX_T1CC2H	=	0x62ab
                           0062AC   858 _T1CC3L	=	0x62ac
                           0062AD   859 _T1CC3H	=	0x62ad
                           0062AE   860 _T1CC4L	=	0x62ae
                           0062AF   861 _T1CC4H	=	0x62af
                           0062B0   862 _STCC	=	0x62b0
                           0062B1   863 _STCS	=	0x62b1
                           0062B2   864 _STCV0	=	0x62b2
                           0062B3   865 _STCV1	=	0x62b3
                           0062B4   866 _STCV2	=	0x62b4
                           0062C0   867 _OPAMPC	=	0x62c0
                           0062C1   868 _OPAMPS	=	0x62c1
                           0062D0   869 _CMPCTL	=	0x62d0
                           006000   870 _RFCORE_RAM	=	0x6000
                           006000   871 _RXFIFO	=	0x6000
                           006080   872 _TXFIFO	=	0x6080
                           006100   873 _SRC_ADDR_TABLE	=	0x6100
                           006160   874 _SRCRESMASK0	=	0x6160
                           006161   875 _SRCRESMASK1	=	0x6161
                           006162   876 _SRCRESMASK2	=	0x6162
                           006163   877 _SRCRESINDEX	=	0x6163
                           006164   878 _SRCEXTPENDEN0	=	0x6164
                           006165   879 _SRCEXTPENDEN1	=	0x6165
                           006166   880 _SRCEXTPENDEN2	=	0x6166
                           006167   881 _SRCSHORTPENDEN0	=	0x6167
                           006168   882 _SRCSHORTPENDEN1	=	0x6168
                           006169   883 _SRCSHORTPENDEN2	=	0x6169
                           00616A   884 _EXT_ADDR0	=	0x616a
                           00616B   885 _EXT_ADDR1	=	0x616b
                           00616C   886 _EXT_ADDR2	=	0x616c
                           00616D   887 _EXT_ADDR3	=	0x616d
                           00616E   888 _EXT_ADDR4	=	0x616e
                           00616F   889 _EXT_ADDR5	=	0x616f
                           006170   890 _EXT_ADDR6	=	0x6170
                           006171   891 _EXT_ADDR7	=	0x6171
                           006172   892 _PAN_ID0	=	0x6172
                           006173   893 _PAN_ID1	=	0x6173
                           006174   894 _SHORT_ADDR0	=	0x6174
                           006175   895 _SHORT_ADDR1	=	0x6175
                           006180   896 _FRMFILT0	=	0x6180
                           006181   897 _FRMFILT1	=	0x6181
                           006182   898 _SRCMATCH	=	0x6182
                           006183   899 _SRCSHORTEN0	=	0x6183
                           006184   900 _SRCSHORTEN1	=	0x6184
                           006185   901 _SRCSHORTEN2	=	0x6185
                           006186   902 _SRCEXTEN0	=	0x6186
                           006187   903 _SRCEXTEN1	=	0x6187
                           006188   904 _SRCEXTEN2	=	0x6188
                           006189   905 _FRMCTRL0	=	0x6189
                           00618A   906 _FRMCTRL1	=	0x618a
                           00618B   907 _RXENABLE	=	0x618b
                           00618C   908 _RXMASKSET	=	0x618c
                           00618D   909 _RXMASKCLR	=	0x618d
                           00618E   910 _FREQTUNE	=	0x618e
                           00618F   911 _FREQCTRL	=	0x618f
                           006190   912 _TXPOWER	=	0x6190
                           006191   913 _TXCTRL	=	0x6191
                           006192   914 _FSMSTAT0	=	0x6192
                           006193   915 _FSMSTAT1	=	0x6193
                           006194   916 _FIFOPCTRL	=	0x6194
                           006195   917 _FSMCTRL	=	0x6195
                           006196   918 _CCACTRL0	=	0x6196
                           006197   919 _CCACTRL1	=	0x6197
                           006198   920 _RSSI	=	0x6198
                           006199   921 _RSSISTAT	=	0x6199
                           00619A   922 _RXFIRST	=	0x619a
                           00619B   923 _RXFIFOCNT	=	0x619b
                           00619C   924 _TXFIFOCNT	=	0x619c
                           00619D   925 _RXFIRST_PTR	=	0x619d
                           00619E   926 _RXLAST_PTR	=	0x619e
                           00619F   927 _RXP1_PTR	=	0x619f
                           0061A1   928 _TXFIRST_PTR	=	0x61a1
                           0061A2   929 _TXLAST_PTR	=	0x61a2
                           0061A3   930 _RFIRQM0	=	0x61a3
                           0061A4   931 _RFIRQM1	=	0x61a4
                           0061A5   932 _RFERRM	=	0x61a5
                           0061A7   933 _RFRND	=	0x61a7
                           0061A8   934 _MDMCTRL0	=	0x61a8
                           0061A9   935 _MDMCTRL1	=	0x61a9
                           0061AA   936 _FREQEST	=	0x61aa
                           0061AB   937 _RXCTRL	=	0x61ab
                           0061AC   938 _FSCTRL	=	0x61ac
                           0061AD   939 _FSCAL0	=	0x61ad
                           0061AE   940 _FSCAL1	=	0x61ae
                           0061AF   941 _FSCAL2	=	0x61af
                           0061B0   942 _FSCAL3	=	0x61b0
                           0061B1   943 _AGCCTRL0	=	0x61b1
                           0061B2   944 _AGCCTRL1	=	0x61b2
                           0061B3   945 _AGCCTRL2	=	0x61b3
                           0061B4   946 _AGCCTRL3	=	0x61b4
                           0061B5   947 _ADCTEST0	=	0x61b5
                           0061B6   948 _ADCTEST1	=	0x61b6
                           0061B7   949 _ADCTEST2	=	0x61b7
                           0061B8   950 _MDMTEST0	=	0x61b8
                           0061B9   951 _MDMTEST1	=	0x61b9
                           0061BA   952 _DACTEST0	=	0x61ba
                           0061BB   953 _DACTEST1	=	0x61bb
                           0061BC   954 _DACTEST2	=	0x61bc
                           0061BD   955 _ATEST	=	0x61bd
                           0061BE   956 _PTEST0	=	0x61be
                           0061BF   957 _PTEST1	=	0x61bf
                           0061FA   958 _TXFILTCFG	=	0x61fa
                           0061EB   959 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   960 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   961 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   962 _CSPPROG0	=	0x61c0
                           0061C1   963 _CSPPROG1	=	0x61c1
                           0061C2   964 _CSPPROG2	=	0x61c2
                           0061C3   965 _CSPPROG3	=	0x61c3
                           0061C4   966 _CSPPROG4	=	0x61c4
                           0061C5   967 _CSPPROG5	=	0x61c5
                           0061C6   968 _CSPPROG6	=	0x61c6
                           0061C7   969 _CSPPROG7	=	0x61c7
                           0061C8   970 _CSPPROG8	=	0x61c8
                           0061C9   971 _CSPPROG9	=	0x61c9
                           0061CA   972 _CSPPROG10	=	0x61ca
                           0061CB   973 _CSPPROG11	=	0x61cb
                           0061CC   974 _CSPPROG12	=	0x61cc
                           0061CD   975 _CSPPROG13	=	0x61cd
                           0061CE   976 _CSPPROG14	=	0x61ce
                           0061CF   977 _CSPPROG15	=	0x61cf
                           0061D0   978 _CSPPROG16	=	0x61d0
                           0061D1   979 _CSPPROG17	=	0x61d1
                           0061D2   980 _CSPPROG18	=	0x61d2
                           0061D3   981 _CSPPROG19	=	0x61d3
                           0061D4   982 _CSPPROG20	=	0x61d4
                           0061D5   983 _CSPPROG21	=	0x61d5
                           0061D6   984 _CSPPROG22	=	0x61d6
                           0061D7   985 _CSPPROG23	=	0x61d7
                           0061E0   986 _CSPCTRL	=	0x61e0
                           0061E1   987 _CSPSTAT	=	0x61e1
                           0061E2   988 _CSPX	=	0x61e2
                           0061E3   989 _CSPY	=	0x61e3
                           0061E4   990 _CSPZ	=	0x61e4
                           0061E5   991 _CSPT	=	0x61e5
                           006200   992 _USBADDR	=	0x6200
                           006201   993 _USBPOW	=	0x6201
                           006202   994 _USBIIF	=	0x6202
                           006204   995 _USBOIF	=	0x6204
                           006206   996 _USBCIF	=	0x6206
                           006207   997 _USBIIE	=	0x6207
                           006209   998 _USBOIE	=	0x6209
                           00620B   999 _USBCIE	=	0x620b
                           00620C  1000 _USBFRML	=	0x620c
                           00620D  1001 _USBFRMH	=	0x620d
                           00620E  1002 _USBINDEX	=	0x620e
                           00620F  1003 _USBCTRL	=	0x620f
                           006210  1004 _USBMAXI	=	0x6210
                           006211  1005 _USBCS0	=	0x6211
                           006211  1006 _USBCSIL	=	0x6211
                           006212  1007 _USBCSIH	=	0x6212
                           006213  1008 _USBMAXO	=	0x6213
                           006214  1009 _USBCSOL	=	0x6214
                           006215  1010 _USBCSOH	=	0x6215
                           006216  1011 _USBCNT0	=	0x6216
                           006216  1012 _USBCNTL	=	0x6216
                           006217  1013 _USBCNTH	=	0x6217
                           006220  1014 _USBF0	=	0x6220
                           006222  1015 _USBF1	=	0x6222
                           006224  1016 _USBF2	=	0x6224
                           006226  1017 _USBF3	=	0x6226
                           006228  1018 _USBF4	=	0x6228
                           00622A  1019 _USBF5	=	0x622a
                           007080  1020 _X_P0	=	0x7080
                           007086  1021 _X_U0CSR	=	0x7086
                           007089  1022 _X_P0IFG	=	0x7089
                           00708A  1023 _X_P1IFG	=	0x708a
                           00708B  1024 _X_P2IFG	=	0x708b
                           00708C  1025 _X_PICTL	=	0x708c
                           00708D  1026 _X_P1IEN	=	0x708d
                           00708F  1027 _X_P0INP	=	0x708f
                           007090  1028 _X_P1	=	0x7090
                           007091  1029 _X_RFIRQF1	=	0x7091
                           007093  1030 _X_MPAGE	=	0x7093
                           007093  1031 _X__XPAGE	=	0x7093
                           007094  1032 _X_T2CTRL	=	0x7094
                           007095  1033 _X_ST0	=	0x7095
                           007096  1034 _X_ST1	=	0x7096
                           007097  1035 _X_ST2	=	0x7097
                           00709C  1036 _X_T2EVTCFG	=	0x709c
                           00709D  1037 _X_SLEEPSTA	=	0x709d
                           00709E  1038 _X_CLKCONSTA	=	0x709e
                           00709F  1039 _X_FMAP	=	0x709f
                           00709F  1040 _X_PSBANK	=	0x709f
                           0070A0  1041 _X_P2	=	0x70a0
                           0070A1  1042 _X_T2IRQF	=	0x70a1
                           0070A2  1043 _X_T2M0	=	0x70a2
                           0070A3  1044 _X_T2M1	=	0x70a3
                           0070A4  1045 _X_T2MOVF0	=	0x70a4
                           0070A5  1046 _X_T2MOVF1	=	0x70a5
                           0070A6  1047 _X_T2MOVF2	=	0x70a6
                           0070A7  1048 _X_T2IRQM	=	0x70a7
                           0070AB  1049 _X_P0IEN	=	0x70ab
                           0070AC  1050 _X_P2IEN	=	0x70ac
                           0070AD  1051 _X_STLOAD	=	0x70ad
                           0070AE  1052 _X_PMUX	=	0x70ae
                           0070AF  1053 _X_T1STAT	=	0x70af
                           0070B1  1054 _X_ENCDI	=	0x70b1
                           0070B2  1055 _X_ENCDO	=	0x70b2
                           0070B3  1056 _X_ENCCS	=	0x70b3
                           0070B4  1057 _X_ADCCON1	=	0x70b4
                           0070B5  1058 _X_ADCCON2	=	0x70b5
                           0070B6  1059 _X_ADCCON3	=	0x70b6
                           0070BA  1060 _X_ADCL	=	0x70ba
                           0070BB  1061 _X_ADCH	=	0x70bb
                           0070BC  1062 _X_RNDL	=	0x70bc
                           0070BD  1063 _X_RNDH	=	0x70bd
                           0070BE  1064 _X_SLEEPCMD	=	0x70be
                           0070BF  1065 _X_RFERRF	=	0x70bf
                           0070C1  1066 _X_U0DBUF	=	0x70c1
                           0070C2  1067 _X_U0BAUD	=	0x70c2
                           0070C3  1068 _X_T2MSEL	=	0x70c3
                           0070C4  1069 _X_U0UCR	=	0x70c4
                           0070C5  1070 _X_U0GCR	=	0x70c5
                           0070C6  1071 _X_CLKCONCMD	=	0x70c6
                           0070C7  1072 _X_MEMCTR	=	0x70c7
                           0070C9  1073 _X_WDCTL	=	0x70c9
                           0070CA  1074 _X_T3CNT	=	0x70ca
                           0070CB  1075 _X_T3CTL	=	0x70cb
                           0070CC  1076 _X_T3CCTL0	=	0x70cc
                           0070CD  1077 _X_T3CC0	=	0x70cd
                           0070CE  1078 _X_T3CCTL1	=	0x70ce
                           0070CF  1079 _X_T3CC1	=	0x70cf
                           0070D1  1080 _X_DMAIRQ	=	0x70d1
                           0070D2  1081 _X_DMA1CFGL	=	0x70d2
                           0070D3  1082 _X_DMA1CFGH	=	0x70d3
                           0070D4  1083 _X_DMA0CFGL	=	0x70d4
                           0070D5  1084 _X_DMA0CFGH	=	0x70d5
                           0070D6  1085 _X_DMAARM	=	0x70d6
                           0070D7  1086 _X_DMAREQ	=	0x70d7
                           0070D8  1087 _X_TIMIF	=	0x70d8
                           0070D9  1088 _X_RFD	=	0x70d9
                           0070DA  1089 _X_T1CC0L	=	0x70da
                           0070DB  1090 _X_T1CC0H	=	0x70db
                           0070DC  1091 _X_T1CC1L	=	0x70dc
                           0070DD  1092 _X_T1CC1H	=	0x70dd
                           0070DE  1093 _X_T1CC2L	=	0x70de
                           0070DF  1094 _X_T1CC2H	=	0x70df
                           0070E1  1095 _X_RFST	=	0x70e1
                           0070E2  1096 _X_T1CNTL	=	0x70e2
                           0070E3  1097 _X_T1CNTH	=	0x70e3
                           0070E4  1098 _X_T1CTL	=	0x70e4
                           0070E5  1099 _X_T1CCTL0	=	0x70e5
                           0070E6  1100 _X_T1CCTL1	=	0x70e6
                           0070E7  1101 _X_T1CCTL2	=	0x70e7
                           0070E9  1102 _X_RFIRQF0	=	0x70e9
                           0070EA  1103 _X_T4CNT	=	0x70ea
                           0070EB  1104 _X_T4CTL	=	0x70eb
                           0070EC  1105 _X_T4CCTL0	=	0x70ec
                           0070ED  1106 _X_T4CC0	=	0x70ed
                           0070EE  1107 _X_T4CCTL1	=	0x70ee
                           0070EF  1108 _X_T4CC1	=	0x70ef
                           0070F1  1109 _X_PERCFG	=	0x70f1
                           0070F2  1110 _X_APCFG	=	0x70f2
                           0070F3  1111 _X_P0SEL	=	0x70f3
                           0070F4  1112 _X_P1SEL	=	0x70f4
                           0070F5  1113 _X_P2SEL	=	0x70f5
                           0070F6  1114 _X_P1INP	=	0x70f6
                           0070F7  1115 _X_P2INP	=	0x70f7
                           0070F8  1116 _X_U1CSR	=	0x70f8
                           0070F9  1117 _X_U1DBUF	=	0x70f9
                           0070FA  1118 _X_U1BAUD	=	0x70fa
                           0070FB  1119 _X_U1UCR	=	0x70fb
                           0070FC  1120 _X_U1GCR	=	0x70fc
                           0070FD  1121 _X_P0DIR	=	0x70fd
                           0070FE  1122 _X_P1DIR	=	0x70fe
                           0070FF  1123 _X_P2DIR	=	0x70ff
                           007800  1124 _X_INFOPAGE	=	0x7800
                           00780C  1125 _X_IEEE_ADDR	=	0x780c
      000000                       1126 _c:
      000000                       1127 	.ds 72
                                   1128 ;--------------------------------------------------------
                                   1129 ; absolute external ram data
                                   1130 ;--------------------------------------------------------
                                   1131 	.area XABS    (ABS,XDATA)
                                   1132 ;--------------------------------------------------------
                                   1133 ; external initialized ram data
                                   1134 ;--------------------------------------------------------
                                   1135 	.area XISEG   (XDATA)
                                   1136 	.area HOME    (CODE)
                                   1137 	.area GSINIT0 (CODE)
                                   1138 	.area GSINIT1 (CODE)
                                   1139 	.area GSINIT2 (CODE)
                                   1140 	.area GSINIT3 (CODE)
                                   1141 	.area GSINIT4 (CODE)
                                   1142 	.area GSINIT5 (CODE)
                                   1143 	.area GSINIT  (CODE)
                                   1144 	.area GSFINAL (CODE)
                                   1145 	.area CSEG    (CODE)
                                   1146 ;--------------------------------------------------------
                                   1147 ; global & static initialisations
                                   1148 ;--------------------------------------------------------
                                   1149 	.area HOME    (CODE)
                                   1150 	.area GSINIT  (CODE)
                                   1151 	.area GSFINAL (CODE)
                                   1152 	.area GSINIT  (CODE)
                                   1153 ;--------------------------------------------------------
                                   1154 ; Home
                                   1155 ;--------------------------------------------------------
                                   1156 	.area HOME    (CODE)
                                   1157 	.area HOME    (CODE)
                                   1158 ;--------------------------------------------------------
                                   1159 ; code
                                   1160 ;--------------------------------------------------------
                                   1161 	.area CSEG    (CODE)
                                   1162 ;------------------------------------------------------------
                                   1163 ;Allocation info for local variables in function 'send_adv'
                                   1164 ;------------------------------------------------------------
                                   1165 ;interval                  Allocated to stack - sp -10
                                   1166 ;adata                     Allocated to stack - sp -5
                                   1167 ;a                         Allocated to stack - sp -2
                                   1168 ;sloc0                     Allocated to stack - sp -8
                                   1169 ;------------------------------------------------------------
                                   1170 ;	../../core/net/rime/polite-announcement.c:97: send_adv(clock_time_t interval)
                                   1171 ;	-----------------------------------------
                                   1172 ;	 function send_adv
                                   1173 ;	-----------------------------------------
      000000                       1174 _send_adv:
                           000007  1175 	ar7 = 0x07
                           000006  1176 	ar6 = 0x06
                           000005  1177 	ar5 = 0x05
                           000004  1178 	ar4 = 0x04
                           000003  1179 	ar3 = 0x03
                           000002  1180 	ar2 = 0x02
                           000001  1181 	ar1 = 0x01
                           000000  1182 	ar0 = 0x00
      000000 C0 82            [24] 1183 	push	dpl
      000002 C0 83            [24] 1184 	push	dph
      000004 E5 81            [12] 1185 	mov	a,sp
      000006 24 09            [12] 1186 	add	a,#0x09
      000008 F5 81            [12] 1187 	mov	sp,a
                                   1188 ;	../../core/net/rime/polite-announcement.c:102: packetbuf_clear();
      00000A 12r00r00         [24] 1189 	lcall	_packetbuf_clear
                                   1190 ;	../../core/net/rime/polite-announcement.c:103: adata = packetbuf_dataptr();
      00000D 12r00r00         [24] 1191 	lcall	_packetbuf_dataptr
      000010 AB 82            [24] 1192 	mov	r3,dpl
      000012 AC 83            [24] 1193 	mov	r4,dph
      000014 AD F0            [24] 1194 	mov	r5,b
      000016 E5 81            [12] 1195 	mov	a,sp
      000018 24 FB            [12] 1196 	add	a,#0xfb
      00001A F8               [12] 1197 	mov	r0,a
      00001B A6 03            [24] 1198 	mov	@r0,ar3
      00001D 08               [12] 1199 	inc	r0
      00001E A6 04            [24] 1200 	mov	@r0,ar4
      000020 08               [12] 1201 	inc	r0
      000021 A6 05            [24] 1202 	mov	@r0,ar5
                                   1203 ;	../../core/net/rime/polite-announcement.c:104: adata->num = 0;
      000023 E5 81            [12] 1204 	mov	a,sp
      000025 24 FB            [12] 1205 	add	a,#0xfb
      000027 F8               [12] 1206 	mov	r0,a
      000028 86 82            [24] 1207 	mov	dpl,@r0
      00002A 08               [12] 1208 	inc	r0
      00002B 86 83            [24] 1209 	mov	dph,@r0
      00002D 08               [12] 1210 	inc	r0
      00002E 86 F0            [24] 1211 	mov	b,@r0
      000030 E4               [12] 1212 	clr	a
      000031 12r00r00         [24] 1213 	lcall	__gptrput
      000034 A3               [24] 1214 	inc	dptr
      000035 12r00r00         [24] 1215 	lcall	__gptrput
                                   1216 ;	../../core/net/rime/polite-announcement.c:105: for(a = announcement_list(); a != NULL; a = list_item_next(a)) {
      000038 12r00r00         [24] 1217 	lcall	_announcement_list
      00003B AA 82            [24] 1218 	mov	r2,dpl
      00003D AE 83            [24] 1219 	mov	r6,dph
      00003F AF F0            [24] 1220 	mov	r7,b
      000041 A8 81            [24] 1221 	mov	r0,sp
      000043 18               [12] 1222 	dec	r0
      000044 18               [12] 1223 	dec	r0
      000045 A6 02            [24] 1224 	mov	@r0,ar2
      000047 08               [12] 1225 	inc	r0
      000048 A6 06            [24] 1226 	mov	@r0,ar6
      00004A 08               [12] 1227 	inc	r0
      00004B A6 07            [24] 1228 	mov	@r0,ar7
      00004D E5 81            [12] 1229 	mov	a,sp
      00004F 24 FB            [12] 1230 	add	a,#0xfb
      000051 F8               [12] 1231 	mov	r0,a
      000052 74 02            [12] 1232 	mov	a,#0x02
      000054 26               [12] 1233 	add	a,@r0
      000055 FA               [12] 1234 	mov	r2,a
      000056 E4               [12] 1235 	clr	a
      000057 08               [12] 1236 	inc	r0
      000058 36               [12] 1237 	addc	a,@r0
      000059 FE               [12] 1238 	mov	r6,a
      00005A 08               [12] 1239 	inc	r0
      00005B 86 07            [24] 1240 	mov	ar7,@r0
      00005D                       1241 00105$:
      00005D A8 81            [24] 1242 	mov	r0,sp
      00005F 18               [12] 1243 	dec	r0
      000060 18               [12] 1244 	dec	r0
      000061 E6               [12] 1245 	mov	a,@r0
      000062 08               [12] 1246 	inc	r0
      000063 46               [12] 1247 	orl	a,@r0
      000064 70 03            [24] 1248 	jnz	00121$
      000066 02r01r9A         [24] 1249 	ljmp	00101$
      000069                       1250 00121$:
                                   1251 ;	../../core/net/rime/polite-announcement.c:106: adata->data[adata->num].id = a->id;
      000069 E5 81            [12] 1252 	mov	a,sp
      00006B 24 FB            [12] 1253 	add	a,#0xfb
      00006D F8               [12] 1254 	mov	r0,a
      00006E 86 82            [24] 1255 	mov	dpl,@r0
      000070 08               [12] 1256 	inc	r0
      000071 86 83            [24] 1257 	mov	dph,@r0
      000073 08               [12] 1258 	inc	r0
      000074 86 F0            [24] 1259 	mov	b,@r0
      000076 12r00r00         [24] 1260 	lcall	__gptrget
      000079 FC               [12] 1261 	mov	r4,a
      00007A A3               [24] 1262 	inc	dptr
      00007B 12r00r00         [24] 1263 	lcall	__gptrget
      00007E FD               [12] 1264 	mov	r5,a
      00007F EC               [12] 1265 	mov	a,r4
      000080 2C               [12] 1266 	add	a,r4
      000081 FC               [12] 1267 	mov	r4,a
      000082 ED               [12] 1268 	mov	a,r5
      000083 33               [12] 1269 	rlc	a
      000084 FD               [12] 1270 	mov	r5,a
      000085 EC               [12] 1271 	mov	a,r4
      000086 2C               [12] 1272 	add	a,r4
      000087 FC               [12] 1273 	mov	r4,a
      000088 ED               [12] 1274 	mov	a,r5
      000089 33               [12] 1275 	rlc	a
      00008A FD               [12] 1276 	mov	r5,a
      00008B E5 81            [12] 1277 	mov	a,sp
      00008D 24 F8            [12] 1278 	add	a,#0xf8
      00008F F8               [12] 1279 	mov	r0,a
      000090 EC               [12] 1280 	mov	a,r4
      000091 2A               [12] 1281 	add	a,r2
      000092 F6               [12] 1282 	mov	@r0,a
      000093 ED               [12] 1283 	mov	a,r5
      000094 3E               [12] 1284 	addc	a,r6
      000095 08               [12] 1285 	inc	r0
      000096 F6               [12] 1286 	mov	@r0,a
      000097 08               [12] 1287 	inc	r0
      000098 A6 07            [24] 1288 	mov	@r0,ar7
      00009A A8 81            [24] 1289 	mov	r0,sp
      00009C 18               [12] 1290 	dec	r0
      00009D 18               [12] 1291 	dec	r0
      00009E 74 03            [12] 1292 	mov	a,#0x03
      0000A0 26               [12] 1293 	add	a,@r0
      0000A1 FC               [12] 1294 	mov	r4,a
      0000A2 E4               [12] 1295 	clr	a
      0000A3 08               [12] 1296 	inc	r0
      0000A4 36               [12] 1297 	addc	a,@r0
      0000A5 FB               [12] 1298 	mov	r3,a
      0000A6 08               [12] 1299 	inc	r0
      0000A7 86 05            [24] 1300 	mov	ar5,@r0
      0000A9 8C 82            [24] 1301 	mov	dpl,r4
      0000AB 8B 83            [24] 1302 	mov	dph,r3
      0000AD 8D F0            [24] 1303 	mov	b,r5
      0000AF 12r00r00         [24] 1304 	lcall	__gptrget
      0000B2 FC               [12] 1305 	mov	r4,a
      0000B3 A3               [24] 1306 	inc	dptr
      0000B4 12r00r00         [24] 1307 	lcall	__gptrget
      0000B7 FB               [12] 1308 	mov	r3,a
      0000B8 E5 81            [12] 1309 	mov	a,sp
      0000BA 24 F8            [12] 1310 	add	a,#0xf8
      0000BC F8               [12] 1311 	mov	r0,a
      0000BD 86 82            [24] 1312 	mov	dpl,@r0
      0000BF 08               [12] 1313 	inc	r0
      0000C0 86 83            [24] 1314 	mov	dph,@r0
      0000C2 08               [12] 1315 	inc	r0
      0000C3 86 F0            [24] 1316 	mov	b,@r0
      0000C5 EC               [12] 1317 	mov	a,r4
      0000C6 12r00r00         [24] 1318 	lcall	__gptrput
      0000C9 A3               [24] 1319 	inc	dptr
      0000CA EB               [12] 1320 	mov	a,r3
      0000CB 12r00r00         [24] 1321 	lcall	__gptrput
                                   1322 ;	../../core/net/rime/polite-announcement.c:107: adata->data[adata->num].value = a->value;
      0000CE E5 81            [12] 1323 	mov	a,sp
      0000D0 24 FB            [12] 1324 	add	a,#0xfb
      0000D2 F8               [12] 1325 	mov	r0,a
      0000D3 86 82            [24] 1326 	mov	dpl,@r0
      0000D5 08               [12] 1327 	inc	r0
      0000D6 86 83            [24] 1328 	mov	dph,@r0
      0000D8 08               [12] 1329 	inc	r0
      0000D9 86 F0            [24] 1330 	mov	b,@r0
      0000DB 12r00r00         [24] 1331 	lcall	__gptrget
      0000DE FC               [12] 1332 	mov	r4,a
      0000DF A3               [24] 1333 	inc	dptr
      0000E0 12r00r00         [24] 1334 	lcall	__gptrget
      0000E3 FD               [12] 1335 	mov	r5,a
      0000E4 EC               [12] 1336 	mov	a,r4
      0000E5 2C               [12] 1337 	add	a,r4
      0000E6 FC               [12] 1338 	mov	r4,a
      0000E7 ED               [12] 1339 	mov	a,r5
      0000E8 33               [12] 1340 	rlc	a
      0000E9 FD               [12] 1341 	mov	r5,a
      0000EA EC               [12] 1342 	mov	a,r4
      0000EB 2C               [12] 1343 	add	a,r4
      0000EC FC               [12] 1344 	mov	r4,a
      0000ED ED               [12] 1345 	mov	a,r5
      0000EE 33               [12] 1346 	rlc	a
      0000EF FD               [12] 1347 	mov	r5,a
      0000F0 EC               [12] 1348 	mov	a,r4
      0000F1 2A               [12] 1349 	add	a,r2
      0000F2 FC               [12] 1350 	mov	r4,a
      0000F3 ED               [12] 1351 	mov	a,r5
      0000F4 3E               [12] 1352 	addc	a,r6
      0000F5 FD               [12] 1353 	mov	r5,a
      0000F6 8F 03            [24] 1354 	mov	ar3,r7
      0000F8 74 02            [12] 1355 	mov	a,#0x02
      0000FA 2C               [12] 1356 	add	a,r4
      0000FB FC               [12] 1357 	mov	r4,a
      0000FC E4               [12] 1358 	clr	a
      0000FD 3D               [12] 1359 	addc	a,r5
      0000FE FD               [12] 1360 	mov	r5,a
      0000FF C0 02            [24] 1361 	push	ar2
      000101 C0 06            [24] 1362 	push	ar6
      000103 C0 07            [24] 1363 	push	ar7
      000105 E5 81            [12] 1364 	mov	a,sp
      000107 24 FB            [12] 1365 	add	a,#0xfb
      000109 F8               [12] 1366 	mov	r0,a
      00010A 74 05            [12] 1367 	mov	a,#0x05
      00010C 26               [12] 1368 	add	a,@r0
      00010D FA               [12] 1369 	mov	r2,a
      00010E E4               [12] 1370 	clr	a
      00010F 08               [12] 1371 	inc	r0
      000110 36               [12] 1372 	addc	a,@r0
      000111 FE               [12] 1373 	mov	r6,a
      000112 08               [12] 1374 	inc	r0
      000113 86 07            [24] 1375 	mov	ar7,@r0
      000115 8A 82            [24] 1376 	mov	dpl,r2
      000117 8E 83            [24] 1377 	mov	dph,r6
      000119 8F F0            [24] 1378 	mov	b,r7
      00011B 12r00r00         [24] 1379 	lcall	__gptrget
      00011E FA               [12] 1380 	mov	r2,a
      00011F A3               [24] 1381 	inc	dptr
      000120 12r00r00         [24] 1382 	lcall	__gptrget
      000123 FE               [12] 1383 	mov	r6,a
      000124 8C 82            [24] 1384 	mov	dpl,r4
      000126 8D 83            [24] 1385 	mov	dph,r5
      000128 8B F0            [24] 1386 	mov	b,r3
      00012A EA               [12] 1387 	mov	a,r2
      00012B 12r00r00         [24] 1388 	lcall	__gptrput
      00012E A3               [24] 1389 	inc	dptr
      00012F EE               [12] 1390 	mov	a,r6
      000130 12r00r00         [24] 1391 	lcall	__gptrput
                                   1392 ;	../../core/net/rime/polite-announcement.c:108: adata->num++;
      000133 E5 81            [12] 1393 	mov	a,sp
      000135 24 F8            [12] 1394 	add	a,#0xf8
      000137 F8               [12] 1395 	mov	r0,a
      000138 86 82            [24] 1396 	mov	dpl,@r0
      00013A 08               [12] 1397 	inc	r0
      00013B 86 83            [24] 1398 	mov	dph,@r0
      00013D 08               [12] 1399 	inc	r0
      00013E 86 F0            [24] 1400 	mov	b,@r0
      000140 12r00r00         [24] 1401 	lcall	__gptrget
      000143 FE               [12] 1402 	mov	r6,a
      000144 A3               [24] 1403 	inc	dptr
      000145 12r00r00         [24] 1404 	lcall	__gptrget
      000148 FF               [12] 1405 	mov	r7,a
      000149 0E               [12] 1406 	inc	r6
      00014A BE 00 01         [24] 1407 	cjne	r6,#0x00,00122$
      00014D 0F               [12] 1408 	inc	r7
      00014E                       1409 00122$:
      00014E E5 81            [12] 1410 	mov	a,sp
      000150 24 F8            [12] 1411 	add	a,#0xf8
      000152 F8               [12] 1412 	mov	r0,a
      000153 86 82            [24] 1413 	mov	dpl,@r0
      000155 08               [12] 1414 	inc	r0
      000156 86 83            [24] 1415 	mov	dph,@r0
      000158 08               [12] 1416 	inc	r0
      000159 86 F0            [24] 1417 	mov	b,@r0
      00015B EE               [12] 1418 	mov	a,r6
      00015C 12r00r00         [24] 1419 	lcall	__gptrput
      00015F A3               [24] 1420 	inc	dptr
      000160 EF               [12] 1421 	mov	a,r7
      000161 12r00r00         [24] 1422 	lcall	__gptrput
                                   1423 ;	../../core/net/rime/polite-announcement.c:105: for(a = announcement_list(); a != NULL; a = list_item_next(a)) {
      000164 E5 81            [12] 1424 	mov	a,sp
      000166 24 FB            [12] 1425 	add	a,#0xfb
      000168 F8               [12] 1426 	mov	r0,a
      000169 86 02            [24] 1427 	mov	ar2,@r0
      00016B 08               [12] 1428 	inc	r0
      00016C 86 06            [24] 1429 	mov	ar6,@r0
      00016E 08               [12] 1430 	inc	r0
      00016F 86 07            [24] 1431 	mov	ar7,@r0
      000171 8A 82            [24] 1432 	mov	dpl,r2
      000173 8E 83            [24] 1433 	mov	dph,r6
      000175 8F F0            [24] 1434 	mov	b,r7
      000177 C0 02            [24] 1435 	push	ar2
      000179 12r00r00         [24] 1436 	lcall	_list_item_next
      00017C AD 82            [24] 1437 	mov	r5,dpl
      00017E AE 83            [24] 1438 	mov	r6,dph
      000180 AF F0            [24] 1439 	mov	r7,b
      000182 D0 02            [24] 1440 	pop	ar2
      000184 E5 81            [12] 1441 	mov	a,sp
      000186 24 FB            [12] 1442 	add	a,#0xfb
      000188 F8               [12] 1443 	mov	r0,a
      000189 A6 05            [24] 1444 	mov	@r0,ar5
      00018B 08               [12] 1445 	inc	r0
      00018C A6 06            [24] 1446 	mov	@r0,ar6
      00018E 08               [12] 1447 	inc	r0
      00018F A6 07            [24] 1448 	mov	@r0,ar7
      000191 D0 07            [24] 1449 	pop	ar7
      000193 D0 06            [24] 1450 	pop	ar6
      000195 D0 02            [24] 1451 	pop	ar2
      000197 02r00r5D         [24] 1452 	ljmp	00105$
      00019A                       1453 00101$:
                                   1454 ;	../../core/net/rime/polite-announcement.c:112: sizeof(struct announcement_data) * adata->num);
      00019A E5 81            [12] 1455 	mov	a,sp
      00019C 24 FB            [12] 1456 	add	a,#0xfb
      00019E F8               [12] 1457 	mov	r0,a
      00019F 86 82            [24] 1458 	mov	dpl,@r0
      0001A1 08               [12] 1459 	inc	r0
      0001A2 86 83            [24] 1460 	mov	dph,@r0
      0001A4 08               [12] 1461 	inc	r0
      0001A5 86 F0            [24] 1462 	mov	b,@r0
      0001A7 12r00r00         [24] 1463 	lcall	__gptrget
      0001AA FE               [12] 1464 	mov	r6,a
      0001AB A3               [24] 1465 	inc	dptr
      0001AC 12r00r00         [24] 1466 	lcall	__gptrget
      0001AF FF               [12] 1467 	mov	r7,a
      0001B0 EE               [12] 1468 	mov	a,r6
      0001B1 2E               [12] 1469 	add	a,r6
      0001B2 FE               [12] 1470 	mov	r6,a
      0001B3 EF               [12] 1471 	mov	a,r7
      0001B4 33               [12] 1472 	rlc	a
      0001B5 FF               [12] 1473 	mov	r7,a
      0001B6 EE               [12] 1474 	mov	a,r6
      0001B7 2E               [12] 1475 	add	a,r6
      0001B8 FE               [12] 1476 	mov	r6,a
      0001B9 EF               [12] 1477 	mov	a,r7
      0001BA 33               [12] 1478 	rlc	a
      0001BB FF               [12] 1479 	mov	r7,a
      0001BC 74 02            [12] 1480 	mov	a,#0x02
      0001BE 2E               [12] 1481 	add	a,r6
      0001BF FE               [12] 1482 	mov	r6,a
      0001C0 E4               [12] 1483 	clr	a
      0001C1 3F               [12] 1484 	addc	a,r7
      0001C2 FF               [12] 1485 	mov	r7,a
      0001C3 8E 82            [24] 1486 	mov	dpl,r6
      0001C5 8F 83            [24] 1487 	mov	dph,r7
      0001C7 12r00r00         [24] 1488 	lcall	_packetbuf_set_datalen
                                   1489 ;	../../core/net/rime/polite-announcement.c:117: if(adata->num > 0) {
      0001CA E5 81            [12] 1490 	mov	a,sp
      0001CC 24 FB            [12] 1491 	add	a,#0xfb
      0001CE F8               [12] 1492 	mov	r0,a
      0001CF 86 82            [24] 1493 	mov	dpl,@r0
      0001D1 08               [12] 1494 	inc	r0
      0001D2 86 83            [24] 1495 	mov	dph,@r0
      0001D4 08               [12] 1496 	inc	r0
      0001D5 86 F0            [24] 1497 	mov	b,@r0
      0001D7 12r00r00         [24] 1498 	lcall	__gptrget
      0001DA FE               [12] 1499 	mov	r6,a
      0001DB A3               [24] 1500 	inc	dptr
      0001DC 12r00r00         [24] 1501 	lcall	__gptrget
      0001DF 4E               [12] 1502 	orl	a,r6
      0001E0 60 22            [24] 1503 	jz	00107$
                                   1504 ;	../../core/net/rime/polite-announcement.c:119: ipolite_send(&c.c, interval, packetbuf_datalen());
      0001E2 12r00r00         [24] 1505 	lcall	_packetbuf_datalen
      0001E5 AE 82            [24] 1506 	mov	r6,dpl
      0001E7 C0 06            [24] 1507 	push	ar6
      0001E9 E5 81            [12] 1508 	mov	a,sp
      0001EB 24 F5            [12] 1509 	add	a,#0xf5
      0001ED F8               [12] 1510 	mov	r0,a
      0001EE E6               [12] 1511 	mov	a,@r0
      0001EF C0 E0            [24] 1512 	push	acc
      0001F1 08               [12] 1513 	inc	r0
      0001F2 E6               [12] 1514 	mov	a,@r0
      0001F3 C0 E0            [24] 1515 	push	acc
      0001F5 90r00r00         [24] 1516 	mov	dptr,#_c
      0001F8 75 F0 00         [24] 1517 	mov	b,#0x00
      0001FB 12r00r00         [24] 1518 	lcall	_ipolite_send
      0001FE 15 81            [12] 1519 	dec	sp
      000200 15 81            [12] 1520 	dec	sp
      000202 15 81            [12] 1521 	dec	sp
      000204                       1522 00107$:
                                   1523 ;	../../core/net/rime/polite-announcement.c:121: }
      000204 E5 81            [12] 1524 	mov	a,sp
      000206 24 F5            [12] 1525 	add	a,#0xf5
      000208 F5 81            [12] 1526 	mov	sp,a
      00020A 22               [24] 1527 	ret
                                   1528 ;------------------------------------------------------------
                                   1529 ;Allocation info for local variables in function 'adv_packet_received'
                                   1530 ;------------------------------------------------------------
                                   1531 ;from                      Allocated to stack - sp -20
                                   1532 ;ipolite                   Allocated to registers 
                                   1533 ;adata                     Allocated to stack - sp -7
                                   1534 ;data                      Allocated to stack - sp -5
                                   1535 ;ptr                       Allocated to registers 
                                   1536 ;i                         Allocated to stack - sp -1
                                   1537 ;sloc0                     Allocated to stack - sp -15
                                   1538 ;sloc1                     Allocated to stack - sp -12
                                   1539 ;sloc2                     Allocated to stack - sp -10
                                   1540 ;------------------------------------------------------------
                                   1541 ;	../../core/net/rime/polite-announcement.c:124: adv_packet_received(struct ipolite_conn *ipolite, const rimeaddr_t *from)
                                   1542 ;	-----------------------------------------
                                   1543 ;	 function adv_packet_received
                                   1544 ;	-----------------------------------------
      00020B                       1545 _adv_packet_received:
      00020B E5 81            [12] 1546 	mov	a,sp
      00020D 24 10            [12] 1547 	add	a,#0x10
      00020F F5 81            [12] 1548 	mov	sp,a
                                   1549 ;	../../core/net/rime/polite-announcement.c:131: ptr = packetbuf_dataptr();
      000211 12r00r00         [24] 1550 	lcall	_packetbuf_dataptr
      000214 AD 82            [24] 1551 	mov	r5,dpl
      000216 AE 83            [24] 1552 	mov	r6,dph
      000218 AF F0            [24] 1553 	mov	r7,b
                                   1554 ;	../../core/net/rime/polite-announcement.c:134: memcpy(&adata, ptr, sizeof(struct announcement_msg));
      00021A E5 81            [12] 1555 	mov	a,sp
      00021C 24 F1            [12] 1556 	add	a,#0xf1
      00021E F8               [12] 1557 	mov	r0,a
      00021F A6 05            [24] 1558 	mov	@r0,ar5
      000221 08               [12] 1559 	inc	r0
      000222 A6 06            [24] 1560 	mov	@r0,ar6
      000224 08               [12] 1561 	inc	r0
      000225 A6 07            [24] 1562 	mov	@r0,ar7
      000227 E5 81            [12] 1563 	mov	a,sp
      000229 24 F9            [12] 1564 	add	a,#0xf9
      00022B F9               [12] 1565 	mov	r1,a
      00022C FA               [12] 1566 	mov	r2,a
      00022D 7B 00            [12] 1567 	mov	r3,#0x00
      00022F 7C 40            [12] 1568 	mov	r4,#0x40
      000231 C0 07            [24] 1569 	push	ar7
      000233 C0 06            [24] 1570 	push	ar6
      000235 C0 05            [24] 1571 	push	ar5
      000237 C0 01            [24] 1572 	push	ar1
      000239 74 02            [12] 1573 	mov	a,#0x02
      00023B C0 E0            [24] 1574 	push	acc
      00023D E4               [12] 1575 	clr	a
      00023E C0 E0            [24] 1576 	push	acc
      000240 E5 81            [12] 1577 	mov	a,sp
      000242 24 EB            [12] 1578 	add	a,#0xeb
      000244 F8               [12] 1579 	mov	r0,a
      000245 E6               [12] 1580 	mov	a,@r0
      000246 C0 E0            [24] 1581 	push	acc
      000248 08               [12] 1582 	inc	r0
      000249 E6               [12] 1583 	mov	a,@r0
      00024A C0 E0            [24] 1584 	push	acc
      00024C 08               [12] 1585 	inc	r0
      00024D E6               [12] 1586 	mov	a,@r0
      00024E C0 E0            [24] 1587 	push	acc
      000250 8A 82            [24] 1588 	mov	dpl,r2
      000252 8B 83            [24] 1589 	mov	dph,r3
      000254 8C F0            [24] 1590 	mov	b,r4
      000256 12r00r00         [24] 1591 	lcall	___memcpy
      000259 E5 81            [12] 1592 	mov	a,sp
      00025B 24 FB            [12] 1593 	add	a,#0xfb
      00025D F5 81            [12] 1594 	mov	sp,a
      00025F D0 01            [24] 1595 	pop	ar1
                                   1596 ;	../../core/net/rime/polite-announcement.c:139: if(ANNOUNCEMENT_MSG_HEADERLEN + adata.num * sizeof(struct announcement_data) > packetbuf_datalen()) {
      000261 87 03            [24] 1597 	mov	ar3,@r1
      000263 09               [12] 1598 	inc	r1
      000264 87 04            [24] 1599 	mov	ar4,@r1
      000266 19               [12] 1600 	dec	r1
      000267 EB               [12] 1601 	mov	a,r3
      000268 2B               [12] 1602 	add	a,r3
      000269 FB               [12] 1603 	mov	r3,a
      00026A EC               [12] 1604 	mov	a,r4
      00026B 33               [12] 1605 	rlc	a
      00026C FC               [12] 1606 	mov	r4,a
      00026D EB               [12] 1607 	mov	a,r3
      00026E 2B               [12] 1608 	add	a,r3
      00026F FB               [12] 1609 	mov	r3,a
      000270 EC               [12] 1610 	mov	a,r4
      000271 33               [12] 1611 	rlc	a
      000272 FC               [12] 1612 	mov	r4,a
      000273 74 02            [12] 1613 	mov	a,#0x02
      000275 2B               [12] 1614 	add	a,r3
      000276 FB               [12] 1615 	mov	r3,a
      000277 E4               [12] 1616 	clr	a
      000278 3C               [12] 1617 	addc	a,r4
      000279 FC               [12] 1618 	mov	r4,a
      00027A C0 04            [24] 1619 	push	ar4
      00027C C0 03            [24] 1620 	push	ar3
      00027E C0 01            [24] 1621 	push	ar1
      000280 12r00r00         [24] 1622 	lcall	_packetbuf_datalen
      000283 C8               [12] 1623 	xch	a,r0
      000284 E5 81            [12] 1624 	mov	a,sp
      000286 24 EE            [12] 1625 	add	a,#0xee
      000288 C8               [12] 1626 	xch	a,r0
      000289 A6 82            [24] 1627 	mov	@r0,dpl
      00028B 08               [12] 1628 	inc	r0
      00028C A6 83            [24] 1629 	mov	@r0,dph
      00028E D0 01            [24] 1630 	pop	ar1
      000290 D0 03            [24] 1631 	pop	ar3
      000292 D0 04            [24] 1632 	pop	ar4
      000294 D0 05            [24] 1633 	pop	ar5
      000296 D0 06            [24] 1634 	pop	ar6
      000298 D0 07            [24] 1635 	pop	ar7
      00029A E5 81            [12] 1636 	mov	a,sp
      00029C 24 F4            [12] 1637 	add	a,#0xf4
      00029E F8               [12] 1638 	mov	r0,a
      00029F C3               [12] 1639 	clr	c
      0002A0 E6               [12] 1640 	mov	a,@r0
      0002A1 9B               [12] 1641 	subb	a,r3
      0002A2 08               [12] 1642 	inc	r0
      0002A3 E6               [12] 1643 	mov	a,@r0
      0002A4 9C               [12] 1644 	subb	a,r4
      0002A5 50 03            [24] 1645 	jnc	00102$
                                   1646 ;	../../core/net/rime/polite-announcement.c:143: return;
      0002A7 02r03rCD         [24] 1647 	ljmp	00107$
      0002AA                       1648 00102$:
                                   1649 ;	../../core/net/rime/polite-announcement.c:146: ptr += ANNOUNCEMENT_MSG_HEADERLEN;
      0002AA 74 02            [12] 1650 	mov	a,#0x02
      0002AC 2D               [12] 1651 	add	a,r5
      0002AD FD               [12] 1652 	mov	r5,a
      0002AE E4               [12] 1653 	clr	a
      0002AF 3E               [12] 1654 	addc	a,r6
      0002B0 FE               [12] 1655 	mov	r6,a
                                   1656 ;	../../core/net/rime/polite-announcement.c:147: for(i = 0; i < adata.num; ++i) {
      0002B1 E5 81            [12] 1657 	mov	a,sp
      0002B3 24 FB            [12] 1658 	add	a,#0xfb
      0002B5 F8               [12] 1659 	mov	r0,a
      0002B6 C0 01            [24] 1660 	push	ar1
      0002B8 E5 81            [12] 1661 	mov	a,sp
      0002BA 24 F0            [12] 1662 	add	a,#0xf0
      0002BC F9               [12] 1663 	mov	r1,a
      0002BD 74 02            [12] 1664 	mov	a,#0x02
      0002BF 28               [12] 1665 	add	a,r0
      0002C0 F7               [12] 1666 	mov	@r1,a
      0002C1 D0 01            [24] 1667 	pop	ar1
      0002C3 C0 00            [24] 1668 	push	ar0
      0002C5 A8 81            [24] 1669 	mov	r0,sp
      0002C7 18               [12] 1670 	dec	r0
      0002C8 18               [12] 1671 	dec	r0
      0002C9 E4               [12] 1672 	clr	a
      0002CA F6               [12] 1673 	mov	@r0,a
      0002CB 08               [12] 1674 	inc	r0
      0002CC F6               [12] 1675 	mov	@r0,a
      0002CD D0 00            [24] 1676 	pop	ar0
      0002CF                       1677 00105$:
      0002CF C0 00            [24] 1678 	push	ar0
      0002D1 E5 81            [12] 1679 	mov	a,sp
      0002D3 24 F3            [12] 1680 	add	a,#0xf3
      0002D5 F8               [12] 1681 	mov	r0,a
      0002D6 E7               [12] 1682 	mov	a,@r1
      0002D7 F6               [12] 1683 	mov	@r0,a
      0002D8 09               [12] 1684 	inc	r1
      0002D9 E7               [12] 1685 	mov	a,@r1
      0002DA 08               [12] 1686 	inc	r0
      0002DB F6               [12] 1687 	mov	@r0,a
      0002DC 19               [12] 1688 	dec	r1
      0002DD A8 81            [24] 1689 	mov	r0,sp
      0002DF 18               [12] 1690 	dec	r0
      0002E0 18               [12] 1691 	dec	r0
      0002E1 86 02            [24] 1692 	mov	ar2,@r0
      0002E3 08               [12] 1693 	inc	r0
      0002E4 86 04            [24] 1694 	mov	ar4,@r0
      0002E6 E5 81            [12] 1695 	mov	a,sp
      0002E8 24 F3            [12] 1696 	add	a,#0xf3
      0002EA F8               [12] 1697 	mov	r0,a
      0002EB C3               [12] 1698 	clr	c
      0002EC EA               [12] 1699 	mov	a,r2
      0002ED 96               [12] 1700 	subb	a,@r0
      0002EE EC               [12] 1701 	mov	a,r4
      0002EF 08               [12] 1702 	inc	r0
      0002F0 96               [12] 1703 	subb	a,@r0
      0002F1 D0 00            [24] 1704 	pop	ar0
      0002F3 40 03            [24] 1705 	jc	00126$
      0002F5 02r03rCD         [24] 1706 	ljmp	00107$
      0002F8                       1707 00126$:
                                   1708 ;	../../core/net/rime/polite-announcement.c:149: memcpy(&data, ptr, sizeof(struct announcement_data));
      0002F8 C0 01            [24] 1709 	push	ar1
      0002FA C0 00            [24] 1710 	push	ar0
      0002FC E5 81            [12] 1711 	mov	a,sp
      0002FE 24 F4            [12] 1712 	add	a,#0xf4
      000300 F8               [12] 1713 	mov	r0,a
      000301 A6 05            [24] 1714 	mov	@r0,ar5
      000303 08               [12] 1715 	inc	r0
      000304 A6 06            [24] 1716 	mov	@r0,ar6
      000306 08               [12] 1717 	inc	r0
      000307 A6 07            [24] 1718 	mov	@r0,ar7
      000309 D0 00            [24] 1719 	pop	ar0
      00030B 88 02            [24] 1720 	mov	ar2,r0
      00030D 7B 00            [12] 1721 	mov	r3,#0x00
      00030F 7C 40            [12] 1722 	mov	r4,#0x40
      000311 C0 07            [24] 1723 	push	ar7
      000313 C0 06            [24] 1724 	push	ar6
      000315 C0 05            [24] 1725 	push	ar5
      000317 C0 01            [24] 1726 	push	ar1
      000319 C0 00            [24] 1727 	push	ar0
      00031B 74 04            [12] 1728 	mov	a,#0x04
      00031D C0 E0            [24] 1729 	push	acc
      00031F E4               [12] 1730 	clr	a
      000320 C0 E0            [24] 1731 	push	acc
      000322 85 00 F0         [24] 1732 	mov	b,ar0
      000325 E5 81            [12] 1733 	mov	a,sp
      000327 24 EE            [12] 1734 	add	a,#0xee
      000329 F8               [12] 1735 	mov	r0,a
      00032A E6               [12] 1736 	mov	a,@r0
      00032B C0 E0            [24] 1737 	push	acc
      00032D 08               [12] 1738 	inc	r0
      00032E E6               [12] 1739 	mov	a,@r0
      00032F C0 E0            [24] 1740 	push	acc
      000331 08               [12] 1741 	inc	r0
      000332 E6               [12] 1742 	mov	a,@r0
      000333 C0 E0            [24] 1743 	push	acc
      000335 8A 82            [24] 1744 	mov	dpl,r2
      000337 8B 83            [24] 1745 	mov	dph,r3
      000339 8C F0            [24] 1746 	mov	b,r4
      00033B 12r00r00         [24] 1747 	lcall	___memcpy
      00033E E5 81            [12] 1748 	mov	a,sp
      000340 24 FB            [12] 1749 	add	a,#0xfb
      000342 F5 81            [12] 1750 	mov	sp,a
      000344 D0 00            [24] 1751 	pop	ar0
      000346 D0 01            [24] 1752 	pop	ar1
      000348 D0 05            [24] 1753 	pop	ar5
      00034A D0 06            [24] 1754 	pop	ar6
      00034C D0 07            [24] 1755 	pop	ar7
                                   1756 ;	../../core/net/rime/polite-announcement.c:150: announcement_heard(from, data.id, data.value);
      00034E C0 00            [24] 1757 	push	ar0
      000350 E5 81            [12] 1758 	mov	a,sp
      000352 24 EF            [12] 1759 	add	a,#0xef
      000354 F8               [12] 1760 	mov	r0,a
      000355 C0 01            [24] 1761 	push	ar1
      000357 E5 81            [12] 1762 	mov	a,sp
      000359 24 F3            [12] 1763 	add	a,#0xf3
      00035B F9               [12] 1764 	mov	r1,a
      00035C 86 00            [24] 1765 	mov	ar0,@r0
      00035E E6               [12] 1766 	mov	a,@r0
      00035F F7               [12] 1767 	mov	@r1,a
      000360 08               [12] 1768 	inc	r0
      000361 E6               [12] 1769 	mov	a,@r0
      000362 09               [12] 1770 	inc	r1
      000363 F7               [12] 1771 	mov	@r1,a
      000364 18               [12] 1772 	dec	r0
      000365 D0 01            [24] 1773 	pop	ar1
      000367 D0 00            [24] 1774 	pop	ar0
      000369 86 02            [24] 1775 	mov	ar2,@r0
      00036B 08               [12] 1776 	inc	r0
      00036C 86 04            [24] 1777 	mov	ar4,@r0
      00036E 18               [12] 1778 	dec	r0
      00036F C0 07            [24] 1779 	push	ar7
      000371 C0 06            [24] 1780 	push	ar6
      000373 C0 05            [24] 1781 	push	ar5
      000375 C0 01            [24] 1782 	push	ar1
      000377 C0 00            [24] 1783 	push	ar0
      000379 85 00 F0         [24] 1784 	mov	b,ar0
      00037C E5 81            [12] 1785 	mov	a,sp
      00037E 24 F0            [12] 1786 	add	a,#0xf0
      000380 F8               [12] 1787 	mov	r0,a
      000381 E6               [12] 1788 	mov	a,@r0
      000382 C0 E0            [24] 1789 	push	acc
      000384 08               [12] 1790 	inc	r0
      000385 E6               [12] 1791 	mov	a,@r0
      000386 C0 E0            [24] 1792 	push	acc
      000388 A8 F0            [24] 1793 	mov	r0,b
      00038A C0 02            [24] 1794 	push	ar2
      00038C C0 04            [24] 1795 	push	ar4
      00038E C0 00            [24] 1796 	push	ar0
      000390 E5 81            [12] 1797 	mov	a,sp
      000392 24 E1            [12] 1798 	add	a,#0xe1
      000394 F8               [12] 1799 	mov	r0,a
      000395 86 82            [24] 1800 	mov	dpl,@r0
      000397 08               [12] 1801 	inc	r0
      000398 86 83            [24] 1802 	mov	dph,@r0
      00039A 08               [12] 1803 	inc	r0
      00039B 86 F0            [24] 1804 	mov	b,@r0
      00039D D0 00            [24] 1805 	pop	ar0
      00039F 12r00r00         [24] 1806 	lcall	_announcement_heard
      0003A2 E5 81            [12] 1807 	mov	a,sp
      0003A4 24 FC            [12] 1808 	add	a,#0xfc
      0003A6 F5 81            [12] 1809 	mov	sp,a
      0003A8 D0 00            [24] 1810 	pop	ar0
      0003AA D0 01            [24] 1811 	pop	ar1
      0003AC D0 05            [24] 1812 	pop	ar5
      0003AE D0 06            [24] 1813 	pop	ar6
      0003B0 D0 07            [24] 1814 	pop	ar7
                                   1815 ;	../../core/net/rime/polite-announcement.c:151: ptr += sizeof(struct announcement_data);
      0003B2 74 04            [12] 1816 	mov	a,#0x04
      0003B4 2D               [12] 1817 	add	a,r5
      0003B5 FD               [12] 1818 	mov	r5,a
      0003B6 E4               [12] 1819 	clr	a
      0003B7 3E               [12] 1820 	addc	a,r6
      0003B8 FE               [12] 1821 	mov	r6,a
                                   1822 ;	../../core/net/rime/polite-announcement.c:147: for(i = 0; i < adata.num; ++i) {
      0003B9 C0 00            [24] 1823 	push	ar0
      0003BB E5 81            [12] 1824 	mov	a,sp
      0003BD 24 FD            [12] 1825 	add	a,#0xfd
      0003BF F8               [12] 1826 	mov	r0,a
      0003C0 06               [12] 1827 	inc	@r0
      0003C1 B6 00 02         [24] 1828 	cjne	@r0,#0x00,00127$
      0003C4 08               [12] 1829 	inc	r0
      0003C5 06               [12] 1830 	inc	@r0
      0003C6                       1831 00127$:
      0003C6 D0 00            [24] 1832 	pop	ar0
      0003C8 D0 01            [24] 1833 	pop	ar1
      0003CA 02r02rCF         [24] 1834 	ljmp	00105$
      0003CD                       1835 00107$:
                                   1836 ;	../../core/net/rime/polite-announcement.c:153: }
      0003CD E5 81            [12] 1837 	mov	a,sp
      0003CF 24 F0            [12] 1838 	add	a,#0xf0
      0003D1 F5 81            [12] 1839 	mov	sp,a
      0003D3 22               [24] 1840 	ret
                                   1841 ;------------------------------------------------------------
                                   1842 ;Allocation info for local variables in function 'send_timer'
                                   1843 ;------------------------------------------------------------
                                   1844 ;ptr                       Allocated to registers 
                                   1845 ;------------------------------------------------------------
                                   1846 ;	../../core/net/rime/polite-announcement.c:156: send_timer(void *ptr)
                                   1847 ;	-----------------------------------------
                                   1848 ;	 function send_timer
                                   1849 ;	-----------------------------------------
      0003D4                       1850 _send_timer:
                                   1851 ;	../../core/net/rime/polite-announcement.c:158: send_adv(c.interval);
      0003D4 90r00r42         [24] 1852 	mov	dptr,#(_c + 0x0042)
      0003D7 E0               [24] 1853 	movx	a,@dptr
      0003D8 FE               [12] 1854 	mov	r6,a
      0003D9 A3               [24] 1855 	inc	dptr
      0003DA E0               [24] 1856 	movx	a,@dptr
      0003DB FF               [12] 1857 	mov	r7,a
      0003DC 8E 82            [24] 1858 	mov	dpl,r6
      0003DE 8F 83            [24] 1859 	mov	dph,r7
      0003E0 12r00r00         [24] 1860 	lcall	_send_adv
                                   1861 ;	../../core/net/rime/polite-announcement.c:161: send_timer, &c);
                                   1862 ;	../../core/net/rime/polite-announcement.c:160: c.interval,
      0003E3 90r00r42         [24] 1863 	mov	dptr,#(_c + 0x0042)
      0003E6 E0               [24] 1864 	movx	a,@dptr
      0003E7 FE               [12] 1865 	mov	r6,a
      0003E8 A3               [24] 1866 	inc	dptr
      0003E9 E0               [24] 1867 	movx	a,@dptr
      0003EA FF               [12] 1868 	mov	r7,a
                                   1869 ;	../../core/net/rime/polite-announcement.c:159: ctimer_set(&c.t,
      0003EB 74r00            [12] 1870 	mov	a,#_c
      0003ED C0 E0            [24] 1871 	push	acc
      0003EF 74s00            [12] 1872 	mov	a,#(_c >> 8)
      0003F1 C0 E0            [24] 1873 	push	acc
      0003F3 E4               [12] 1874 	clr	a
      0003F4 C0 E0            [24] 1875 	push	acc
      0003F6 74rD4            [12] 1876 	mov	a,#_send_timer
      0003F8 C0 E0            [24] 1877 	push	acc
      0003FA 74s03            [12] 1878 	mov	a,#(_send_timer >> 8)
      0003FC C0 E0            [24] 1879 	push	acc
      0003FE C0 06            [24] 1880 	push	ar6
      000400 C0 07            [24] 1881 	push	ar7
      000402 90r00r2D         [24] 1882 	mov	dptr,#(_c + 0x002d)
      000405 75 F0 00         [24] 1883 	mov	b,#0x00
      000408 12r00r00         [24] 1884 	lcall	_ctimer_set
      00040B E5 81            [12] 1885 	mov	a,sp
      00040D 24 F9            [12] 1886 	add	a,#0xf9
      00040F F5 81            [12] 1887 	mov	sp,a
                                   1888 ;	../../core/net/rime/polite-announcement.c:163: c.interval = MIN(c.interval * 2, c.max_interval);
      000411 90r00r42         [24] 1889 	mov	dptr,#(_c + 0x0042)
      000414 E0               [24] 1890 	movx	a,@dptr
      000415 FE               [12] 1891 	mov	r6,a
      000416 A3               [24] 1892 	inc	dptr
      000417 E0               [24] 1893 	movx	a,@dptr
      000418 FF               [12] 1894 	mov	r7,a
      000419 EE               [12] 1895 	mov	a,r6
      00041A 2E               [12] 1896 	add	a,r6
      00041B FE               [12] 1897 	mov	r6,a
      00041C EF               [12] 1898 	mov	a,r7
      00041D 33               [12] 1899 	rlc	a
      00041E FF               [12] 1900 	mov	r7,a
      00041F 90r00r46         [24] 1901 	mov	dptr,#(_c + 0x0046)
      000422 E0               [24] 1902 	movx	a,@dptr
      000423 FC               [12] 1903 	mov	r4,a
      000424 A3               [24] 1904 	inc	dptr
      000425 E0               [24] 1905 	movx	a,@dptr
      000426 FD               [12] 1906 	mov	r5,a
      000427 C3               [12] 1907 	clr	c
      000428 EE               [12] 1908 	mov	a,r6
      000429 9C               [12] 1909 	subb	a,r4
      00042A EF               [12] 1910 	mov	a,r7
      00042B 9D               [12] 1911 	subb	a,r5
      00042C 50 02            [24] 1912 	jnc	00103$
      00042E 80 04            [24] 1913 	sjmp	00104$
      000430                       1914 00103$:
      000430 8C 06            [24] 1915 	mov	ar6,r4
      000432 8D 07            [24] 1916 	mov	ar7,r5
      000434                       1917 00104$:
      000434 90r00r42         [24] 1918 	mov	dptr,#(_c + 0x0042)
      000437 EE               [12] 1919 	mov	a,r6
      000438 F0               [24] 1920 	movx	@dptr,a
      000439 EF               [12] 1921 	mov	a,r7
      00043A A3               [24] 1922 	inc	dptr
      00043B F0               [24] 1923 	movx	@dptr,a
                                   1924 ;	../../core/net/rime/polite-announcement.c:164: }
      00043C 22               [24] 1925 	ret
                                   1926 ;------------------------------------------------------------
                                   1927 ;Allocation info for local variables in function 'new_announcement'
                                   1928 ;------------------------------------------------------------
                                   1929 ;has_value                 Allocated to stack - sp -2
                                   1930 ;newval                    Allocated to stack - sp -4
                                   1931 ;oldval                    Allocated to stack - sp -6
                                   1932 ;bump                      Allocated to stack - sp -7
                                   1933 ;id                        Allocated to registers 
                                   1934 ;------------------------------------------------------------
                                   1935 ;	../../core/net/rime/polite-announcement.c:167: new_announcement(uint16_t id, uint8_t has_value, uint16_t newval,
                                   1936 ;	-----------------------------------------
                                   1937 ;	 function new_announcement
                                   1938 ;	-----------------------------------------
      00043D                       1939 _new_announcement:
                                   1940 ;	../../core/net/rime/polite-announcement.c:170: if(newval != oldval) {
      00043D E5 81            [12] 1941 	mov	a,sp
      00043F 24 FC            [12] 1942 	add	a,#0xfc
      000441 F8               [12] 1943 	mov	r0,a
      000442 E5 81            [12] 1944 	mov	a,sp
      000444 24 FA            [12] 1945 	add	a,#0xfa
      000446 F9               [12] 1946 	mov	r1,a
      000447 86 F0            [24] 1947 	mov	b,@r0
      000449 E7               [12] 1948 	mov	a,@r1
      00044A B5 F0 09         [24] 1949 	cjne	a,b,00109$
      00044D 08               [12] 1950 	inc	r0
      00044E 86 F0            [24] 1951 	mov	b,@r0
      000450 09               [12] 1952 	inc	r1
      000451 E7               [12] 1953 	mov	a,@r1
      000452 B5 F0 01         [24] 1954 	cjne	a,b,00109$
      000455 22               [24] 1955 	ret
      000456                       1956 00109$:
                                   1957 ;	../../core/net/rime/polite-announcement.c:171: c.interval = c.min_interval;
      000456 90r00r44         [24] 1958 	mov	dptr,#(_c + 0x0044)
      000459 E0               [24] 1959 	movx	a,@dptr
      00045A FE               [12] 1960 	mov	r6,a
      00045B A3               [24] 1961 	inc	dptr
      00045C E0               [24] 1962 	movx	a,@dptr
      00045D FF               [12] 1963 	mov	r7,a
      00045E 90r00r42         [24] 1964 	mov	dptr,#(_c + 0x0042)
      000461 EE               [12] 1965 	mov	a,r6
      000462 F0               [24] 1966 	movx	@dptr,a
      000463 EF               [12] 1967 	mov	a,r7
      000464 A3               [24] 1968 	inc	dptr
      000465 F0               [24] 1969 	movx	@dptr,a
                                   1970 ;	../../core/net/rime/polite-announcement.c:172: send_timer(&c);
      000466 90r00r00         [24] 1971 	mov	dptr,#_c
      000469 75 F0 00         [24] 1972 	mov	b,#0x00
                                   1973 ;	../../core/net/rime/polite-announcement.c:174: }
      00046C 02r03rD4         [24] 1974 	ljmp	_send_timer
                                   1975 ;------------------------------------------------------------
                                   1976 ;Allocation info for local variables in function 'polite_announcement_init'
                                   1977 ;------------------------------------------------------------
                                   1978 ;min                       Allocated to stack - sp -3
                                   1979 ;max                       Allocated to stack - sp -5
                                   1980 ;channel                   Allocated to registers r6 r7 
                                   1981 ;------------------------------------------------------------
                                   1982 ;	../../core/net/rime/polite-announcement.c:180: polite_announcement_init(uint16_t channel,
                                   1983 ;	-----------------------------------------
                                   1984 ;	 function polite_announcement_init
                                   1985 ;	-----------------------------------------
      00046F                       1986 _polite_announcement_init:
      00046F AE 82            [24] 1987 	mov	r6,dpl
      000471 AF 83            [24] 1988 	mov	r7,dph
                                   1989 ;	../../core/net/rime/polite-announcement.c:184: ipolite_open(&c.c, channel, NUM_DUPS, &ipolite_callbacks);
      000473 74r00            [12] 1990 	mov	a,#_ipolite_callbacks
      000475 C0 E0            [24] 1991 	push	acc
      000477 74s00            [12] 1992 	mov	a,#(_ipolite_callbacks >> 8)
      000479 C0 E0            [24] 1993 	push	acc
      00047B 74 80            [12] 1994 	mov	a,#0x80
      00047D C0 E0            [24] 1995 	push	acc
      00047F 74 05            [12] 1996 	mov	a,#0x05
      000481 C0 E0            [24] 1997 	push	acc
      000483 C0 06            [24] 1998 	push	ar6
      000485 C0 07            [24] 1999 	push	ar7
      000487 90r00r00         [24] 2000 	mov	dptr,#_c
      00048A 75 F0 00         [24] 2001 	mov	b,#0x00
      00048D 12r00r00         [24] 2002 	lcall	_ipolite_open
      000490 E5 81            [12] 2003 	mov	a,sp
      000492 24 FA            [12] 2004 	add	a,#0xfa
                                   2005 ;	../../core/net/rime/polite-announcement.c:186: c.min_interval = min;
      000494 F5 81            [12] 2006 	mov	sp,a
      000496 90r00r44         [24] 2007 	mov	dptr,#(_c + 0x0044)
      000499 24 FD            [12] 2008 	add	a,#0xfd
      00049B F8               [12] 2009 	mov	r0,a
      00049C E6               [12] 2010 	mov	a,@r0
      00049D F0               [24] 2011 	movx	@dptr,a
      00049E 08               [12] 2012 	inc	r0
      00049F E6               [12] 2013 	mov	a,@r0
      0004A0 A3               [24] 2014 	inc	dptr
      0004A1 F0               [24] 2015 	movx	@dptr,a
                                   2016 ;	../../core/net/rime/polite-announcement.c:187: c.max_interval = max;
      0004A2 90r00r46         [24] 2017 	mov	dptr,#(_c + 0x0046)
      0004A5 E5 81            [12] 2018 	mov	a,sp
      0004A7 24 FB            [12] 2019 	add	a,#0xfb
      0004A9 F8               [12] 2020 	mov	r0,a
      0004AA E6               [12] 2021 	mov	a,@r0
      0004AB F0               [24] 2022 	movx	@dptr,a
      0004AC 08               [12] 2023 	inc	r0
      0004AD E6               [12] 2024 	mov	a,@r0
      0004AE A3               [24] 2025 	inc	dptr
      0004AF F0               [24] 2026 	movx	@dptr,a
                                   2027 ;	../../core/net/rime/polite-announcement.c:189: announcement_register_observer_callback(new_announcement);
      0004B0 90r04r3D         [24] 2028 	mov	dptr,#_new_announcement
                                   2029 ;	../../core/net/rime/polite-announcement.c:190: }
      0004B3 02r00r00         [24] 2030 	ljmp	_announcement_register_observer_callback
                                   2031 ;------------------------------------------------------------
                                   2032 ;Allocation info for local variables in function 'polite_announcement_stop'
                                   2033 ;------------------------------------------------------------
                                   2034 ;	../../core/net/rime/polite-announcement.c:193: polite_announcement_stop(void)
                                   2035 ;	-----------------------------------------
                                   2036 ;	 function polite_announcement_stop
                                   2037 ;	-----------------------------------------
      0004B6                       2038 _polite_announcement_stop:
                                   2039 ;	../../core/net/rime/polite-announcement.c:195: ctimer_stop(&c.t);
      0004B6 90r00r2D         [24] 2040 	mov	dptr,#(_c + 0x002d)
      0004B9 75 F0 00         [24] 2041 	mov	b,#0x00
      0004BC 12r00r00         [24] 2042 	lcall	_ctimer_stop
                                   2043 ;	../../core/net/rime/polite-announcement.c:196: ipolite_close(&c.c);
      0004BF 90r00r00         [24] 2044 	mov	dptr,#_c
      0004C2 75 F0 00         [24] 2045 	mov	b,#0x00
                                   2046 ;	../../core/net/rime/polite-announcement.c:197: }
      0004C5 02r00r00         [24] 2047 	ljmp	_ipolite_close
                                   2048 	.area CSEG    (CODE)
                                   2049 	.area CONST   (CODE)
      000000                       2050 _ipolite_callbacks:
      000000r0Bs02                 2051 	.byte _adv_packet_received, (_adv_packet_received >> 8)
      000002 00 00                 2052 	.byte #0x00,#0x00
      000004 00 00                 2053 	.byte #0x00,#0x00
                                   2054 	.area XINIT   (CODE)
                                   2055 	.area CABS    (ABS,CODE)
