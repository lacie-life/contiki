                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module ctimer
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _list_remove
                                     12 	.globl _list_add
                                     13 	.globl _list_head
                                     14 	.globl _list_init
                                     15 	.globl _etimer_stop
                                     16 	.globl _etimer_expired
                                     17 	.globl _etimer_restart
                                     18 	.globl _etimer_reset
                                     19 	.globl _etimer_set
                                     20 	.globl _process_start
                                     21 	.globl _ACTIVE
                                     22 	.globl _TX_BYTE
                                     23 	.globl _RX_BYTE
                                     24 	.globl _ERR
                                     25 	.globl _FE
                                     26 	.globl _SLAVE
                                     27 	.globl _RE
                                     28 	.globl _MODE
                                     29 	.globl _T3OVFIF
                                     30 	.globl _T3CH0IF
                                     31 	.globl _T3CH1IF
                                     32 	.globl _T4OVFIF
                                     33 	.globl _T4CH0IF
                                     34 	.globl _T4CH1IF
                                     35 	.globl _OVFIM
                                     36 	.globl _B_0
                                     37 	.globl _B_1
                                     38 	.globl _B_2
                                     39 	.globl _B_3
                                     40 	.globl _B_4
                                     41 	.globl _B_5
                                     42 	.globl _B_6
                                     43 	.globl _B_7
                                     44 	.globl _P2IF
                                     45 	.globl _UTX0IF
                                     46 	.globl _UTX1IF
                                     47 	.globl _P1IF
                                     48 	.globl _WDTIF
                                     49 	.globl _ACC_0
                                     50 	.globl _ACC_1
                                     51 	.globl _ACC_2
                                     52 	.globl _ACC_3
                                     53 	.globl _ACC_4
                                     54 	.globl _ACC_5
                                     55 	.globl _ACC_6
                                     56 	.globl _ACC_7
                                     57 	.globl _P
                                     58 	.globl _F1
                                     59 	.globl _OV
                                     60 	.globl _RS0
                                     61 	.globl _RS1
                                     62 	.globl _F0
                                     63 	.globl _AC
                                     64 	.globl _CY
                                     65 	.globl _DMAIF
                                     66 	.globl _T1IF
                                     67 	.globl _T2IF
                                     68 	.globl _T3IF
                                     69 	.globl _T4IF
                                     70 	.globl _P0IF
                                     71 	.globl _STIF
                                     72 	.globl _DMAIE
                                     73 	.globl _T1IE
                                     74 	.globl _T2IE
                                     75 	.globl _T3IE
                                     76 	.globl _T4IE
                                     77 	.globl _P0IE
                                     78 	.globl _RFERRIE
                                     79 	.globl _ADCIE
                                     80 	.globl _URX0IE
                                     81 	.globl _URX1IE
                                     82 	.globl _ENCIE
                                     83 	.globl _STIE
                                     84 	.globl _EA
                                     85 	.globl _P2_0
                                     86 	.globl _P2_1
                                     87 	.globl _P2_2
                                     88 	.globl _P2_3
                                     89 	.globl _P2_4
                                     90 	.globl _P2_5
                                     91 	.globl _P2_6
                                     92 	.globl _P2_7
                                     93 	.globl _ENCIF_0
                                     94 	.globl _ENCIF_1
                                     95 	.globl _P1_0
                                     96 	.globl _P1_1
                                     97 	.globl _P1_2
                                     98 	.globl _P1_3
                                     99 	.globl _P1_4
                                    100 	.globl _P1_5
                                    101 	.globl _P1_6
                                    102 	.globl _P1_7
                                    103 	.globl _IT0
                                    104 	.globl _RFERRIF
                                    105 	.globl _IT1
                                    106 	.globl _URX0IF
                                    107 	.globl _ADCIF
                                    108 	.globl _URX1IF
                                    109 	.globl _P0_0
                                    110 	.globl _P0_1
                                    111 	.globl _P0_2
                                    112 	.globl _P0_3
                                    113 	.globl _P0_4
                                    114 	.globl _P0_5
                                    115 	.globl _P0_6
                                    116 	.globl _P0_7
                                    117 	.globl _WDCTL
                                    118 	.globl _U1GCR
                                    119 	.globl _U1UCR
                                    120 	.globl _U1BAUD
                                    121 	.globl _U1DBUF
                                    122 	.globl _U1CSR
                                    123 	.globl _U0GCR
                                    124 	.globl _U0UCR
                                    125 	.globl _U0BAUD
                                    126 	.globl _U0DBUF
                                    127 	.globl _U0CSR
                                    128 	.globl _TIMIF
                                    129 	.globl _T4CC1
                                    130 	.globl _T4CCTL1
                                    131 	.globl _T4CC0
                                    132 	.globl _T4CCTL0
                                    133 	.globl _T4CTL
                                    134 	.globl _T4CNT
                                    135 	.globl _T3CC1
                                    136 	.globl _T3CCTL1
                                    137 	.globl _T3CC0
                                    138 	.globl _T3CCTL0
                                    139 	.globl _T3CTL
                                    140 	.globl _T3CNT
                                    141 	.globl _T2MSEL
                                    142 	.globl _T2IRQM
                                    143 	.globl _T2MOVF2
                                    144 	.globl _T2MOVF1
                                    145 	.globl _T2MOVF0
                                    146 	.globl _T2M1
                                    147 	.globl _T2M0
                                    148 	.globl _T2IRQF
                                    149 	.globl _T2EVTCFG
                                    150 	.globl _T2CTRL
                                    151 	.globl _T1STAT
                                    152 	.globl _T1CCTL2
                                    153 	.globl _T1CCTL1
                                    154 	.globl _T1CCTL0
                                    155 	.globl _T1CTL
                                    156 	.globl _T1CNTH
                                    157 	.globl _T1CNTL
                                    158 	.globl _T1CC2H
                                    159 	.globl _T1CC2L
                                    160 	.globl _T1CC1H
                                    161 	.globl _T1CC1L
                                    162 	.globl _T1CC0H
                                    163 	.globl _T1CC0L
                                    164 	.globl _CLKCONSTA
                                    165 	.globl _CLKCONCMD
                                    166 	.globl _SLEEPSTA
                                    167 	.globl _SLEEPCMD
                                    168 	.globl _STLOAD
                                    169 	.globl _ST2
                                    170 	.globl _ST1
                                    171 	.globl _ST0
                                    172 	.globl _RFERRF
                                    173 	.globl _RFIRQF0
                                    174 	.globl _RFST
                                    175 	.globl _RFD
                                    176 	.globl _RFIRQF1
                                    177 	.globl _PSBANK
                                    178 	.globl _FMAP
                                    179 	.globl _MEMCTR
                                    180 	.globl __XPAGE
                                    181 	.globl _MPAGE
                                    182 	.globl _PMUX
                                    183 	.globl _P2DIR
                                    184 	.globl _P1DIR
                                    185 	.globl _P0DIR
                                    186 	.globl _P2INP
                                    187 	.globl _P1INP
                                    188 	.globl _P2SEL
                                    189 	.globl _P1SEL
                                    190 	.globl _P0SEL
                                    191 	.globl _APCFG
                                    192 	.globl _PERCFG
                                    193 	.globl _P0INP
                                    194 	.globl _P2IEN
                                    195 	.globl _P1IEN
                                    196 	.globl _P0IEN
                                    197 	.globl _PICTL
                                    198 	.globl _P2IFG
                                    199 	.globl _P1IFG
                                    200 	.globl _P0IFG
                                    201 	.globl _DMAREQ
                                    202 	.globl _DMAARM
                                    203 	.globl _DMA0CFGH
                                    204 	.globl _DMA0CFGL
                                    205 	.globl _DMA1CFGH
                                    206 	.globl _DMA1CFGL
                                    207 	.globl _DMAIRQ
                                    208 	.globl _ENCCS
                                    209 	.globl _ENCDO
                                    210 	.globl _ENCDI
                                    211 	.globl _RNDH
                                    212 	.globl _RNDL
                                    213 	.globl _ADCH
                                    214 	.globl _ADCL
                                    215 	.globl _ADCCON3
                                    216 	.globl _ADCCON2
                                    217 	.globl _ADCCON1
                                    218 	.globl _B
                                    219 	.globl _IRCON2
                                    220 	.globl _ACC
                                    221 	.globl _PSW
                                    222 	.globl _IRCON
                                    223 	.globl _IP1
                                    224 	.globl _IEN1
                                    225 	.globl _IP0
                                    226 	.globl _IEN0
                                    227 	.globl _P2
                                    228 	.globl _S1CON
                                    229 	.globl _IEN2
                                    230 	.globl _S0CON
                                    231 	.globl _DPS
                                    232 	.globl _P1
                                    233 	.globl _TCON
                                    234 	.globl _PCON
                                    235 	.globl _DPH1
                                    236 	.globl _DPL1
                                    237 	.globl _DPH0
                                    238 	.globl _DPL0
                                    239 	.globl _SP
                                    240 	.globl _P0
                                    241 	.globl _ctimer_process
                                    242 	.globl _X_IEEE_ADDR
                                    243 	.globl _X_INFOPAGE
                                    244 	.globl _X_P2DIR
                                    245 	.globl _X_P1DIR
                                    246 	.globl _X_P0DIR
                                    247 	.globl _X_U1GCR
                                    248 	.globl _X_U1UCR
                                    249 	.globl _X_U1BAUD
                                    250 	.globl _X_U1DBUF
                                    251 	.globl _X_U1CSR
                                    252 	.globl _X_P2INP
                                    253 	.globl _X_P1INP
                                    254 	.globl _X_P2SEL
                                    255 	.globl _X_P1SEL
                                    256 	.globl _X_P0SEL
                                    257 	.globl _X_APCFG
                                    258 	.globl _X_PERCFG
                                    259 	.globl _X_T4CC1
                                    260 	.globl _X_T4CCTL1
                                    261 	.globl _X_T4CC0
                                    262 	.globl _X_T4CCTL0
                                    263 	.globl _X_T4CTL
                                    264 	.globl _X_T4CNT
                                    265 	.globl _X_RFIRQF0
                                    266 	.globl _X_T1CCTL2
                                    267 	.globl _X_T1CCTL1
                                    268 	.globl _X_T1CCTL0
                                    269 	.globl _X_T1CTL
                                    270 	.globl _X_T1CNTH
                                    271 	.globl _X_T1CNTL
                                    272 	.globl _X_RFST
                                    273 	.globl _X_T1CC2H
                                    274 	.globl _X_T1CC2L
                                    275 	.globl _X_T1CC1H
                                    276 	.globl _X_T1CC1L
                                    277 	.globl _X_T1CC0H
                                    278 	.globl _X_T1CC0L
                                    279 	.globl _X_RFD
                                    280 	.globl _X_TIMIF
                                    281 	.globl _X_DMAREQ
                                    282 	.globl _X_DMAARM
                                    283 	.globl _X_DMA0CFGH
                                    284 	.globl _X_DMA0CFGL
                                    285 	.globl _X_DMA1CFGH
                                    286 	.globl _X_DMA1CFGL
                                    287 	.globl _X_DMAIRQ
                                    288 	.globl _X_T3CC1
                                    289 	.globl _X_T3CCTL1
                                    290 	.globl _X_T3CC0
                                    291 	.globl _X_T3CCTL0
                                    292 	.globl _X_T3CTL
                                    293 	.globl _X_T3CNT
                                    294 	.globl _X_WDCTL
                                    295 	.globl _X_MEMCTR
                                    296 	.globl _X_CLKCONCMD
                                    297 	.globl _X_U0GCR
                                    298 	.globl _X_U0UCR
                                    299 	.globl _X_T2MSEL
                                    300 	.globl _X_U0BAUD
                                    301 	.globl _X_U0DBUF
                                    302 	.globl _X_RFERRF
                                    303 	.globl _X_SLEEPCMD
                                    304 	.globl _X_RNDH
                                    305 	.globl _X_RNDL
                                    306 	.globl _X_ADCH
                                    307 	.globl _X_ADCL
                                    308 	.globl _X_ADCCON3
                                    309 	.globl _X_ADCCON2
                                    310 	.globl _X_ADCCON1
                                    311 	.globl _X_ENCCS
                                    312 	.globl _X_ENCDO
                                    313 	.globl _X_ENCDI
                                    314 	.globl _X_T1STAT
                                    315 	.globl _X_PMUX
                                    316 	.globl _X_STLOAD
                                    317 	.globl _X_P2IEN
                                    318 	.globl _X_P0IEN
                                    319 	.globl _X_T2IRQM
                                    320 	.globl _X_T2MOVF2
                                    321 	.globl _X_T2MOVF1
                                    322 	.globl _X_T2MOVF0
                                    323 	.globl _X_T2M1
                                    324 	.globl _X_T2M0
                                    325 	.globl _X_T2IRQF
                                    326 	.globl _X_P2
                                    327 	.globl _X_PSBANK
                                    328 	.globl _X_FMAP
                                    329 	.globl _X_CLKCONSTA
                                    330 	.globl _X_SLEEPSTA
                                    331 	.globl _X_T2EVTCFG
                                    332 	.globl _X_ST2
                                    333 	.globl _X_ST1
                                    334 	.globl _X_ST0
                                    335 	.globl _X_T2CTRL
                                    336 	.globl _X__XPAGE
                                    337 	.globl _X_MPAGE
                                    338 	.globl _X_RFIRQF1
                                    339 	.globl _X_P1
                                    340 	.globl _X_P0INP
                                    341 	.globl _X_P1IEN
                                    342 	.globl _X_PICTL
                                    343 	.globl _X_P2IFG
                                    344 	.globl _X_P1IFG
                                    345 	.globl _X_P0IFG
                                    346 	.globl _X_U0CSR
                                    347 	.globl _X_P0
                                    348 	.globl _USBF5
                                    349 	.globl _USBF4
                                    350 	.globl _USBF3
                                    351 	.globl _USBF2
                                    352 	.globl _USBF1
                                    353 	.globl _USBF0
                                    354 	.globl _USBCNTH
                                    355 	.globl _USBCNTL
                                    356 	.globl _USBCNT0
                                    357 	.globl _USBCSOH
                                    358 	.globl _USBCSOL
                                    359 	.globl _USBMAXO
                                    360 	.globl _USBCSIH
                                    361 	.globl _USBCSIL
                                    362 	.globl _USBCS0
                                    363 	.globl _USBMAXI
                                    364 	.globl _USBCTRL
                                    365 	.globl _USBINDEX
                                    366 	.globl _USBFRMH
                                    367 	.globl _USBFRML
                                    368 	.globl _USBCIE
                                    369 	.globl _USBOIE
                                    370 	.globl _USBIIE
                                    371 	.globl _USBCIF
                                    372 	.globl _USBOIF
                                    373 	.globl _USBIIF
                                    374 	.globl _USBPOW
                                    375 	.globl _USBADDR
                                    376 	.globl _CSPT
                                    377 	.globl _CSPZ
                                    378 	.globl _CSPY
                                    379 	.globl _CSPX
                                    380 	.globl _CSPSTAT
                                    381 	.globl _CSPCTRL
                                    382 	.globl _CSPPROG23
                                    383 	.globl _CSPPROG22
                                    384 	.globl _CSPPROG21
                                    385 	.globl _CSPPROG20
                                    386 	.globl _CSPPROG19
                                    387 	.globl _CSPPROG18
                                    388 	.globl _CSPPROG17
                                    389 	.globl _CSPPROG16
                                    390 	.globl _CSPPROG15
                                    391 	.globl _CSPPROG14
                                    392 	.globl _CSPPROG13
                                    393 	.globl _CSPPROG12
                                    394 	.globl _CSPPROG11
                                    395 	.globl _CSPPROG10
                                    396 	.globl _CSPPROG9
                                    397 	.globl _CSPPROG8
                                    398 	.globl _CSPPROG7
                                    399 	.globl _CSPPROG6
                                    400 	.globl _CSPPROG5
                                    401 	.globl _CSPPROG4
                                    402 	.globl _CSPPROG3
                                    403 	.globl _CSPPROG2
                                    404 	.globl _CSPPROG1
                                    405 	.globl _CSPPROG0
                                    406 	.globl _RFC_OBS_CTRL2
                                    407 	.globl _RFC_OBS_CTRL1
                                    408 	.globl _RFC_OBS_CTRL0
                                    409 	.globl _TXFILTCFG
                                    410 	.globl _PTEST1
                                    411 	.globl _PTEST0
                                    412 	.globl _ATEST
                                    413 	.globl _DACTEST2
                                    414 	.globl _DACTEST1
                                    415 	.globl _DACTEST0
                                    416 	.globl _MDMTEST1
                                    417 	.globl _MDMTEST0
                                    418 	.globl _ADCTEST2
                                    419 	.globl _ADCTEST1
                                    420 	.globl _ADCTEST0
                                    421 	.globl _AGCCTRL3
                                    422 	.globl _AGCCTRL2
                                    423 	.globl _AGCCTRL1
                                    424 	.globl _AGCCTRL0
                                    425 	.globl _FSCAL3
                                    426 	.globl _FSCAL2
                                    427 	.globl _FSCAL1
                                    428 	.globl _FSCAL0
                                    429 	.globl _FSCTRL
                                    430 	.globl _RXCTRL
                                    431 	.globl _FREQEST
                                    432 	.globl _MDMCTRL1
                                    433 	.globl _MDMCTRL0
                                    434 	.globl _RFRND
                                    435 	.globl _RFERRM
                                    436 	.globl _RFIRQM1
                                    437 	.globl _RFIRQM0
                                    438 	.globl _TXLAST_PTR
                                    439 	.globl _TXFIRST_PTR
                                    440 	.globl _RXP1_PTR
                                    441 	.globl _RXLAST_PTR
                                    442 	.globl _RXFIRST_PTR
                                    443 	.globl _TXFIFOCNT
                                    444 	.globl _RXFIFOCNT
                                    445 	.globl _RXFIRST
                                    446 	.globl _RSSISTAT
                                    447 	.globl _RSSI
                                    448 	.globl _CCACTRL1
                                    449 	.globl _CCACTRL0
                                    450 	.globl _FSMCTRL
                                    451 	.globl _FIFOPCTRL
                                    452 	.globl _FSMSTAT1
                                    453 	.globl _FSMSTAT0
                                    454 	.globl _TXCTRL
                                    455 	.globl _TXPOWER
                                    456 	.globl _FREQCTRL
                                    457 	.globl _FREQTUNE
                                    458 	.globl _RXMASKCLR
                                    459 	.globl _RXMASKSET
                                    460 	.globl _RXENABLE
                                    461 	.globl _FRMCTRL1
                                    462 	.globl _FRMCTRL0
                                    463 	.globl _SRCEXTEN2
                                    464 	.globl _SRCEXTEN1
                                    465 	.globl _SRCEXTEN0
                                    466 	.globl _SRCSHORTEN2
                                    467 	.globl _SRCSHORTEN1
                                    468 	.globl _SRCSHORTEN0
                                    469 	.globl _SRCMATCH
                                    470 	.globl _FRMFILT1
                                    471 	.globl _FRMFILT0
                                    472 	.globl _SHORT_ADDR1
                                    473 	.globl _SHORT_ADDR0
                                    474 	.globl _PAN_ID1
                                    475 	.globl _PAN_ID0
                                    476 	.globl _EXT_ADDR7
                                    477 	.globl _EXT_ADDR6
                                    478 	.globl _EXT_ADDR5
                                    479 	.globl _EXT_ADDR4
                                    480 	.globl _EXT_ADDR3
                                    481 	.globl _EXT_ADDR2
                                    482 	.globl _EXT_ADDR1
                                    483 	.globl _EXT_ADDR0
                                    484 	.globl _SRCSHORTPENDEN2
                                    485 	.globl _SRCSHORTPENDEN1
                                    486 	.globl _SRCSHORTPENDEN0
                                    487 	.globl _SRCEXTPENDEN2
                                    488 	.globl _SRCEXTPENDEN1
                                    489 	.globl _SRCEXTPENDEN0
                                    490 	.globl _SRCRESINDEX
                                    491 	.globl _SRCRESMASK2
                                    492 	.globl _SRCRESMASK1
                                    493 	.globl _SRCRESMASK0
                                    494 	.globl _SRC_ADDR_TABLE
                                    495 	.globl _TXFIFO
                                    496 	.globl _RXFIFO
                                    497 	.globl _RFCORE_RAM
                                    498 	.globl _CMPCTL
                                    499 	.globl _OPAMPS
                                    500 	.globl _OPAMPC
                                    501 	.globl _STCV2
                                    502 	.globl _STCV1
                                    503 	.globl _STCV0
                                    504 	.globl _STCS
                                    505 	.globl _STCC
                                    506 	.globl _T1CC4H
                                    507 	.globl _T1CC4L
                                    508 	.globl _T1CC3H
                                    509 	.globl _T1CC3L
                                    510 	.globl _XX_T1CC2H
                                    511 	.globl _XX_T1CC2L
                                    512 	.globl _XX_T1CC1H
                                    513 	.globl _XX_T1CC1L
                                    514 	.globl _XX_T1CC0H
                                    515 	.globl _XX_T1CC0L
                                    516 	.globl _T1CCTL4
                                    517 	.globl _T1CCTL3
                                    518 	.globl _XX_T1CCTL2
                                    519 	.globl _XX_T1CCTL1
                                    520 	.globl _XX_T1CCTL0
                                    521 	.globl _CLD
                                    522 	.globl _IRCTL
                                    523 	.globl _CHIPINFO1
                                    524 	.globl _CHIPINFO0
                                    525 	.globl _FWDATA
                                    526 	.globl _FADDRH
                                    527 	.globl _FADDRL
                                    528 	.globl _FCTL
                                    529 	.globl _IVCTRL
                                    530 	.globl _BATTMON
                                    531 	.globl _SRCRC
                                    532 	.globl _DBGDATA
                                    533 	.globl _TESTREG0
                                    534 	.globl _CHIPID
                                    535 	.globl _CHVER
                                    536 	.globl _OBSSEL5
                                    537 	.globl _OBSSEL4
                                    538 	.globl _OBSSEL3
                                    539 	.globl _OBSSEL2
                                    540 	.globl _OBSSEL1
                                    541 	.globl _OBSSEL0
                                    542 	.globl _I2CIO
                                    543 	.globl _I2CWC
                                    544 	.globl _I2CADDR
                                    545 	.globl _I2CDATA
                                    546 	.globl _I2CSTAT
                                    547 	.globl _I2CCFG
                                    548 	.globl _OPAMPMC
                                    549 	.globl _MONMUX
                                    550 	.globl _ctimer_init
                                    551 	.globl _ctimer_set
                                    552 	.globl _ctimer_reset
                                    553 	.globl _ctimer_restart
                                    554 	.globl _ctimer_stop
                                    555 	.globl _ctimer_expired
                                    556 ;--------------------------------------------------------
                                    557 ; special function registers
                                    558 ;--------------------------------------------------------
                                    559 	.area RSEG    (ABS,DATA)
      000000                        560 	.org 0x0000
                           000080   561 _P0	=	0x0080
                           000081   562 _SP	=	0x0081
                           000082   563 _DPL0	=	0x0082
                           000083   564 _DPH0	=	0x0083
                           000084   565 _DPL1	=	0x0084
                           000085   566 _DPH1	=	0x0085
                           000087   567 _PCON	=	0x0087
                           000088   568 _TCON	=	0x0088
                           000090   569 _P1	=	0x0090
                           000092   570 _DPS	=	0x0092
                           000098   571 _S0CON	=	0x0098
                           00009A   572 _IEN2	=	0x009a
                           00009B   573 _S1CON	=	0x009b
                           0000A0   574 _P2	=	0x00a0
                           0000A8   575 _IEN0	=	0x00a8
                           0000A9   576 _IP0	=	0x00a9
                           0000B8   577 _IEN1	=	0x00b8
                           0000B9   578 _IP1	=	0x00b9
                           0000C0   579 _IRCON	=	0x00c0
                           0000D0   580 _PSW	=	0x00d0
                           0000E0   581 _ACC	=	0x00e0
                           0000E8   582 _IRCON2	=	0x00e8
                           0000F0   583 _B	=	0x00f0
                           0000B4   584 _ADCCON1	=	0x00b4
                           0000B5   585 _ADCCON2	=	0x00b5
                           0000B6   586 _ADCCON3	=	0x00b6
                           0000BA   587 _ADCL	=	0x00ba
                           0000BB   588 _ADCH	=	0x00bb
                           0000BC   589 _RNDL	=	0x00bc
                           0000BD   590 _RNDH	=	0x00bd
                           0000B1   591 _ENCDI	=	0x00b1
                           0000B2   592 _ENCDO	=	0x00b2
                           0000B3   593 _ENCCS	=	0x00b3
                           0000D1   594 _DMAIRQ	=	0x00d1
                           0000D2   595 _DMA1CFGL	=	0x00d2
                           0000D3   596 _DMA1CFGH	=	0x00d3
                           0000D4   597 _DMA0CFGL	=	0x00d4
                           0000D5   598 _DMA0CFGH	=	0x00d5
                           0000D6   599 _DMAARM	=	0x00d6
                           0000D7   600 _DMAREQ	=	0x00d7
                           000089   601 _P0IFG	=	0x0089
                           00008A   602 _P1IFG	=	0x008a
                           00008B   603 _P2IFG	=	0x008b
                           00008C   604 _PICTL	=	0x008c
                           0000AB   605 _P0IEN	=	0x00ab
                           00008D   606 _P1IEN	=	0x008d
                           0000AC   607 _P2IEN	=	0x00ac
                           00008F   608 _P0INP	=	0x008f
                           0000F1   609 _PERCFG	=	0x00f1
                           0000F2   610 _APCFG	=	0x00f2
                           0000F3   611 _P0SEL	=	0x00f3
                           0000F4   612 _P1SEL	=	0x00f4
                           0000F5   613 _P2SEL	=	0x00f5
                           0000F6   614 _P1INP	=	0x00f6
                           0000F7   615 _P2INP	=	0x00f7
                           0000FD   616 _P0DIR	=	0x00fd
                           0000FE   617 _P1DIR	=	0x00fe
                           0000FF   618 _P2DIR	=	0x00ff
                           0000AE   619 _PMUX	=	0x00ae
                           000093   620 _MPAGE	=	0x0093
                           000093   621 __XPAGE	=	0x0093
                           0000C7   622 _MEMCTR	=	0x00c7
                           00009F   623 _FMAP	=	0x009f
                           00009F   624 _PSBANK	=	0x009f
                           000091   625 _RFIRQF1	=	0x0091
                           0000D9   626 _RFD	=	0x00d9
                           0000E1   627 _RFST	=	0x00e1
                           0000E9   628 _RFIRQF0	=	0x00e9
                           0000BF   629 _RFERRF	=	0x00bf
                           000095   630 _ST0	=	0x0095
                           000096   631 _ST1	=	0x0096
                           000097   632 _ST2	=	0x0097
                           0000AD   633 _STLOAD	=	0x00ad
                           0000BE   634 _SLEEPCMD	=	0x00be
                           00009D   635 _SLEEPSTA	=	0x009d
                           0000C6   636 _CLKCONCMD	=	0x00c6
                           00009E   637 _CLKCONSTA	=	0x009e
                           0000DA   638 _T1CC0L	=	0x00da
                           0000DB   639 _T1CC0H	=	0x00db
                           0000DC   640 _T1CC1L	=	0x00dc
                           0000DD   641 _T1CC1H	=	0x00dd
                           0000DE   642 _T1CC2L	=	0x00de
                           0000DF   643 _T1CC2H	=	0x00df
                           0000E2   644 _T1CNTL	=	0x00e2
                           0000E3   645 _T1CNTH	=	0x00e3
                           0000E4   646 _T1CTL	=	0x00e4
                           0000E5   647 _T1CCTL0	=	0x00e5
                           0000E6   648 _T1CCTL1	=	0x00e6
                           0000E7   649 _T1CCTL2	=	0x00e7
                           0000AF   650 _T1STAT	=	0x00af
                           000094   651 _T2CTRL	=	0x0094
                           00009C   652 _T2EVTCFG	=	0x009c
                           0000A1   653 _T2IRQF	=	0x00a1
                           0000A2   654 _T2M0	=	0x00a2
                           0000A3   655 _T2M1	=	0x00a3
                           0000A4   656 _T2MOVF0	=	0x00a4
                           0000A5   657 _T2MOVF1	=	0x00a5
                           0000A6   658 _T2MOVF2	=	0x00a6
                           0000A7   659 _T2IRQM	=	0x00a7
                           0000C3   660 _T2MSEL	=	0x00c3
                           0000CA   661 _T3CNT	=	0x00ca
                           0000CB   662 _T3CTL	=	0x00cb
                           0000CC   663 _T3CCTL0	=	0x00cc
                           0000CD   664 _T3CC0	=	0x00cd
                           0000CE   665 _T3CCTL1	=	0x00ce
                           0000CF   666 _T3CC1	=	0x00cf
                           0000EA   667 _T4CNT	=	0x00ea
                           0000EB   668 _T4CTL	=	0x00eb
                           0000EC   669 _T4CCTL0	=	0x00ec
                           0000ED   670 _T4CC0	=	0x00ed
                           0000EE   671 _T4CCTL1	=	0x00ee
                           0000EF   672 _T4CC1	=	0x00ef
                           0000D8   673 _TIMIF	=	0x00d8
                           000086   674 _U0CSR	=	0x0086
                           0000C1   675 _U0DBUF	=	0x00c1
                           0000C2   676 _U0BAUD	=	0x00c2
                           0000C4   677 _U0UCR	=	0x00c4
                           0000C5   678 _U0GCR	=	0x00c5
                           0000F8   679 _U1CSR	=	0x00f8
                           0000F9   680 _U1DBUF	=	0x00f9
                           0000FA   681 _U1BAUD	=	0x00fa
                           0000FB   682 _U1UCR	=	0x00fb
                           0000FC   683 _U1GCR	=	0x00fc
                           0000C9   684 _WDCTL	=	0x00c9
                                    685 ;--------------------------------------------------------
                                    686 ; special function bits
                                    687 ;--------------------------------------------------------
                                    688 	.area RSEG    (ABS,DATA)
      000000                        689 	.org 0x0000
                           000087   690 _P0_7	=	0x0087
                           000086   691 _P0_6	=	0x0086
                           000085   692 _P0_5	=	0x0085
                           000084   693 _P0_4	=	0x0084
                           000083   694 _P0_3	=	0x0083
                           000082   695 _P0_2	=	0x0082
                           000081   696 _P0_1	=	0x0081
                           000080   697 _P0_0	=	0x0080
                           00008F   698 _URX1IF	=	0x008f
                           00008D   699 _ADCIF	=	0x008d
                           00008B   700 _URX0IF	=	0x008b
                           00008A   701 _IT1	=	0x008a
                           000089   702 _RFERRIF	=	0x0089
                           000088   703 _IT0	=	0x0088
                           000097   704 _P1_7	=	0x0097
                           000096   705 _P1_6	=	0x0096
                           000095   706 _P1_5	=	0x0095
                           000094   707 _P1_4	=	0x0094
                           000093   708 _P1_3	=	0x0093
                           000092   709 _P1_2	=	0x0092
                           000091   710 _P1_1	=	0x0091
                           000090   711 _P1_0	=	0x0090
                           000099   712 _ENCIF_1	=	0x0099
                           000098   713 _ENCIF_0	=	0x0098
                           0000A7   714 _P2_7	=	0x00a7
                           0000A6   715 _P2_6	=	0x00a6
                           0000A5   716 _P2_5	=	0x00a5
                           0000A4   717 _P2_4	=	0x00a4
                           0000A3   718 _P2_3	=	0x00a3
                           0000A2   719 _P2_2	=	0x00a2
                           0000A1   720 _P2_1	=	0x00a1
                           0000A0   721 _P2_0	=	0x00a0
                           0000AF   722 _EA	=	0x00af
                           0000AD   723 _STIE	=	0x00ad
                           0000AC   724 _ENCIE	=	0x00ac
                           0000AB   725 _URX1IE	=	0x00ab
                           0000AA   726 _URX0IE	=	0x00aa
                           0000A9   727 _ADCIE	=	0x00a9
                           0000A8   728 _RFERRIE	=	0x00a8
                           0000BD   729 _P0IE	=	0x00bd
                           0000BC   730 _T4IE	=	0x00bc
                           0000BB   731 _T3IE	=	0x00bb
                           0000BA   732 _T2IE	=	0x00ba
                           0000B9   733 _T1IE	=	0x00b9
                           0000B8   734 _DMAIE	=	0x00b8
                           0000C7   735 _STIF	=	0x00c7
                           0000C5   736 _P0IF	=	0x00c5
                           0000C4   737 _T4IF	=	0x00c4
                           0000C3   738 _T3IF	=	0x00c3
                           0000C2   739 _T2IF	=	0x00c2
                           0000C1   740 _T1IF	=	0x00c1
                           0000C0   741 _DMAIF	=	0x00c0
                           0000D7   742 _CY	=	0x00d7
                           0000D6   743 _AC	=	0x00d6
                           0000D5   744 _F0	=	0x00d5
                           0000D4   745 _RS1	=	0x00d4
                           0000D3   746 _RS0	=	0x00d3
                           0000D2   747 _OV	=	0x00d2
                           0000D1   748 _F1	=	0x00d1
                           0000D0   749 _P	=	0x00d0
                           0000E7   750 _ACC_7	=	0x00e7
                           0000E6   751 _ACC_6	=	0x00e6
                           0000E5   752 _ACC_5	=	0x00e5
                           0000E4   753 _ACC_4	=	0x00e4
                           0000E3   754 _ACC_3	=	0x00e3
                           0000E2   755 _ACC_2	=	0x00e2
                           0000E1   756 _ACC_1	=	0x00e1
                           0000E0   757 _ACC_0	=	0x00e0
                           0000EC   758 _WDTIF	=	0x00ec
                           0000EB   759 _P1IF	=	0x00eb
                           0000EA   760 _UTX1IF	=	0x00ea
                           0000E9   761 _UTX0IF	=	0x00e9
                           0000E8   762 _P2IF	=	0x00e8
                           0000F7   763 _B_7	=	0x00f7
                           0000F6   764 _B_6	=	0x00f6
                           0000F5   765 _B_5	=	0x00f5
                           0000F4   766 _B_4	=	0x00f4
                           0000F3   767 _B_3	=	0x00f3
                           0000F2   768 _B_2	=	0x00f2
                           0000F1   769 _B_1	=	0x00f1
                           0000F0   770 _B_0	=	0x00f0
                           0000DE   771 _OVFIM	=	0x00de
                           0000DD   772 _T4CH1IF	=	0x00dd
                           0000DC   773 _T4CH0IF	=	0x00dc
                           0000DB   774 _T4OVFIF	=	0x00db
                           0000DA   775 _T3CH1IF	=	0x00da
                           0000D9   776 _T3CH0IF	=	0x00d9
                           0000D8   777 _T3OVFIF	=	0x00d8
                           0000FF   778 _MODE	=	0x00ff
                           0000FE   779 _RE	=	0x00fe
                           0000FD   780 _SLAVE	=	0x00fd
                           0000FC   781 _FE	=	0x00fc
                           0000FB   782 _ERR	=	0x00fb
                           0000FA   783 _RX_BYTE	=	0x00fa
                           0000F9   784 _TX_BYTE	=	0x00f9
                           0000F8   785 _ACTIVE	=	0x00f8
                                    786 ;--------------------------------------------------------
                                    787 ; overlayable register banks
                                    788 ;--------------------------------------------------------
                                    789 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        790 	.ds 8
                                    791 ;--------------------------------------------------------
                                    792 ; internal ram data
                                    793 ;--------------------------------------------------------
                                    794 	.area DSEG    (DATA)
                                    795 ;--------------------------------------------------------
                                    796 ; overlayable items in internal ram 
                                    797 ;--------------------------------------------------------
                                    798 ;--------------------------------------------------------
                                    799 ; indirectly addressable internal ram data
                                    800 ;--------------------------------------------------------
                                    801 	.area ISEG    (DATA)
                                    802 ;--------------------------------------------------------
                                    803 ; absolute internal ram data
                                    804 ;--------------------------------------------------------
                                    805 	.area IABS    (ABS,DATA)
                                    806 	.area IABS    (ABS,DATA)
                                    807 ;--------------------------------------------------------
                                    808 ; bit data
                                    809 ;--------------------------------------------------------
                                    810 	.area BSEG    (BIT)
                                    811 ;--------------------------------------------------------
                                    812 ; paged external ram data
                                    813 ;--------------------------------------------------------
                                    814 	.area PSEG    (PAG,XDATA)
                                    815 ;--------------------------------------------------------
                                    816 ; external ram data
                                    817 ;--------------------------------------------------------
                                    818 	.area XSEG    (XDATA)
                           0061A6   819 _MONMUX	=	0x61a6
                           0061A6   820 _OPAMPMC	=	0x61a6
                           006230   821 _I2CCFG	=	0x6230
                           006231   822 _I2CSTAT	=	0x6231
                           006232   823 _I2CDATA	=	0x6232
                           006233   824 _I2CADDR	=	0x6233
                           006234   825 _I2CWC	=	0x6234
                           006235   826 _I2CIO	=	0x6235
                           006243   827 _OBSSEL0	=	0x6243
                           006244   828 _OBSSEL1	=	0x6244
                           006245   829 _OBSSEL2	=	0x6245
                           006246   830 _OBSSEL3	=	0x6246
                           006247   831 _OBSSEL4	=	0x6247
                           006248   832 _OBSSEL5	=	0x6248
                           006249   833 _CHVER	=	0x6249
                           00624A   834 _CHIPID	=	0x624a
                           00624B   835 _TESTREG0	=	0x624b
                           006260   836 _DBGDATA	=	0x6260
                           006262   837 _SRCRC	=	0x6262
                           006264   838 _BATTMON	=	0x6264
                           006265   839 _IVCTRL	=	0x6265
                           006270   840 _FCTL	=	0x6270
                           006271   841 _FADDRL	=	0x6271
                           006272   842 _FADDRH	=	0x6272
                           006273   843 _FWDATA	=	0x6273
                           006276   844 _CHIPINFO0	=	0x6276
                           006277   845 _CHIPINFO1	=	0x6277
                           006281   846 _IRCTL	=	0x6281
                           006290   847 _CLD	=	0x6290
                           0062A0   848 _XX_T1CCTL0	=	0x62a0
                           0062A1   849 _XX_T1CCTL1	=	0x62a1
                           0062A2   850 _XX_T1CCTL2	=	0x62a2
                           0062A3   851 _T1CCTL3	=	0x62a3
                           0062A4   852 _T1CCTL4	=	0x62a4
                           0062A6   853 _XX_T1CC0L	=	0x62a6
                           0062A7   854 _XX_T1CC0H	=	0x62a7
                           0062A8   855 _XX_T1CC1L	=	0x62a8
                           0062A9   856 _XX_T1CC1H	=	0x62a9
                           0062AA   857 _XX_T1CC2L	=	0x62aa
                           0062AB   858 _XX_T1CC2H	=	0x62ab
                           0062AC   859 _T1CC3L	=	0x62ac
                           0062AD   860 _T1CC3H	=	0x62ad
                           0062AE   861 _T1CC4L	=	0x62ae
                           0062AF   862 _T1CC4H	=	0x62af
                           0062B0   863 _STCC	=	0x62b0
                           0062B1   864 _STCS	=	0x62b1
                           0062B2   865 _STCV0	=	0x62b2
                           0062B3   866 _STCV1	=	0x62b3
                           0062B4   867 _STCV2	=	0x62b4
                           0062C0   868 _OPAMPC	=	0x62c0
                           0062C1   869 _OPAMPS	=	0x62c1
                           0062D0   870 _CMPCTL	=	0x62d0
                           006000   871 _RFCORE_RAM	=	0x6000
                           006000   872 _RXFIFO	=	0x6000
                           006080   873 _TXFIFO	=	0x6080
                           006100   874 _SRC_ADDR_TABLE	=	0x6100
                           006160   875 _SRCRESMASK0	=	0x6160
                           006161   876 _SRCRESMASK1	=	0x6161
                           006162   877 _SRCRESMASK2	=	0x6162
                           006163   878 _SRCRESINDEX	=	0x6163
                           006164   879 _SRCEXTPENDEN0	=	0x6164
                           006165   880 _SRCEXTPENDEN1	=	0x6165
                           006166   881 _SRCEXTPENDEN2	=	0x6166
                           006167   882 _SRCSHORTPENDEN0	=	0x6167
                           006168   883 _SRCSHORTPENDEN1	=	0x6168
                           006169   884 _SRCSHORTPENDEN2	=	0x6169
                           00616A   885 _EXT_ADDR0	=	0x616a
                           00616B   886 _EXT_ADDR1	=	0x616b
                           00616C   887 _EXT_ADDR2	=	0x616c
                           00616D   888 _EXT_ADDR3	=	0x616d
                           00616E   889 _EXT_ADDR4	=	0x616e
                           00616F   890 _EXT_ADDR5	=	0x616f
                           006170   891 _EXT_ADDR6	=	0x6170
                           006171   892 _EXT_ADDR7	=	0x6171
                           006172   893 _PAN_ID0	=	0x6172
                           006173   894 _PAN_ID1	=	0x6173
                           006174   895 _SHORT_ADDR0	=	0x6174
                           006175   896 _SHORT_ADDR1	=	0x6175
                           006180   897 _FRMFILT0	=	0x6180
                           006181   898 _FRMFILT1	=	0x6181
                           006182   899 _SRCMATCH	=	0x6182
                           006183   900 _SRCSHORTEN0	=	0x6183
                           006184   901 _SRCSHORTEN1	=	0x6184
                           006185   902 _SRCSHORTEN2	=	0x6185
                           006186   903 _SRCEXTEN0	=	0x6186
                           006187   904 _SRCEXTEN1	=	0x6187
                           006188   905 _SRCEXTEN2	=	0x6188
                           006189   906 _FRMCTRL0	=	0x6189
                           00618A   907 _FRMCTRL1	=	0x618a
                           00618B   908 _RXENABLE	=	0x618b
                           00618C   909 _RXMASKSET	=	0x618c
                           00618D   910 _RXMASKCLR	=	0x618d
                           00618E   911 _FREQTUNE	=	0x618e
                           00618F   912 _FREQCTRL	=	0x618f
                           006190   913 _TXPOWER	=	0x6190
                           006191   914 _TXCTRL	=	0x6191
                           006192   915 _FSMSTAT0	=	0x6192
                           006193   916 _FSMSTAT1	=	0x6193
                           006194   917 _FIFOPCTRL	=	0x6194
                           006195   918 _FSMCTRL	=	0x6195
                           006196   919 _CCACTRL0	=	0x6196
                           006197   920 _CCACTRL1	=	0x6197
                           006198   921 _RSSI	=	0x6198
                           006199   922 _RSSISTAT	=	0x6199
                           00619A   923 _RXFIRST	=	0x619a
                           00619B   924 _RXFIFOCNT	=	0x619b
                           00619C   925 _TXFIFOCNT	=	0x619c
                           00619D   926 _RXFIRST_PTR	=	0x619d
                           00619E   927 _RXLAST_PTR	=	0x619e
                           00619F   928 _RXP1_PTR	=	0x619f
                           0061A1   929 _TXFIRST_PTR	=	0x61a1
                           0061A2   930 _TXLAST_PTR	=	0x61a2
                           0061A3   931 _RFIRQM0	=	0x61a3
                           0061A4   932 _RFIRQM1	=	0x61a4
                           0061A5   933 _RFERRM	=	0x61a5
                           0061A7   934 _RFRND	=	0x61a7
                           0061A8   935 _MDMCTRL0	=	0x61a8
                           0061A9   936 _MDMCTRL1	=	0x61a9
                           0061AA   937 _FREQEST	=	0x61aa
                           0061AB   938 _RXCTRL	=	0x61ab
                           0061AC   939 _FSCTRL	=	0x61ac
                           0061AD   940 _FSCAL0	=	0x61ad
                           0061AE   941 _FSCAL1	=	0x61ae
                           0061AF   942 _FSCAL2	=	0x61af
                           0061B0   943 _FSCAL3	=	0x61b0
                           0061B1   944 _AGCCTRL0	=	0x61b1
                           0061B2   945 _AGCCTRL1	=	0x61b2
                           0061B3   946 _AGCCTRL2	=	0x61b3
                           0061B4   947 _AGCCTRL3	=	0x61b4
                           0061B5   948 _ADCTEST0	=	0x61b5
                           0061B6   949 _ADCTEST1	=	0x61b6
                           0061B7   950 _ADCTEST2	=	0x61b7
                           0061B8   951 _MDMTEST0	=	0x61b8
                           0061B9   952 _MDMTEST1	=	0x61b9
                           0061BA   953 _DACTEST0	=	0x61ba
                           0061BB   954 _DACTEST1	=	0x61bb
                           0061BC   955 _DACTEST2	=	0x61bc
                           0061BD   956 _ATEST	=	0x61bd
                           0061BE   957 _PTEST0	=	0x61be
                           0061BF   958 _PTEST1	=	0x61bf
                           0061FA   959 _TXFILTCFG	=	0x61fa
                           0061EB   960 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   961 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   962 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   963 _CSPPROG0	=	0x61c0
                           0061C1   964 _CSPPROG1	=	0x61c1
                           0061C2   965 _CSPPROG2	=	0x61c2
                           0061C3   966 _CSPPROG3	=	0x61c3
                           0061C4   967 _CSPPROG4	=	0x61c4
                           0061C5   968 _CSPPROG5	=	0x61c5
                           0061C6   969 _CSPPROG6	=	0x61c6
                           0061C7   970 _CSPPROG7	=	0x61c7
                           0061C8   971 _CSPPROG8	=	0x61c8
                           0061C9   972 _CSPPROG9	=	0x61c9
                           0061CA   973 _CSPPROG10	=	0x61ca
                           0061CB   974 _CSPPROG11	=	0x61cb
                           0061CC   975 _CSPPROG12	=	0x61cc
                           0061CD   976 _CSPPROG13	=	0x61cd
                           0061CE   977 _CSPPROG14	=	0x61ce
                           0061CF   978 _CSPPROG15	=	0x61cf
                           0061D0   979 _CSPPROG16	=	0x61d0
                           0061D1   980 _CSPPROG17	=	0x61d1
                           0061D2   981 _CSPPROG18	=	0x61d2
                           0061D3   982 _CSPPROG19	=	0x61d3
                           0061D4   983 _CSPPROG20	=	0x61d4
                           0061D5   984 _CSPPROG21	=	0x61d5
                           0061D6   985 _CSPPROG22	=	0x61d6
                           0061D7   986 _CSPPROG23	=	0x61d7
                           0061E0   987 _CSPCTRL	=	0x61e0
                           0061E1   988 _CSPSTAT	=	0x61e1
                           0061E2   989 _CSPX	=	0x61e2
                           0061E3   990 _CSPY	=	0x61e3
                           0061E4   991 _CSPZ	=	0x61e4
                           0061E5   992 _CSPT	=	0x61e5
                           006200   993 _USBADDR	=	0x6200
                           006201   994 _USBPOW	=	0x6201
                           006202   995 _USBIIF	=	0x6202
                           006204   996 _USBOIF	=	0x6204
                           006206   997 _USBCIF	=	0x6206
                           006207   998 _USBIIE	=	0x6207
                           006209   999 _USBOIE	=	0x6209
                           00620B  1000 _USBCIE	=	0x620b
                           00620C  1001 _USBFRML	=	0x620c
                           00620D  1002 _USBFRMH	=	0x620d
                           00620E  1003 _USBINDEX	=	0x620e
                           00620F  1004 _USBCTRL	=	0x620f
                           006210  1005 _USBMAXI	=	0x6210
                           006211  1006 _USBCS0	=	0x6211
                           006211  1007 _USBCSIL	=	0x6211
                           006212  1008 _USBCSIH	=	0x6212
                           006213  1009 _USBMAXO	=	0x6213
                           006214  1010 _USBCSOL	=	0x6214
                           006215  1011 _USBCSOH	=	0x6215
                           006216  1012 _USBCNT0	=	0x6216
                           006216  1013 _USBCNTL	=	0x6216
                           006217  1014 _USBCNTH	=	0x6217
                           006220  1015 _USBF0	=	0x6220
                           006222  1016 _USBF1	=	0x6222
                           006224  1017 _USBF2	=	0x6224
                           006226  1018 _USBF3	=	0x6226
                           006228  1019 _USBF4	=	0x6228
                           00622A  1020 _USBF5	=	0x622a
                           007080  1021 _X_P0	=	0x7080
                           007086  1022 _X_U0CSR	=	0x7086
                           007089  1023 _X_P0IFG	=	0x7089
                           00708A  1024 _X_P1IFG	=	0x708a
                           00708B  1025 _X_P2IFG	=	0x708b
                           00708C  1026 _X_PICTL	=	0x708c
                           00708D  1027 _X_P1IEN	=	0x708d
                           00708F  1028 _X_P0INP	=	0x708f
                           007090  1029 _X_P1	=	0x7090
                           007091  1030 _X_RFIRQF1	=	0x7091
                           007093  1031 _X_MPAGE	=	0x7093
                           007093  1032 _X__XPAGE	=	0x7093
                           007094  1033 _X_T2CTRL	=	0x7094
                           007095  1034 _X_ST0	=	0x7095
                           007096  1035 _X_ST1	=	0x7096
                           007097  1036 _X_ST2	=	0x7097
                           00709C  1037 _X_T2EVTCFG	=	0x709c
                           00709D  1038 _X_SLEEPSTA	=	0x709d
                           00709E  1039 _X_CLKCONSTA	=	0x709e
                           00709F  1040 _X_FMAP	=	0x709f
                           00709F  1041 _X_PSBANK	=	0x709f
                           0070A0  1042 _X_P2	=	0x70a0
                           0070A1  1043 _X_T2IRQF	=	0x70a1
                           0070A2  1044 _X_T2M0	=	0x70a2
                           0070A3  1045 _X_T2M1	=	0x70a3
                           0070A4  1046 _X_T2MOVF0	=	0x70a4
                           0070A5  1047 _X_T2MOVF1	=	0x70a5
                           0070A6  1048 _X_T2MOVF2	=	0x70a6
                           0070A7  1049 _X_T2IRQM	=	0x70a7
                           0070AB  1050 _X_P0IEN	=	0x70ab
                           0070AC  1051 _X_P2IEN	=	0x70ac
                           0070AD  1052 _X_STLOAD	=	0x70ad
                           0070AE  1053 _X_PMUX	=	0x70ae
                           0070AF  1054 _X_T1STAT	=	0x70af
                           0070B1  1055 _X_ENCDI	=	0x70b1
                           0070B2  1056 _X_ENCDO	=	0x70b2
                           0070B3  1057 _X_ENCCS	=	0x70b3
                           0070B4  1058 _X_ADCCON1	=	0x70b4
                           0070B5  1059 _X_ADCCON2	=	0x70b5
                           0070B6  1060 _X_ADCCON3	=	0x70b6
                           0070BA  1061 _X_ADCL	=	0x70ba
                           0070BB  1062 _X_ADCH	=	0x70bb
                           0070BC  1063 _X_RNDL	=	0x70bc
                           0070BD  1064 _X_RNDH	=	0x70bd
                           0070BE  1065 _X_SLEEPCMD	=	0x70be
                           0070BF  1066 _X_RFERRF	=	0x70bf
                           0070C1  1067 _X_U0DBUF	=	0x70c1
                           0070C2  1068 _X_U0BAUD	=	0x70c2
                           0070C3  1069 _X_T2MSEL	=	0x70c3
                           0070C4  1070 _X_U0UCR	=	0x70c4
                           0070C5  1071 _X_U0GCR	=	0x70c5
                           0070C6  1072 _X_CLKCONCMD	=	0x70c6
                           0070C7  1073 _X_MEMCTR	=	0x70c7
                           0070C9  1074 _X_WDCTL	=	0x70c9
                           0070CA  1075 _X_T3CNT	=	0x70ca
                           0070CB  1076 _X_T3CTL	=	0x70cb
                           0070CC  1077 _X_T3CCTL0	=	0x70cc
                           0070CD  1078 _X_T3CC0	=	0x70cd
                           0070CE  1079 _X_T3CCTL1	=	0x70ce
                           0070CF  1080 _X_T3CC1	=	0x70cf
                           0070D1  1081 _X_DMAIRQ	=	0x70d1
                           0070D2  1082 _X_DMA1CFGL	=	0x70d2
                           0070D3  1083 _X_DMA1CFGH	=	0x70d3
                           0070D4  1084 _X_DMA0CFGL	=	0x70d4
                           0070D5  1085 _X_DMA0CFGH	=	0x70d5
                           0070D6  1086 _X_DMAARM	=	0x70d6
                           0070D7  1087 _X_DMAREQ	=	0x70d7
                           0070D8  1088 _X_TIMIF	=	0x70d8
                           0070D9  1089 _X_RFD	=	0x70d9
                           0070DA  1090 _X_T1CC0L	=	0x70da
                           0070DB  1091 _X_T1CC0H	=	0x70db
                           0070DC  1092 _X_T1CC1L	=	0x70dc
                           0070DD  1093 _X_T1CC1H	=	0x70dd
                           0070DE  1094 _X_T1CC2L	=	0x70de
                           0070DF  1095 _X_T1CC2H	=	0x70df
                           0070E1  1096 _X_RFST	=	0x70e1
                           0070E2  1097 _X_T1CNTL	=	0x70e2
                           0070E3  1098 _X_T1CNTH	=	0x70e3
                           0070E4  1099 _X_T1CTL	=	0x70e4
                           0070E5  1100 _X_T1CCTL0	=	0x70e5
                           0070E6  1101 _X_T1CCTL1	=	0x70e6
                           0070E7  1102 _X_T1CCTL2	=	0x70e7
                           0070E9  1103 _X_RFIRQF0	=	0x70e9
                           0070EA  1104 _X_T4CNT	=	0x70ea
                           0070EB  1105 _X_T4CTL	=	0x70eb
                           0070EC  1106 _X_T4CCTL0	=	0x70ec
                           0070ED  1107 _X_T4CC0	=	0x70ed
                           0070EE  1108 _X_T4CCTL1	=	0x70ee
                           0070EF  1109 _X_T4CC1	=	0x70ef
                           0070F1  1110 _X_PERCFG	=	0x70f1
                           0070F2  1111 _X_APCFG	=	0x70f2
                           0070F3  1112 _X_P0SEL	=	0x70f3
                           0070F4  1113 _X_P1SEL	=	0x70f4
                           0070F5  1114 _X_P2SEL	=	0x70f5
                           0070F6  1115 _X_P1INP	=	0x70f6
                           0070F7  1116 _X_P2INP	=	0x70f7
                           0070F8  1117 _X_U1CSR	=	0x70f8
                           0070F9  1118 _X_U1DBUF	=	0x70f9
                           0070FA  1119 _X_U1BAUD	=	0x70fa
                           0070FB  1120 _X_U1UCR	=	0x70fb
                           0070FC  1121 _X_U1GCR	=	0x70fc
                           0070FD  1122 _X_P0DIR	=	0x70fd
                           0070FE  1123 _X_P1DIR	=	0x70fe
                           0070FF  1124 _X_P2DIR	=	0x70ff
                           007800  1125 _X_INFOPAGE	=	0x7800
                           00780C  1126 _X_IEEE_ADDR	=	0x780c
      000000                       1127 _initialized:
      000000                       1128 	.ds 1
                                   1129 ;--------------------------------------------------------
                                   1130 ; absolute external ram data
                                   1131 ;--------------------------------------------------------
                                   1132 	.area XABS    (ABS,XDATA)
                                   1133 ;--------------------------------------------------------
                                   1134 ; external initialized ram data
                                   1135 ;--------------------------------------------------------
                                   1136 	.area XISEG   (XDATA)
      000000                       1137 _ctimer_list_list:
      000000                       1138 	.ds 3
      000003                       1139 _ctimer_list:
      000003                       1140 	.ds 3
      000006                       1141 _ctimer_process::
      000006                       1142 	.ds 9
                                   1143 	.area HOME    (CODE)
                                   1144 	.area GSINIT0 (CODE)
                                   1145 	.area GSINIT1 (CODE)
                                   1146 	.area GSINIT2 (CODE)
                                   1147 	.area GSINIT3 (CODE)
                                   1148 	.area GSINIT4 (CODE)
                                   1149 	.area GSINIT5 (CODE)
                                   1150 	.area GSINIT  (CODE)
                                   1151 	.area GSFINAL (CODE)
                                   1152 	.area CSEG    (CODE)
                                   1153 ;--------------------------------------------------------
                                   1154 ; global & static initialisations
                                   1155 ;--------------------------------------------------------
                                   1156 	.area HOME    (CODE)
                                   1157 	.area GSINIT  (CODE)
                                   1158 	.area GSFINAL (CODE)
                                   1159 	.area GSINIT  (CODE)
                                   1160 ;--------------------------------------------------------
                                   1161 ; Home
                                   1162 ;--------------------------------------------------------
                                   1163 	.area HOME    (CODE)
                                   1164 	.area HOME    (CODE)
                                   1165 ;--------------------------------------------------------
                                   1166 ; code
                                   1167 ;--------------------------------------------------------
                                   1168 	.area CSEG    (CODE)
                                   1169 ;------------------------------------------------------------
                                   1170 ;Allocation info for local variables in function 'process_thread_ctimer_process'
                                   1171 ;------------------------------------------------------------
                                   1172 ;ev                        Allocated to stack - sp -11
                                   1173 ;data                      Allocated to stack - sp -14
                                   1174 ;process_pt                Allocated to registers r5 r6 r7 
                                   1175 ;c                         Allocated to stack - sp -5
                                   1176 ;PT_YIELD_FLAG             Allocated to registers r4 
                                   1177 ;tmp_current               Allocated to stack - sp -2
                                   1178 ;sloc0                     Allocated to stack - sp -8
                                   1179 ;------------------------------------------------------------
                                   1180 ;	../../core/sys/ctimer.c:63: PROCESS_THREAD(ctimer_process, ev, data)
                                   1181 ;	-----------------------------------------
                                   1182 ;	 function process_thread_ctimer_process
                                   1183 ;	-----------------------------------------
      000000                       1184 _process_thread_ctimer_process:
                           000007  1185 	ar7 = 0x07
                           000006  1186 	ar6 = 0x06
                           000005  1187 	ar5 = 0x05
                           000004  1188 	ar4 = 0x04
                           000003  1189 	ar3 = 0x03
                           000002  1190 	ar2 = 0x02
                           000001  1191 	ar1 = 0x01
                           000000  1192 	ar0 = 0x00
      000000 E5 81            [12] 1193 	mov	a,sp
      000002 24 09            [12] 1194 	add	a,#0x09
      000004 F5 81            [12] 1195 	mov	sp,a
                                   1196 ;	../../core/sys/ctimer.c:66: PROCESS_BEGIN();
      000006 AD 82            [24] 1197 	mov	r5,dpl
      000008 AE 83            [24] 1198 	mov	r6,dph
      00000A AF F0            [24] 1199 	mov	r7,b
      00000C 7C 01            [12] 1200 	mov	r4,#0x01
      00000E 12r00r00         [24] 1201 	lcall	__gptrget
      000011 FA               [12] 1202 	mov	r2,a
      000012 A3               [24] 1203 	inc	dptr
      000013 12r00r00         [24] 1204 	lcall	__gptrget
      000016 FB               [12] 1205 	mov	r3,a
      000017 BA 00 05         [24] 1206 	cjne	r2,#0x00,00177$
      00001A BB 00 02         [24] 1207 	cjne	r3,#0x00,00177$
      00001D 80 0C            [24] 1208 	sjmp	00101$
      00001F                       1209 00177$:
      00001F BA 4A 06         [24] 1210 	cjne	r2,#0x4a,00178$
      000022 BB 00 03         [24] 1211 	cjne	r3,#0x00,00178$
      000025 02r01r04         [24] 1212 	ljmp	00103$
      000028                       1213 00178$:
      000028 02r02rCA         [24] 1214 	ljmp	00118$
      00002B                       1215 00101$:
                                   1216 ;	../../core/sys/ctimer.c:68: for(c = list_head(ctimer_list); c != NULL; c = c->next) {
      00002B C0 05            [24] 1217 	push	ar5
      00002D C0 06            [24] 1218 	push	ar6
      00002F C0 07            [24] 1219 	push	ar7
      000031 90r00r03         [24] 1220 	mov	dptr,#_ctimer_list
      000034 E0               [24] 1221 	movx	a,@dptr
      000035 FA               [12] 1222 	mov	r2,a
      000036 A3               [24] 1223 	inc	dptr
      000037 E0               [24] 1224 	movx	a,@dptr
      000038 FB               [12] 1225 	mov	r3,a
      000039 A3               [24] 1226 	inc	dptr
      00003A E0               [24] 1227 	movx	a,@dptr
      00003B FF               [12] 1228 	mov	r7,a
      00003C 8A 82            [24] 1229 	mov	dpl,r2
      00003E 8B 83            [24] 1230 	mov	dph,r3
      000040 8F F0            [24] 1231 	mov	b,r7
      000042 12r00r00         [24] 1232 	lcall	_list_head
      000045 AD 82            [24] 1233 	mov	r5,dpl
      000047 AE 83            [24] 1234 	mov	r6,dph
      000049 AF F0            [24] 1235 	mov	r7,b
      00004B E5 81            [12] 1236 	mov	a,sp
      00004D 24 F5            [12] 1237 	add	a,#0xf5
      00004F F8               [12] 1238 	mov	r0,a
      000050 A6 05            [24] 1239 	mov	@r0,ar5
      000052 08               [12] 1240 	inc	r0
      000053 A6 06            [24] 1241 	mov	@r0,ar6
      000055 08               [12] 1242 	inc	r0
      000056 A6 07            [24] 1243 	mov	@r0,ar7
                                   1244 ;	../../core/sys/ctimer.c:87: PROCESS_END();
      000058 D0 07            [24] 1245 	pop	ar7
      00005A D0 06            [24] 1246 	pop	ar6
      00005C D0 05            [24] 1247 	pop	ar5
                                   1248 ;	../../core/sys/ctimer.c:68: for(c = list_head(ctimer_list); c != NULL; c = c->next) {
      00005E                       1249 00120$:
      00005E E5 81            [12] 1250 	mov	a,sp
      000060 24 F8            [12] 1251 	add	a,#0xf8
      000062 F8               [12] 1252 	mov	r0,a
      000063 E6               [12] 1253 	mov	a,@r0
      000064 08               [12] 1254 	inc	r0
      000065 46               [12] 1255 	orl	a,@r0
      000066 70 03            [24] 1256 	jnz	00179$
      000068 02r00rEC         [24] 1257 	ljmp	00102$
      00006B                       1258 00179$:
                                   1259 ;	../../core/sys/ctimer.c:69: etimer_set(&c->etimer, c->etimer.timer.interval);
      00006B C0 05            [24] 1260 	push	ar5
      00006D C0 06            [24] 1261 	push	ar6
      00006F C0 07            [24] 1262 	push	ar7
      000071 E5 81            [12] 1263 	mov	a,sp
      000073 24 F5            [12] 1264 	add	a,#0xf5
      000075 F8               [12] 1265 	mov	r0,a
      000076 74 03            [12] 1266 	mov	a,#0x03
      000078 26               [12] 1267 	add	a,@r0
      000079 FA               [12] 1268 	mov	r2,a
      00007A E4               [12] 1269 	clr	a
      00007B 08               [12] 1270 	inc	r0
      00007C 36               [12] 1271 	addc	a,@r0
      00007D FB               [12] 1272 	mov	r3,a
      00007E 08               [12] 1273 	inc	r0
      00007F 86 07            [24] 1274 	mov	ar7,@r0
      000081 74 02            [12] 1275 	mov	a,#0x02
      000083 2A               [12] 1276 	add	a,r2
      000084 FA               [12] 1277 	mov	r2,a
      000085 E4               [12] 1278 	clr	a
      000086 3B               [12] 1279 	addc	a,r3
      000087 FB               [12] 1280 	mov	r3,a
      000088 8A 82            [24] 1281 	mov	dpl,r2
      00008A 8B 83            [24] 1282 	mov	dph,r3
      00008C 8F F0            [24] 1283 	mov	b,r7
      00008E 12r00r00         [24] 1284 	lcall	__gptrget
      000091 FA               [12] 1285 	mov	r2,a
      000092 A3               [24] 1286 	inc	dptr
      000093 12r00r00         [24] 1287 	lcall	__gptrget
      000096 FB               [12] 1288 	mov	r3,a
      000097 E5 81            [12] 1289 	mov	a,sp
      000099 24 F5            [12] 1290 	add	a,#0xf5
      00009B F8               [12] 1291 	mov	r0,a
      00009C 74 03            [12] 1292 	mov	a,#0x03
      00009E 26               [12] 1293 	add	a,@r0
      00009F FD               [12] 1294 	mov	r5,a
      0000A0 E4               [12] 1295 	clr	a
      0000A1 08               [12] 1296 	inc	r0
      0000A2 36               [12] 1297 	addc	a,@r0
      0000A3 FE               [12] 1298 	mov	r6,a
      0000A4 08               [12] 1299 	inc	r0
      0000A5 86 07            [24] 1300 	mov	ar7,@r0
      0000A7 C0 07            [24] 1301 	push	ar7
      0000A9 C0 06            [24] 1302 	push	ar6
      0000AB C0 05            [24] 1303 	push	ar5
      0000AD C0 02            [24] 1304 	push	ar2
      0000AF C0 03            [24] 1305 	push	ar3
      0000B1 8D 82            [24] 1306 	mov	dpl,r5
      0000B3 8E 83            [24] 1307 	mov	dph,r6
      0000B5 8F F0            [24] 1308 	mov	b,r7
      0000B7 12r00r00         [24] 1309 	lcall	_etimer_set
      0000BA 15 81            [12] 1310 	dec	sp
      0000BC 15 81            [12] 1311 	dec	sp
      0000BE D0 05            [24] 1312 	pop	ar5
      0000C0 D0 06            [24] 1313 	pop	ar6
      0000C2 D0 07            [24] 1314 	pop	ar7
                                   1315 ;	../../core/sys/ctimer.c:68: for(c = list_head(ctimer_list); c != NULL; c = c->next) {
      0000C4 E5 81            [12] 1316 	mov	a,sp
      0000C6 24 F5            [12] 1317 	add	a,#0xf5
      0000C8 F8               [12] 1318 	mov	r0,a
      0000C9 86 82            [24] 1319 	mov	dpl,@r0
      0000CB 08               [12] 1320 	inc	r0
      0000CC 86 83            [24] 1321 	mov	dph,@r0
      0000CE 08               [12] 1322 	inc	r0
      0000CF 86 F0            [24] 1323 	mov	b,@r0
      0000D1 12r00r00         [24] 1324 	lcall	__gptrget
      0000D4 18               [12] 1325 	dec	r0
      0000D5 18               [12] 1326 	dec	r0
      0000D6 F6               [12] 1327 	mov	@r0,a
      0000D7 A3               [24] 1328 	inc	dptr
      0000D8 12r00r00         [24] 1329 	lcall	__gptrget
      0000DB 08               [12] 1330 	inc	r0
      0000DC F6               [12] 1331 	mov	@r0,a
      0000DD A3               [24] 1332 	inc	dptr
      0000DE 12r00r00         [24] 1333 	lcall	__gptrget
      0000E1 08               [12] 1334 	inc	r0
      0000E2 F6               [12] 1335 	mov	@r0,a
      0000E3 D0 07            [24] 1336 	pop	ar7
      0000E5 D0 06            [24] 1337 	pop	ar6
      0000E7 D0 05            [24] 1338 	pop	ar5
      0000E9 02r00r5E         [24] 1339 	ljmp	00120$
      0000EC                       1340 00102$:
                                   1341 ;	../../core/sys/ctimer.c:71: initialized = 1;
      0000EC 90r00r00         [24] 1342 	mov	dptr,#_initialized
      0000EF 74 01            [12] 1343 	mov	a,#0x01
      0000F1 F0               [24] 1344 	movx	@dptr,a
                                   1345 ;	../../core/sys/ctimer.c:73: while(1) {
      0000F2                       1346 00116$:
                                   1347 ;	../../core/sys/ctimer.c:74: PROCESS_YIELD_UNTIL(ev == PROCESS_EVENT_TIMER);
      0000F2 7C 00            [12] 1348 	mov	r4,#0x00
      0000F4 8D 82            [24] 1349 	mov	dpl,r5
      0000F6 8E 83            [24] 1350 	mov	dph,r6
      0000F8 8F F0            [24] 1351 	mov	b,r7
      0000FA 74 4A            [12] 1352 	mov	a,#0x4a
      0000FC 12r00r00         [24] 1353 	lcall	__gptrput
      0000FF A3               [24] 1354 	inc	dptr
      000100 E4               [12] 1355 	clr	a
      000101 12r00r00         [24] 1356 	lcall	__gptrput
      000104                       1357 00103$:
      000104 EC               [12] 1358 	mov	a,r4
      000105 60 0A            [24] 1359 	jz	00104$
      000107 E5 81            [12] 1360 	mov	a,sp
      000109 24 F5            [12] 1361 	add	a,#0xf5
      00010B F8               [12] 1362 	mov	r0,a
      00010C B6 88 02         [24] 1363 	cjne	@r0,#0x88,00181$
      00010F 80 06            [24] 1364 	sjmp	00108$
      000111                       1365 00181$:
      000111                       1366 00104$:
      000111 75 82 01         [24] 1367 	mov	dpl,#0x01
      000114 02r02rDB         [24] 1368 	ljmp	00125$
      000117                       1369 00108$:
                                   1370 ;	../../core/sys/ctimer.c:75: for(c = list_head(ctimer_list); c != NULL; c = c->next) {
      000117 90r00r03         [24] 1371 	mov	dptr,#_ctimer_list
      00011A E0               [24] 1372 	movx	a,@dptr
      00011B FA               [12] 1373 	mov	r2,a
      00011C A3               [24] 1374 	inc	dptr
      00011D E0               [24] 1375 	movx	a,@dptr
      00011E FB               [12] 1376 	mov	r3,a
      00011F A3               [24] 1377 	inc	dptr
      000120 E0               [24] 1378 	movx	a,@dptr
      000121 FC               [12] 1379 	mov	r4,a
      000122 8A 82            [24] 1380 	mov	dpl,r2
      000124 8B 83            [24] 1381 	mov	dph,r3
      000126 8C F0            [24] 1382 	mov	b,r4
      000128 C0 07            [24] 1383 	push	ar7
      00012A C0 06            [24] 1384 	push	ar6
      00012C C0 05            [24] 1385 	push	ar5
      00012E 12r00r00         [24] 1386 	lcall	_list_head
      000131 AA 82            [24] 1387 	mov	r2,dpl
      000133 AB 83            [24] 1388 	mov	r3,dph
      000135 AC F0            [24] 1389 	mov	r4,b
      000137 D0 05            [24] 1390 	pop	ar5
      000139 D0 06            [24] 1391 	pop	ar6
      00013B D0 07            [24] 1392 	pop	ar7
      00013D E5 81            [12] 1393 	mov	a,sp
      00013F 24 FB            [12] 1394 	add	a,#0xfb
      000141 F8               [12] 1395 	mov	r0,a
      000142 A6 02            [24] 1396 	mov	@r0,ar2
      000144 08               [12] 1397 	inc	r0
      000145 A6 03            [24] 1398 	mov	@r0,ar3
      000147 08               [12] 1399 	inc	r0
      000148 A6 04            [24] 1400 	mov	@r0,ar4
      00014A                       1401 00123$:
      00014A E5 81            [12] 1402 	mov	a,sp
      00014C 24 FB            [12] 1403 	add	a,#0xfb
      00014E F8               [12] 1404 	mov	r0,a
      00014F E6               [12] 1405 	mov	a,@r0
      000150 08               [12] 1406 	inc	r0
      000151 46               [12] 1407 	orl	a,@r0
      000152 60 9E            [24] 1408 	jz	00116$
                                   1409 ;	../../core/sys/ctimer.c:76: if(&c->etimer == data) {
      000154 C0 05            [24] 1410 	push	ar5
      000156 C0 06            [24] 1411 	push	ar6
      000158 C0 07            [24] 1412 	push	ar7
      00015A E5 81            [12] 1413 	mov	a,sp
      00015C 24 F8            [12] 1414 	add	a,#0xf8
      00015E F8               [12] 1415 	mov	r0,a
      00015F 74 03            [12] 1416 	mov	a,#0x03
      000161 26               [12] 1417 	add	a,@r0
      000162 FD               [12] 1418 	mov	r5,a
      000163 E4               [12] 1419 	clr	a
      000164 08               [12] 1420 	inc	r0
      000165 36               [12] 1421 	addc	a,@r0
      000166 FE               [12] 1422 	mov	r6,a
      000167 08               [12] 1423 	inc	r0
      000168 86 07            [24] 1424 	mov	ar7,@r0
      00016A E5 81            [12] 1425 	mov	a,sp
      00016C 24 EF            [12] 1426 	add	a,#0xef
      00016E F8               [12] 1427 	mov	r0,a
      00016F 86 02            [24] 1428 	mov	ar2,@r0
      000171 08               [12] 1429 	inc	r0
      000172 86 03            [24] 1430 	mov	ar3,@r0
      000174 08               [12] 1431 	inc	r0
      000175 86 04            [24] 1432 	mov	ar4,@r0
      000177 C0 02            [24] 1433 	push	ar2
      000179 C0 03            [24] 1434 	push	ar3
      00017B C0 04            [24] 1435 	push	ar4
      00017D 8D 82            [24] 1436 	mov	dpl,r5
      00017F 8E 83            [24] 1437 	mov	dph,r6
      000181 8F F0            [24] 1438 	mov	b,r7
      000183 12r00r00         [24] 1439 	lcall	___gptr_cmp
      000186 15 81            [12] 1440 	dec	sp
      000188 15 81            [12] 1441 	dec	sp
      00018A 15 81            [12] 1442 	dec	sp
      00018C 60 09            [24] 1443 	jz	00184$
      00018E D0 07            [24] 1444 	pop	ar7
      000190 D0 06            [24] 1445 	pop	ar6
      000192 D0 05            [24] 1446 	pop	ar5
      000194 02r02rA8         [24] 1447 	ljmp	00124$
      000197                       1448 00184$:
                                   1449 ;	../../core/sys/ctimer.c:77: list_remove(ctimer_list, c);
      000197 E5 81            [12] 1450 	mov	a,sp
      000199 24 F8            [12] 1451 	add	a,#0xf8
      00019B F8               [12] 1452 	mov	r0,a
      00019C 86 02            [24] 1453 	mov	ar2,@r0
      00019E 08               [12] 1454 	inc	r0
      00019F 86 03            [24] 1455 	mov	ar3,@r0
      0001A1 08               [12] 1456 	inc	r0
      0001A2 86 04            [24] 1457 	mov	ar4,@r0
      0001A4 90r00r03         [24] 1458 	mov	dptr,#_ctimer_list
      0001A7 E0               [24] 1459 	movx	a,@dptr
      0001A8 FD               [12] 1460 	mov	r5,a
      0001A9 A3               [24] 1461 	inc	dptr
      0001AA E0               [24] 1462 	movx	a,@dptr
      0001AB FE               [12] 1463 	mov	r6,a
      0001AC A3               [24] 1464 	inc	dptr
      0001AD E0               [24] 1465 	movx	a,@dptr
      0001AE FF               [12] 1466 	mov	r7,a
      0001AF C0 07            [24] 1467 	push	ar7
      0001B1 C0 06            [24] 1468 	push	ar6
      0001B3 C0 05            [24] 1469 	push	ar5
      0001B5 C0 02            [24] 1470 	push	ar2
      0001B7 C0 03            [24] 1471 	push	ar3
      0001B9 C0 04            [24] 1472 	push	ar4
      0001BB 8D 82            [24] 1473 	mov	dpl,r5
      0001BD 8E 83            [24] 1474 	mov	dph,r6
      0001BF 8F F0            [24] 1475 	mov	b,r7
      0001C1 12r00r00         [24] 1476 	lcall	_list_remove
      0001C4 15 81            [12] 1477 	dec	sp
      0001C6 15 81            [12] 1478 	dec	sp
      0001C8 15 81            [12] 1479 	dec	sp
      0001CA D0 05            [24] 1480 	pop	ar5
      0001CC D0 06            [24] 1481 	pop	ar6
      0001CE D0 07            [24] 1482 	pop	ar7
                                   1483 ;	../../core/sys/ctimer.c:78: PROCESS_CONTEXT_BEGIN(c->p);
      0001D0 90r00r00         [24] 1484 	mov	dptr,#_process_current
      0001D3 E0               [24] 1485 	movx	a,@dptr
      0001D4 FD               [12] 1486 	mov	r5,a
      0001D5 A3               [24] 1487 	inc	dptr
      0001D6 E0               [24] 1488 	movx	a,@dptr
      0001D7 FE               [12] 1489 	mov	r6,a
      0001D8 A3               [24] 1490 	inc	dptr
      0001D9 E0               [24] 1491 	movx	a,@dptr
      0001DA FF               [12] 1492 	mov	r7,a
      0001DB E5 81            [12] 1493 	mov	a,sp
      0001DD 24 FB            [12] 1494 	add	a,#0xfb
      0001DF F8               [12] 1495 	mov	r0,a
      0001E0 A6 05            [24] 1496 	mov	@r0,ar5
      0001E2 08               [12] 1497 	inc	r0
      0001E3 A6 06            [24] 1498 	mov	@r0,ar6
      0001E5 08               [12] 1499 	inc	r0
      0001E6 A6 07            [24] 1500 	mov	@r0,ar7
      0001E8 E5 81            [12] 1501 	mov	a,sp
      0001EA 24 F8            [12] 1502 	add	a,#0xf8
      0001EC F8               [12] 1503 	mov	r0,a
      0001ED 74 0D            [12] 1504 	mov	a,#0x0d
      0001EF 26               [12] 1505 	add	a,@r0
      0001F0 FD               [12] 1506 	mov	r5,a
      0001F1 E4               [12] 1507 	clr	a
      0001F2 08               [12] 1508 	inc	r0
      0001F3 36               [12] 1509 	addc	a,@r0
      0001F4 FE               [12] 1510 	mov	r6,a
      0001F5 08               [12] 1511 	inc	r0
      0001F6 86 07            [24] 1512 	mov	ar7,@r0
      0001F8 8D 82            [24] 1513 	mov	dpl,r5
      0001FA 8E 83            [24] 1514 	mov	dph,r6
      0001FC 8F F0            [24] 1515 	mov	b,r7
      0001FE 12r00r00         [24] 1516 	lcall	__gptrget
      000201 FD               [12] 1517 	mov	r5,a
      000202 A3               [24] 1518 	inc	dptr
      000203 12r00r00         [24] 1519 	lcall	__gptrget
      000206 FE               [12] 1520 	mov	r6,a
      000207 A3               [24] 1521 	inc	dptr
      000208 12r00r00         [24] 1522 	lcall	__gptrget
      00020B FF               [12] 1523 	mov	r7,a
      00020C 90r00r00         [24] 1524 	mov	dptr,#_process_current
      00020F ED               [12] 1525 	mov	a,r5
      000210 F0               [24] 1526 	movx	@dptr,a
      000211 EE               [12] 1527 	mov	a,r6
      000212 A3               [24] 1528 	inc	dptr
      000213 F0               [24] 1529 	movx	@dptr,a
      000214 EF               [12] 1530 	mov	a,r7
      000215 A3               [24] 1531 	inc	dptr
      000216 F0               [24] 1532 	movx	@dptr,a
                                   1533 ;	../../core/sys/ctimer.c:79: if(c->f != NULL) {
      000217 E5 81            [12] 1534 	mov	a,sp
      000219 24 F8            [12] 1535 	add	a,#0xf8
      00021B F8               [12] 1536 	mov	r0,a
      00021C 74 10            [12] 1537 	mov	a,#0x10
      00021E 26               [12] 1538 	add	a,@r0
      00021F FD               [12] 1539 	mov	r5,a
      000220 E4               [12] 1540 	clr	a
      000221 08               [12] 1541 	inc	r0
      000222 36               [12] 1542 	addc	a,@r0
      000223 FE               [12] 1543 	mov	r6,a
      000224 08               [12] 1544 	inc	r0
      000225 86 07            [24] 1545 	mov	ar7,@r0
      000227 8D 82            [24] 1546 	mov	dpl,r5
      000229 8E 83            [24] 1547 	mov	dph,r6
      00022B 8F F0            [24] 1548 	mov	b,r7
      00022D E5 81            [12] 1549 	mov	a,sp
      00022F 24 F5            [12] 1550 	add	a,#0xf5
      000231 F8               [12] 1551 	mov	r0,a
      000232 12r00r00         [24] 1552 	lcall	__gptrget
      000235 F6               [12] 1553 	mov	@r0,a
      000236 A3               [24] 1554 	inc	dptr
      000237 12r00r00         [24] 1555 	lcall	__gptrget
      00023A 08               [12] 1556 	inc	r0
      00023B F6               [12] 1557 	mov	@r0,a
      00023C D0 07            [24] 1558 	pop	ar7
      00023E D0 06            [24] 1559 	pop	ar6
      000240 D0 05            [24] 1560 	pop	ar5
      000242 E5 81            [12] 1561 	mov	a,sp
      000244 24 F8            [12] 1562 	add	a,#0xf8
      000246 F8               [12] 1563 	mov	r0,a
      000247 E6               [12] 1564 	mov	a,@r0
      000248 08               [12] 1565 	inc	r0
      000249 46               [12] 1566 	orl	a,@r0
      00024A 60 48            [24] 1567 	jz	00111$
                                   1568 ;	../../core/sys/ctimer.c:80: c->f(c->ptr);
      00024C E5 81            [12] 1569 	mov	a,sp
      00024E 24 FB            [12] 1570 	add	a,#0xfb
      000250 F8               [12] 1571 	mov	r0,a
      000251 74 12            [12] 1572 	mov	a,#0x12
      000253 26               [12] 1573 	add	a,@r0
      000254 FA               [12] 1574 	mov	r2,a
      000255 E4               [12] 1575 	clr	a
      000256 08               [12] 1576 	inc	r0
      000257 36               [12] 1577 	addc	a,@r0
      000258 FB               [12] 1578 	mov	r3,a
      000259 08               [12] 1579 	inc	r0
      00025A 86 04            [24] 1580 	mov	ar4,@r0
      00025C 8A 82            [24] 1581 	mov	dpl,r2
      00025E 8B 83            [24] 1582 	mov	dph,r3
      000260 8C F0            [24] 1583 	mov	b,r4
      000262 12r00r00         [24] 1584 	lcall	__gptrget
      000265 FA               [12] 1585 	mov	r2,a
      000266 A3               [24] 1586 	inc	dptr
      000267 12r00r00         [24] 1587 	lcall	__gptrget
      00026A FB               [12] 1588 	mov	r3,a
      00026B A3               [24] 1589 	inc	dptr
      00026C 12r00r00         [24] 1590 	lcall	__gptrget
      00026F FC               [12] 1591 	mov	r4,a
      000270 C0 07            [24] 1592 	push	ar7
      000272 C0 06            [24] 1593 	push	ar6
      000274 C0 05            [24] 1594 	push	ar5
      000276 12r02r7B         [24] 1595 	lcall	00186$
      000279 80 13            [24] 1596 	sjmp	00187$
      00027B                       1597 00186$:
      00027B E5 81            [12] 1598 	mov	a,sp
      00027D 24 F3            [12] 1599 	add	a,#0xf3
      00027F F8               [12] 1600 	mov	r0,a
      000280 E6               [12] 1601 	mov	a,@r0
      000281 C0 E0            [24] 1602 	push	acc
      000283 08               [12] 1603 	inc	r0
      000284 E6               [12] 1604 	mov	a,@r0
      000285 C0 E0            [24] 1605 	push	acc
      000287 8A 82            [24] 1606 	mov	dpl,r2
      000289 8B 83            [24] 1607 	mov	dph,r3
      00028B 8C F0            [24] 1608 	mov	b,r4
      00028D 22               [24] 1609 	ret
      00028E                       1610 00187$:
      00028E D0 05            [24] 1611 	pop	ar5
      000290 D0 06            [24] 1612 	pop	ar6
      000292 D0 07            [24] 1613 	pop	ar7
      000294                       1614 00111$:
                                   1615 ;	../../core/sys/ctimer.c:82: PROCESS_CONTEXT_END(c->p);
      000294 A8 81            [24] 1616 	mov	r0,sp
      000296 18               [12] 1617 	dec	r0
      000297 18               [12] 1618 	dec	r0
      000298 90r00r00         [24] 1619 	mov	dptr,#_process_current
      00029B E6               [12] 1620 	mov	a,@r0
      00029C F0               [24] 1621 	movx	@dptr,a
      00029D 08               [12] 1622 	inc	r0
      00029E E6               [12] 1623 	mov	a,@r0
      00029F A3               [24] 1624 	inc	dptr
      0002A0 F0               [24] 1625 	movx	@dptr,a
      0002A1 08               [12] 1626 	inc	r0
      0002A2 E6               [12] 1627 	mov	a,@r0
      0002A3 A3               [24] 1628 	inc	dptr
      0002A4 F0               [24] 1629 	movx	@dptr,a
                                   1630 ;	../../core/sys/ctimer.c:83: break;
      0002A5 02r00rF2         [24] 1631 	ljmp	00116$
      0002A8                       1632 00124$:
                                   1633 ;	../../core/sys/ctimer.c:75: for(c = list_head(ctimer_list); c != NULL; c = c->next) {
      0002A8 E5 81            [12] 1634 	mov	a,sp
      0002AA 24 FB            [12] 1635 	add	a,#0xfb
      0002AC F8               [12] 1636 	mov	r0,a
      0002AD 86 82            [24] 1637 	mov	dpl,@r0
      0002AF 08               [12] 1638 	inc	r0
      0002B0 86 83            [24] 1639 	mov	dph,@r0
      0002B2 08               [12] 1640 	inc	r0
      0002B3 86 F0            [24] 1641 	mov	b,@r0
      0002B5 12r00r00         [24] 1642 	lcall	__gptrget
      0002B8 18               [12] 1643 	dec	r0
      0002B9 18               [12] 1644 	dec	r0
      0002BA F6               [12] 1645 	mov	@r0,a
      0002BB A3               [24] 1646 	inc	dptr
      0002BC 12r00r00         [24] 1647 	lcall	__gptrget
      0002BF 08               [12] 1648 	inc	r0
      0002C0 F6               [12] 1649 	mov	@r0,a
      0002C1 A3               [24] 1650 	inc	dptr
      0002C2 12r00r00         [24] 1651 	lcall	__gptrget
      0002C5 08               [12] 1652 	inc	r0
      0002C6 F6               [12] 1653 	mov	@r0,a
      0002C7 02r01r4A         [24] 1654 	ljmp	00123$
                                   1655 ;	../../core/sys/ctimer.c:87: PROCESS_END();
      0002CA                       1656 00118$:
      0002CA 8D 82            [24] 1657 	mov	dpl,r5
      0002CC 8E 83            [24] 1658 	mov	dph,r6
      0002CE 8F F0            [24] 1659 	mov	b,r7
      0002D0 E4               [12] 1660 	clr	a
      0002D1 12r00r00         [24] 1661 	lcall	__gptrput
      0002D4 A3               [24] 1662 	inc	dptr
      0002D5 12r00r00         [24] 1663 	lcall	__gptrput
      0002D8 75 82 03         [24] 1664 	mov	dpl,#0x03
      0002DB                       1665 00125$:
                                   1666 ;	../../core/sys/ctimer.c:88: }
      0002DB E5 81            [12] 1667 	mov	a,sp
      0002DD 24 F7            [12] 1668 	add	a,#0xf7
      0002DF F5 81            [12] 1669 	mov	sp,a
      0002E1 22               [24] 1670 	ret
                                   1671 ;------------------------------------------------------------
                                   1672 ;Allocation info for local variables in function 'ctimer_init'
                                   1673 ;------------------------------------------------------------
                                   1674 ;	../../core/sys/ctimer.c:91: ctimer_init(void)
                                   1675 ;	-----------------------------------------
                                   1676 ;	 function ctimer_init
                                   1677 ;	-----------------------------------------
      0002E2                       1678 _ctimer_init:
                                   1679 ;	../../core/sys/ctimer.c:93: initialized = 0;
      0002E2 90r00r00         [24] 1680 	mov	dptr,#_initialized
      0002E5 E4               [12] 1681 	clr	a
      0002E6 F0               [24] 1682 	movx	@dptr,a
                                   1683 ;	../../core/sys/ctimer.c:94: list_init(ctimer_list);
      0002E7 90r00r03         [24] 1684 	mov	dptr,#_ctimer_list
      0002EA E0               [24] 1685 	movx	a,@dptr
      0002EB FD               [12] 1686 	mov	r5,a
      0002EC A3               [24] 1687 	inc	dptr
      0002ED E0               [24] 1688 	movx	a,@dptr
      0002EE FE               [12] 1689 	mov	r6,a
      0002EF A3               [24] 1690 	inc	dptr
      0002F0 E0               [24] 1691 	movx	a,@dptr
      0002F1 FF               [12] 1692 	mov	r7,a
      0002F2 8D 82            [24] 1693 	mov	dpl,r5
      0002F4 8E 83            [24] 1694 	mov	dph,r6
      0002F6 8F F0            [24] 1695 	mov	b,r7
      0002F8 12r00r00         [24] 1696 	lcall	_list_init
                                   1697 ;	../../core/sys/ctimer.c:95: process_start(&ctimer_process, NULL);
      0002FB E4               [12] 1698 	clr	a
      0002FC C0 E0            [24] 1699 	push	acc
      0002FE C0 E0            [24] 1700 	push	acc
      000300 C0 E0            [24] 1701 	push	acc
      000302 90r00r06         [24] 1702 	mov	dptr,#_ctimer_process
      000305 75 F0 00         [24] 1703 	mov	b,#0x00
      000308 12r00r00         [24] 1704 	lcall	_process_start
      00030B 15 81            [12] 1705 	dec	sp
      00030D 15 81            [12] 1706 	dec	sp
      00030F 15 81            [12] 1707 	dec	sp
                                   1708 ;	../../core/sys/ctimer.c:96: }
      000311 22               [24] 1709 	ret
                                   1710 ;------------------------------------------------------------
                                   1711 ;Allocation info for local variables in function 'ctimer_set'
                                   1712 ;------------------------------------------------------------
                                   1713 ;t                         Allocated to stack - sp -6
                                   1714 ;f                         Allocated to stack - sp -8
                                   1715 ;ptr                       Allocated to stack - sp -11
                                   1716 ;c                         Allocated to stack - sp -2
                                   1717 ;tmp_current               Allocated to registers r5 r6 r7 
                                   1718 ;------------------------------------------------------------
                                   1719 ;	../../core/sys/ctimer.c:99: ctimer_set(struct ctimer *c, clock_time_t t,
                                   1720 ;	-----------------------------------------
                                   1721 ;	 function ctimer_set
                                   1722 ;	-----------------------------------------
      000312                       1723 _ctimer_set:
      000312 C0 82            [24] 1724 	push	dpl
      000314 C0 83            [24] 1725 	push	dph
      000316 C0 F0            [24] 1726 	push	b
                                   1727 ;	../../core/sys/ctimer.c:103: c->p = PROCESS_CURRENT();
      000318 A8 81            [24] 1728 	mov	r0,sp
      00031A 18               [12] 1729 	dec	r0
      00031B 18               [12] 1730 	dec	r0
      00031C 74 0D            [12] 1731 	mov	a,#0x0d
      00031E 26               [12] 1732 	add	a,@r0
      00031F FA               [12] 1733 	mov	r2,a
      000320 E4               [12] 1734 	clr	a
      000321 08               [12] 1735 	inc	r0
      000322 36               [12] 1736 	addc	a,@r0
      000323 FB               [12] 1737 	mov	r3,a
      000324 08               [12] 1738 	inc	r0
      000325 86 04            [24] 1739 	mov	ar4,@r0
      000327 90r00r00         [24] 1740 	mov	dptr,#_process_current
      00032A E0               [24] 1741 	movx	a,@dptr
      00032B FD               [12] 1742 	mov	r5,a
      00032C A3               [24] 1743 	inc	dptr
      00032D E0               [24] 1744 	movx	a,@dptr
      00032E FE               [12] 1745 	mov	r6,a
      00032F A3               [24] 1746 	inc	dptr
      000330 E0               [24] 1747 	movx	a,@dptr
      000331 FF               [12] 1748 	mov	r7,a
      000332 8A 82            [24] 1749 	mov	dpl,r2
      000334 8B 83            [24] 1750 	mov	dph,r3
      000336 8C F0            [24] 1751 	mov	b,r4
      000338 ED               [12] 1752 	mov	a,r5
      000339 12r00r00         [24] 1753 	lcall	__gptrput
      00033C A3               [24] 1754 	inc	dptr
      00033D EE               [12] 1755 	mov	a,r6
      00033E 12r00r00         [24] 1756 	lcall	__gptrput
      000341 A3               [24] 1757 	inc	dptr
      000342 EF               [12] 1758 	mov	a,r7
      000343 12r00r00         [24] 1759 	lcall	__gptrput
                                   1760 ;	../../core/sys/ctimer.c:104: c->f = f;
      000346 A8 81            [24] 1761 	mov	r0,sp
      000348 18               [12] 1762 	dec	r0
      000349 18               [12] 1763 	dec	r0
      00034A 74 10            [12] 1764 	mov	a,#0x10
      00034C 26               [12] 1765 	add	a,@r0
      00034D FD               [12] 1766 	mov	r5,a
      00034E E4               [12] 1767 	clr	a
      00034F 08               [12] 1768 	inc	r0
      000350 36               [12] 1769 	addc	a,@r0
      000351 FE               [12] 1770 	mov	r6,a
      000352 08               [12] 1771 	inc	r0
      000353 86 07            [24] 1772 	mov	ar7,@r0
      000355 8D 82            [24] 1773 	mov	dpl,r5
      000357 8E 83            [24] 1774 	mov	dph,r6
      000359 8F F0            [24] 1775 	mov	b,r7
      00035B E5 81            [12] 1776 	mov	a,sp
      00035D 24 F8            [12] 1777 	add	a,#0xf8
      00035F F8               [12] 1778 	mov	r0,a
      000360 E6               [12] 1779 	mov	a,@r0
      000361 12r00r00         [24] 1780 	lcall	__gptrput
      000364 A3               [24] 1781 	inc	dptr
      000365 08               [12] 1782 	inc	r0
      000366 E6               [12] 1783 	mov	a,@r0
      000367 12r00r00         [24] 1784 	lcall	__gptrput
                                   1785 ;	../../core/sys/ctimer.c:105: c->ptr = ptr;
      00036A A8 81            [24] 1786 	mov	r0,sp
      00036C 18               [12] 1787 	dec	r0
      00036D 18               [12] 1788 	dec	r0
      00036E 74 12            [12] 1789 	mov	a,#0x12
      000370 26               [12] 1790 	add	a,@r0
      000371 FD               [12] 1791 	mov	r5,a
      000372 E4               [12] 1792 	clr	a
      000373 08               [12] 1793 	inc	r0
      000374 36               [12] 1794 	addc	a,@r0
      000375 FE               [12] 1795 	mov	r6,a
      000376 08               [12] 1796 	inc	r0
      000377 86 07            [24] 1797 	mov	ar7,@r0
      000379 8D 82            [24] 1798 	mov	dpl,r5
      00037B 8E 83            [24] 1799 	mov	dph,r6
      00037D 8F F0            [24] 1800 	mov	b,r7
      00037F E5 81            [12] 1801 	mov	a,sp
      000381 24 F5            [12] 1802 	add	a,#0xf5
      000383 F8               [12] 1803 	mov	r0,a
      000384 E6               [12] 1804 	mov	a,@r0
      000385 12r00r00         [24] 1805 	lcall	__gptrput
      000388 A3               [24] 1806 	inc	dptr
      000389 08               [12] 1807 	inc	r0
      00038A E6               [12] 1808 	mov	a,@r0
      00038B 12r00r00         [24] 1809 	lcall	__gptrput
      00038E A3               [24] 1810 	inc	dptr
      00038F 08               [12] 1811 	inc	r0
      000390 E6               [12] 1812 	mov	a,@r0
      000391 12r00r00         [24] 1813 	lcall	__gptrput
                                   1814 ;	../../core/sys/ctimer.c:106: if(initialized) {
      000394 90r00r00         [24] 1815 	mov	dptr,#_initialized
      000397 E0               [24] 1816 	movx	a,@dptr
      000398 60 59            [24] 1817 	jz	00102$
                                   1818 ;	../../core/sys/ctimer.c:107: PROCESS_CONTEXT_BEGIN(&ctimer_process);
      00039A 90r00r00         [24] 1819 	mov	dptr,#_process_current
      00039D E0               [24] 1820 	movx	a,@dptr
      00039E FD               [12] 1821 	mov	r5,a
      00039F A3               [24] 1822 	inc	dptr
      0003A0 E0               [24] 1823 	movx	a,@dptr
      0003A1 FE               [12] 1824 	mov	r6,a
      0003A2 A3               [24] 1825 	inc	dptr
      0003A3 E0               [24] 1826 	movx	a,@dptr
      0003A4 FF               [12] 1827 	mov	r7,a
      0003A5 90r00r00         [24] 1828 	mov	dptr,#_process_current
      0003A8 74r06            [12] 1829 	mov	a,#_ctimer_process
      0003AA F0               [24] 1830 	movx	@dptr,a
      0003AB 74s00            [12] 1831 	mov	a,#(_ctimer_process >> 8)
      0003AD A3               [24] 1832 	inc	dptr
      0003AE F0               [24] 1833 	movx	@dptr,a
      0003AF E4               [12] 1834 	clr	a
      0003B0 A3               [24] 1835 	inc	dptr
      0003B1 F0               [24] 1836 	movx	@dptr,a
                                   1837 ;	../../core/sys/ctimer.c:108: etimer_set(&c->etimer, t);
      0003B2 A8 81            [24] 1838 	mov	r0,sp
      0003B4 18               [12] 1839 	dec	r0
      0003B5 18               [12] 1840 	dec	r0
      0003B6 74 03            [12] 1841 	mov	a,#0x03
      0003B8 26               [12] 1842 	add	a,@r0
      0003B9 FA               [12] 1843 	mov	r2,a
      0003BA E4               [12] 1844 	clr	a
      0003BB 08               [12] 1845 	inc	r0
      0003BC 36               [12] 1846 	addc	a,@r0
      0003BD FB               [12] 1847 	mov	r3,a
      0003BE 08               [12] 1848 	inc	r0
      0003BF 86 04            [24] 1849 	mov	ar4,@r0
      0003C1 C0 07            [24] 1850 	push	ar7
      0003C3 C0 06            [24] 1851 	push	ar6
      0003C5 C0 05            [24] 1852 	push	ar5
      0003C7 E5 81            [12] 1853 	mov	a,sp
      0003C9 24 F7            [12] 1854 	add	a,#0xf7
      0003CB F8               [12] 1855 	mov	r0,a
      0003CC E6               [12] 1856 	mov	a,@r0
      0003CD C0 E0            [24] 1857 	push	acc
      0003CF 08               [12] 1858 	inc	r0
      0003D0 E6               [12] 1859 	mov	a,@r0
      0003D1 C0 E0            [24] 1860 	push	acc
      0003D3 8A 82            [24] 1861 	mov	dpl,r2
      0003D5 8B 83            [24] 1862 	mov	dph,r3
      0003D7 8C F0            [24] 1863 	mov	b,r4
      0003D9 12r00r00         [24] 1864 	lcall	_etimer_set
      0003DC 15 81            [12] 1865 	dec	sp
      0003DE 15 81            [12] 1866 	dec	sp
      0003E0 D0 05            [24] 1867 	pop	ar5
      0003E2 D0 06            [24] 1868 	pop	ar6
      0003E4 D0 07            [24] 1869 	pop	ar7
                                   1870 ;	../../core/sys/ctimer.c:109: PROCESS_CONTEXT_END(&ctimer_process);
      0003E6 90r00r00         [24] 1871 	mov	dptr,#_process_current
      0003E9 ED               [12] 1872 	mov	a,r5
      0003EA F0               [24] 1873 	movx	@dptr,a
      0003EB EE               [12] 1874 	mov	a,r6
      0003EC A3               [24] 1875 	inc	dptr
      0003ED F0               [24] 1876 	movx	@dptr,a
      0003EE EF               [12] 1877 	mov	a,r7
      0003EF A3               [24] 1878 	inc	dptr
      0003F0 F0               [24] 1879 	movx	@dptr,a
      0003F1 80 2B            [24] 1880 	sjmp	00103$
      0003F3                       1881 00102$:
                                   1882 ;	../../core/sys/ctimer.c:111: c->etimer.timer.interval = t;
      0003F3 A8 81            [24] 1883 	mov	r0,sp
      0003F5 18               [12] 1884 	dec	r0
      0003F6 18               [12] 1885 	dec	r0
      0003F7 74 03            [12] 1886 	mov	a,#0x03
      0003F9 26               [12] 1887 	add	a,@r0
      0003FA FD               [12] 1888 	mov	r5,a
      0003FB E4               [12] 1889 	clr	a
      0003FC 08               [12] 1890 	inc	r0
      0003FD 36               [12] 1891 	addc	a,@r0
      0003FE FE               [12] 1892 	mov	r6,a
      0003FF 08               [12] 1893 	inc	r0
      000400 86 07            [24] 1894 	mov	ar7,@r0
      000402 74 02            [12] 1895 	mov	a,#0x02
      000404 2D               [12] 1896 	add	a,r5
      000405 FD               [12] 1897 	mov	r5,a
      000406 E4               [12] 1898 	clr	a
      000407 3E               [12] 1899 	addc	a,r6
      000408 FE               [12] 1900 	mov	r6,a
      000409 8D 82            [24] 1901 	mov	dpl,r5
      00040B 8E 83            [24] 1902 	mov	dph,r6
      00040D 8F F0            [24] 1903 	mov	b,r7
      00040F E5 81            [12] 1904 	mov	a,sp
      000411 24 FA            [12] 1905 	add	a,#0xfa
      000413 F8               [12] 1906 	mov	r0,a
      000414 E6               [12] 1907 	mov	a,@r0
      000415 12r00r00         [24] 1908 	lcall	__gptrput
      000418 A3               [24] 1909 	inc	dptr
      000419 08               [12] 1910 	inc	r0
      00041A E6               [12] 1911 	mov	a,@r0
      00041B 12r00r00         [24] 1912 	lcall	__gptrput
      00041E                       1913 00103$:
                                   1914 ;	../../core/sys/ctimer.c:114: list_remove(ctimer_list, c);
      00041E A8 81            [24] 1915 	mov	r0,sp
      000420 18               [12] 1916 	dec	r0
      000421 18               [12] 1917 	dec	r0
      000422 86 05            [24] 1918 	mov	ar5,@r0
      000424 08               [12] 1919 	inc	r0
      000425 86 06            [24] 1920 	mov	ar6,@r0
      000427 08               [12] 1921 	inc	r0
      000428 86 07            [24] 1922 	mov	ar7,@r0
      00042A 90r00r03         [24] 1923 	mov	dptr,#_ctimer_list
      00042D E0               [24] 1924 	movx	a,@dptr
      00042E FA               [12] 1925 	mov	r2,a
      00042F A3               [24] 1926 	inc	dptr
      000430 E0               [24] 1927 	movx	a,@dptr
      000431 FB               [12] 1928 	mov	r3,a
      000432 A3               [24] 1929 	inc	dptr
      000433 E0               [24] 1930 	movx	a,@dptr
      000434 FC               [12] 1931 	mov	r4,a
      000435 C0 05            [24] 1932 	push	ar5
      000437 C0 06            [24] 1933 	push	ar6
      000439 C0 07            [24] 1934 	push	ar7
      00043B 8A 82            [24] 1935 	mov	dpl,r2
      00043D 8B 83            [24] 1936 	mov	dph,r3
      00043F 8C F0            [24] 1937 	mov	b,r4
      000441 12r00r00         [24] 1938 	lcall	_list_remove
      000444 15 81            [12] 1939 	dec	sp
      000446 15 81            [12] 1940 	dec	sp
      000448 15 81            [12] 1941 	dec	sp
                                   1942 ;	../../core/sys/ctimer.c:115: list_add(ctimer_list, c);
      00044A A8 81            [24] 1943 	mov	r0,sp
      00044C 18               [12] 1944 	dec	r0
      00044D 18               [12] 1945 	dec	r0
      00044E 86 05            [24] 1946 	mov	ar5,@r0
      000450 08               [12] 1947 	inc	r0
      000451 86 06            [24] 1948 	mov	ar6,@r0
      000453 08               [12] 1949 	inc	r0
      000454 86 07            [24] 1950 	mov	ar7,@r0
      000456 90r00r03         [24] 1951 	mov	dptr,#_ctimer_list
      000459 E0               [24] 1952 	movx	a,@dptr
      00045A FA               [12] 1953 	mov	r2,a
      00045B A3               [24] 1954 	inc	dptr
      00045C E0               [24] 1955 	movx	a,@dptr
      00045D FB               [12] 1956 	mov	r3,a
      00045E A3               [24] 1957 	inc	dptr
      00045F E0               [24] 1958 	movx	a,@dptr
      000460 FC               [12] 1959 	mov	r4,a
      000461 C0 05            [24] 1960 	push	ar5
      000463 C0 06            [24] 1961 	push	ar6
      000465 C0 07            [24] 1962 	push	ar7
      000467 8A 82            [24] 1963 	mov	dpl,r2
      000469 8B 83            [24] 1964 	mov	dph,r3
      00046B 8C F0            [24] 1965 	mov	b,r4
      00046D 12r00r00         [24] 1966 	lcall	_list_add
      000470 15 81            [12] 1967 	dec	sp
      000472 15 81            [12] 1968 	dec	sp
      000474 15 81            [12] 1969 	dec	sp
                                   1970 ;	../../core/sys/ctimer.c:116: }
      000476 15 81            [12] 1971 	dec	sp
      000478 15 81            [12] 1972 	dec	sp
      00047A 15 81            [12] 1973 	dec	sp
      00047C 22               [24] 1974 	ret
                                   1975 ;------------------------------------------------------------
                                   1976 ;Allocation info for local variables in function 'ctimer_reset'
                                   1977 ;------------------------------------------------------------
                                   1978 ;c                         Allocated to stack - sp -2
                                   1979 ;tmp_current               Allocated to registers r7 r6 r5 
                                   1980 ;------------------------------------------------------------
                                   1981 ;	../../core/sys/ctimer.c:119: ctimer_reset(struct ctimer *c)
                                   1982 ;	-----------------------------------------
                                   1983 ;	 function ctimer_reset
                                   1984 ;	-----------------------------------------
      00047D                       1985 _ctimer_reset:
      00047D C0 82            [24] 1986 	push	dpl
      00047F C0 83            [24] 1987 	push	dph
      000481 C0 F0            [24] 1988 	push	b
                                   1989 ;	../../core/sys/ctimer.c:121: if(initialized) {
      000483 90r00r00         [24] 1990 	mov	dptr,#_initialized
      000486 E0               [24] 1991 	movx	a,@dptr
      000487 60 4D            [24] 1992 	jz	00102$
                                   1993 ;	../../core/sys/ctimer.c:122: PROCESS_CONTEXT_BEGIN(&ctimer_process);
      000489 90r00r00         [24] 1994 	mov	dptr,#_process_current
      00048C E0               [24] 1995 	movx	a,@dptr
      00048D FA               [12] 1996 	mov	r2,a
      00048E A3               [24] 1997 	inc	dptr
      00048F E0               [24] 1998 	movx	a,@dptr
      000490 FB               [12] 1999 	mov	r3,a
      000491 A3               [24] 2000 	inc	dptr
      000492 E0               [24] 2001 	movx	a,@dptr
      000493 FC               [12] 2002 	mov	r4,a
      000494 8A 07            [24] 2003 	mov	ar7,r2
      000496 8B 06            [24] 2004 	mov	ar6,r3
      000498 8C 05            [24] 2005 	mov	ar5,r4
      00049A 90r00r00         [24] 2006 	mov	dptr,#_process_current
      00049D 74r06            [12] 2007 	mov	a,#_ctimer_process
      00049F F0               [24] 2008 	movx	@dptr,a
      0004A0 74s00            [12] 2009 	mov	a,#(_ctimer_process >> 8)
      0004A2 A3               [24] 2010 	inc	dptr
      0004A3 F0               [24] 2011 	movx	@dptr,a
      0004A4 E4               [12] 2012 	clr	a
      0004A5 A3               [24] 2013 	inc	dptr
      0004A6 F0               [24] 2014 	movx	@dptr,a
                                   2015 ;	../../core/sys/ctimer.c:123: etimer_reset(&c->etimer);
      0004A7 A8 81            [24] 2016 	mov	r0,sp
      0004A9 18               [12] 2017 	dec	r0
      0004AA 18               [12] 2018 	dec	r0
      0004AB 74 03            [12] 2019 	mov	a,#0x03
      0004AD 26               [12] 2020 	add	a,@r0
      0004AE FA               [12] 2021 	mov	r2,a
      0004AF E4               [12] 2022 	clr	a
      0004B0 08               [12] 2023 	inc	r0
      0004B1 36               [12] 2024 	addc	a,@r0
      0004B2 FB               [12] 2025 	mov	r3,a
      0004B3 08               [12] 2026 	inc	r0
      0004B4 86 04            [24] 2027 	mov	ar4,@r0
      0004B6 8A 82            [24] 2028 	mov	dpl,r2
      0004B8 8B 83            [24] 2029 	mov	dph,r3
      0004BA 8C F0            [24] 2030 	mov	b,r4
      0004BC C0 07            [24] 2031 	push	ar7
      0004BE C0 06            [24] 2032 	push	ar6
      0004C0 C0 05            [24] 2033 	push	ar5
      0004C2 12r00r00         [24] 2034 	lcall	_etimer_reset
      0004C5 D0 05            [24] 2035 	pop	ar5
      0004C7 D0 06            [24] 2036 	pop	ar6
      0004C9 D0 07            [24] 2037 	pop	ar7
                                   2038 ;	../../core/sys/ctimer.c:124: PROCESS_CONTEXT_END(&ctimer_process);
      0004CB 90r00r00         [24] 2039 	mov	dptr,#_process_current
      0004CE EF               [12] 2040 	mov	a,r7
      0004CF F0               [24] 2041 	movx	@dptr,a
      0004D0 EE               [12] 2042 	mov	a,r6
      0004D1 A3               [24] 2043 	inc	dptr
      0004D2 F0               [24] 2044 	movx	@dptr,a
      0004D3 ED               [12] 2045 	mov	a,r5
      0004D4 A3               [24] 2046 	inc	dptr
      0004D5 F0               [24] 2047 	movx	@dptr,a
      0004D6                       2048 00102$:
                                   2049 ;	../../core/sys/ctimer.c:127: list_remove(ctimer_list, c);
      0004D6 A8 81            [24] 2050 	mov	r0,sp
      0004D8 18               [12] 2051 	dec	r0
      0004D9 18               [12] 2052 	dec	r0
      0004DA 86 02            [24] 2053 	mov	ar2,@r0
      0004DC 08               [12] 2054 	inc	r0
      0004DD 86 03            [24] 2055 	mov	ar3,@r0
      0004DF 08               [12] 2056 	inc	r0
      0004E0 86 04            [24] 2057 	mov	ar4,@r0
      0004E2 90r00r03         [24] 2058 	mov	dptr,#_ctimer_list
      0004E5 E0               [24] 2059 	movx	a,@dptr
      0004E6 FD               [12] 2060 	mov	r5,a
      0004E7 A3               [24] 2061 	inc	dptr
      0004E8 E0               [24] 2062 	movx	a,@dptr
      0004E9 FE               [12] 2063 	mov	r6,a
      0004EA A3               [24] 2064 	inc	dptr
      0004EB E0               [24] 2065 	movx	a,@dptr
      0004EC FF               [12] 2066 	mov	r7,a
      0004ED C0 02            [24] 2067 	push	ar2
      0004EF C0 03            [24] 2068 	push	ar3
      0004F1 C0 04            [24] 2069 	push	ar4
      0004F3 8D 82            [24] 2070 	mov	dpl,r5
      0004F5 8E 83            [24] 2071 	mov	dph,r6
      0004F7 8F F0            [24] 2072 	mov	b,r7
      0004F9 12r00r00         [24] 2073 	lcall	_list_remove
      0004FC 15 81            [12] 2074 	dec	sp
      0004FE 15 81            [12] 2075 	dec	sp
      000500 15 81            [12] 2076 	dec	sp
                                   2077 ;	../../core/sys/ctimer.c:128: list_add(ctimer_list, c);
      000502 A8 81            [24] 2078 	mov	r0,sp
      000504 18               [12] 2079 	dec	r0
      000505 18               [12] 2080 	dec	r0
      000506 86 05            [24] 2081 	mov	ar5,@r0
      000508 08               [12] 2082 	inc	r0
      000509 86 06            [24] 2083 	mov	ar6,@r0
      00050B 08               [12] 2084 	inc	r0
      00050C 86 07            [24] 2085 	mov	ar7,@r0
      00050E 90r00r03         [24] 2086 	mov	dptr,#_ctimer_list
      000511 E0               [24] 2087 	movx	a,@dptr
      000512 FA               [12] 2088 	mov	r2,a
      000513 A3               [24] 2089 	inc	dptr
      000514 E0               [24] 2090 	movx	a,@dptr
      000515 FB               [12] 2091 	mov	r3,a
      000516 A3               [24] 2092 	inc	dptr
      000517 E0               [24] 2093 	movx	a,@dptr
      000518 FC               [12] 2094 	mov	r4,a
      000519 C0 05            [24] 2095 	push	ar5
      00051B C0 06            [24] 2096 	push	ar6
      00051D C0 07            [24] 2097 	push	ar7
      00051F 8A 82            [24] 2098 	mov	dpl,r2
      000521 8B 83            [24] 2099 	mov	dph,r3
      000523 8C F0            [24] 2100 	mov	b,r4
      000525 12r00r00         [24] 2101 	lcall	_list_add
      000528 15 81            [12] 2102 	dec	sp
      00052A 15 81            [12] 2103 	dec	sp
      00052C 15 81            [12] 2104 	dec	sp
                                   2105 ;	../../core/sys/ctimer.c:129: }
      00052E 15 81            [12] 2106 	dec	sp
      000530 15 81            [12] 2107 	dec	sp
      000532 15 81            [12] 2108 	dec	sp
      000534 22               [24] 2109 	ret
                                   2110 ;------------------------------------------------------------
                                   2111 ;Allocation info for local variables in function 'ctimer_restart'
                                   2112 ;------------------------------------------------------------
                                   2113 ;c                         Allocated to stack - sp -2
                                   2114 ;tmp_current               Allocated to registers r7 r6 r5 
                                   2115 ;------------------------------------------------------------
                                   2116 ;	../../core/sys/ctimer.c:132: ctimer_restart(struct ctimer *c)
                                   2117 ;	-----------------------------------------
                                   2118 ;	 function ctimer_restart
                                   2119 ;	-----------------------------------------
      000535                       2120 _ctimer_restart:
      000535 C0 82            [24] 2121 	push	dpl
      000537 C0 83            [24] 2122 	push	dph
      000539 C0 F0            [24] 2123 	push	b
                                   2124 ;	../../core/sys/ctimer.c:134: if(initialized) {
      00053B 90r00r00         [24] 2125 	mov	dptr,#_initialized
      00053E E0               [24] 2126 	movx	a,@dptr
      00053F 60 4D            [24] 2127 	jz	00102$
                                   2128 ;	../../core/sys/ctimer.c:135: PROCESS_CONTEXT_BEGIN(&ctimer_process);
      000541 90r00r00         [24] 2129 	mov	dptr,#_process_current
      000544 E0               [24] 2130 	movx	a,@dptr
      000545 FA               [12] 2131 	mov	r2,a
      000546 A3               [24] 2132 	inc	dptr
      000547 E0               [24] 2133 	movx	a,@dptr
      000548 FB               [12] 2134 	mov	r3,a
      000549 A3               [24] 2135 	inc	dptr
      00054A E0               [24] 2136 	movx	a,@dptr
      00054B FC               [12] 2137 	mov	r4,a
      00054C 8A 07            [24] 2138 	mov	ar7,r2
      00054E 8B 06            [24] 2139 	mov	ar6,r3
      000550 8C 05            [24] 2140 	mov	ar5,r4
      000552 90r00r00         [24] 2141 	mov	dptr,#_process_current
      000555 74r06            [12] 2142 	mov	a,#_ctimer_process
      000557 F0               [24] 2143 	movx	@dptr,a
      000558 74s00            [12] 2144 	mov	a,#(_ctimer_process >> 8)
      00055A A3               [24] 2145 	inc	dptr
      00055B F0               [24] 2146 	movx	@dptr,a
      00055C E4               [12] 2147 	clr	a
      00055D A3               [24] 2148 	inc	dptr
      00055E F0               [24] 2149 	movx	@dptr,a
                                   2150 ;	../../core/sys/ctimer.c:136: etimer_restart(&c->etimer);
      00055F A8 81            [24] 2151 	mov	r0,sp
      000561 18               [12] 2152 	dec	r0
      000562 18               [12] 2153 	dec	r0
      000563 74 03            [12] 2154 	mov	a,#0x03
      000565 26               [12] 2155 	add	a,@r0
      000566 FA               [12] 2156 	mov	r2,a
      000567 E4               [12] 2157 	clr	a
      000568 08               [12] 2158 	inc	r0
      000569 36               [12] 2159 	addc	a,@r0
      00056A FB               [12] 2160 	mov	r3,a
      00056B 08               [12] 2161 	inc	r0
      00056C 86 04            [24] 2162 	mov	ar4,@r0
      00056E 8A 82            [24] 2163 	mov	dpl,r2
      000570 8B 83            [24] 2164 	mov	dph,r3
      000572 8C F0            [24] 2165 	mov	b,r4
      000574 C0 07            [24] 2166 	push	ar7
      000576 C0 06            [24] 2167 	push	ar6
      000578 C0 05            [24] 2168 	push	ar5
      00057A 12r00r00         [24] 2169 	lcall	_etimer_restart
      00057D D0 05            [24] 2170 	pop	ar5
      00057F D0 06            [24] 2171 	pop	ar6
      000581 D0 07            [24] 2172 	pop	ar7
                                   2173 ;	../../core/sys/ctimer.c:137: PROCESS_CONTEXT_END(&ctimer_process);
      000583 90r00r00         [24] 2174 	mov	dptr,#_process_current
      000586 EF               [12] 2175 	mov	a,r7
      000587 F0               [24] 2176 	movx	@dptr,a
      000588 EE               [12] 2177 	mov	a,r6
      000589 A3               [24] 2178 	inc	dptr
      00058A F0               [24] 2179 	movx	@dptr,a
      00058B ED               [12] 2180 	mov	a,r5
      00058C A3               [24] 2181 	inc	dptr
      00058D F0               [24] 2182 	movx	@dptr,a
      00058E                       2183 00102$:
                                   2184 ;	../../core/sys/ctimer.c:140: list_remove(ctimer_list, c);
      00058E A8 81            [24] 2185 	mov	r0,sp
      000590 18               [12] 2186 	dec	r0
      000591 18               [12] 2187 	dec	r0
      000592 86 02            [24] 2188 	mov	ar2,@r0
      000594 08               [12] 2189 	inc	r0
      000595 86 03            [24] 2190 	mov	ar3,@r0
      000597 08               [12] 2191 	inc	r0
      000598 86 04            [24] 2192 	mov	ar4,@r0
      00059A 90r00r03         [24] 2193 	mov	dptr,#_ctimer_list
      00059D E0               [24] 2194 	movx	a,@dptr
      00059E FD               [12] 2195 	mov	r5,a
      00059F A3               [24] 2196 	inc	dptr
      0005A0 E0               [24] 2197 	movx	a,@dptr
      0005A1 FE               [12] 2198 	mov	r6,a
      0005A2 A3               [24] 2199 	inc	dptr
      0005A3 E0               [24] 2200 	movx	a,@dptr
      0005A4 FF               [12] 2201 	mov	r7,a
      0005A5 C0 02            [24] 2202 	push	ar2
      0005A7 C0 03            [24] 2203 	push	ar3
      0005A9 C0 04            [24] 2204 	push	ar4
      0005AB 8D 82            [24] 2205 	mov	dpl,r5
      0005AD 8E 83            [24] 2206 	mov	dph,r6
      0005AF 8F F0            [24] 2207 	mov	b,r7
      0005B1 12r00r00         [24] 2208 	lcall	_list_remove
      0005B4 15 81            [12] 2209 	dec	sp
      0005B6 15 81            [12] 2210 	dec	sp
      0005B8 15 81            [12] 2211 	dec	sp
                                   2212 ;	../../core/sys/ctimer.c:141: list_add(ctimer_list, c);
      0005BA A8 81            [24] 2213 	mov	r0,sp
      0005BC 18               [12] 2214 	dec	r0
      0005BD 18               [12] 2215 	dec	r0
      0005BE 86 05            [24] 2216 	mov	ar5,@r0
      0005C0 08               [12] 2217 	inc	r0
      0005C1 86 06            [24] 2218 	mov	ar6,@r0
      0005C3 08               [12] 2219 	inc	r0
      0005C4 86 07            [24] 2220 	mov	ar7,@r0
      0005C6 90r00r03         [24] 2221 	mov	dptr,#_ctimer_list
      0005C9 E0               [24] 2222 	movx	a,@dptr
      0005CA FA               [12] 2223 	mov	r2,a
      0005CB A3               [24] 2224 	inc	dptr
      0005CC E0               [24] 2225 	movx	a,@dptr
      0005CD FB               [12] 2226 	mov	r3,a
      0005CE A3               [24] 2227 	inc	dptr
      0005CF E0               [24] 2228 	movx	a,@dptr
      0005D0 FC               [12] 2229 	mov	r4,a
      0005D1 C0 05            [24] 2230 	push	ar5
      0005D3 C0 06            [24] 2231 	push	ar6
      0005D5 C0 07            [24] 2232 	push	ar7
      0005D7 8A 82            [24] 2233 	mov	dpl,r2
      0005D9 8B 83            [24] 2234 	mov	dph,r3
      0005DB 8C F0            [24] 2235 	mov	b,r4
      0005DD 12r00r00         [24] 2236 	lcall	_list_add
      0005E0 15 81            [12] 2237 	dec	sp
      0005E2 15 81            [12] 2238 	dec	sp
      0005E4 15 81            [12] 2239 	dec	sp
                                   2240 ;	../../core/sys/ctimer.c:142: }
      0005E6 15 81            [12] 2241 	dec	sp
      0005E8 15 81            [12] 2242 	dec	sp
      0005EA 15 81            [12] 2243 	dec	sp
      0005EC 22               [24] 2244 	ret
                                   2245 ;------------------------------------------------------------
                                   2246 ;Allocation info for local variables in function 'ctimer_stop'
                                   2247 ;------------------------------------------------------------
                                   2248 ;c                         Allocated to registers r5 r6 r7 
                                   2249 ;sloc0                     Allocated to stack - sp -2
                                   2250 ;------------------------------------------------------------
                                   2251 ;	../../core/sys/ctimer.c:145: ctimer_stop(struct ctimer *c)
                                   2252 ;	-----------------------------------------
                                   2253 ;	 function ctimer_stop
                                   2254 ;	-----------------------------------------
      0005ED                       2255 _ctimer_stop:
      0005ED 05 81            [12] 2256 	inc	sp
      0005EF 05 81            [12] 2257 	inc	sp
      0005F1 05 81            [12] 2258 	inc	sp
      0005F3 AD 82            [24] 2259 	mov	r5,dpl
      0005F5 AE 83            [24] 2260 	mov	r6,dph
      0005F7 AF F0            [24] 2261 	mov	r7,b
                                   2262 ;	../../core/sys/ctimer.c:147: if(initialized) {
      0005F9 90r00r00         [24] 2263 	mov	dptr,#_initialized
      0005FC E0               [24] 2264 	movx	a,@dptr
      0005FD 60 20            [24] 2265 	jz	00102$
                                   2266 ;	../../core/sys/ctimer.c:148: etimer_stop(&c->etimer);
      0005FF 74 03            [12] 2267 	mov	a,#0x03
      000601 2D               [12] 2268 	add	a,r5
      000602 FA               [12] 2269 	mov	r2,a
      000603 E4               [12] 2270 	clr	a
      000604 3E               [12] 2271 	addc	a,r6
      000605 FB               [12] 2272 	mov	r3,a
      000606 8F 04            [24] 2273 	mov	ar4,r7
      000608 8A 82            [24] 2274 	mov	dpl,r2
      00060A 8B 83            [24] 2275 	mov	dph,r3
      00060C 8C F0            [24] 2276 	mov	b,r4
      00060E C0 07            [24] 2277 	push	ar7
      000610 C0 06            [24] 2278 	push	ar6
      000612 C0 05            [24] 2279 	push	ar5
      000614 12r00r00         [24] 2280 	lcall	_etimer_stop
      000617 D0 05            [24] 2281 	pop	ar5
      000619 D0 06            [24] 2282 	pop	ar6
      00061B D0 07            [24] 2283 	pop	ar7
      00061D 80 57            [24] 2284 	sjmp	00103$
      00061F                       2285 00102$:
                                   2286 ;	../../core/sys/ctimer.c:150: c->etimer.next = NULL;
      00061F 74 03            [12] 2287 	mov	a,#0x03
      000621 2D               [12] 2288 	add	a,r5
      000622 FA               [12] 2289 	mov	r2,a
      000623 E4               [12] 2290 	clr	a
      000624 3E               [12] 2291 	addc	a,r6
      000625 FB               [12] 2292 	mov	r3,a
      000626 8F 04            [24] 2293 	mov	ar4,r7
      000628 C0 05            [24] 2294 	push	ar5
      00062A C0 06            [24] 2295 	push	ar6
      00062C C0 07            [24] 2296 	push	ar7
      00062E E5 81            [12] 2297 	mov	a,sp
      000630 24 FB            [12] 2298 	add	a,#0xfb
      000632 F8               [12] 2299 	mov	r0,a
      000633 74 04            [12] 2300 	mov	a,#0x04
      000635 2A               [12] 2301 	add	a,r2
      000636 F6               [12] 2302 	mov	@r0,a
      000637 E4               [12] 2303 	clr	a
      000638 3B               [12] 2304 	addc	a,r3
      000639 08               [12] 2305 	inc	r0
      00063A F6               [12] 2306 	mov	@r0,a
      00063B 08               [12] 2307 	inc	r0
      00063C A6 04            [24] 2308 	mov	@r0,ar4
      00063E E5 81            [12] 2309 	mov	a,sp
      000640 24 FB            [12] 2310 	add	a,#0xfb
      000642 F8               [12] 2311 	mov	r0,a
      000643 86 82            [24] 2312 	mov	dpl,@r0
      000645 08               [12] 2313 	inc	r0
      000646 86 83            [24] 2314 	mov	dph,@r0
      000648 08               [12] 2315 	inc	r0
      000649 86 F0            [24] 2316 	mov	b,@r0
      00064B E4               [12] 2317 	clr	a
      00064C 12r00r00         [24] 2318 	lcall	__gptrput
      00064F A3               [24] 2319 	inc	dptr
      000650 12r00r00         [24] 2320 	lcall	__gptrput
      000653 A3               [24] 2321 	inc	dptr
      000654 12r00r00         [24] 2322 	lcall	__gptrput
                                   2323 ;	../../core/sys/ctimer.c:151: c->etimer.p = PROCESS_NONE;
      000657 74 07            [12] 2324 	mov	a,#0x07
      000659 2A               [12] 2325 	add	a,r2
      00065A FA               [12] 2326 	mov	r2,a
      00065B E4               [12] 2327 	clr	a
      00065C 3B               [12] 2328 	addc	a,r3
      00065D FB               [12] 2329 	mov	r3,a
      00065E 8A 82            [24] 2330 	mov	dpl,r2
      000660 8B 83            [24] 2331 	mov	dph,r3
      000662 8C F0            [24] 2332 	mov	b,r4
      000664 E4               [12] 2333 	clr	a
      000665 12r00r00         [24] 2334 	lcall	__gptrput
      000668 A3               [24] 2335 	inc	dptr
      000669 12r00r00         [24] 2336 	lcall	__gptrput
      00066C A3               [24] 2337 	inc	dptr
      00066D 12r00r00         [24] 2338 	lcall	__gptrput
                                   2339 ;	../../core/sys/ctimer.c:153: list_remove(ctimer_list, c);
      000670 D0 07            [24] 2340 	pop	ar7
      000672 D0 06            [24] 2341 	pop	ar6
      000674 D0 05            [24] 2342 	pop	ar5
                                   2343 ;	../../core/sys/ctimer.c:151: c->etimer.p = PROCESS_NONE;
      000676                       2344 00103$:
                                   2345 ;	../../core/sys/ctimer.c:153: list_remove(ctimer_list, c);
      000676 90r00r03         [24] 2346 	mov	dptr,#_ctimer_list
      000679 E0               [24] 2347 	movx	a,@dptr
      00067A FA               [12] 2348 	mov	r2,a
      00067B A3               [24] 2349 	inc	dptr
      00067C E0               [24] 2350 	movx	a,@dptr
      00067D FB               [12] 2351 	mov	r3,a
      00067E A3               [24] 2352 	inc	dptr
      00067F E0               [24] 2353 	movx	a,@dptr
      000680 FC               [12] 2354 	mov	r4,a
      000681 C0 05            [24] 2355 	push	ar5
      000683 C0 06            [24] 2356 	push	ar6
      000685 C0 07            [24] 2357 	push	ar7
      000687 8A 82            [24] 2358 	mov	dpl,r2
      000689 8B 83            [24] 2359 	mov	dph,r3
      00068B 8C F0            [24] 2360 	mov	b,r4
      00068D 12r00r00         [24] 2361 	lcall	_list_remove
      000690 15 81            [12] 2362 	dec	sp
      000692 15 81            [12] 2363 	dec	sp
      000694 15 81            [12] 2364 	dec	sp
                                   2365 ;	../../core/sys/ctimer.c:154: }
      000696 15 81            [12] 2366 	dec	sp
      000698 15 81            [12] 2367 	dec	sp
      00069A 15 81            [12] 2368 	dec	sp
      00069C 22               [24] 2369 	ret
                                   2370 ;------------------------------------------------------------
                                   2371 ;Allocation info for local variables in function 'ctimer_expired'
                                   2372 ;------------------------------------------------------------
                                   2373 ;c                         Allocated to registers r5 r6 r7 
                                   2374 ;t                         Allocated to registers r2 r3 r4 
                                   2375 ;------------------------------------------------------------
                                   2376 ;	../../core/sys/ctimer.c:157: ctimer_expired(struct ctimer *c)
                                   2377 ;	-----------------------------------------
                                   2378 ;	 function ctimer_expired
                                   2379 ;	-----------------------------------------
      00069D                       2380 _ctimer_expired:
      00069D AD 82            [24] 2381 	mov	r5,dpl
      00069F AE 83            [24] 2382 	mov	r6,dph
      0006A1 AF F0            [24] 2383 	mov	r7,b
                                   2384 ;	../../core/sys/ctimer.c:160: if(initialized) {
      0006A3 90r00r00         [24] 2385 	mov	dptr,#_initialized
      0006A6 E0               [24] 2386 	movx	a,@dptr
      0006A7 60 12            [24] 2387 	jz	00102$
                                   2388 ;	../../core/sys/ctimer.c:161: return etimer_expired(&c->etimer);
      0006A9 74 03            [12] 2389 	mov	a,#0x03
      0006AB 2D               [12] 2390 	add	a,r5
      0006AC FA               [12] 2391 	mov	r2,a
      0006AD E4               [12] 2392 	clr	a
      0006AE 3E               [12] 2393 	addc	a,r6
      0006AF FB               [12] 2394 	mov	r3,a
      0006B0 8F 04            [24] 2395 	mov	ar4,r7
      0006B2 8A 82            [24] 2396 	mov	dpl,r2
      0006B4 8B 83            [24] 2397 	mov	dph,r3
      0006B6 8C F0            [24] 2398 	mov	b,r4
      0006B8 02r00r00         [24] 2399 	ljmp	_etimer_expired
      0006BB                       2400 00102$:
                                   2401 ;	../../core/sys/ctimer.c:163: for(t = list_head(ctimer_list); t != NULL; t = t->next) {
      0006BB 90r00r03         [24] 2402 	mov	dptr,#_ctimer_list
      0006BE E0               [24] 2403 	movx	a,@dptr
      0006BF FA               [12] 2404 	mov	r2,a
      0006C0 A3               [24] 2405 	inc	dptr
      0006C1 E0               [24] 2406 	movx	a,@dptr
      0006C2 FB               [12] 2407 	mov	r3,a
      0006C3 A3               [24] 2408 	inc	dptr
      0006C4 E0               [24] 2409 	movx	a,@dptr
      0006C5 FC               [12] 2410 	mov	r4,a
      0006C6 8A 82            [24] 2411 	mov	dpl,r2
      0006C8 8B 83            [24] 2412 	mov	dph,r3
      0006CA 8C F0            [24] 2413 	mov	b,r4
      0006CC C0 07            [24] 2414 	push	ar7
      0006CE C0 06            [24] 2415 	push	ar6
      0006D0 C0 05            [24] 2416 	push	ar5
      0006D2 12r00r00         [24] 2417 	lcall	_list_head
      0006D5 AA 82            [24] 2418 	mov	r2,dpl
      0006D7 AB 83            [24] 2419 	mov	r3,dph
      0006D9 AC F0            [24] 2420 	mov	r4,b
      0006DB D0 05            [24] 2421 	pop	ar5
      0006DD D0 06            [24] 2422 	pop	ar6
      0006DF D0 07            [24] 2423 	pop	ar7
      0006E1                       2424 00107$:
      0006E1 EA               [12] 2425 	mov	a,r2
      0006E2 4B               [12] 2426 	orl	a,r3
      0006E3 60 31            [24] 2427 	jz	00105$
                                   2428 ;	../../core/sys/ctimer.c:164: if(t == c) {
      0006E5 C0 05            [24] 2429 	push	ar5
      0006E7 C0 06            [24] 2430 	push	ar6
      0006E9 C0 07            [24] 2431 	push	ar7
      0006EB 8A 82            [24] 2432 	mov	dpl,r2
      0006ED 8B 83            [24] 2433 	mov	dph,r3
      0006EF 8C F0            [24] 2434 	mov	b,r4
      0006F1 12r00r00         [24] 2435 	lcall	___gptr_cmp
      0006F4 15 81            [12] 2436 	dec	sp
      0006F6 15 81            [12] 2437 	dec	sp
      0006F8 15 81            [12] 2438 	dec	sp
      0006FA 70 04            [24] 2439 	jnz	00108$
                                   2440 ;	../../core/sys/ctimer.c:165: return 0;
      0006FC 90 00 00         [24] 2441 	mov	dptr,#0x0000
      0006FF 22               [24] 2442 	ret
      000700                       2443 00108$:
                                   2444 ;	../../core/sys/ctimer.c:163: for(t = list_head(ctimer_list); t != NULL; t = t->next) {
      000700 8A 82            [24] 2445 	mov	dpl,r2
      000702 8B 83            [24] 2446 	mov	dph,r3
      000704 8C F0            [24] 2447 	mov	b,r4
      000706 12r00r00         [24] 2448 	lcall	__gptrget
      000709 FA               [12] 2449 	mov	r2,a
      00070A A3               [24] 2450 	inc	dptr
      00070B 12r00r00         [24] 2451 	lcall	__gptrget
      00070E FB               [12] 2452 	mov	r3,a
      00070F A3               [24] 2453 	inc	dptr
      000710 12r00r00         [24] 2454 	lcall	__gptrget
      000713 FC               [12] 2455 	mov	r4,a
      000714 80 CB            [24] 2456 	sjmp	00107$
      000716                       2457 00105$:
                                   2458 ;	../../core/sys/ctimer.c:168: return 1;
      000716 90 00 01         [24] 2459 	mov	dptr,#0x0001
                                   2460 ;	../../core/sys/ctimer.c:169: }
      000719 22               [24] 2461 	ret
                                   2462 	.area CSEG    (CODE)
                                   2463 	.area CONST   (CODE)
                                   2464 	.area XINIT   (CODE)
      000000                       2465 __xinit__ctimer_list_list:
                                   2466 ; generic printIvalPtr
      000000 00 00 00              2467 	.byte #0x00,#0x00,#0x00
      000003                       2468 __xinit__ctimer_list:
      000003r00s00 00              2469 	.byte _ctimer_list_list, (_ctimer_list_list >> 8),#0x00
      000006                       2470 __xinit__ctimer_process:
                                   2471 ; generic printIvalPtr
      000006 00 00 00              2472 	.byte #0x00,#0x00,#0x00
      000009r00s00                 2473 	.byte _process_thread_ctimer_process, (_process_thread_ctimer_process >> 8)
      00000B 00 00                 2474 	.byte #0x00, #0x00
      00000D 00                    2475 	.db #0x00	; 0
      00000E 00                    2476 	.db #0x00	; 0
                                   2477 	.area CABS    (ABS,CODE)
