                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module crc16
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _crc16_data
                                     12 	.globl _crc16_add
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram 
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
                                     52 ;--------------------------------------------------------
                                     53 ; external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area XSEG    (XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; absolute external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XABS    (ABS,XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; external initialized ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XISEG   (XDATA)
                                     64 	.area HOME    (CODE)
                                     65 	.area GSINIT0 (CODE)
                                     66 	.area GSINIT1 (CODE)
                                     67 	.area GSINIT2 (CODE)
                                     68 	.area GSINIT3 (CODE)
                                     69 	.area GSINIT4 (CODE)
                                     70 	.area GSINIT5 (CODE)
                                     71 	.area GSINIT  (CODE)
                                     72 	.area GSFINAL (CODE)
                                     73 	.area CSEG    (CODE)
                                     74 ;--------------------------------------------------------
                                     75 ; global & static initialisations
                                     76 ;--------------------------------------------------------
                                     77 	.area HOME    (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; Home
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area HOME    (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; code
                                     88 ;--------------------------------------------------------
                                     89 	.area CSEG    (CODE)
                                     90 ;------------------------------------------------------------
                                     91 ;Allocation info for local variables in function 'crc16_add'
                                     92 ;------------------------------------------------------------
                                     93 ;acc                       Allocated to stack - sp -3
                                     94 ;b                         Allocated to registers r7 
                                     95 ;------------------------------------------------------------
                                     96 ;	../../core/lib/crc16.c:47: crc16_add(unsigned char b, unsigned short acc)
                                     97 ;	-----------------------------------------
                                     98 ;	 function crc16_add
                                     99 ;	-----------------------------------------
      000000                        100 _crc16_add:
                           000007   101 	ar7 = 0x07
                           000006   102 	ar6 = 0x06
                           000005   103 	ar5 = 0x05
                           000004   104 	ar4 = 0x04
                           000003   105 	ar3 = 0x03
                           000002   106 	ar2 = 0x02
                           000001   107 	ar1 = 0x01
                           000000   108 	ar0 = 0x00
      000000 AF 82            [24]  109 	mov	r7,dpl
                                    110 ;	../../core/lib/crc16.c:57: acc ^= b;
      000002 7E 00            [12]  111 	mov	r6,#0x00
      000004 E5 81            [12]  112 	mov	a,sp
      000006 24 FD            [12]  113 	add	a,#0xfd
      000008 F8               [12]  114 	mov	r0,a
      000009 EF               [12]  115 	mov	a,r7
      00000A 66               [12]  116 	xrl	a,@r0
      00000B F6               [12]  117 	mov	@r0,a
      00000C EE               [12]  118 	mov	a,r6
      00000D 08               [12]  119 	inc	r0
      00000E 66               [12]  120 	xrl	a,@r0
      00000F F6               [12]  121 	mov	@r0,a
                                    122 ;	../../core/lib/crc16.c:58: acc  = (acc >> 8) | (acc << 8);
      000010 E5 81            [12]  123 	mov	a,sp
      000012 24 FD            [12]  124 	add	a,#0xfd
      000014 F8               [12]  125 	mov	r0,a
      000015 E6               [12]  126 	mov	a,@r0
      000016 08               [12]  127 	inc	r0
      000017 18               [12]  128 	dec	r0
      000018 E6               [12]  129 	mov  a,@r0
      000019 08               [12]  130 	inc	r0
      00001A F6               [12]  131 	mov	@r0,a
                                    132 ;	../../core/lib/crc16.c:59: acc ^= (acc & 0xff00) << 4;
      00001B E5 81            [12]  133 	mov	a,sp
      00001D 24 FD            [12]  134 	add	a,#0xfd
      00001F F8               [12]  135 	mov	r0,a
      000020 86 06            [24]  136 	mov	ar6,@r0
      000022 08               [12]  137 	inc	r0
      000023 86 07            [24]  138 	mov	ar7,@r0
      000025 7C 00            [12]  139 	mov	r4,#0x00
      000027 8F 05            [24]  140 	mov	ar5,r7
      000029 ED               [12]  141 	mov	a,r5
      00002A C4               [12]  142 	swap	a
      00002B 54 F0            [12]  143 	anl	a,#0xf0
      00002D CC               [12]  144 	xch	a,r4
      00002E C4               [12]  145 	swap	a
      00002F CC               [12]  146 	xch	a,r4
      000030 6C               [12]  147 	xrl	a,r4
      000031 CC               [12]  148 	xch	a,r4
      000032 54 F0            [12]  149 	anl	a,#0xf0
      000034 CC               [12]  150 	xch	a,r4
      000035 6C               [12]  151 	xrl	a,r4
      000036 FD               [12]  152 	mov	r5,a
      000037 EC               [12]  153 	mov	a,r4
      000038 62 06            [12]  154 	xrl	ar6,a
      00003A ED               [12]  155 	mov	a,r5
      00003B 62 07            [12]  156 	xrl	ar7,a
      00003D E5 81            [12]  157 	mov	a,sp
      00003F 24 FD            [12]  158 	add	a,#0xfd
      000041 F8               [12]  159 	mov	r0,a
      000042 A6 06            [24]  160 	mov	@r0,ar6
      000044 08               [12]  161 	inc	r0
      000045 A6 07            [24]  162 	mov	@r0,ar7
                                    163 ;	../../core/lib/crc16.c:60: acc ^= (acc >> 8) >> 4;
      000047 E5 81            [12]  164 	mov	a,sp
      000049 24 FD            [12]  165 	add	a,#0xfd
      00004B F8               [12]  166 	mov	r0,a
      00004C 08               [12]  167 	inc	r0
      00004D 86 06            [24]  168 	mov	ar6,@r0
      00004F E4               [12]  169 	clr	a
      000050 C4               [12]  170 	swap	a
      000051 CE               [12]  171 	xch	a,r6
      000052 C4               [12]  172 	swap	a
      000053 54 0F            [12]  173 	anl	a,#0x0f
      000055 6E               [12]  174 	xrl	a,r6
      000056 CE               [12]  175 	xch	a,r6
      000057 54 0F            [12]  176 	anl	a,#0x0f
      000059 CE               [12]  177 	xch	a,r6
      00005A 6E               [12]  178 	xrl	a,r6
      00005B CE               [12]  179 	xch	a,r6
      00005C FF               [12]  180 	mov	r7,a
      00005D E5 81            [12]  181 	mov	a,sp
      00005F 24 FD            [12]  182 	add	a,#0xfd
      000061 F8               [12]  183 	mov	r0,a
      000062 EE               [12]  184 	mov	a,r6
      000063 66               [12]  185 	xrl	a,@r0
      000064 F6               [12]  186 	mov	@r0,a
      000065 EF               [12]  187 	mov	a,r7
      000066 08               [12]  188 	inc	r0
      000067 66               [12]  189 	xrl	a,@r0
      000068 F6               [12]  190 	mov	@r0,a
                                    191 ;	../../core/lib/crc16.c:61: acc ^= (acc & 0xff00) >> 5;
      000069 E5 81            [12]  192 	mov	a,sp
      00006B 24 FD            [12]  193 	add	a,#0xfd
      00006D F8               [12]  194 	mov	r0,a
      00006E 86 06            [24]  195 	mov	ar6,@r0
      000070 08               [12]  196 	inc	r0
      000071 86 07            [24]  197 	mov	ar7,@r0
      000073 7C 00            [12]  198 	mov	r4,#0x00
      000075 8F 05            [24]  199 	mov	ar5,r7
      000077 ED               [12]  200 	mov	a,r5
      000078 C4               [12]  201 	swap	a
      000079 03               [12]  202 	rr	a
      00007A CC               [12]  203 	xch	a,r4
      00007B C4               [12]  204 	swap	a
      00007C 03               [12]  205 	rr	a
      00007D 54 07            [12]  206 	anl	a,#0x07
      00007F 6C               [12]  207 	xrl	a,r4
      000080 CC               [12]  208 	xch	a,r4
      000081 54 07            [12]  209 	anl	a,#0x07
      000083 CC               [12]  210 	xch	a,r4
      000084 6C               [12]  211 	xrl	a,r4
      000085 CC               [12]  212 	xch	a,r4
      000086 FD               [12]  213 	mov	r5,a
      000087 EC               [12]  214 	mov	a,r4
      000088 62 06            [12]  215 	xrl	ar6,a
      00008A ED               [12]  216 	mov	a,r5
      00008B 62 07            [12]  217 	xrl	ar7,a
      00008D E5 81            [12]  218 	mov	a,sp
      00008F 24 FD            [12]  219 	add	a,#0xfd
      000091 F8               [12]  220 	mov	r0,a
      000092 A6 06            [24]  221 	mov	@r0,ar6
      000094 08               [12]  222 	inc	r0
      000095 A6 07            [24]  223 	mov	@r0,ar7
                                    224 ;	../../core/lib/crc16.c:62: return acc;
      000097 E5 81            [12]  225 	mov	a,sp
      000099 24 FD            [12]  226 	add	a,#0xfd
      00009B F8               [12]  227 	mov	r0,a
      00009C 86 82            [24]  228 	mov	dpl,@r0
      00009E 08               [12]  229 	inc	r0
      00009F 86 83            [24]  230 	mov	dph,@r0
                                    231 ;	../../core/lib/crc16.c:63: }
      0000A1 22               [24]  232 	ret
                                    233 ;------------------------------------------------------------
                                    234 ;Allocation info for local variables in function 'crc16_data'
                                    235 ;------------------------------------------------------------
                                    236 ;len                       Allocated to stack - sp -5
                                    237 ;acc                       Allocated to stack - sp -7
                                    238 ;data                      Allocated to registers 
                                    239 ;i                         Allocated to stack - sp -1
                                    240 ;------------------------------------------------------------
                                    241 ;	../../core/lib/crc16.c:66: crc16_data(const unsigned char *data, int len, unsigned short acc)
                                    242 ;	-----------------------------------------
                                    243 ;	 function crc16_data
                                    244 ;	-----------------------------------------
      0000A2                        245 _crc16_data:
      0000A2 05 81            [12]  246 	inc	sp
      0000A4 05 81            [12]  247 	inc	sp
      0000A6 AD 82            [24]  248 	mov	r5,dpl
      0000A8 AE 83            [24]  249 	mov	r6,dph
      0000AA AF F0            [24]  250 	mov	r7,b
                                    251 ;	../../core/lib/crc16.c:70: for(i = 0; i < len; ++i) {
      0000AC A8 81            [24]  252 	mov	r0,sp
      0000AE 18               [12]  253 	dec	r0
      0000AF E4               [12]  254 	clr	a
      0000B0 F6               [12]  255 	mov	@r0,a
      0000B1 08               [12]  256 	inc	r0
      0000B2 F6               [12]  257 	mov	@r0,a
      0000B3                        258 00103$:
      0000B3 A8 81            [24]  259 	mov	r0,sp
      0000B5 18               [12]  260 	dec	r0
      0000B6 E5 81            [12]  261 	mov	a,sp
      0000B8 24 FB            [12]  262 	add	a,#0xfb
      0000BA F9               [12]  263 	mov	r1,a
      0000BB C3               [12]  264 	clr	c
      0000BC E6               [12]  265 	mov	a,@r0
      0000BD 97               [12]  266 	subb	a,@r1
      0000BE 08               [12]  267 	inc	r0
      0000BF E6               [12]  268 	mov	a,@r0
      0000C0 64 80            [12]  269 	xrl	a,#0x80
      0000C2 09               [12]  270 	inc	r1
      0000C3 87 F0            [24]  271 	mov	b,@r1
      0000C5 63 F0 80         [24]  272 	xrl	b,#0x80
      0000C8 95 F0            [12]  273 	subb	a,b
      0000CA 50 49            [24]  274 	jnc	00101$
                                    275 ;	../../core/lib/crc16.c:71: acc = crc16_add(*data, acc);
      0000CC 8D 82            [24]  276 	mov	dpl,r5
      0000CE 8E 83            [24]  277 	mov	dph,r6
      0000D0 8F F0            [24]  278 	mov	b,r7
      0000D2 12r00r00         [24]  279 	lcall	__gptrget
      0000D5 FA               [12]  280 	mov	r2,a
      0000D6 A3               [24]  281 	inc	dptr
      0000D7 AD 82            [24]  282 	mov	r5,dpl
      0000D9 AE 83            [24]  283 	mov	r6,dph
      0000DB C0 07            [24]  284 	push	ar7
      0000DD C0 06            [24]  285 	push	ar6
      0000DF C0 05            [24]  286 	push	ar5
      0000E1 E5 81            [12]  287 	mov	a,sp
      0000E3 24 F6            [12]  288 	add	a,#0xf6
      0000E5 F8               [12]  289 	mov	r0,a
      0000E6 E6               [12]  290 	mov	a,@r0
      0000E7 C0 E0            [24]  291 	push	acc
      0000E9 08               [12]  292 	inc	r0
      0000EA E6               [12]  293 	mov	a,@r0
      0000EB C0 E0            [24]  294 	push	acc
      0000ED 8A 82            [24]  295 	mov	dpl,r2
      0000EF 12r00r00         [24]  296 	lcall	_crc16_add
      0000F2 AA 82            [24]  297 	mov	r2,dpl
      0000F4 AC 83            [24]  298 	mov	r4,dph
      0000F6 15 81            [12]  299 	dec	sp
      0000F8 15 81            [12]  300 	dec	sp
      0000FA D0 05            [24]  301 	pop	ar5
      0000FC D0 06            [24]  302 	pop	ar6
      0000FE D0 07            [24]  303 	pop	ar7
      000100 E5 81            [12]  304 	mov	a,sp
      000102 24 F9            [12]  305 	add	a,#0xf9
      000104 F8               [12]  306 	mov	r0,a
      000105 A6 02            [24]  307 	mov	@r0,ar2
      000107 08               [12]  308 	inc	r0
      000108 A6 04            [24]  309 	mov	@r0,ar4
                                    310 ;	../../core/lib/crc16.c:72: ++data;
                                    311 ;	../../core/lib/crc16.c:70: for(i = 0; i < len; ++i) {
      00010A A8 81            [24]  312 	mov	r0,sp
      00010C 18               [12]  313 	dec	r0
      00010D 06               [12]  314 	inc	@r0
      00010E B6 00 02         [24]  315 	cjne	@r0,#0x00,00117$
      000111 08               [12]  316 	inc	r0
      000112 06               [12]  317 	inc	@r0
      000113                        318 00117$:
      000113 80 9E            [24]  319 	sjmp	00103$
      000115                        320 00101$:
                                    321 ;	../../core/lib/crc16.c:74: return acc;
      000115 E5 81            [12]  322 	mov	a,sp
      000117 24 F9            [12]  323 	add	a,#0xf9
      000119 F8               [12]  324 	mov	r0,a
      00011A 86 82            [24]  325 	mov	dpl,@r0
      00011C 08               [12]  326 	inc	r0
      00011D 86 83            [24]  327 	mov	dph,@r0
                                    328 ;	../../core/lib/crc16.c:75: }
      00011F 15 81            [12]  329 	dec	sp
      000121 15 81            [12]  330 	dec	sp
      000123 22               [24]  331 	ret
                                    332 	.area CSEG    (CODE)
                                    333 	.area CONST   (CODE)
                                    334 	.area XINIT   (CODE)
                                    335 	.area CABS    (ABS,CODE)
