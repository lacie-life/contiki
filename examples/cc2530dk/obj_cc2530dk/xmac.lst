                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module xmac
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _xmac_driver
                                     12 	.globl _memb_alloc
                                     13 	.globl _memb_init
                                     14 	.globl _list_item_next
                                     15 	.globl _list_add
                                     16 	.globl _list_head
                                     17 	.globl _list_init
                                     18 	.globl _queuebuf_free
                                     19 	.globl _queuebuf_to_packetbuf
                                     20 	.globl _queuebuf_new_from_packetbuf
                                     21 	.globl _packetbuf_addr
                                     22 	.globl _packetbuf_set_addr
                                     23 	.globl _packetbuf_attr
                                     24 	.globl _packetbuf_set_attr
                                     25 	.globl _packetbuf_compact
                                     26 	.globl _packetbuf_totlen
                                     27 	.globl _packetbuf_hdrptr
                                     28 	.globl _packetbuf_dataptr
                                     29 	.globl _rimeaddr_cmp
                                     30 	.globl _rimeaddr_copy
                                     31 	.globl _rtimer_set
                                     32 	.globl ___memcpy
                                     33 	.globl _watchdog_periodic
                                     34 	.globl _watchdog_start
                                     35 	.globl _leds_toggle
                                     36 	.globl _leds_off
                                     37 	.globl _leds_on
                                     38 	.globl _ACTIVE
                                     39 	.globl _TX_BYTE
                                     40 	.globl _RX_BYTE
                                     41 	.globl _ERR
                                     42 	.globl _FE
                                     43 	.globl _SLAVE
                                     44 	.globl _RE
                                     45 	.globl _MODE
                                     46 	.globl _T3OVFIF
                                     47 	.globl _T3CH0IF
                                     48 	.globl _T3CH1IF
                                     49 	.globl _T4OVFIF
                                     50 	.globl _T4CH0IF
                                     51 	.globl _T4CH1IF
                                     52 	.globl _OVFIM
                                     53 	.globl _B_0
                                     54 	.globl _B_1
                                     55 	.globl _B_2
                                     56 	.globl _B_3
                                     57 	.globl _B_4
                                     58 	.globl _B_5
                                     59 	.globl _B_6
                                     60 	.globl _B_7
                                     61 	.globl _P2IF
                                     62 	.globl _UTX0IF
                                     63 	.globl _UTX1IF
                                     64 	.globl _P1IF
                                     65 	.globl _WDTIF
                                     66 	.globl _ACC_0
                                     67 	.globl _ACC_1
                                     68 	.globl _ACC_2
                                     69 	.globl _ACC_3
                                     70 	.globl _ACC_4
                                     71 	.globl _ACC_5
                                     72 	.globl _ACC_6
                                     73 	.globl _ACC_7
                                     74 	.globl _P
                                     75 	.globl _F1
                                     76 	.globl _OV
                                     77 	.globl _RS0
                                     78 	.globl _RS1
                                     79 	.globl _F0
                                     80 	.globl _AC
                                     81 	.globl _CY
                                     82 	.globl _DMAIF
                                     83 	.globl _T1IF
                                     84 	.globl _T2IF
                                     85 	.globl _T3IF
                                     86 	.globl _T4IF
                                     87 	.globl _P0IF
                                     88 	.globl _STIF
                                     89 	.globl _DMAIE
                                     90 	.globl _T1IE
                                     91 	.globl _T2IE
                                     92 	.globl _T3IE
                                     93 	.globl _T4IE
                                     94 	.globl _P0IE
                                     95 	.globl _RFERRIE
                                     96 	.globl _ADCIE
                                     97 	.globl _URX0IE
                                     98 	.globl _URX1IE
                                     99 	.globl _ENCIE
                                    100 	.globl _STIE
                                    101 	.globl _EA
                                    102 	.globl _P2_0
                                    103 	.globl _P2_1
                                    104 	.globl _P2_2
                                    105 	.globl _P2_3
                                    106 	.globl _P2_4
                                    107 	.globl _P2_5
                                    108 	.globl _P2_6
                                    109 	.globl _P2_7
                                    110 	.globl _ENCIF_0
                                    111 	.globl _ENCIF_1
                                    112 	.globl _P1_0
                                    113 	.globl _P1_1
                                    114 	.globl _P1_2
                                    115 	.globl _P1_3
                                    116 	.globl _P1_4
                                    117 	.globl _P1_5
                                    118 	.globl _P1_6
                                    119 	.globl _P1_7
                                    120 	.globl _IT0
                                    121 	.globl _RFERRIF
                                    122 	.globl _IT1
                                    123 	.globl _URX0IF
                                    124 	.globl _ADCIF
                                    125 	.globl _URX1IF
                                    126 	.globl _P0_0
                                    127 	.globl _P0_1
                                    128 	.globl _P0_2
                                    129 	.globl _P0_3
                                    130 	.globl _P0_4
                                    131 	.globl _P0_5
                                    132 	.globl _P0_6
                                    133 	.globl _P0_7
                                    134 	.globl _WDCTL
                                    135 	.globl _U1GCR
                                    136 	.globl _U1UCR
                                    137 	.globl _U1BAUD
                                    138 	.globl _U1DBUF
                                    139 	.globl _U1CSR
                                    140 	.globl _U0GCR
                                    141 	.globl _U0UCR
                                    142 	.globl _U0BAUD
                                    143 	.globl _U0DBUF
                                    144 	.globl _U0CSR
                                    145 	.globl _TIMIF
                                    146 	.globl _T4CC1
                                    147 	.globl _T4CCTL1
                                    148 	.globl _T4CC0
                                    149 	.globl _T4CCTL0
                                    150 	.globl _T4CTL
                                    151 	.globl _T4CNT
                                    152 	.globl _T3CC1
                                    153 	.globl _T3CCTL1
                                    154 	.globl _T3CC0
                                    155 	.globl _T3CCTL0
                                    156 	.globl _T3CTL
                                    157 	.globl _T3CNT
                                    158 	.globl _T2MSEL
                                    159 	.globl _T2IRQM
                                    160 	.globl _T2MOVF2
                                    161 	.globl _T2MOVF1
                                    162 	.globl _T2MOVF0
                                    163 	.globl _T2M1
                                    164 	.globl _T2M0
                                    165 	.globl _T2IRQF
                                    166 	.globl _T2EVTCFG
                                    167 	.globl _T2CTRL
                                    168 	.globl _T1STAT
                                    169 	.globl _T1CCTL2
                                    170 	.globl _T1CCTL1
                                    171 	.globl _T1CCTL0
                                    172 	.globl _T1CTL
                                    173 	.globl _T1CNTH
                                    174 	.globl _T1CNTL
                                    175 	.globl _T1CC2H
                                    176 	.globl _T1CC2L
                                    177 	.globl _T1CC1H
                                    178 	.globl _T1CC1L
                                    179 	.globl _T1CC0H
                                    180 	.globl _T1CC0L
                                    181 	.globl _CLKCONSTA
                                    182 	.globl _CLKCONCMD
                                    183 	.globl _SLEEPSTA
                                    184 	.globl _SLEEPCMD
                                    185 	.globl _STLOAD
                                    186 	.globl _ST2
                                    187 	.globl _ST1
                                    188 	.globl _ST0
                                    189 	.globl _RFERRF
                                    190 	.globl _RFIRQF0
                                    191 	.globl _RFST
                                    192 	.globl _RFD
                                    193 	.globl _RFIRQF1
                                    194 	.globl _PSBANK
                                    195 	.globl _FMAP
                                    196 	.globl _MEMCTR
                                    197 	.globl __XPAGE
                                    198 	.globl _MPAGE
                                    199 	.globl _PMUX
                                    200 	.globl _P2DIR
                                    201 	.globl _P1DIR
                                    202 	.globl _P0DIR
                                    203 	.globl _P2INP
                                    204 	.globl _P1INP
                                    205 	.globl _P2SEL
                                    206 	.globl _P1SEL
                                    207 	.globl _P0SEL
                                    208 	.globl _APCFG
                                    209 	.globl _PERCFG
                                    210 	.globl _P0INP
                                    211 	.globl _P2IEN
                                    212 	.globl _P1IEN
                                    213 	.globl _P0IEN
                                    214 	.globl _PICTL
                                    215 	.globl _P2IFG
                                    216 	.globl _P1IFG
                                    217 	.globl _P0IFG
                                    218 	.globl _DMAREQ
                                    219 	.globl _DMAARM
                                    220 	.globl _DMA0CFGH
                                    221 	.globl _DMA0CFGL
                                    222 	.globl _DMA1CFGH
                                    223 	.globl _DMA1CFGL
                                    224 	.globl _DMAIRQ
                                    225 	.globl _ENCCS
                                    226 	.globl _ENCDO
                                    227 	.globl _ENCDI
                                    228 	.globl _RNDH
                                    229 	.globl _RNDL
                                    230 	.globl _ADCH
                                    231 	.globl _ADCL
                                    232 	.globl _ADCCON3
                                    233 	.globl _ADCCON2
                                    234 	.globl _ADCCON1
                                    235 	.globl _B
                                    236 	.globl _IRCON2
                                    237 	.globl _ACC
                                    238 	.globl _PSW
                                    239 	.globl _IRCON
                                    240 	.globl _IP1
                                    241 	.globl _IEN1
                                    242 	.globl _IP0
                                    243 	.globl _IEN0
                                    244 	.globl _P2
                                    245 	.globl _S1CON
                                    246 	.globl _IEN2
                                    247 	.globl _S0CON
                                    248 	.globl _DPS
                                    249 	.globl _P1
                                    250 	.globl _TCON
                                    251 	.globl _PCON
                                    252 	.globl _DPH1
                                    253 	.globl _DPL1
                                    254 	.globl _DPH0
                                    255 	.globl _DPL0
                                    256 	.globl _SP
                                    257 	.globl _P0
                                    258 	.globl _xmac_config
                                    259 	.globl _X_IEEE_ADDR
                                    260 	.globl _X_INFOPAGE
                                    261 	.globl _X_P2DIR
                                    262 	.globl _X_P1DIR
                                    263 	.globl _X_P0DIR
                                    264 	.globl _X_U1GCR
                                    265 	.globl _X_U1UCR
                                    266 	.globl _X_U1BAUD
                                    267 	.globl _X_U1DBUF
                                    268 	.globl _X_U1CSR
                                    269 	.globl _X_P2INP
                                    270 	.globl _X_P1INP
                                    271 	.globl _X_P2SEL
                                    272 	.globl _X_P1SEL
                                    273 	.globl _X_P0SEL
                                    274 	.globl _X_APCFG
                                    275 	.globl _X_PERCFG
                                    276 	.globl _X_T4CC1
                                    277 	.globl _X_T4CCTL1
                                    278 	.globl _X_T4CC0
                                    279 	.globl _X_T4CCTL0
                                    280 	.globl _X_T4CTL
                                    281 	.globl _X_T4CNT
                                    282 	.globl _X_RFIRQF0
                                    283 	.globl _X_T1CCTL2
                                    284 	.globl _X_T1CCTL1
                                    285 	.globl _X_T1CCTL0
                                    286 	.globl _X_T1CTL
                                    287 	.globl _X_T1CNTH
                                    288 	.globl _X_T1CNTL
                                    289 	.globl _X_RFST
                                    290 	.globl _X_T1CC2H
                                    291 	.globl _X_T1CC2L
                                    292 	.globl _X_T1CC1H
                                    293 	.globl _X_T1CC1L
                                    294 	.globl _X_T1CC0H
                                    295 	.globl _X_T1CC0L
                                    296 	.globl _X_RFD
                                    297 	.globl _X_TIMIF
                                    298 	.globl _X_DMAREQ
                                    299 	.globl _X_DMAARM
                                    300 	.globl _X_DMA0CFGH
                                    301 	.globl _X_DMA0CFGL
                                    302 	.globl _X_DMA1CFGH
                                    303 	.globl _X_DMA1CFGL
                                    304 	.globl _X_DMAIRQ
                                    305 	.globl _X_T3CC1
                                    306 	.globl _X_T3CCTL1
                                    307 	.globl _X_T3CC0
                                    308 	.globl _X_T3CCTL0
                                    309 	.globl _X_T3CTL
                                    310 	.globl _X_T3CNT
                                    311 	.globl _X_WDCTL
                                    312 	.globl _X_MEMCTR
                                    313 	.globl _X_CLKCONCMD
                                    314 	.globl _X_U0GCR
                                    315 	.globl _X_U0UCR
                                    316 	.globl _X_T2MSEL
                                    317 	.globl _X_U0BAUD
                                    318 	.globl _X_U0DBUF
                                    319 	.globl _X_RFERRF
                                    320 	.globl _X_SLEEPCMD
                                    321 	.globl _X_RNDH
                                    322 	.globl _X_RNDL
                                    323 	.globl _X_ADCH
                                    324 	.globl _X_ADCL
                                    325 	.globl _X_ADCCON3
                                    326 	.globl _X_ADCCON2
                                    327 	.globl _X_ADCCON1
                                    328 	.globl _X_ENCCS
                                    329 	.globl _X_ENCDO
                                    330 	.globl _X_ENCDI
                                    331 	.globl _X_T1STAT
                                    332 	.globl _X_PMUX
                                    333 	.globl _X_STLOAD
                                    334 	.globl _X_P2IEN
                                    335 	.globl _X_P0IEN
                                    336 	.globl _X_T2IRQM
                                    337 	.globl _X_T2MOVF2
                                    338 	.globl _X_T2MOVF1
                                    339 	.globl _X_T2MOVF0
                                    340 	.globl _X_T2M1
                                    341 	.globl _X_T2M0
                                    342 	.globl _X_T2IRQF
                                    343 	.globl _X_P2
                                    344 	.globl _X_PSBANK
                                    345 	.globl _X_FMAP
                                    346 	.globl _X_CLKCONSTA
                                    347 	.globl _X_SLEEPSTA
                                    348 	.globl _X_T2EVTCFG
                                    349 	.globl _X_ST2
                                    350 	.globl _X_ST1
                                    351 	.globl _X_ST0
                                    352 	.globl _X_T2CTRL
                                    353 	.globl _X__XPAGE
                                    354 	.globl _X_MPAGE
                                    355 	.globl _X_RFIRQF1
                                    356 	.globl _X_P1
                                    357 	.globl _X_P0INP
                                    358 	.globl _X_P1IEN
                                    359 	.globl _X_PICTL
                                    360 	.globl _X_P2IFG
                                    361 	.globl _X_P1IFG
                                    362 	.globl _X_P0IFG
                                    363 	.globl _X_U0CSR
                                    364 	.globl _X_P0
                                    365 	.globl _USBF5
                                    366 	.globl _USBF4
                                    367 	.globl _USBF3
                                    368 	.globl _USBF2
                                    369 	.globl _USBF1
                                    370 	.globl _USBF0
                                    371 	.globl _USBCNTH
                                    372 	.globl _USBCNTL
                                    373 	.globl _USBCNT0
                                    374 	.globl _USBCSOH
                                    375 	.globl _USBCSOL
                                    376 	.globl _USBMAXO
                                    377 	.globl _USBCSIH
                                    378 	.globl _USBCSIL
                                    379 	.globl _USBCS0
                                    380 	.globl _USBMAXI
                                    381 	.globl _USBCTRL
                                    382 	.globl _USBINDEX
                                    383 	.globl _USBFRMH
                                    384 	.globl _USBFRML
                                    385 	.globl _USBCIE
                                    386 	.globl _USBOIE
                                    387 	.globl _USBIIE
                                    388 	.globl _USBCIF
                                    389 	.globl _USBOIF
                                    390 	.globl _USBIIF
                                    391 	.globl _USBPOW
                                    392 	.globl _USBADDR
                                    393 	.globl _CSPT
                                    394 	.globl _CSPZ
                                    395 	.globl _CSPY
                                    396 	.globl _CSPX
                                    397 	.globl _CSPSTAT
                                    398 	.globl _CSPCTRL
                                    399 	.globl _CSPPROG23
                                    400 	.globl _CSPPROG22
                                    401 	.globl _CSPPROG21
                                    402 	.globl _CSPPROG20
                                    403 	.globl _CSPPROG19
                                    404 	.globl _CSPPROG18
                                    405 	.globl _CSPPROG17
                                    406 	.globl _CSPPROG16
                                    407 	.globl _CSPPROG15
                                    408 	.globl _CSPPROG14
                                    409 	.globl _CSPPROG13
                                    410 	.globl _CSPPROG12
                                    411 	.globl _CSPPROG11
                                    412 	.globl _CSPPROG10
                                    413 	.globl _CSPPROG9
                                    414 	.globl _CSPPROG8
                                    415 	.globl _CSPPROG7
                                    416 	.globl _CSPPROG6
                                    417 	.globl _CSPPROG5
                                    418 	.globl _CSPPROG4
                                    419 	.globl _CSPPROG3
                                    420 	.globl _CSPPROG2
                                    421 	.globl _CSPPROG1
                                    422 	.globl _CSPPROG0
                                    423 	.globl _RFC_OBS_CTRL2
                                    424 	.globl _RFC_OBS_CTRL1
                                    425 	.globl _RFC_OBS_CTRL0
                                    426 	.globl _TXFILTCFG
                                    427 	.globl _PTEST1
                                    428 	.globl _PTEST0
                                    429 	.globl _ATEST
                                    430 	.globl _DACTEST2
                                    431 	.globl _DACTEST1
                                    432 	.globl _DACTEST0
                                    433 	.globl _MDMTEST1
                                    434 	.globl _MDMTEST0
                                    435 	.globl _ADCTEST2
                                    436 	.globl _ADCTEST1
                                    437 	.globl _ADCTEST0
                                    438 	.globl _AGCCTRL3
                                    439 	.globl _AGCCTRL2
                                    440 	.globl _AGCCTRL1
                                    441 	.globl _AGCCTRL0
                                    442 	.globl _FSCAL3
                                    443 	.globl _FSCAL2
                                    444 	.globl _FSCAL1
                                    445 	.globl _FSCAL0
                                    446 	.globl _FSCTRL
                                    447 	.globl _RXCTRL
                                    448 	.globl _FREQEST
                                    449 	.globl _MDMCTRL1
                                    450 	.globl _MDMCTRL0
                                    451 	.globl _RFRND
                                    452 	.globl _RFERRM
                                    453 	.globl _RFIRQM1
                                    454 	.globl _RFIRQM0
                                    455 	.globl _TXLAST_PTR
                                    456 	.globl _TXFIRST_PTR
                                    457 	.globl _RXP1_PTR
                                    458 	.globl _RXLAST_PTR
                                    459 	.globl _RXFIRST_PTR
                                    460 	.globl _TXFIFOCNT
                                    461 	.globl _RXFIFOCNT
                                    462 	.globl _RXFIRST
                                    463 	.globl _RSSISTAT
                                    464 	.globl _RSSI
                                    465 	.globl _CCACTRL1
                                    466 	.globl _CCACTRL0
                                    467 	.globl _FSMCTRL
                                    468 	.globl _FIFOPCTRL
                                    469 	.globl _FSMSTAT1
                                    470 	.globl _FSMSTAT0
                                    471 	.globl _TXCTRL
                                    472 	.globl _TXPOWER
                                    473 	.globl _FREQCTRL
                                    474 	.globl _FREQTUNE
                                    475 	.globl _RXMASKCLR
                                    476 	.globl _RXMASKSET
                                    477 	.globl _RXENABLE
                                    478 	.globl _FRMCTRL1
                                    479 	.globl _FRMCTRL0
                                    480 	.globl _SRCEXTEN2
                                    481 	.globl _SRCEXTEN1
                                    482 	.globl _SRCEXTEN0
                                    483 	.globl _SRCSHORTEN2
                                    484 	.globl _SRCSHORTEN1
                                    485 	.globl _SRCSHORTEN0
                                    486 	.globl _SRCMATCH
                                    487 	.globl _FRMFILT1
                                    488 	.globl _FRMFILT0
                                    489 	.globl _SHORT_ADDR1
                                    490 	.globl _SHORT_ADDR0
                                    491 	.globl _PAN_ID1
                                    492 	.globl _PAN_ID0
                                    493 	.globl _EXT_ADDR7
                                    494 	.globl _EXT_ADDR6
                                    495 	.globl _EXT_ADDR5
                                    496 	.globl _EXT_ADDR4
                                    497 	.globl _EXT_ADDR3
                                    498 	.globl _EXT_ADDR2
                                    499 	.globl _EXT_ADDR1
                                    500 	.globl _EXT_ADDR0
                                    501 	.globl _SRCSHORTPENDEN2
                                    502 	.globl _SRCSHORTPENDEN1
                                    503 	.globl _SRCSHORTPENDEN0
                                    504 	.globl _SRCEXTPENDEN2
                                    505 	.globl _SRCEXTPENDEN1
                                    506 	.globl _SRCEXTPENDEN0
                                    507 	.globl _SRCRESINDEX
                                    508 	.globl _SRCRESMASK2
                                    509 	.globl _SRCRESMASK1
                                    510 	.globl _SRCRESMASK0
                                    511 	.globl _SRC_ADDR_TABLE
                                    512 	.globl _TXFIFO
                                    513 	.globl _RXFIFO
                                    514 	.globl _RFCORE_RAM
                                    515 	.globl _CMPCTL
                                    516 	.globl _OPAMPS
                                    517 	.globl _OPAMPC
                                    518 	.globl _STCV2
                                    519 	.globl _STCV1
                                    520 	.globl _STCV0
                                    521 	.globl _STCS
                                    522 	.globl _STCC
                                    523 	.globl _T1CC4H
                                    524 	.globl _T1CC4L
                                    525 	.globl _T1CC3H
                                    526 	.globl _T1CC3L
                                    527 	.globl _XX_T1CC2H
                                    528 	.globl _XX_T1CC2L
                                    529 	.globl _XX_T1CC1H
                                    530 	.globl _XX_T1CC1L
                                    531 	.globl _XX_T1CC0H
                                    532 	.globl _XX_T1CC0L
                                    533 	.globl _T1CCTL4
                                    534 	.globl _T1CCTL3
                                    535 	.globl _XX_T1CCTL2
                                    536 	.globl _XX_T1CCTL1
                                    537 	.globl _XX_T1CCTL0
                                    538 	.globl _CLD
                                    539 	.globl _IRCTL
                                    540 	.globl _CHIPINFO1
                                    541 	.globl _CHIPINFO0
                                    542 	.globl _FWDATA
                                    543 	.globl _FADDRH
                                    544 	.globl _FADDRL
                                    545 	.globl _FCTL
                                    546 	.globl _IVCTRL
                                    547 	.globl _BATTMON
                                    548 	.globl _SRCRC
                                    549 	.globl _DBGDATA
                                    550 	.globl _TESTREG0
                                    551 	.globl _CHIPID
                                    552 	.globl _CHVER
                                    553 	.globl _OBSSEL5
                                    554 	.globl _OBSSEL4
                                    555 	.globl _OBSSEL3
                                    556 	.globl _OBSSEL2
                                    557 	.globl _OBSSEL1
                                    558 	.globl _OBSSEL0
                                    559 	.globl _I2CIO
                                    560 	.globl _I2CWC
                                    561 	.globl _I2CADDR
                                    562 	.globl _I2CDATA
                                    563 	.globl _I2CSTAT
                                    564 	.globl _I2CCFG
                                    565 	.globl _OPAMPMC
                                    566 	.globl _MONMUX
                                    567 	.globl _xmac_set_announcement_radio_txpower
                                    568 ;--------------------------------------------------------
                                    569 ; special function registers
                                    570 ;--------------------------------------------------------
                                    571 	.area RSEG    (ABS,DATA)
      000000                        572 	.org 0x0000
                           000080   573 _P0	=	0x0080
                           000081   574 _SP	=	0x0081
                           000082   575 _DPL0	=	0x0082
                           000083   576 _DPH0	=	0x0083
                           000084   577 _DPL1	=	0x0084
                           000085   578 _DPH1	=	0x0085
                           000087   579 _PCON	=	0x0087
                           000088   580 _TCON	=	0x0088
                           000090   581 _P1	=	0x0090
                           000092   582 _DPS	=	0x0092
                           000098   583 _S0CON	=	0x0098
                           00009A   584 _IEN2	=	0x009a
                           00009B   585 _S1CON	=	0x009b
                           0000A0   586 _P2	=	0x00a0
                           0000A8   587 _IEN0	=	0x00a8
                           0000A9   588 _IP0	=	0x00a9
                           0000B8   589 _IEN1	=	0x00b8
                           0000B9   590 _IP1	=	0x00b9
                           0000C0   591 _IRCON	=	0x00c0
                           0000D0   592 _PSW	=	0x00d0
                           0000E0   593 _ACC	=	0x00e0
                           0000E8   594 _IRCON2	=	0x00e8
                           0000F0   595 _B	=	0x00f0
                           0000B4   596 _ADCCON1	=	0x00b4
                           0000B5   597 _ADCCON2	=	0x00b5
                           0000B6   598 _ADCCON3	=	0x00b6
                           0000BA   599 _ADCL	=	0x00ba
                           0000BB   600 _ADCH	=	0x00bb
                           0000BC   601 _RNDL	=	0x00bc
                           0000BD   602 _RNDH	=	0x00bd
                           0000B1   603 _ENCDI	=	0x00b1
                           0000B2   604 _ENCDO	=	0x00b2
                           0000B3   605 _ENCCS	=	0x00b3
                           0000D1   606 _DMAIRQ	=	0x00d1
                           0000D2   607 _DMA1CFGL	=	0x00d2
                           0000D3   608 _DMA1CFGH	=	0x00d3
                           0000D4   609 _DMA0CFGL	=	0x00d4
                           0000D5   610 _DMA0CFGH	=	0x00d5
                           0000D6   611 _DMAARM	=	0x00d6
                           0000D7   612 _DMAREQ	=	0x00d7
                           000089   613 _P0IFG	=	0x0089
                           00008A   614 _P1IFG	=	0x008a
                           00008B   615 _P2IFG	=	0x008b
                           00008C   616 _PICTL	=	0x008c
                           0000AB   617 _P0IEN	=	0x00ab
                           00008D   618 _P1IEN	=	0x008d
                           0000AC   619 _P2IEN	=	0x00ac
                           00008F   620 _P0INP	=	0x008f
                           0000F1   621 _PERCFG	=	0x00f1
                           0000F2   622 _APCFG	=	0x00f2
                           0000F3   623 _P0SEL	=	0x00f3
                           0000F4   624 _P1SEL	=	0x00f4
                           0000F5   625 _P2SEL	=	0x00f5
                           0000F6   626 _P1INP	=	0x00f6
                           0000F7   627 _P2INP	=	0x00f7
                           0000FD   628 _P0DIR	=	0x00fd
                           0000FE   629 _P1DIR	=	0x00fe
                           0000FF   630 _P2DIR	=	0x00ff
                           0000AE   631 _PMUX	=	0x00ae
                           000093   632 _MPAGE	=	0x0093
                           000093   633 __XPAGE	=	0x0093
                           0000C7   634 _MEMCTR	=	0x00c7
                           00009F   635 _FMAP	=	0x009f
                           00009F   636 _PSBANK	=	0x009f
                           000091   637 _RFIRQF1	=	0x0091
                           0000D9   638 _RFD	=	0x00d9
                           0000E1   639 _RFST	=	0x00e1
                           0000E9   640 _RFIRQF0	=	0x00e9
                           0000BF   641 _RFERRF	=	0x00bf
                           000095   642 _ST0	=	0x0095
                           000096   643 _ST1	=	0x0096
                           000097   644 _ST2	=	0x0097
                           0000AD   645 _STLOAD	=	0x00ad
                           0000BE   646 _SLEEPCMD	=	0x00be
                           00009D   647 _SLEEPSTA	=	0x009d
                           0000C6   648 _CLKCONCMD	=	0x00c6
                           00009E   649 _CLKCONSTA	=	0x009e
                           0000DA   650 _T1CC0L	=	0x00da
                           0000DB   651 _T1CC0H	=	0x00db
                           0000DC   652 _T1CC1L	=	0x00dc
                           0000DD   653 _T1CC1H	=	0x00dd
                           0000DE   654 _T1CC2L	=	0x00de
                           0000DF   655 _T1CC2H	=	0x00df
                           0000E2   656 _T1CNTL	=	0x00e2
                           0000E3   657 _T1CNTH	=	0x00e3
                           0000E4   658 _T1CTL	=	0x00e4
                           0000E5   659 _T1CCTL0	=	0x00e5
                           0000E6   660 _T1CCTL1	=	0x00e6
                           0000E7   661 _T1CCTL2	=	0x00e7
                           0000AF   662 _T1STAT	=	0x00af
                           000094   663 _T2CTRL	=	0x0094
                           00009C   664 _T2EVTCFG	=	0x009c
                           0000A1   665 _T2IRQF	=	0x00a1
                           0000A2   666 _T2M0	=	0x00a2
                           0000A3   667 _T2M1	=	0x00a3
                           0000A4   668 _T2MOVF0	=	0x00a4
                           0000A5   669 _T2MOVF1	=	0x00a5
                           0000A6   670 _T2MOVF2	=	0x00a6
                           0000A7   671 _T2IRQM	=	0x00a7
                           0000C3   672 _T2MSEL	=	0x00c3
                           0000CA   673 _T3CNT	=	0x00ca
                           0000CB   674 _T3CTL	=	0x00cb
                           0000CC   675 _T3CCTL0	=	0x00cc
                           0000CD   676 _T3CC0	=	0x00cd
                           0000CE   677 _T3CCTL1	=	0x00ce
                           0000CF   678 _T3CC1	=	0x00cf
                           0000EA   679 _T4CNT	=	0x00ea
                           0000EB   680 _T4CTL	=	0x00eb
                           0000EC   681 _T4CCTL0	=	0x00ec
                           0000ED   682 _T4CC0	=	0x00ed
                           0000EE   683 _T4CCTL1	=	0x00ee
                           0000EF   684 _T4CC1	=	0x00ef
                           0000D8   685 _TIMIF	=	0x00d8
                           000086   686 _U0CSR	=	0x0086
                           0000C1   687 _U0DBUF	=	0x00c1
                           0000C2   688 _U0BAUD	=	0x00c2
                           0000C4   689 _U0UCR	=	0x00c4
                           0000C5   690 _U0GCR	=	0x00c5
                           0000F8   691 _U1CSR	=	0x00f8
                           0000F9   692 _U1DBUF	=	0x00f9
                           0000FA   693 _U1BAUD	=	0x00fa
                           0000FB   694 _U1UCR	=	0x00fb
                           0000FC   695 _U1GCR	=	0x00fc
                           0000C9   696 _WDCTL	=	0x00c9
                                    697 ;--------------------------------------------------------
                                    698 ; special function bits
                                    699 ;--------------------------------------------------------
                                    700 	.area RSEG    (ABS,DATA)
      000000                        701 	.org 0x0000
                           000087   702 _P0_7	=	0x0087
                           000086   703 _P0_6	=	0x0086
                           000085   704 _P0_5	=	0x0085
                           000084   705 _P0_4	=	0x0084
                           000083   706 _P0_3	=	0x0083
                           000082   707 _P0_2	=	0x0082
                           000081   708 _P0_1	=	0x0081
                           000080   709 _P0_0	=	0x0080
                           00008F   710 _URX1IF	=	0x008f
                           00008D   711 _ADCIF	=	0x008d
                           00008B   712 _URX0IF	=	0x008b
                           00008A   713 _IT1	=	0x008a
                           000089   714 _RFERRIF	=	0x0089
                           000088   715 _IT0	=	0x0088
                           000097   716 _P1_7	=	0x0097
                           000096   717 _P1_6	=	0x0096
                           000095   718 _P1_5	=	0x0095
                           000094   719 _P1_4	=	0x0094
                           000093   720 _P1_3	=	0x0093
                           000092   721 _P1_2	=	0x0092
                           000091   722 _P1_1	=	0x0091
                           000090   723 _P1_0	=	0x0090
                           000099   724 _ENCIF_1	=	0x0099
                           000098   725 _ENCIF_0	=	0x0098
                           0000A7   726 _P2_7	=	0x00a7
                           0000A6   727 _P2_6	=	0x00a6
                           0000A5   728 _P2_5	=	0x00a5
                           0000A4   729 _P2_4	=	0x00a4
                           0000A3   730 _P2_3	=	0x00a3
                           0000A2   731 _P2_2	=	0x00a2
                           0000A1   732 _P2_1	=	0x00a1
                           0000A0   733 _P2_0	=	0x00a0
                           0000AF   734 _EA	=	0x00af
                           0000AD   735 _STIE	=	0x00ad
                           0000AC   736 _ENCIE	=	0x00ac
                           0000AB   737 _URX1IE	=	0x00ab
                           0000AA   738 _URX0IE	=	0x00aa
                           0000A9   739 _ADCIE	=	0x00a9
                           0000A8   740 _RFERRIE	=	0x00a8
                           0000BD   741 _P0IE	=	0x00bd
                           0000BC   742 _T4IE	=	0x00bc
                           0000BB   743 _T3IE	=	0x00bb
                           0000BA   744 _T2IE	=	0x00ba
                           0000B9   745 _T1IE	=	0x00b9
                           0000B8   746 _DMAIE	=	0x00b8
                           0000C7   747 _STIF	=	0x00c7
                           0000C5   748 _P0IF	=	0x00c5
                           0000C4   749 _T4IF	=	0x00c4
                           0000C3   750 _T3IF	=	0x00c3
                           0000C2   751 _T2IF	=	0x00c2
                           0000C1   752 _T1IF	=	0x00c1
                           0000C0   753 _DMAIF	=	0x00c0
                           0000D7   754 _CY	=	0x00d7
                           0000D6   755 _AC	=	0x00d6
                           0000D5   756 _F0	=	0x00d5
                           0000D4   757 _RS1	=	0x00d4
                           0000D3   758 _RS0	=	0x00d3
                           0000D2   759 _OV	=	0x00d2
                           0000D1   760 _F1	=	0x00d1
                           0000D0   761 _P	=	0x00d0
                           0000E7   762 _ACC_7	=	0x00e7
                           0000E6   763 _ACC_6	=	0x00e6
                           0000E5   764 _ACC_5	=	0x00e5
                           0000E4   765 _ACC_4	=	0x00e4
                           0000E3   766 _ACC_3	=	0x00e3
                           0000E2   767 _ACC_2	=	0x00e2
                           0000E1   768 _ACC_1	=	0x00e1
                           0000E0   769 _ACC_0	=	0x00e0
                           0000EC   770 _WDTIF	=	0x00ec
                           0000EB   771 _P1IF	=	0x00eb
                           0000EA   772 _UTX1IF	=	0x00ea
                           0000E9   773 _UTX0IF	=	0x00e9
                           0000E8   774 _P2IF	=	0x00e8
                           0000F7   775 _B_7	=	0x00f7
                           0000F6   776 _B_6	=	0x00f6
                           0000F5   777 _B_5	=	0x00f5
                           0000F4   778 _B_4	=	0x00f4
                           0000F3   779 _B_3	=	0x00f3
                           0000F2   780 _B_2	=	0x00f2
                           0000F1   781 _B_1	=	0x00f1
                           0000F0   782 _B_0	=	0x00f0
                           0000DE   783 _OVFIM	=	0x00de
                           0000DD   784 _T4CH1IF	=	0x00dd
                           0000DC   785 _T4CH0IF	=	0x00dc
                           0000DB   786 _T4OVFIF	=	0x00db
                           0000DA   787 _T3CH1IF	=	0x00da
                           0000D9   788 _T3CH0IF	=	0x00d9
                           0000D8   789 _T3OVFIF	=	0x00d8
                           0000FF   790 _MODE	=	0x00ff
                           0000FE   791 _RE	=	0x00fe
                           0000FD   792 _SLAVE	=	0x00fd
                           0000FC   793 _FE	=	0x00fc
                           0000FB   794 _ERR	=	0x00fb
                           0000FA   795 _RX_BYTE	=	0x00fa
                           0000F9   796 _TX_BYTE	=	0x00f9
                           0000F8   797 _ACTIVE	=	0x00f8
                                    798 ;--------------------------------------------------------
                                    799 ; overlayable register banks
                                    800 ;--------------------------------------------------------
                                    801 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        802 	.ds 8
                                    803 ;--------------------------------------------------------
                                    804 ; internal ram data
                                    805 ;--------------------------------------------------------
                                    806 	.area DSEG    (DATA)
                                    807 ;--------------------------------------------------------
                                    808 ; overlayable items in internal ram 
                                    809 ;--------------------------------------------------------
                                    810 ;--------------------------------------------------------
                                    811 ; indirectly addressable internal ram data
                                    812 ;--------------------------------------------------------
                                    813 	.area ISEG    (DATA)
                                    814 ;--------------------------------------------------------
                                    815 ; absolute internal ram data
                                    816 ;--------------------------------------------------------
                                    817 	.area IABS    (ABS,DATA)
                                    818 	.area IABS    (ABS,DATA)
                                    819 ;--------------------------------------------------------
                                    820 ; bit data
                                    821 ;--------------------------------------------------------
                                    822 	.area BSEG    (BIT)
                                    823 ;--------------------------------------------------------
                                    824 ; paged external ram data
                                    825 ;--------------------------------------------------------
                                    826 	.area PSEG    (PAG,XDATA)
                                    827 ;--------------------------------------------------------
                                    828 ; external ram data
                                    829 ;--------------------------------------------------------
                                    830 	.area XSEG    (XDATA)
                           0061A6   831 _MONMUX	=	0x61a6
                           0061A6   832 _OPAMPMC	=	0x61a6
                           006230   833 _I2CCFG	=	0x6230
                           006231   834 _I2CSTAT	=	0x6231
                           006232   835 _I2CDATA	=	0x6232
                           006233   836 _I2CADDR	=	0x6233
                           006234   837 _I2CWC	=	0x6234
                           006235   838 _I2CIO	=	0x6235
                           006243   839 _OBSSEL0	=	0x6243
                           006244   840 _OBSSEL1	=	0x6244
                           006245   841 _OBSSEL2	=	0x6245
                           006246   842 _OBSSEL3	=	0x6246
                           006247   843 _OBSSEL4	=	0x6247
                           006248   844 _OBSSEL5	=	0x6248
                           006249   845 _CHVER	=	0x6249
                           00624A   846 _CHIPID	=	0x624a
                           00624B   847 _TESTREG0	=	0x624b
                           006260   848 _DBGDATA	=	0x6260
                           006262   849 _SRCRC	=	0x6262
                           006264   850 _BATTMON	=	0x6264
                           006265   851 _IVCTRL	=	0x6265
                           006270   852 _FCTL	=	0x6270
                           006271   853 _FADDRL	=	0x6271
                           006272   854 _FADDRH	=	0x6272
                           006273   855 _FWDATA	=	0x6273
                           006276   856 _CHIPINFO0	=	0x6276
                           006277   857 _CHIPINFO1	=	0x6277
                           006281   858 _IRCTL	=	0x6281
                           006290   859 _CLD	=	0x6290
                           0062A0   860 _XX_T1CCTL0	=	0x62a0
                           0062A1   861 _XX_T1CCTL1	=	0x62a1
                           0062A2   862 _XX_T1CCTL2	=	0x62a2
                           0062A3   863 _T1CCTL3	=	0x62a3
                           0062A4   864 _T1CCTL4	=	0x62a4
                           0062A6   865 _XX_T1CC0L	=	0x62a6
                           0062A7   866 _XX_T1CC0H	=	0x62a7
                           0062A8   867 _XX_T1CC1L	=	0x62a8
                           0062A9   868 _XX_T1CC1H	=	0x62a9
                           0062AA   869 _XX_T1CC2L	=	0x62aa
                           0062AB   870 _XX_T1CC2H	=	0x62ab
                           0062AC   871 _T1CC3L	=	0x62ac
                           0062AD   872 _T1CC3H	=	0x62ad
                           0062AE   873 _T1CC4L	=	0x62ae
                           0062AF   874 _T1CC4H	=	0x62af
                           0062B0   875 _STCC	=	0x62b0
                           0062B1   876 _STCS	=	0x62b1
                           0062B2   877 _STCV0	=	0x62b2
                           0062B3   878 _STCV1	=	0x62b3
                           0062B4   879 _STCV2	=	0x62b4
                           0062C0   880 _OPAMPC	=	0x62c0
                           0062C1   881 _OPAMPS	=	0x62c1
                           0062D0   882 _CMPCTL	=	0x62d0
                           006000   883 _RFCORE_RAM	=	0x6000
                           006000   884 _RXFIFO	=	0x6000
                           006080   885 _TXFIFO	=	0x6080
                           006100   886 _SRC_ADDR_TABLE	=	0x6100
                           006160   887 _SRCRESMASK0	=	0x6160
                           006161   888 _SRCRESMASK1	=	0x6161
                           006162   889 _SRCRESMASK2	=	0x6162
                           006163   890 _SRCRESINDEX	=	0x6163
                           006164   891 _SRCEXTPENDEN0	=	0x6164
                           006165   892 _SRCEXTPENDEN1	=	0x6165
                           006166   893 _SRCEXTPENDEN2	=	0x6166
                           006167   894 _SRCSHORTPENDEN0	=	0x6167
                           006168   895 _SRCSHORTPENDEN1	=	0x6168
                           006169   896 _SRCSHORTPENDEN2	=	0x6169
                           00616A   897 _EXT_ADDR0	=	0x616a
                           00616B   898 _EXT_ADDR1	=	0x616b
                           00616C   899 _EXT_ADDR2	=	0x616c
                           00616D   900 _EXT_ADDR3	=	0x616d
                           00616E   901 _EXT_ADDR4	=	0x616e
                           00616F   902 _EXT_ADDR5	=	0x616f
                           006170   903 _EXT_ADDR6	=	0x6170
                           006171   904 _EXT_ADDR7	=	0x6171
                           006172   905 _PAN_ID0	=	0x6172
                           006173   906 _PAN_ID1	=	0x6173
                           006174   907 _SHORT_ADDR0	=	0x6174
                           006175   908 _SHORT_ADDR1	=	0x6175
                           006180   909 _FRMFILT0	=	0x6180
                           006181   910 _FRMFILT1	=	0x6181
                           006182   911 _SRCMATCH	=	0x6182
                           006183   912 _SRCSHORTEN0	=	0x6183
                           006184   913 _SRCSHORTEN1	=	0x6184
                           006185   914 _SRCSHORTEN2	=	0x6185
                           006186   915 _SRCEXTEN0	=	0x6186
                           006187   916 _SRCEXTEN1	=	0x6187
                           006188   917 _SRCEXTEN2	=	0x6188
                           006189   918 _FRMCTRL0	=	0x6189
                           00618A   919 _FRMCTRL1	=	0x618a
                           00618B   920 _RXENABLE	=	0x618b
                           00618C   921 _RXMASKSET	=	0x618c
                           00618D   922 _RXMASKCLR	=	0x618d
                           00618E   923 _FREQTUNE	=	0x618e
                           00618F   924 _FREQCTRL	=	0x618f
                           006190   925 _TXPOWER	=	0x6190
                           006191   926 _TXCTRL	=	0x6191
                           006192   927 _FSMSTAT0	=	0x6192
                           006193   928 _FSMSTAT1	=	0x6193
                           006194   929 _FIFOPCTRL	=	0x6194
                           006195   930 _FSMCTRL	=	0x6195
                           006196   931 _CCACTRL0	=	0x6196
                           006197   932 _CCACTRL1	=	0x6197
                           006198   933 _RSSI	=	0x6198
                           006199   934 _RSSISTAT	=	0x6199
                           00619A   935 _RXFIRST	=	0x619a
                           00619B   936 _RXFIFOCNT	=	0x619b
                           00619C   937 _TXFIFOCNT	=	0x619c
                           00619D   938 _RXFIRST_PTR	=	0x619d
                           00619E   939 _RXLAST_PTR	=	0x619e
                           00619F   940 _RXP1_PTR	=	0x619f
                           0061A1   941 _TXFIRST_PTR	=	0x61a1
                           0061A2   942 _TXLAST_PTR	=	0x61a2
                           0061A3   943 _RFIRQM0	=	0x61a3
                           0061A4   944 _RFIRQM1	=	0x61a4
                           0061A5   945 _RFERRM	=	0x61a5
                           0061A7   946 _RFRND	=	0x61a7
                           0061A8   947 _MDMCTRL0	=	0x61a8
                           0061A9   948 _MDMCTRL1	=	0x61a9
                           0061AA   949 _FREQEST	=	0x61aa
                           0061AB   950 _RXCTRL	=	0x61ab
                           0061AC   951 _FSCTRL	=	0x61ac
                           0061AD   952 _FSCAL0	=	0x61ad
                           0061AE   953 _FSCAL1	=	0x61ae
                           0061AF   954 _FSCAL2	=	0x61af
                           0061B0   955 _FSCAL3	=	0x61b0
                           0061B1   956 _AGCCTRL0	=	0x61b1
                           0061B2   957 _AGCCTRL1	=	0x61b2
                           0061B3   958 _AGCCTRL2	=	0x61b3
                           0061B4   959 _AGCCTRL3	=	0x61b4
                           0061B5   960 _ADCTEST0	=	0x61b5
                           0061B6   961 _ADCTEST1	=	0x61b6
                           0061B7   962 _ADCTEST2	=	0x61b7
                           0061B8   963 _MDMTEST0	=	0x61b8
                           0061B9   964 _MDMTEST1	=	0x61b9
                           0061BA   965 _DACTEST0	=	0x61ba
                           0061BB   966 _DACTEST1	=	0x61bb
                           0061BC   967 _DACTEST2	=	0x61bc
                           0061BD   968 _ATEST	=	0x61bd
                           0061BE   969 _PTEST0	=	0x61be
                           0061BF   970 _PTEST1	=	0x61bf
                           0061FA   971 _TXFILTCFG	=	0x61fa
                           0061EB   972 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   973 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   974 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   975 _CSPPROG0	=	0x61c0
                           0061C1   976 _CSPPROG1	=	0x61c1
                           0061C2   977 _CSPPROG2	=	0x61c2
                           0061C3   978 _CSPPROG3	=	0x61c3
                           0061C4   979 _CSPPROG4	=	0x61c4
                           0061C5   980 _CSPPROG5	=	0x61c5
                           0061C6   981 _CSPPROG6	=	0x61c6
                           0061C7   982 _CSPPROG7	=	0x61c7
                           0061C8   983 _CSPPROG8	=	0x61c8
                           0061C9   984 _CSPPROG9	=	0x61c9
                           0061CA   985 _CSPPROG10	=	0x61ca
                           0061CB   986 _CSPPROG11	=	0x61cb
                           0061CC   987 _CSPPROG12	=	0x61cc
                           0061CD   988 _CSPPROG13	=	0x61cd
                           0061CE   989 _CSPPROG14	=	0x61ce
                           0061CF   990 _CSPPROG15	=	0x61cf
                           0061D0   991 _CSPPROG16	=	0x61d0
                           0061D1   992 _CSPPROG17	=	0x61d1
                           0061D2   993 _CSPPROG18	=	0x61d2
                           0061D3   994 _CSPPROG19	=	0x61d3
                           0061D4   995 _CSPPROG20	=	0x61d4
                           0061D5   996 _CSPPROG21	=	0x61d5
                           0061D6   997 _CSPPROG22	=	0x61d6
                           0061D7   998 _CSPPROG23	=	0x61d7
                           0061E0   999 _CSPCTRL	=	0x61e0
                           0061E1  1000 _CSPSTAT	=	0x61e1
                           0061E2  1001 _CSPX	=	0x61e2
                           0061E3  1002 _CSPY	=	0x61e3
                           0061E4  1003 _CSPZ	=	0x61e4
                           0061E5  1004 _CSPT	=	0x61e5
                           006200  1005 _USBADDR	=	0x6200
                           006201  1006 _USBPOW	=	0x6201
                           006202  1007 _USBIIF	=	0x6202
                           006204  1008 _USBOIF	=	0x6204
                           006206  1009 _USBCIF	=	0x6206
                           006207  1010 _USBIIE	=	0x6207
                           006209  1011 _USBOIE	=	0x6209
                           00620B  1012 _USBCIE	=	0x620b
                           00620C  1013 _USBFRML	=	0x620c
                           00620D  1014 _USBFRMH	=	0x620d
                           00620E  1015 _USBINDEX	=	0x620e
                           00620F  1016 _USBCTRL	=	0x620f
                           006210  1017 _USBMAXI	=	0x6210
                           006211  1018 _USBCS0	=	0x6211
                           006211  1019 _USBCSIL	=	0x6211
                           006212  1020 _USBCSIH	=	0x6212
                           006213  1021 _USBMAXO	=	0x6213
                           006214  1022 _USBCSOL	=	0x6214
                           006215  1023 _USBCSOH	=	0x6215
                           006216  1024 _USBCNT0	=	0x6216
                           006216  1025 _USBCNTL	=	0x6216
                           006217  1026 _USBCNTH	=	0x6217
                           006220  1027 _USBF0	=	0x6220
                           006222  1028 _USBF1	=	0x6222
                           006224  1029 _USBF2	=	0x6224
                           006226  1030 _USBF3	=	0x6226
                           006228  1031 _USBF4	=	0x6228
                           00622A  1032 _USBF5	=	0x622a
                           007080  1033 _X_P0	=	0x7080
                           007086  1034 _X_U0CSR	=	0x7086
                           007089  1035 _X_P0IFG	=	0x7089
                           00708A  1036 _X_P1IFG	=	0x708a
                           00708B  1037 _X_P2IFG	=	0x708b
                           00708C  1038 _X_PICTL	=	0x708c
                           00708D  1039 _X_P1IEN	=	0x708d
                           00708F  1040 _X_P0INP	=	0x708f
                           007090  1041 _X_P1	=	0x7090
                           007091  1042 _X_RFIRQF1	=	0x7091
                           007093  1043 _X_MPAGE	=	0x7093
                           007093  1044 _X__XPAGE	=	0x7093
                           007094  1045 _X_T2CTRL	=	0x7094
                           007095  1046 _X_ST0	=	0x7095
                           007096  1047 _X_ST1	=	0x7096
                           007097  1048 _X_ST2	=	0x7097
                           00709C  1049 _X_T2EVTCFG	=	0x709c
                           00709D  1050 _X_SLEEPSTA	=	0x709d
                           00709E  1051 _X_CLKCONSTA	=	0x709e
                           00709F  1052 _X_FMAP	=	0x709f
                           00709F  1053 _X_PSBANK	=	0x709f
                           0070A0  1054 _X_P2	=	0x70a0
                           0070A1  1055 _X_T2IRQF	=	0x70a1
                           0070A2  1056 _X_T2M0	=	0x70a2
                           0070A3  1057 _X_T2M1	=	0x70a3
                           0070A4  1058 _X_T2MOVF0	=	0x70a4
                           0070A5  1059 _X_T2MOVF1	=	0x70a5
                           0070A6  1060 _X_T2MOVF2	=	0x70a6
                           0070A7  1061 _X_T2IRQM	=	0x70a7
                           0070AB  1062 _X_P0IEN	=	0x70ab
                           0070AC  1063 _X_P2IEN	=	0x70ac
                           0070AD  1064 _X_STLOAD	=	0x70ad
                           0070AE  1065 _X_PMUX	=	0x70ae
                           0070AF  1066 _X_T1STAT	=	0x70af
                           0070B1  1067 _X_ENCDI	=	0x70b1
                           0070B2  1068 _X_ENCDO	=	0x70b2
                           0070B3  1069 _X_ENCCS	=	0x70b3
                           0070B4  1070 _X_ADCCON1	=	0x70b4
                           0070B5  1071 _X_ADCCON2	=	0x70b5
                           0070B6  1072 _X_ADCCON3	=	0x70b6
                           0070BA  1073 _X_ADCL	=	0x70ba
                           0070BB  1074 _X_ADCH	=	0x70bb
                           0070BC  1075 _X_RNDL	=	0x70bc
                           0070BD  1076 _X_RNDH	=	0x70bd
                           0070BE  1077 _X_SLEEPCMD	=	0x70be
                           0070BF  1078 _X_RFERRF	=	0x70bf
                           0070C1  1079 _X_U0DBUF	=	0x70c1
                           0070C2  1080 _X_U0BAUD	=	0x70c2
                           0070C3  1081 _X_T2MSEL	=	0x70c3
                           0070C4  1082 _X_U0UCR	=	0x70c4
                           0070C5  1083 _X_U0GCR	=	0x70c5
                           0070C6  1084 _X_CLKCONCMD	=	0x70c6
                           0070C7  1085 _X_MEMCTR	=	0x70c7
                           0070C9  1086 _X_WDCTL	=	0x70c9
                           0070CA  1087 _X_T3CNT	=	0x70ca
                           0070CB  1088 _X_T3CTL	=	0x70cb
                           0070CC  1089 _X_T3CCTL0	=	0x70cc
                           0070CD  1090 _X_T3CC0	=	0x70cd
                           0070CE  1091 _X_T3CCTL1	=	0x70ce
                           0070CF  1092 _X_T3CC1	=	0x70cf
                           0070D1  1093 _X_DMAIRQ	=	0x70d1
                           0070D2  1094 _X_DMA1CFGL	=	0x70d2
                           0070D3  1095 _X_DMA1CFGH	=	0x70d3
                           0070D4  1096 _X_DMA0CFGL	=	0x70d4
                           0070D5  1097 _X_DMA0CFGH	=	0x70d5
                           0070D6  1098 _X_DMAARM	=	0x70d6
                           0070D7  1099 _X_DMAREQ	=	0x70d7
                           0070D8  1100 _X_TIMIF	=	0x70d8
                           0070D9  1101 _X_RFD	=	0x70d9
                           0070DA  1102 _X_T1CC0L	=	0x70da
                           0070DB  1103 _X_T1CC0H	=	0x70db
                           0070DC  1104 _X_T1CC1L	=	0x70dc
                           0070DD  1105 _X_T1CC1H	=	0x70dd
                           0070DE  1106 _X_T1CC2L	=	0x70de
                           0070DF  1107 _X_T1CC2H	=	0x70df
                           0070E1  1108 _X_RFST	=	0x70e1
                           0070E2  1109 _X_T1CNTL	=	0x70e2
                           0070E3  1110 _X_T1CNTH	=	0x70e3
                           0070E4  1111 _X_T1CTL	=	0x70e4
                           0070E5  1112 _X_T1CCTL0	=	0x70e5
                           0070E6  1113 _X_T1CCTL1	=	0x70e6
                           0070E7  1114 _X_T1CCTL2	=	0x70e7
                           0070E9  1115 _X_RFIRQF0	=	0x70e9
                           0070EA  1116 _X_T4CNT	=	0x70ea
                           0070EB  1117 _X_T4CTL	=	0x70eb
                           0070EC  1118 _X_T4CCTL0	=	0x70ec
                           0070ED  1119 _X_T4CC0	=	0x70ed
                           0070EE  1120 _X_T4CCTL1	=	0x70ee
                           0070EF  1121 _X_T4CC1	=	0x70ef
                           0070F1  1122 _X_PERCFG	=	0x70f1
                           0070F2  1123 _X_APCFG	=	0x70f2
                           0070F3  1124 _X_P0SEL	=	0x70f3
                           0070F4  1125 _X_P1SEL	=	0x70f4
                           0070F5  1126 _X_P2SEL	=	0x70f5
                           0070F6  1127 _X_P1INP	=	0x70f6
                           0070F7  1128 _X_P2INP	=	0x70f7
                           0070F8  1129 _X_U1CSR	=	0x70f8
                           0070F9  1130 _X_U1DBUF	=	0x70f9
                           0070FA  1131 _X_U1BAUD	=	0x70fa
                           0070FB  1132 _X_U1UCR	=	0x70fb
                           0070FC  1133 _X_U1GCR	=	0x70fc
                           0070FD  1134 _X_P0DIR	=	0x70fd
                           0070FE  1135 _X_P1DIR	=	0x70fe
                           0070FF  1136 _X_P2DIR	=	0x70ff
                           007800  1137 _X_INFOPAGE	=	0x7800
                           00780C  1138 _X_IEEE_ADDR	=	0x780c
      000000                       1139 _rt:
      000000                       1140 	.ds 7
      000007                       1141 _pt:
      000007                       1142 	.ds 2
      000009                       1143 _is_listening:
      000009                       1144 	.ds 1
      00000A                       1145 _encounter_memb_memb_count:
      00000A                       1146 	.ds 4
      00000E                       1147 _encounter_memb_memb_mem:
      00000E                       1148 	.ds 28
      00002A                       1149 _is_streaming:
      00002A                       1150 	.ds 1
      00002B                       1151 _is_streaming_to:
      00002B                       1152 	.ds 2
      00002D                       1153 _is_streaming_to_too:
      00002D                       1154 	.ds 2
      00002F                       1155 _stream_until:
      00002F                       1156 	.ds 2
      000031                       1157 _received_seqnos:
      000031                       1158 	.ds 24
                                   1159 ;--------------------------------------------------------
                                   1160 ; absolute external ram data
                                   1161 ;--------------------------------------------------------
                                   1162 	.area XABS    (ABS,XDATA)
                                   1163 ;--------------------------------------------------------
                                   1164 ; external initialized ram data
                                   1165 ;--------------------------------------------------------
                                   1166 	.area XISEG   (XDATA)
      000000                       1167 _xmac_config::
      000000                       1168 	.ds 8
      000008                       1169 _xmac_is_on:
      000008                       1170 	.ds 1
      000009                       1171 _waiting_for_packet:
      000009                       1172 	.ds 1
      00000A                       1173 _someone_is_sending:
      00000A                       1174 	.ds 1
      00000B                       1175 _we_are_sending:
      00000B                       1176 	.ds 1
      00000C                       1177 _radio_is_on:
      00000C                       1178 	.ds 1
      00000D                       1179 _encounter_list_list:
      00000D                       1180 	.ds 3
      000010                       1181 _encounter_list:
      000010                       1182 	.ds 3
      000013                       1183 _encounter_memb:
      000013                       1184 	.ds 10
                                   1185 	.area HOME    (CODE)
                                   1186 	.area GSINIT0 (CODE)
                                   1187 	.area GSINIT1 (CODE)
                                   1188 	.area GSINIT2 (CODE)
                                   1189 	.area GSINIT3 (CODE)
                                   1190 	.area GSINIT4 (CODE)
                                   1191 	.area GSINIT5 (CODE)
                                   1192 	.area GSINIT  (CODE)
                                   1193 	.area GSFINAL (CODE)
                                   1194 	.area CSEG    (CODE)
                                   1195 ;--------------------------------------------------------
                                   1196 ; global & static initialisations
                                   1197 ;--------------------------------------------------------
                                   1198 	.area HOME    (CODE)
                                   1199 	.area GSINIT  (CODE)
                                   1200 	.area GSFINAL (CODE)
                                   1201 	.area GSINIT  (CODE)
                                   1202 ;--------------------------------------------------------
                                   1203 ; Home
                                   1204 ;--------------------------------------------------------
                                   1205 	.area HOME    (CODE)
                                   1206 	.area HOME    (CODE)
                                   1207 ;--------------------------------------------------------
                                   1208 ; code
                                   1209 ;--------------------------------------------------------
                                   1210 	.area CSEG    (CODE)
                                   1211 ;------------------------------------------------------------
                                   1212 ;Allocation info for local variables in function 'on'
                                   1213 ;------------------------------------------------------------
                                   1214 ;	../../core/net/mac/xmac.c:233: on(void)
                                   1215 ;	-----------------------------------------
                                   1216 ;	 function on
                                   1217 ;	-----------------------------------------
      000000                       1218 _on:
                           000007  1219 	ar7 = 0x07
                           000006  1220 	ar6 = 0x06
                           000005  1221 	ar5 = 0x05
                           000004  1222 	ar4 = 0x04
                           000003  1223 	ar3 = 0x03
                           000002  1224 	ar2 = 0x02
                           000001  1225 	ar1 = 0x01
                           000000  1226 	ar0 = 0x00
                                   1227 ;	../../core/net/mac/xmac.c:235: if(xmac_is_on && radio_is_on == 0) {
      000000 90r00r08         [24] 1228 	mov	dptr,#_xmac_is_on
      000003 E0               [24] 1229 	movx	a,@dptr
      000004 60 25            [24] 1230 	jz	00104$
      000006 90r00r0C         [24] 1231 	mov	dptr,#_radio_is_on
      000009 E0               [24] 1232 	movx	a,@dptr
      00000A 70 1F            [24] 1233 	jnz	00104$
                                   1234 ;	../../core/net/mac/xmac.c:236: radio_is_on = 1;
      00000C 90r00r0C         [24] 1235 	mov	dptr,#_radio_is_on
      00000F 74 01            [12] 1236 	mov	a,#0x01
      000011 F0               [24] 1237 	movx	@dptr,a
                                   1238 ;	../../core/net/mac/xmac.c:237: NETSTACK_RADIO.on();
      000012 90r00r10         [24] 1239 	mov	dptr,#(_cc2530_rf_driver + 0x0010)
      000015 E4               [12] 1240 	clr	a
      000016 93               [24] 1241 	movc	a,@a+dptr
      000017 FE               [12] 1242 	mov	r6,a
      000018 A3               [24] 1243 	inc	dptr
      000019 E4               [12] 1244 	clr	a
      00001A 93               [24] 1245 	movc	a,@a+dptr
      00001B FF               [12] 1246 	mov	r7,a
      00001C C0 07            [24] 1247 	push	ar7
      00001E C0 06            [24] 1248 	push	ar6
      000020 8E 82            [24] 1249 	mov	dpl,r6
      000022 8F 83            [24] 1250 	mov	dph,r7
      000024 12r00r00         [24] 1251 	lcall	__sdcc_call_dptr
      000027 D0 06            [24] 1252 	pop	ar6
      000029 D0 07            [24] 1253 	pop	ar7
      00002B                       1254 00104$:
                                   1255 ;	../../core/net/mac/xmac.c:240: }
      00002B 22               [24] 1256 	ret
                                   1257 ;------------------------------------------------------------
                                   1258 ;Allocation info for local variables in function 'off'
                                   1259 ;------------------------------------------------------------
                                   1260 ;	../../core/net/mac/xmac.c:243: off(void)
                                   1261 ;	-----------------------------------------
                                   1262 ;	 function off
                                   1263 ;	-----------------------------------------
      00002C                       1264 _off:
                                   1265 ;	../../core/net/mac/xmac.c:245: if(xmac_is_on && radio_is_on != 0 && is_listening == 0 &&
      00002C 90r00r08         [24] 1266 	mov	dptr,#_xmac_is_on
      00002F E0               [24] 1267 	movx	a,@dptr
      000030 60 2F            [24] 1268 	jz	00106$
      000032 90r00r0C         [24] 1269 	mov	dptr,#_radio_is_on
      000035 E0               [24] 1270 	movx	a,@dptr
      000036 60 29            [24] 1271 	jz	00106$
      000038 90r00r09         [24] 1272 	mov	dptr,#_is_listening
      00003B E0               [24] 1273 	movx	a,@dptr
      00003C 70 23            [24] 1274 	jnz	00106$
                                   1275 ;	../../core/net/mac/xmac.c:246: is_streaming == 0) {
      00003E 90r00r2A         [24] 1276 	mov	dptr,#_is_streaming
      000041 E0               [24] 1277 	movx	a,@dptr
      000042 70 1D            [24] 1278 	jnz	00106$
                                   1279 ;	../../core/net/mac/xmac.c:247: radio_is_on = 0;
      000044 90r00r0C         [24] 1280 	mov	dptr,#_radio_is_on
      000047 E4               [12] 1281 	clr	a
      000048 F0               [24] 1282 	movx	@dptr,a
                                   1283 ;	../../core/net/mac/xmac.c:248: NETSTACK_RADIO.off();
      000049 90r00r12         [24] 1284 	mov	dptr,#(_cc2530_rf_driver + 0x0012)
                                   1285 ;	genFromRTrack removed	clr	a
      00004C 93               [24] 1286 	movc	a,@a+dptr
      00004D FE               [12] 1287 	mov	r6,a
      00004E A3               [24] 1288 	inc	dptr
      00004F E4               [12] 1289 	clr	a
      000050 93               [24] 1290 	movc	a,@a+dptr
      000051 FF               [12] 1291 	mov	r7,a
      000052 C0 07            [24] 1292 	push	ar7
      000054 C0 06            [24] 1293 	push	ar6
      000056 8E 82            [24] 1294 	mov	dpl,r6
      000058 8F 83            [24] 1295 	mov	dph,r7
      00005A 12r00r00         [24] 1296 	lcall	__sdcc_call_dptr
      00005D D0 06            [24] 1297 	pop	ar6
      00005F D0 07            [24] 1298 	pop	ar7
      000061                       1299 00106$:
                                   1300 ;	../../core/net/mac/xmac.c:251: }
      000061 22               [24] 1301 	ret
                                   1302 ;------------------------------------------------------------
                                   1303 ;Allocation info for local variables in function 'schedule_powercycle'
                                   1304 ;------------------------------------------------------------
                                   1305 ;time                      Allocated to stack - sp -6
                                   1306 ;t                         Allocated to stack - sp -2
                                   1307 ;r                         Allocated to registers 
                                   1308 ;------------------------------------------------------------
                                   1309 ;	../../core/net/mac/xmac.c:255: schedule_powercycle(struct rtimer *t, rtimer_clock_t time)
                                   1310 ;	-----------------------------------------
                                   1311 ;	 function schedule_powercycle
                                   1312 ;	-----------------------------------------
      000062                       1313 _schedule_powercycle:
      000062 C0 82            [24] 1314 	push	dpl
      000064 C0 83            [24] 1315 	push	dph
      000066 C0 F0            [24] 1316 	push	b
                                   1317 ;	../../core/net/mac/xmac.c:258: if(xmac_is_on) {
      000068 90r00r08         [24] 1318 	mov	dptr,#_xmac_is_on
      00006B E0               [24] 1319 	movx	a,@dptr
      00006C 60 50            [24] 1320 	jz	00103$
                                   1321 ;	../../core/net/mac/xmac.c:260: (void (*)(struct rtimer *, void *))powercycle, NULL);
      00006E 7BrE5            [12] 1322 	mov	r3,#_powercycle
      000070 7Cs00            [12] 1323 	mov	r4,#(_powercycle >> 8)
                                   1324 ;	../../core/net/mac/xmac.c:259: r = rtimer_set(t, RTIMER_TIME(t) + time, 1,
      000072 A8 81            [24] 1325 	mov	r0,sp
      000074 18               [12] 1326 	dec	r0
      000075 18               [12] 1327 	dec	r0
      000076 86 82            [24] 1328 	mov	dpl,@r0
      000078 08               [12] 1329 	inc	r0
      000079 86 83            [24] 1330 	mov	dph,@r0
      00007B 08               [12] 1331 	inc	r0
      00007C 86 F0            [24] 1332 	mov	b,@r0
      00007E 12r00r00         [24] 1333 	lcall	__gptrget
      000081 FA               [12] 1334 	mov	r2,a
      000082 A3               [24] 1335 	inc	dptr
      000083 12r00r00         [24] 1336 	lcall	__gptrget
      000086 FF               [12] 1337 	mov	r7,a
      000087 E5 81            [12] 1338 	mov	a,sp
      000089 24 FA            [12] 1339 	add	a,#0xfa
      00008B F8               [12] 1340 	mov	r0,a
      00008C E6               [12] 1341 	mov	a,@r0
      00008D 2A               [12] 1342 	add	a,r2
      00008E FA               [12] 1343 	mov	r2,a
      00008F 08               [12] 1344 	inc	r0
      000090 E6               [12] 1345 	mov	a,@r0
      000091 3F               [12] 1346 	addc	a,r7
      000092 FF               [12] 1347 	mov	r7,a
      000093 E4               [12] 1348 	clr	a
      000094 C0 E0            [24] 1349 	push	acc
      000096 C0 E0            [24] 1350 	push	acc
      000098 C0 E0            [24] 1351 	push	acc
      00009A C0 03            [24] 1352 	push	ar3
      00009C C0 04            [24] 1353 	push	ar4
      00009E 04               [12] 1354 	inc	a
      00009F C0 E0            [24] 1355 	push	acc
      0000A1 E4               [12] 1356 	clr	a
      0000A2 C0 E0            [24] 1357 	push	acc
      0000A4 C0 02            [24] 1358 	push	ar2
      0000A6 C0 07            [24] 1359 	push	ar7
      0000A8 E5 81            [12] 1360 	mov	a,sp
      0000AA 24 F5            [12] 1361 	add	a,#0xf5
      0000AC F8               [12] 1362 	mov	r0,a
      0000AD 86 82            [24] 1363 	mov	dpl,@r0
      0000AF 08               [12] 1364 	inc	r0
      0000B0 86 83            [24] 1365 	mov	dph,@r0
      0000B2 08               [12] 1366 	inc	r0
      0000B3 86 F0            [24] 1367 	mov	b,@r0
      0000B5 12r00r00         [24] 1368 	lcall	_rtimer_set
      0000B8 E5 81            [12] 1369 	mov	a,sp
      0000BA 24 F7            [12] 1370 	add	a,#0xf7
      0000BC F5 81            [12] 1371 	mov	sp,a
                                   1372 ;	../../core/net/mac/xmac.c:261: if(r) {
      0000BE                       1373 00103$:
                                   1374 ;	../../core/net/mac/xmac.c:265: }
      0000BE 15 81            [12] 1375 	dec	sp
      0000C0 15 81            [12] 1376 	dec	sp
      0000C2 15 81            [12] 1377 	dec	sp
      0000C4 22               [24] 1378 	ret
                                   1379 ;------------------------------------------------------------
                                   1380 ;Allocation info for local variables in function 'powercycle_turn_radio_off'
                                   1381 ;------------------------------------------------------------
                                   1382 ;	../../core/net/mac/xmac.c:267: powercycle_turn_radio_off(void)
                                   1383 ;	-----------------------------------------
                                   1384 ;	 function powercycle_turn_radio_off
                                   1385 ;	-----------------------------------------
      0000C5                       1386 _powercycle_turn_radio_off:
                                   1387 ;	../../core/net/mac/xmac.c:269: if(we_are_sending == 0 &&
      0000C5 90r00r0B         [24] 1388 	mov	dptr,#_we_are_sending
      0000C8 E0               [24] 1389 	movx	a,@dptr
      0000C9 70 09            [24] 1390 	jnz	00104$
                                   1391 ;	../../core/net/mac/xmac.c:270: waiting_for_packet == 0) {
      0000CB 90r00r09         [24] 1392 	mov	dptr,#_waiting_for_packet
      0000CE E0               [24] 1393 	movx	a,@dptr
      0000CF 70 03            [24] 1394 	jnz	00104$
                                   1395 ;	../../core/net/mac/xmac.c:271: off();
                                   1396 ;	../../core/net/mac/xmac.c:276: }
      0000D1 02r00r2C         [24] 1397 	ljmp	_off
      0000D4                       1398 00104$:
      0000D4 22               [24] 1399 	ret
                                   1400 ;------------------------------------------------------------
                                   1401 ;Allocation info for local variables in function 'powercycle_turn_radio_on'
                                   1402 ;------------------------------------------------------------
                                   1403 ;	../../core/net/mac/xmac.c:278: powercycle_turn_radio_on(void)
                                   1404 ;	-----------------------------------------
                                   1405 ;	 function powercycle_turn_radio_on
                                   1406 ;	-----------------------------------------
      0000D5                       1407 _powercycle_turn_radio_on:
                                   1408 ;	../../core/net/mac/xmac.c:280: if(we_are_sending == 0 &&
      0000D5 90r00r0B         [24] 1409 	mov	dptr,#_we_are_sending
      0000D8 E0               [24] 1410 	movx	a,@dptr
      0000D9 70 09            [24] 1411 	jnz	00104$
                                   1412 ;	../../core/net/mac/xmac.c:281: waiting_for_packet == 0) {
      0000DB 90r00r09         [24] 1413 	mov	dptr,#_waiting_for_packet
      0000DE E0               [24] 1414 	movx	a,@dptr
      0000DF 70 03            [24] 1415 	jnz	00104$
                                   1416 ;	../../core/net/mac/xmac.c:282: on();
                                   1417 ;	../../core/net/mac/xmac.c:284: }
      0000E1 02r00r00         [24] 1418 	ljmp	_on
      0000E4                       1419 00104$:
      0000E4 22               [24] 1420 	ret
                                   1421 ;------------------------------------------------------------
                                   1422 ;Allocation info for local variables in function 'powercycle'
                                   1423 ;------------------------------------------------------------
                                   1424 ;ptr                       Allocated to stack - sp -4
                                   1425 ;t                         Allocated to registers r5 r6 r7 
                                   1426 ;PT_YIELD_FLAG             Allocated to registers r4 
                                   1427 ;------------------------------------------------------------
                                   1428 ;	../../core/net/mac/xmac.c:286: powercycle(struct rtimer *t, void *ptr)
                                   1429 ;	-----------------------------------------
                                   1430 ;	 function powercycle
                                   1431 ;	-----------------------------------------
      0000E5                       1432 _powercycle:
      0000E5 AD 82            [24] 1433 	mov	r5,dpl
      0000E7 AE 83            [24] 1434 	mov	r6,dph
      0000E9 AF F0            [24] 1435 	mov	r7,b
                                   1436 ;	../../core/net/mac/xmac.c:288: if(is_streaming) {
      0000EB 90r00r2A         [24] 1437 	mov	dptr,#_is_streaming
      0000EE E0               [24] 1438 	movx	a,@dptr
      0000EF 60 72            [24] 1439 	jz	00104$
                                   1440 ;	../../core/net/mac/xmac.c:289: if(!RTIMER_CLOCK_LT(RTIMER_NOW(), stream_until)) {
      0000F1 C0 05            [24] 1441 	push	ar5
      0000F3 C0 06            [24] 1442 	push	ar6
      0000F5 C0 07            [24] 1443 	push	ar7
      0000F7 AB E2            [24] 1444 	mov	r3,_T1CNTL
      0000F9 7C 00            [12] 1445 	mov	r4,#0x00
      0000FB AA E3            [24] 1446 	mov	r2,_T1CNTH
      0000FD 8A 07            [24] 1447 	mov	ar7,r2
      0000FF E4               [12] 1448 	clr	a
      000100 FA               [12] 1449 	mov	r2,a
      000101 2B               [12] 1450 	add	a,r3
      000102 FB               [12] 1451 	mov	r3,a
      000103 EF               [12] 1452 	mov	a,r7
      000104 3C               [12] 1453 	addc	a,r4
      000105 FC               [12] 1454 	mov	r4,a
      000106 90r00r2F         [24] 1455 	mov	dptr,#_stream_until
      000109 E0               [24] 1456 	movx	a,@dptr
      00010A FE               [12] 1457 	mov	r6,a
      00010B A3               [24] 1458 	inc	dptr
      00010C E0               [24] 1459 	movx	a,@dptr
      00010D FF               [12] 1460 	mov	r7,a
      00010E EB               [12] 1461 	mov	a,r3
      00010F C3               [12] 1462 	clr	c
      000110 9E               [12] 1463 	subb	a,r6
      000111 EC               [12] 1464 	mov	a,r4
      000112 9F               [12] 1465 	subb	a,r7
      000113 D0 07            [24] 1466 	pop	ar7
      000115 D0 06            [24] 1467 	pop	ar6
      000117 D0 05            [24] 1468 	pop	ar5
      000119 20 E7 47         [24] 1469 	jb	acc.7,00104$
                                   1470 ;	../../core/net/mac/xmac.c:290: is_streaming = 0;
      00011C 90r00r2A         [24] 1471 	mov	dptr,#_is_streaming
      00011F E4               [12] 1472 	clr	a
      000120 F0               [24] 1473 	movx	@dptr,a
                                   1474 ;	../../core/net/mac/xmac.c:291: rimeaddr_copy(&is_streaming_to, &rimeaddr_null);
      000121 C0 07            [24] 1475 	push	ar7
      000123 C0 06            [24] 1476 	push	ar6
      000125 C0 05            [24] 1477 	push	ar5
      000127 74r00            [12] 1478 	mov	a,#_rimeaddr_null
      000129 C0 E0            [24] 1479 	push	acc
      00012B 74s00            [12] 1480 	mov	a,#(_rimeaddr_null >> 8)
      00012D C0 E0            [24] 1481 	push	acc
      00012F 74 80            [12] 1482 	mov	a,#0x80
      000131 C0 E0            [24] 1483 	push	acc
      000133 90r00r2B         [24] 1484 	mov	dptr,#_is_streaming_to
      000136 75 F0 00         [24] 1485 	mov	b,#0x00
      000139 12r00r00         [24] 1486 	lcall	_rimeaddr_copy
      00013C 15 81            [12] 1487 	dec	sp
      00013E 15 81            [12] 1488 	dec	sp
      000140 15 81            [12] 1489 	dec	sp
                                   1490 ;	../../core/net/mac/xmac.c:292: rimeaddr_copy(&is_streaming_to_too, &rimeaddr_null);
      000142 74r00            [12] 1491 	mov	a,#_rimeaddr_null
      000144 C0 E0            [24] 1492 	push	acc
      000146 74s00            [12] 1493 	mov	a,#(_rimeaddr_null >> 8)
      000148 C0 E0            [24] 1494 	push	acc
      00014A 74 80            [12] 1495 	mov	a,#0x80
      00014C C0 E0            [24] 1496 	push	acc
      00014E 90r00r2D         [24] 1497 	mov	dptr,#_is_streaming_to_too
      000151 75 F0 00         [24] 1498 	mov	b,#0x00
      000154 12r00r00         [24] 1499 	lcall	_rimeaddr_copy
      000157 15 81            [12] 1500 	dec	sp
      000159 15 81            [12] 1501 	dec	sp
      00015B 15 81            [12] 1502 	dec	sp
      00015D D0 05            [24] 1503 	pop	ar5
      00015F D0 06            [24] 1504 	pop	ar6
      000161 D0 07            [24] 1505 	pop	ar7
      000163                       1506 00104$:
                                   1507 ;	../../core/net/mac/xmac.c:296: PT_BEGIN(&pt);
      000163 7C 01            [12] 1508 	mov	r4,#0x01
      000165 90r00r07         [24] 1509 	mov	dptr,#_pt
      000168 E0               [24] 1510 	movx	a,@dptr
      000169 FA               [12] 1511 	mov	r2,a
      00016A A3               [24] 1512 	inc	dptr
      00016B E0               [24] 1513 	movx	a,@dptr
      00016C FB               [12] 1514 	mov	r3,a
      00016D BA 00 05         [24] 1515 	cjne	r2,#0x00,00187$
      000170 BB 00 02         [24] 1516 	cjne	r3,#0x00,00187$
      000173 80 14            [24] 1517 	sjmp	00128$
      000175                       1518 00187$:
      000175 BA 33 05         [24] 1519 	cjne	r2,#0x33,00188$
      000178 BB 01 02         [24] 1520 	cjne	r3,#0x01,00188$
      00017B 80 58            [24] 1521 	sjmp	00108$
      00017D                       1522 00188$:
      00017D BA 42 06         [24] 1523 	cjne	r2,#0x42,00189$
      000180 BB 01 03         [24] 1524 	cjne	r3,#0x01,00189$
      000183 02r02r75         [24] 1525 	ljmp	00118$
      000186                       1526 00189$:
      000186 02r02r7F         [24] 1527 	ljmp	00130$
                                   1528 ;	../../core/net/mac/xmac.c:298: while(1) {
      000189                       1529 00128$:
                                   1530 ;	../../core/net/mac/xmac.c:300: if(someone_is_sending > 0) {
      000189 90r00r0A         [24] 1531 	mov	dptr,#_someone_is_sending
      00018C E0               [24] 1532 	movx	a,@dptr
      00018D 60 06            [24] 1533 	jz	00107$
                                   1534 ;	../../core/net/mac/xmac.c:301: someone_is_sending--;
      00018F 90r00r0A         [24] 1535 	mov	dptr,#_someone_is_sending
      000192 E0               [24] 1536 	movx	a,@dptr
      000193 14               [12] 1537 	dec	a
      000194 F0               [24] 1538 	movx	@dptr,a
      000195                       1539 00107$:
                                   1540 ;	../../core/net/mac/xmac.c:305: powercycle_turn_radio_on();
      000195 C0 07            [24] 1541 	push	ar7
      000197 C0 06            [24] 1542 	push	ar6
      000199 C0 05            [24] 1543 	push	ar5
      00019B 12r00rD5         [24] 1544 	lcall	_powercycle_turn_radio_on
      00019E D0 05            [24] 1545 	pop	ar5
      0001A0 D0 06            [24] 1546 	pop	ar6
      0001A2 D0 07            [24] 1547 	pop	ar7
                                   1548 ;	../../core/net/mac/xmac.c:306: schedule_powercycle(t, xmac_config.on_time);
      0001A4 90r00r00         [24] 1549 	mov	dptr,#_xmac_config
      0001A7 E0               [24] 1550 	movx	a,@dptr
      0001A8 FA               [12] 1551 	mov	r2,a
      0001A9 A3               [24] 1552 	inc	dptr
      0001AA E0               [24] 1553 	movx	a,@dptr
      0001AB FB               [12] 1554 	mov	r3,a
      0001AC C0 07            [24] 1555 	push	ar7
      0001AE C0 06            [24] 1556 	push	ar6
      0001B0 C0 05            [24] 1557 	push	ar5
      0001B2 C0 02            [24] 1558 	push	ar2
      0001B4 C0 03            [24] 1559 	push	ar3
      0001B6 8D 82            [24] 1560 	mov	dpl,r5
      0001B8 8E 83            [24] 1561 	mov	dph,r6
      0001BA 8F F0            [24] 1562 	mov	b,r7
      0001BC 12r00r62         [24] 1563 	lcall	_schedule_powercycle
      0001BF 15 81            [12] 1564 	dec	sp
      0001C1 15 81            [12] 1565 	dec	sp
      0001C3 D0 05            [24] 1566 	pop	ar5
      0001C5 D0 06            [24] 1567 	pop	ar6
      0001C7 D0 07            [24] 1568 	pop	ar7
                                   1569 ;	../../core/net/mac/xmac.c:307: PT_YIELD(&pt);
      0001C9 7C 00            [12] 1570 	mov	r4,#0x00
      0001CB 90r00r07         [24] 1571 	mov	dptr,#_pt
      0001CE 74 33            [12] 1572 	mov	a,#0x33
      0001D0 F0               [24] 1573 	movx	@dptr,a
      0001D1 74 01            [12] 1574 	mov	a,#0x01
      0001D3 A3               [24] 1575 	inc	dptr
      0001D4 F0               [24] 1576 	movx	@dptr,a
      0001D5                       1577 00108$:
      0001D5 EC               [12] 1578 	mov	a,r4
      0001D6 70 04            [24] 1579 	jnz	00112$
      0001D8 75 82 01         [24] 1580 	mov	dpl,#0x01
      0001DB 22               [24] 1581 	ret
      0001DC                       1582 00112$:
                                   1583 ;	../../core/net/mac/xmac.c:309: if(xmac_config.off_time > 0 && !NETSTACK_RADIO.receiving_packet()) {
      0001DC 90r00r02         [24] 1584 	mov	dptr,#(_xmac_config + 0x0002)
      0001DF E0               [24] 1585 	movx	a,@dptr
      0001E0 FA               [12] 1586 	mov	r2,a
      0001E1 A3               [24] 1587 	inc	dptr
      0001E2 E0               [24] 1588 	movx	a,@dptr
      0001E3 FB               [12] 1589 	mov	r3,a
      0001E4 4A               [12] 1590 	orl	a,r2
      0001E5 60 A2            [24] 1591 	jz	00128$
      0001E7 90r00r0C         [24] 1592 	mov	dptr,#(_cc2530_rf_driver + 0x000c)
      0001EA E4               [12] 1593 	clr	a
      0001EB 93               [24] 1594 	movc	a,@a+dptr
      0001EC FA               [12] 1595 	mov	r2,a
      0001ED A3               [24] 1596 	inc	dptr
      0001EE E4               [12] 1597 	clr	a
      0001EF 93               [24] 1598 	movc	a,@a+dptr
      0001F0 FB               [12] 1599 	mov	r3,a
      0001F1 C0 07            [24] 1600 	push	ar7
      0001F3 C0 06            [24] 1601 	push	ar6
      0001F5 C0 05            [24] 1602 	push	ar5
      0001F7 8A 82            [24] 1603 	mov	dpl,r2
      0001F9 8B 83            [24] 1604 	mov	dph,r3
      0001FB 12r00r00         [24] 1605 	lcall	__sdcc_call_dptr
      0001FE AA 82            [24] 1606 	mov	r2,dpl
      000200 AB 83            [24] 1607 	mov	r3,dph
      000202 D0 05            [24] 1608 	pop	ar5
      000204 D0 06            [24] 1609 	pop	ar6
      000206 D0 07            [24] 1610 	pop	ar7
      000208 EA               [12] 1611 	mov	a,r2
      000209 4B               [12] 1612 	orl	a,r3
      00020A 60 03            [24] 1613 	jz	00193$
      00020C 02r01r89         [24] 1614 	ljmp	00128$
      00020F                       1615 00193$:
                                   1616 ;	../../core/net/mac/xmac.c:310: powercycle_turn_radio_off();
      00020F C0 07            [24] 1617 	push	ar7
      000211 C0 06            [24] 1618 	push	ar6
      000213 C0 05            [24] 1619 	push	ar5
      000215 12r00rC5         [24] 1620 	lcall	_powercycle_turn_radio_off
      000218 D0 05            [24] 1621 	pop	ar5
      00021A D0 06            [24] 1622 	pop	ar6
      00021C D0 07            [24] 1623 	pop	ar7
                                   1624 ;	../../core/net/mac/xmac.c:311: if(waiting_for_packet != 0) {
      00021E 90r00r09         [24] 1625 	mov	dptr,#_waiting_for_packet
      000221 E0               [24] 1626 	movx	a,@dptr
      000222 60 20            [24] 1627 	jz	00117$
                                   1628 ;	../../core/net/mac/xmac.c:312: waiting_for_packet++;
      000224 90r00r09         [24] 1629 	mov	dptr,#_waiting_for_packet
      000227 E0               [24] 1630 	movx	a,@dptr
      000228 04               [12] 1631 	inc	a
      000229 F0               [24] 1632 	movx	@dptr,a
                                   1633 ;	../../core/net/mac/xmac.c:313: if(waiting_for_packet > 2) {
      00022A E0               [24] 1634 	movx	a,@dptr
      00022B FB               [12] 1635 	mov  r3,a
      00022C 24 FD            [12] 1636 	add	a,#0xff - 0x02
      00022E 50 14            [24] 1637 	jnc	00117$
                                   1638 ;	../../core/net/mac/xmac.c:317: waiting_for_packet = 0;
      000230 90r00r09         [24] 1639 	mov	dptr,#_waiting_for_packet
      000233 E4               [12] 1640 	clr	a
      000234 F0               [24] 1641 	movx	@dptr,a
                                   1642 ;	../../core/net/mac/xmac.c:318: powercycle_turn_radio_off();
      000235 C0 07            [24] 1643 	push	ar7
      000237 C0 06            [24] 1644 	push	ar6
      000239 C0 05            [24] 1645 	push	ar5
      00023B 12r00rC5         [24] 1646 	lcall	_powercycle_turn_radio_off
      00023E D0 05            [24] 1647 	pop	ar5
      000240 D0 06            [24] 1648 	pop	ar6
      000242 D0 07            [24] 1649 	pop	ar7
      000244                       1650 00117$:
                                   1651 ;	../../core/net/mac/xmac.c:321: schedule_powercycle(t, xmac_config.off_time);
      000244 90r00r02         [24] 1652 	mov	dptr,#(_xmac_config + 0x0002)
      000247 E0               [24] 1653 	movx	a,@dptr
      000248 FA               [12] 1654 	mov	r2,a
      000249 A3               [24] 1655 	inc	dptr
      00024A E0               [24] 1656 	movx	a,@dptr
      00024B FB               [12] 1657 	mov	r3,a
      00024C C0 07            [24] 1658 	push	ar7
      00024E C0 06            [24] 1659 	push	ar6
      000250 C0 05            [24] 1660 	push	ar5
      000252 C0 02            [24] 1661 	push	ar2
      000254 C0 03            [24] 1662 	push	ar3
      000256 8D 82            [24] 1663 	mov	dpl,r5
      000258 8E 83            [24] 1664 	mov	dph,r6
      00025A 8F F0            [24] 1665 	mov	b,r7
      00025C 12r00r62         [24] 1666 	lcall	_schedule_powercycle
      00025F 15 81            [12] 1667 	dec	sp
      000261 15 81            [12] 1668 	dec	sp
      000263 D0 05            [24] 1669 	pop	ar5
      000265 D0 06            [24] 1670 	pop	ar6
      000267 D0 07            [24] 1671 	pop	ar7
                                   1672 ;	../../core/net/mac/xmac.c:322: PT_YIELD(&pt);
      000269 7C 00            [12] 1673 	mov	r4,#0x00
      00026B 90r00r07         [24] 1674 	mov	dptr,#_pt
      00026E 74 42            [12] 1675 	mov	a,#0x42
      000270 F0               [24] 1676 	movx	@dptr,a
      000271 74 01            [12] 1677 	mov	a,#0x01
      000273 A3               [24] 1678 	inc	dptr
      000274 F0               [24] 1679 	movx	@dptr,a
      000275                       1680 00118$:
      000275 EC               [12] 1681 	mov	a,r4
      000276 60 03            [24] 1682 	jz	00196$
      000278 02r01r89         [24] 1683 	ljmp	00128$
      00027B                       1684 00196$:
      00027B 75 82 01         [24] 1685 	mov	dpl,#0x01
                                   1686 ;	../../core/net/mac/xmac.c:326: PT_END(&pt);
      00027E 22               [24] 1687 	ret
      00027F                       1688 00130$:
      00027F 90r00r07         [24] 1689 	mov	dptr,#_pt
      000282 E4               [12] 1690 	clr	a
      000283 F0               [24] 1691 	movx	@dptr,a
      000284 A3               [24] 1692 	inc	dptr
      000285 F0               [24] 1693 	movx	@dptr,a
      000286 75 82 03         [24] 1694 	mov	dpl,#0x03
                                   1695 ;	../../core/net/mac/xmac.c:327: }
      000289 22               [24] 1696 	ret
                                   1697 ;------------------------------------------------------------
                                   1698 ;Allocation info for local variables in function 'register_encounter'
                                   1699 ;------------------------------------------------------------
                                   1700 ;time                      Allocated to stack - sp -6
                                   1701 ;neighbor                  Allocated to stack - sp -2
                                   1702 ;e                         Allocated to registers r5 r6 r7 
                                   1703 ;------------------------------------------------------------
                                   1704 ;	../../core/net/mac/xmac.c:391: register_encounter(const rimeaddr_t *neighbor, rtimer_clock_t time)
                                   1705 ;	-----------------------------------------
                                   1706 ;	 function register_encounter
                                   1707 ;	-----------------------------------------
      00028A                       1708 _register_encounter:
      00028A C0 82            [24] 1709 	push	dpl
      00028C C0 83            [24] 1710 	push	dph
      00028E C0 F0            [24] 1711 	push	b
                                   1712 ;	../../core/net/mac/xmac.c:396: for(e = list_head(encounter_list); e != NULL; e = list_item_next(e)) {
      000290 90r00r10         [24] 1713 	mov	dptr,#_encounter_list
      000293 E0               [24] 1714 	movx	a,@dptr
      000294 FA               [12] 1715 	mov	r2,a
      000295 A3               [24] 1716 	inc	dptr
      000296 E0               [24] 1717 	movx	a,@dptr
      000297 FB               [12] 1718 	mov	r3,a
      000298 A3               [24] 1719 	inc	dptr
      000299 E0               [24] 1720 	movx	a,@dptr
      00029A FC               [12] 1721 	mov	r4,a
      00029B 8A 82            [24] 1722 	mov	dpl,r2
      00029D 8B 83            [24] 1723 	mov	dph,r3
      00029F 8C F0            [24] 1724 	mov	b,r4
      0002A1 12r00r00         [24] 1725 	lcall	_list_head
      0002A4 AA 82            [24] 1726 	mov	r2,dpl
      0002A6 AB 83            [24] 1727 	mov	r3,dph
      0002A8 AC F0            [24] 1728 	mov	r4,b
      0002AA                       1729 00109$:
      0002AA EA               [12] 1730 	mov	a,r2
      0002AB 4B               [12] 1731 	orl	a,r3
      0002AC 60 76            [24] 1732 	jz	00103$
                                   1733 ;	../../core/net/mac/xmac.c:397: if(rimeaddr_cmp(neighbor, &e->neighbor)) {
      0002AE 74 03            [12] 1734 	mov	a,#0x03
      0002B0 2A               [12] 1735 	add	a,r2
      0002B1 FD               [12] 1736 	mov	r5,a
      0002B2 E4               [12] 1737 	clr	a
      0002B3 3B               [12] 1738 	addc	a,r3
      0002B4 FE               [12] 1739 	mov	r6,a
      0002B5 8C 07            [24] 1740 	mov	ar7,r4
      0002B7 C0 04            [24] 1741 	push	ar4
      0002B9 C0 03            [24] 1742 	push	ar3
      0002BB C0 02            [24] 1743 	push	ar2
      0002BD C0 05            [24] 1744 	push	ar5
      0002BF C0 06            [24] 1745 	push	ar6
      0002C1 C0 07            [24] 1746 	push	ar7
      0002C3 E5 81            [12] 1747 	mov	a,sp
      0002C5 24 F8            [12] 1748 	add	a,#0xf8
      0002C7 F8               [12] 1749 	mov	r0,a
      0002C8 86 82            [24] 1750 	mov	dpl,@r0
      0002CA 08               [12] 1751 	inc	r0
      0002CB 86 83            [24] 1752 	mov	dph,@r0
      0002CD 08               [12] 1753 	inc	r0
      0002CE 86 F0            [24] 1754 	mov	b,@r0
      0002D0 12r00r00         [24] 1755 	lcall	_rimeaddr_cmp
      0002D3 AE 82            [24] 1756 	mov	r6,dpl
      0002D5 AF 83            [24] 1757 	mov	r7,dph
      0002D7 15 81            [12] 1758 	dec	sp
      0002D9 15 81            [12] 1759 	dec	sp
      0002DB 15 81            [12] 1760 	dec	sp
      0002DD D0 02            [24] 1761 	pop	ar2
      0002DF D0 03            [24] 1762 	pop	ar3
      0002E1 D0 04            [24] 1763 	pop	ar4
      0002E3 EE               [12] 1764 	mov	a,r6
      0002E4 4F               [12] 1765 	orl	a,r7
      0002E5 60 20            [24] 1766 	jz	00110$
                                   1767 ;	../../core/net/mac/xmac.c:398: e->time = time;
      0002E7 74 05            [12] 1768 	mov	a,#0x05
      0002E9 2A               [12] 1769 	add	a,r2
      0002EA FD               [12] 1770 	mov	r5,a
      0002EB E4               [12] 1771 	clr	a
      0002EC 3B               [12] 1772 	addc	a,r3
      0002ED FE               [12] 1773 	mov	r6,a
      0002EE 8C 07            [24] 1774 	mov	ar7,r4
      0002F0 8D 82            [24] 1775 	mov	dpl,r5
      0002F2 8E 83            [24] 1776 	mov	dph,r6
      0002F4 8F F0            [24] 1777 	mov	b,r7
      0002F6 E5 81            [12] 1778 	mov	a,sp
      0002F8 24 FA            [12] 1779 	add	a,#0xfa
      0002FA F8               [12] 1780 	mov	r0,a
      0002FB E6               [12] 1781 	mov	a,@r0
      0002FC 12r00r00         [24] 1782 	lcall	__gptrput
      0002FF A3               [24] 1783 	inc	dptr
      000300 08               [12] 1784 	inc	r0
      000301 E6               [12] 1785 	mov	a,@r0
      000302 12r00r00         [24] 1786 	lcall	__gptrput
                                   1787 ;	../../core/net/mac/xmac.c:399: break;
      000305 80 1D            [24] 1788 	sjmp	00103$
      000307                       1789 00110$:
                                   1790 ;	../../core/net/mac/xmac.c:396: for(e = list_head(encounter_list); e != NULL; e = list_item_next(e)) {
      000307 8A 05            [24] 1791 	mov	ar5,r2
      000309 8B 06            [24] 1792 	mov	ar6,r3
      00030B 8C 07            [24] 1793 	mov	ar7,r4
      00030D 8D 82            [24] 1794 	mov	dpl,r5
      00030F 8E 83            [24] 1795 	mov	dph,r6
      000311 8F F0            [24] 1796 	mov	b,r7
      000313 12r00r00         [24] 1797 	lcall	_list_item_next
      000316 AD 82            [24] 1798 	mov	r5,dpl
      000318 AE 83            [24] 1799 	mov	r6,dph
      00031A AF F0            [24] 1800 	mov	r7,b
      00031C 8D 02            [24] 1801 	mov	ar2,r5
      00031E 8E 03            [24] 1802 	mov	ar3,r6
      000320 8F 04            [24] 1803 	mov	ar4,r7
      000322 80 86            [24] 1804 	sjmp	00109$
      000324                       1805 00103$:
                                   1806 ;	../../core/net/mac/xmac.c:403: if(e == NULL) {
      000324 EA               [12] 1807 	mov	a,r2
      000325 4B               [12] 1808 	orl	a,r3
      000326 60 03            [24] 1809 	jz	00140$
      000328 02r03rB2         [24] 1810 	ljmp	00111$
      00032B                       1811 00140$:
                                   1812 ;	../../core/net/mac/xmac.c:404: e = memb_alloc(&encounter_memb);
      00032B 90r00r13         [24] 1813 	mov	dptr,#_encounter_memb
      00032E 75 F0 00         [24] 1814 	mov	b,#0x00
      000331 12r00r00         [24] 1815 	lcall	_memb_alloc
      000334 AD 82            [24] 1816 	mov	r5,dpl
      000336 AE 83            [24] 1817 	mov	r6,dph
      000338 AF F0            [24] 1818 	mov	r7,b
                                   1819 ;	../../core/net/mac/xmac.c:405: if(e == NULL) {
      00033A ED               [12] 1820 	mov	a,r5
      00033B 4E               [12] 1821 	orl	a,r6
      00033C 70 02            [24] 1822 	jnz	00105$
                                   1823 ;	../../core/net/mac/xmac.c:407: return;
      00033E 80 72            [24] 1824 	sjmp	00111$
      000340                       1825 00105$:
                                   1826 ;	../../core/net/mac/xmac.c:409: rimeaddr_copy(&e->neighbor, neighbor);
      000340 74 03            [12] 1827 	mov	a,#0x03
      000342 2D               [12] 1828 	add	a,r5
      000343 FA               [12] 1829 	mov	r2,a
      000344 E4               [12] 1830 	clr	a
      000345 3E               [12] 1831 	addc	a,r6
      000346 FB               [12] 1832 	mov	r3,a
      000347 8F 04            [24] 1833 	mov	ar4,r7
      000349 C0 07            [24] 1834 	push	ar7
      00034B C0 06            [24] 1835 	push	ar6
      00034D C0 05            [24] 1836 	push	ar5
      00034F E5 81            [12] 1837 	mov	a,sp
      000351 24 FB            [12] 1838 	add	a,#0xfb
      000353 F8               [12] 1839 	mov	r0,a
      000354 E6               [12] 1840 	mov	a,@r0
      000355 C0 E0            [24] 1841 	push	acc
      000357 08               [12] 1842 	inc	r0
      000358 E6               [12] 1843 	mov	a,@r0
      000359 C0 E0            [24] 1844 	push	acc
      00035B 08               [12] 1845 	inc	r0
      00035C E6               [12] 1846 	mov	a,@r0
      00035D C0 E0            [24] 1847 	push	acc
      00035F 8A 82            [24] 1848 	mov	dpl,r2
      000361 8B 83            [24] 1849 	mov	dph,r3
      000363 8C F0            [24] 1850 	mov	b,r4
      000365 12r00r00         [24] 1851 	lcall	_rimeaddr_copy
      000368 15 81            [12] 1852 	dec	sp
      00036A 15 81            [12] 1853 	dec	sp
      00036C 15 81            [12] 1854 	dec	sp
      00036E D0 05            [24] 1855 	pop	ar5
      000370 D0 06            [24] 1856 	pop	ar6
      000372 D0 07            [24] 1857 	pop	ar7
                                   1858 ;	../../core/net/mac/xmac.c:410: e->time = time;
      000374 74 05            [12] 1859 	mov	a,#0x05
      000376 2D               [12] 1860 	add	a,r5
      000377 FA               [12] 1861 	mov	r2,a
      000378 E4               [12] 1862 	clr	a
      000379 3E               [12] 1863 	addc	a,r6
      00037A FB               [12] 1864 	mov	r3,a
      00037B 8F 04            [24] 1865 	mov	ar4,r7
      00037D 8A 82            [24] 1866 	mov	dpl,r2
      00037F 8B 83            [24] 1867 	mov	dph,r3
      000381 8C F0            [24] 1868 	mov	b,r4
      000383 E5 81            [12] 1869 	mov	a,sp
      000385 24 FA            [12] 1870 	add	a,#0xfa
      000387 F8               [12] 1871 	mov	r0,a
      000388 E6               [12] 1872 	mov	a,@r0
      000389 12r00r00         [24] 1873 	lcall	__gptrput
      00038C A3               [24] 1874 	inc	dptr
      00038D 08               [12] 1875 	inc	r0
      00038E E6               [12] 1876 	mov	a,@r0
      00038F 12r00r00         [24] 1877 	lcall	__gptrput
                                   1878 ;	../../core/net/mac/xmac.c:411: list_add(encounter_list, e);
      000392 90r00r10         [24] 1879 	mov	dptr,#_encounter_list
      000395 E0               [24] 1880 	movx	a,@dptr
      000396 FA               [12] 1881 	mov	r2,a
      000397 A3               [24] 1882 	inc	dptr
      000398 E0               [24] 1883 	movx	a,@dptr
      000399 FB               [12] 1884 	mov	r3,a
      00039A A3               [24] 1885 	inc	dptr
      00039B E0               [24] 1886 	movx	a,@dptr
      00039C FC               [12] 1887 	mov	r4,a
      00039D C0 05            [24] 1888 	push	ar5
      00039F C0 06            [24] 1889 	push	ar6
      0003A1 C0 07            [24] 1890 	push	ar7
      0003A3 8A 82            [24] 1891 	mov	dpl,r2
      0003A5 8B 83            [24] 1892 	mov	dph,r3
      0003A7 8C F0            [24] 1893 	mov	b,r4
      0003A9 12r00r00         [24] 1894 	lcall	_list_add
      0003AC 15 81            [12] 1895 	dec	sp
      0003AE 15 81            [12] 1896 	dec	sp
      0003B0 15 81            [12] 1897 	dec	sp
      0003B2                       1898 00111$:
                                   1899 ;	../../core/net/mac/xmac.c:413: }
      0003B2 15 81            [12] 1900 	dec	sp
      0003B4 15 81            [12] 1901 	dec	sp
      0003B6 15 81            [12] 1902 	dec	sp
      0003B8 22               [24] 1903 	ret
                                   1904 ;------------------------------------------------------------
                                   1905 ;Allocation info for local variables in function 'detect_ack'
                                   1906 ;------------------------------------------------------------
                                   1907 ;wt                        Allocated to registers r5 r6 
                                   1908 ;ack_received              Allocated to registers r7 
                                   1909 ;len                       Allocated to registers r5 r6 
                                   1910 ;ackbuf                    Allocated to stack - sp -4
                                   1911 ;------------------------------------------------------------
                                   1912 ;	../../core/net/mac/xmac.c:417: detect_ack(void)
                                   1913 ;	-----------------------------------------
                                   1914 ;	 function detect_ack
                                   1915 ;	-----------------------------------------
      0003B9                       1916 _detect_ack:
      0003B9 E5 81            [12] 1917 	mov	a,sp
      0003BB 24 05            [12] 1918 	add	a,#0x05
      0003BD F5 81            [12] 1919 	mov	sp,a
                                   1920 ;	../../core/net/mac/xmac.c:423: uint8_t ack_received = 0;
      0003BF 7F 00            [12] 1921 	mov	r7,#0x00
                                   1922 ;	../../core/net/mac/xmac.c:425: wt = RTIMER_NOW();
      0003C1 AD E2            [24] 1923 	mov	r5,_T1CNTL
      0003C3 7E 00            [12] 1924 	mov	r6,#0x00
      0003C5 AB E3            [24] 1925 	mov	r3,_T1CNTH
      0003C7 8B 04            [24] 1926 	mov	ar4,r3
      0003C9 E4               [12] 1927 	clr	a
      0003CA 2D               [12] 1928 	add	a,r5
      0003CB FD               [12] 1929 	mov	r5,a
      0003CC EC               [12] 1930 	mov	a,r4
      0003CD 3E               [12] 1931 	addc	a,r6
      0003CE FE               [12] 1932 	mov	r6,a
                                   1933 ;	../../core/net/mac/xmac.c:426: leds_on(LEDS_GREEN);
      0003CF 75 82 01         [24] 1934 	mov	dpl,#0x01
      0003D2 C0 07            [24] 1935 	push	ar7
      0003D4 C0 06            [24] 1936 	push	ar6
      0003D6 C0 05            [24] 1937 	push	ar5
      0003D8 12r00r00         [24] 1938 	lcall	_leds_on
      0003DB D0 05            [24] 1939 	pop	ar5
      0003DD D0 06            [24] 1940 	pop	ar6
      0003DF D0 07            [24] 1941 	pop	ar7
                                   1942 ;	../../core/net/mac/xmac.c:427: while(RTIMER_CLOCK_LT(RTIMER_NOW(), wt + INTER_PACKET_INTERVAL)) { }
      0003E1                       1943 00101$:
      0003E1 C0 07            [24] 1944 	push	ar7
      0003E3 AB E2            [24] 1945 	mov	r3,_T1CNTL
      0003E5 7C 00            [12] 1946 	mov	r4,#0x00
      0003E7 AA E3            [24] 1947 	mov	r2,_T1CNTH
      0003E9 8A 07            [24] 1948 	mov	ar7,r2
      0003EB E4               [12] 1949 	clr	a
      0003EC 2B               [12] 1950 	add	a,r3
      0003ED FB               [12] 1951 	mov	r3,a
      0003EE EF               [12] 1952 	mov	a,r7
      0003EF 3C               [12] 1953 	addc	a,r4
      0003F0 FC               [12] 1954 	mov	r4,a
      0003F1 8D 02            [24] 1955 	mov	ar2,r5
      0003F3 8E 07            [24] 1956 	mov	ar7,r6
      0003F5 74 03            [12] 1957 	mov	a,#0x03
      0003F7 2A               [12] 1958 	add	a,r2
      0003F8 FA               [12] 1959 	mov	r2,a
      0003F9 E4               [12] 1960 	clr	a
      0003FA 3F               [12] 1961 	addc	a,r7
      0003FB FF               [12] 1962 	mov	r7,a
      0003FC EB               [12] 1963 	mov	a,r3
      0003FD C3               [12] 1964 	clr	c
      0003FE 9A               [12] 1965 	subb	a,r2
      0003FF EC               [12] 1966 	mov	a,r4
      000400 9F               [12] 1967 	subb	a,r7
      000401 D0 07            [24] 1968 	pop	ar7
      000403 20 E7 DB         [24] 1969 	jb	acc.7,00101$
                                   1970 ;	../../core/net/mac/xmac.c:428: leds_off(LEDS_GREEN);
      000406 75 82 01         [24] 1971 	mov	dpl,#0x01
      000409 C0 07            [24] 1972 	push	ar7
      00040B 12r00r00         [24] 1973 	lcall	_leds_off
                                   1974 ;	../../core/net/mac/xmac.c:430: if((NETSTACK_RADIO.receiving_packet() ||
      00040E 90r00r0C         [24] 1975 	mov	dptr,#(_cc2530_rf_driver + 0x000c)
      000411 E4               [12] 1976 	clr	a
      000412 93               [24] 1977 	movc	a,@a+dptr
      000413 FD               [12] 1978 	mov	r5,a
      000414 A3               [24] 1979 	inc	dptr
      000415 E4               [12] 1980 	clr	a
      000416 93               [24] 1981 	movc	a,@a+dptr
      000417 FE               [12] 1982 	mov	r6,a
      000418 8D 82            [24] 1983 	mov	dpl,r5
      00041A 8E 83            [24] 1984 	mov	dph,r6
      00041C 12r00r00         [24] 1985 	lcall	__sdcc_call_dptr
      00041F AD 82            [24] 1986 	mov	r5,dpl
      000421 AE 83            [24] 1987 	mov	r6,dph
      000423 D0 07            [24] 1988 	pop	ar7
      000425 ED               [12] 1989 	mov	a,r5
      000426 4E               [12] 1990 	orl	a,r6
      000427 70 3A            [24] 1991 	jnz	00109$
                                   1992 ;	../../core/net/mac/xmac.c:431: NETSTACK_RADIO.pending_packet() ||
      000429 90r00r0E         [24] 1993 	mov	dptr,#(_cc2530_rf_driver + 0x000e)
      00042C E4               [12] 1994 	clr	a
      00042D 93               [24] 1995 	movc	a,@a+dptr
      00042E FD               [12] 1996 	mov	r5,a
      00042F A3               [24] 1997 	inc	dptr
      000430 E4               [12] 1998 	clr	a
      000431 93               [24] 1999 	movc	a,@a+dptr
      000432 FE               [12] 2000 	mov	r6,a
      000433 C0 07            [24] 2001 	push	ar7
      000435 8D 82            [24] 2002 	mov	dpl,r5
      000437 8E 83            [24] 2003 	mov	dph,r6
      000439 12r00r00         [24] 2004 	lcall	__sdcc_call_dptr
      00043C AD 82            [24] 2005 	mov	r5,dpl
      00043E AE 83            [24] 2006 	mov	r6,dph
      000440 D0 07            [24] 2007 	pop	ar7
      000442 ED               [12] 2008 	mov	a,r5
      000443 4E               [12] 2009 	orl	a,r6
      000444 70 1D            [24] 2010 	jnz	00109$
                                   2011 ;	../../core/net/mac/xmac.c:432: NETSTACK_RADIO.channel_clear() == 0)) {
      000446 90r00r0A         [24] 2012 	mov	dptr,#(_cc2530_rf_driver + 0x000a)
      000449 E4               [12] 2013 	clr	a
      00044A 93               [24] 2014 	movc	a,@a+dptr
      00044B FD               [12] 2015 	mov	r5,a
      00044C A3               [24] 2016 	inc	dptr
      00044D E4               [12] 2017 	clr	a
      00044E 93               [24] 2018 	movc	a,@a+dptr
      00044F FE               [12] 2019 	mov	r6,a
      000450 C0 07            [24] 2020 	push	ar7
      000452 8D 82            [24] 2021 	mov	dpl,r5
      000454 8E 83            [24] 2022 	mov	dph,r6
      000456 12r00r00         [24] 2023 	lcall	__sdcc_call_dptr
      000459 AD 82            [24] 2024 	mov	r5,dpl
      00045B AE 83            [24] 2025 	mov	r6,dph
      00045D D0 07            [24] 2026 	pop	ar7
      00045F ED               [12] 2027 	mov	a,r5
      000460 4E               [12] 2028 	orl	a,r6
      000461 70 72            [24] 2029 	jnz	00110$
      000463                       2030 00109$:
                                   2031 ;	../../core/net/mac/xmac.c:436: wt = RTIMER_NOW();
      000463 AD E2            [24] 2032 	mov	r5,_T1CNTL
      000465 7E 00            [12] 2033 	mov	r6,#0x00
      000467 AB E3            [24] 2034 	mov	r3,_T1CNTH
      000469 8B 04            [24] 2035 	mov	ar4,r3
      00046B E4               [12] 2036 	clr	a
      00046C FB               [12] 2037 	mov	r3,a
      00046D 2D               [12] 2038 	add	a,r5
      00046E FD               [12] 2039 	mov	r5,a
      00046F EC               [12] 2040 	mov	a,r4
      000470 3E               [12] 2041 	addc	a,r6
      000471 FE               [12] 2042 	mov	r6,a
                                   2043 ;	../../core/net/mac/xmac.c:437: while(RTIMER_CLOCK_LT(RTIMER_NOW(), wt + AFTER_ACK_DETECTECT_WAIT_TIME)) { }
      000472                       2044 00104$:
      000472 C0 07            [24] 2045 	push	ar7
      000474 AB E2            [24] 2046 	mov	r3,_T1CNTL
      000476 7C 00            [12] 2047 	mov	r4,#0x00
      000478 AA E3            [24] 2048 	mov	r2,_T1CNTH
      00047A 8A 07            [24] 2049 	mov	ar7,r2
      00047C E4               [12] 2050 	clr	a
      00047D 2B               [12] 2051 	add	a,r3
      00047E FB               [12] 2052 	mov	r3,a
      00047F EF               [12] 2053 	mov	a,r7
      000480 3C               [12] 2054 	addc	a,r4
      000481 FC               [12] 2055 	mov	r4,a
      000482 8D 02            [24] 2056 	mov	ar2,r5
      000484 8E 07            [24] 2057 	mov	ar7,r6
      000486 74 0F            [12] 2058 	mov	a,#0x0f
      000488 2A               [12] 2059 	add	a,r2
      000489 FA               [12] 2060 	mov	r2,a
      00048A E4               [12] 2061 	clr	a
      00048B 3F               [12] 2062 	addc	a,r7
      00048C FF               [12] 2063 	mov	r7,a
      00048D EB               [12] 2064 	mov	a,r3
      00048E C3               [12] 2065 	clr	c
      00048F 9A               [12] 2066 	subb	a,r2
      000490 EC               [12] 2067 	mov	a,r4
      000491 9F               [12] 2068 	subb	a,r7
      000492 D0 07            [24] 2069 	pop	ar7
      000494 20 E7 DB         [24] 2070 	jb	acc.7,00104$
                                   2071 ;	../../core/net/mac/xmac.c:439: len = NETSTACK_RADIO.read(ackbuf, ACK_LEN);
      000497 90r00r08         [24] 2072 	mov	dptr,#(_cc2530_rf_driver + 0x0008)
      00049A E4               [12] 2073 	clr	a
      00049B 93               [24] 2074 	movc	a,@a+dptr
      00049C FD               [12] 2075 	mov	r5,a
      00049D A3               [24] 2076 	inc	dptr
      00049E E4               [12] 2077 	clr	a
      00049F 93               [24] 2078 	movc	a,@a+dptr
      0004A0 FE               [12] 2079 	mov	r6,a
      0004A1 E5 81            [12] 2080 	mov	a,sp
      0004A3 24 FC            [12] 2081 	add	a,#0xfc
      0004A5 FC               [12] 2082 	mov	r4,a
      0004A6 7B 00            [12] 2083 	mov	r3,#0x00
      0004A8 7A 40            [12] 2084 	mov	r2,#0x40
      0004AA C0 07            [24] 2085 	push	ar7
      0004AC 74 03            [12] 2086 	mov	a,#0x03
      0004AE C0 E0            [24] 2087 	push	acc
      0004B0 E4               [12] 2088 	clr	a
      0004B1 C0 E0            [24] 2089 	push	acc
      0004B3 12r04rB8         [24] 2090 	lcall	00162$
      0004B6 80 0B            [24] 2091 	sjmp	00163$
      0004B8                       2092 00162$:
      0004B8 C0 05            [24] 2093 	push	ar5
      0004BA C0 06            [24] 2094 	push	ar6
      0004BC 8C 82            [24] 2095 	mov	dpl,r4
      0004BE 8B 83            [24] 2096 	mov	dph,r3
      0004C0 8A F0            [24] 2097 	mov	b,r2
      0004C2 22               [24] 2098 	ret
      0004C3                       2099 00163$:
      0004C3 AD 82            [24] 2100 	mov	r5,dpl
      0004C5 AE 83            [24] 2101 	mov	r6,dph
      0004C7 15 81            [12] 2102 	dec	sp
      0004C9 15 81            [12] 2103 	dec	sp
      0004CB D0 07            [24] 2104 	pop	ar7
                                   2105 ;	../../core/net/mac/xmac.c:440: if(len == ACK_LEN) {
      0004CD BD 03 05         [24] 2106 	cjne	r5,#0x03,00110$
      0004D0 BE 00 02         [24] 2107 	cjne	r6,#0x00,00110$
                                   2108 ;	../../core/net/mac/xmac.c:441: ack_received = 1;
      0004D3 7F 01            [12] 2109 	mov	r7,#0x01
      0004D5                       2110 00110$:
                                   2111 ;	../../core/net/mac/xmac.c:444: if(ack_received) {
      0004D5 EF               [12] 2112 	mov	a,r7
      0004D6 60 0A            [24] 2113 	jz	00114$
                                   2114 ;	../../core/net/mac/xmac.c:445: leds_toggle(LEDS_RED);
      0004D8 75 82 02         [24] 2115 	mov	dpl,#0x02
      0004DB C0 07            [24] 2116 	push	ar7
      0004DD 12r00r00         [24] 2117 	lcall	_leds_toggle
      0004E0 D0 07            [24] 2118 	pop	ar7
      0004E2                       2119 00114$:
                                   2120 ;	../../core/net/mac/xmac.c:447: return ack_received;
      0004E2 7E 00            [12] 2121 	mov	r6,#0x00
      0004E4 8F 82            [24] 2122 	mov	dpl,r7
      0004E6 8E 83            [24] 2123 	mov	dph,r6
                                   2124 ;	../../core/net/mac/xmac.c:448: }
      0004E8 E5 81            [12] 2125 	mov	a,sp
      0004EA 24 FB            [12] 2126 	add	a,#0xfb
      0004EC F5 81            [12] 2127 	mov	sp,a
      0004EE 22               [24] 2128 	ret
                                   2129 ;------------------------------------------------------------
                                   2130 ;Allocation info for local variables in function 'send_packet'
                                   2131 ;------------------------------------------------------------
                                   2132 ;t0                        Allocated to stack - sp -5
                                   2133 ;t                         Allocated to stack - sp -3
                                   2134 ;encounter_time            Allocated to registers 
                                   2135 ;strobes                   Allocated to registers 
                                   2136 ;ret                       Allocated to registers 
                                   2137 ;got_strobe_ack            Allocated to stack - sp -69
                                   2138 ;got_ack                   Allocated to stack - sp -68
                                   2139 ;strobe                    Allocated to stack - sp -67
                                   2140 ;strobe_len                Allocated to stack - sp -17
                                   2141 ;len                       Allocated to stack - sp -15
                                   2142 ;is_broadcast              Allocated to stack - sp -13
                                   2143 ;e                         Allocated to stack - sp -11
                                   2144 ;packet                    Allocated to stack - sp -8
                                   2145 ;is_already_streaming      Allocated to stack - sp -1
                                   2146 ;collisions                Allocated to registers r3 
                                   2147 ;neighbor                  Allocated to registers r7 r6 r3 
                                   2148 ;wait                      Allocated to registers r5 r3 
                                   2149 ;now                       Allocated to registers r2 r4 
                                   2150 ;expected                  Allocated to registers r6 r7 
                                   2151 ;sloc0                     Allocated to stack - sp -72
                                   2152 ;sloc1                     Allocated to stack - sp -71
                                   2153 ;------------------------------------------------------------
                                   2154 ;	../../core/net/mac/xmac.c:451: send_packet(void)
                                   2155 ;	-----------------------------------------
                                   2156 ;	 function send_packet
                                   2157 ;	-----------------------------------------
      0004EF                       2158 _send_packet:
      0004EF E5 81            [12] 2159 	mov	a,sp
      0004F1 24 49            [12] 2160 	add	a,#0x49
                                   2161 ;	../../core/net/mac/xmac.c:461: uint8_t got_strobe_ack = 0;
      0004F3 F5 81            [12] 2162 	mov	sp,a
      0004F5 24 BB            [12] 2163 	add	a,#0xbb
      0004F7 F8               [12] 2164 	mov	r0,a
      0004F8 76 00            [12] 2165 	mov	@r0,#0x00
                                   2166 ;	../../core/net/mac/xmac.c:462: uint8_t got_ack = 0;
      0004FA E5 81            [12] 2167 	mov	a,sp
      0004FC 24 BC            [12] 2168 	add	a,#0xbc
      0004FE F8               [12] 2169 	mov	r0,a
      0004FF 76 00            [12] 2170 	mov	@r0,#0x00
                                   2171 ;	../../core/net/mac/xmac.c:465: int is_broadcast = 0;
      000501 E5 81            [12] 2172 	mov	a,sp
      000503 24 F3            [12] 2173 	add	a,#0xf3
      000505 F8               [12] 2174 	mov	r0,a
      000506 E4               [12] 2175 	clr	a
      000507 F6               [12] 2176 	mov	@r0,a
      000508 08               [12] 2177 	inc	r0
      000509 F6               [12] 2178 	mov	@r0,a
                                   2179 ;	../../core/net/mac/xmac.c:469: int is_already_streaming = 0;
      00050A A8 81            [24] 2180 	mov	r0,sp
      00050C 18               [12] 2181 	dec	r0
      00050D F6               [12] 2182 	mov	@r0,a
      00050E 08               [12] 2183 	inc	r0
      00050F F6               [12] 2184 	mov	@r0,a
                                   2185 ;	../../core/net/mac/xmac.c:473: packetbuf_set_addr(PACKETBUF_ADDR_SENDER, &rimeaddr_node_addr);
      000510 74r00            [12] 2186 	mov	a,#_rimeaddr_node_addr
      000512 C0 E0            [24] 2187 	push	acc
      000514 74s00            [12] 2188 	mov	a,#(_rimeaddr_node_addr >> 8)
      000516 C0 E0            [24] 2189 	push	acc
      000518 E4               [12] 2190 	clr	a
      000519 C0 E0            [24] 2191 	push	acc
      00051B 75 82 18         [24] 2192 	mov	dpl,#0x18
      00051E 12r00r00         [24] 2193 	lcall	_packetbuf_set_addr
      000521 15 81            [12] 2194 	dec	sp
      000523 15 81            [12] 2195 	dec	sp
      000525 15 81            [12] 2196 	dec	sp
                                   2197 ;	../../core/net/mac/xmac.c:474: if(rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER), &rimeaddr_null)) {
      000527 75 82 19         [24] 2198 	mov	dpl,#0x19
      00052A 12r00r00         [24] 2199 	lcall	_packetbuf_addr
      00052D AA 82            [24] 2200 	mov	r2,dpl
      00052F AB 83            [24] 2201 	mov	r3,dph
      000531 AE F0            [24] 2202 	mov	r6,b
      000533 74r00            [12] 2203 	mov	a,#_rimeaddr_null
      000535 C0 E0            [24] 2204 	push	acc
      000537 74s00            [12] 2205 	mov	a,#(_rimeaddr_null >> 8)
      000539 C0 E0            [24] 2206 	push	acc
      00053B 74 80            [12] 2207 	mov	a,#0x80
      00053D C0 E0            [24] 2208 	push	acc
      00053F 8A 82            [24] 2209 	mov	dpl,r2
      000541 8B 83            [24] 2210 	mov	dph,r3
      000543 8E F0            [24] 2211 	mov	b,r6
      000545 12r00r00         [24] 2212 	lcall	_rimeaddr_cmp
      000548 AB 82            [24] 2213 	mov	r3,dpl
      00054A AE 83            [24] 2214 	mov	r6,dph
      00054C 15 81            [12] 2215 	dec	sp
      00054E 15 81            [12] 2216 	dec	sp
      000550 15 81            [12] 2217 	dec	sp
      000552 EB               [12] 2218 	mov	a,r3
      000553 4E               [12] 2219 	orl	a,r6
      000554 60 0A            [24] 2220 	jz	00102$
                                   2221 ;	../../core/net/mac/xmac.c:475: is_broadcast = 1;
      000556 E5 81            [12] 2222 	mov	a,sp
      000558 24 F3            [12] 2223 	add	a,#0xf3
      00055A F8               [12] 2224 	mov	r0,a
      00055B 76 01            [12] 2225 	mov	@r0,#0x01
      00055D 08               [12] 2226 	inc	r0
      00055E 76 00            [12] 2227 	mov	@r0,#0x00
      000560                       2228 00102$:
                                   2229 ;	../../core/net/mac/xmac.c:497: packetbuf_set_attr(PACKETBUF_ATTR_MAC_ACK, 1);
      000560 74 01            [12] 2230 	mov	a,#0x01
      000562 C0 E0            [24] 2231 	push	acc
      000564 E4               [12] 2232 	clr	a
      000565 C0 E0            [24] 2233 	push	acc
      000567 75 82 0B         [24] 2234 	mov	dpl,#0x0b
      00056A 12r00r00         [24] 2235 	lcall	_packetbuf_set_attr
      00056D 15 81            [12] 2236 	dec	sp
      00056F 15 81            [12] 2237 	dec	sp
                                   2238 ;	../../core/net/mac/xmac.c:498: len = NETSTACK_FRAMER.create();
      000571 90r00r00         [24] 2239 	mov	dptr,#_framer_802154
      000574 E4               [12] 2240 	clr	a
      000575 93               [24] 2241 	movc	a,@a+dptr
      000576 FB               [12] 2242 	mov	r3,a
      000577 A3               [24] 2243 	inc	dptr
      000578 E4               [12] 2244 	clr	a
      000579 93               [24] 2245 	movc	a,@a+dptr
      00057A FE               [12] 2246 	mov	r6,a
      00057B 8B 82            [24] 2247 	mov	dpl,r3
      00057D 8E 83            [24] 2248 	mov	dph,r6
      00057F 12r00r00         [24] 2249 	lcall	__sdcc_call_dptr
      000582 AB 82            [24] 2250 	mov	r3,dpl
      000584 AE 83            [24] 2251 	mov	r6,dph
      000586 E5 81            [12] 2252 	mov	a,sp
      000588 24 F1            [12] 2253 	add	a,#0xf1
      00058A F8               [12] 2254 	mov	r0,a
      00058B A6 03            [24] 2255 	mov	@r0,ar3
      00058D 08               [12] 2256 	inc	r0
      00058E A6 06            [24] 2257 	mov	@r0,ar6
                                   2258 ;	../../core/net/mac/xmac.c:499: strobe_len = len + sizeof(struct xmac_hdr);
      000590 E5 81            [12] 2259 	mov	a,sp
      000592 24 F1            [12] 2260 	add	a,#0xf1
      000594 F8               [12] 2261 	mov	r0,a
      000595 E5 81            [12] 2262 	mov	a,sp
      000597 24 EF            [12] 2263 	add	a,#0xef
      000599 F9               [12] 2264 	mov	r1,a
      00059A 74 02            [12] 2265 	mov	a,#0x02
      00059C 26               [12] 2266 	add	a,@r0
      00059D F7               [12] 2267 	mov	@r1,a
      00059E E4               [12] 2268 	clr	a
      00059F 08               [12] 2269 	inc	r0
      0005A0 36               [12] 2270 	addc	a,@r0
      0005A1 09               [12] 2271 	inc	r1
      0005A2 F7               [12] 2272 	mov	@r1,a
                                   2273 ;	../../core/net/mac/xmac.c:500: if(len < 0 || strobe_len > (int)sizeof(strobe)) {
      0005A3 E5 81            [12] 2274 	mov	a,sp
      0005A5 24 F1            [12] 2275 	add	a,#0xf1
      0005A7 F8               [12] 2276 	mov	r0,a
      0005A8 08               [12] 2277 	inc	r0
      0005A9 E6               [12] 2278 	mov	a,@r0
      0005AA 20 E7 15         [24] 2279 	jb	acc.7,00103$
      0005AD E5 81            [12] 2280 	mov	a,sp
      0005AF 24 EF            [12] 2281 	add	a,#0xef
      0005B1 F8               [12] 2282 	mov	r0,a
      0005B2 C3               [12] 2283 	clr	c
      0005B3 74 32            [12] 2284 	mov	a,#0x32
      0005B5 96               [12] 2285 	subb	a,@r0
      0005B6 74 80            [12] 2286 	mov	a,#(0x00 ^ 0x80)
      0005B8 08               [12] 2287 	inc	r0
      0005B9 86 F0            [24] 2288 	mov	b,@r0
      0005BB 63 F0 80         [24] 2289 	xrl	b,#0x80
      0005BE 95 F0            [12] 2290 	subb	a,b
      0005C0 50 06            [24] 2291 	jnc	00104$
      0005C2                       2292 00103$:
                                   2293 ;	../../core/net/mac/xmac.c:503: return MAC_TX_ERR_FATAL;
      0005C2 90 00 05         [24] 2294 	mov	dptr,#0x0005
      0005C5 02r0BrDC         [24] 2295 	ljmp	00170$
      0005C8                       2296 00104$:
                                   2297 ;	../../core/net/mac/xmac.c:505: memcpy(strobe, packetbuf_hdrptr(), len);
      0005C8 12r00r00         [24] 2298 	lcall	_packetbuf_hdrptr
      0005CB AA 82            [24] 2299 	mov	r2,dpl
      0005CD AC 83            [24] 2300 	mov	r4,dph
      0005CF AD F0            [24] 2301 	mov	r5,b
      0005D1 E5 81            [12] 2302 	mov	a,sp
      0005D3 24 B8            [12] 2303 	add	a,#0xb8
      0005D5 F8               [12] 2304 	mov	r0,a
      0005D6 E5 81            [12] 2305 	mov	a,sp
      0005D8 24 BD            [12] 2306 	add	a,#0xbd
      0005DA F6               [12] 2307 	mov	@r0,a
      0005DB E5 81            [12] 2308 	mov	a,sp
      0005DD 24 B8            [12] 2309 	add	a,#0xb8
      0005DF F8               [12] 2310 	mov	r0,a
      0005E0 86 03            [24] 2311 	mov	ar3,@r0
      0005E2 7E 00            [12] 2312 	mov	r6,#0x00
      0005E4 7F 40            [12] 2313 	mov	r7,#0x40
      0005E6 E5 81            [12] 2314 	mov	a,sp
      0005E8 24 F1            [12] 2315 	add	a,#0xf1
      0005EA F8               [12] 2316 	mov	r0,a
      0005EB E6               [12] 2317 	mov	a,@r0
      0005EC C0 E0            [24] 2318 	push	acc
      0005EE 08               [12] 2319 	inc	r0
      0005EF E6               [12] 2320 	mov	a,@r0
      0005F0 C0 E0            [24] 2321 	push	acc
      0005F2 C0 02            [24] 2322 	push	ar2
      0005F4 C0 04            [24] 2323 	push	ar4
      0005F6 C0 05            [24] 2324 	push	ar5
      0005F8 8B 82            [24] 2325 	mov	dpl,r3
      0005FA 8E 83            [24] 2326 	mov	dph,r6
      0005FC 8F F0            [24] 2327 	mov	b,r7
      0005FE 12r00r00         [24] 2328 	lcall	___memcpy
      000601 E5 81            [12] 2329 	mov	a,sp
      000603 24 FB            [12] 2330 	add	a,#0xfb
                                   2331 ;	../../core/net/mac/xmac.c:506: strobe[len] = DISPATCH; /* dispatch */
      000605 F5 81            [12] 2332 	mov	sp,a
      000607 24 B8            [12] 2333 	add	a,#0xb8
      000609 F8               [12] 2334 	mov	r0,a
      00060A E5 81            [12] 2335 	mov	a,sp
      00060C 24 F1            [12] 2336 	add	a,#0xf1
      00060E F9               [12] 2337 	mov	r1,a
      00060F E7               [12] 2338 	mov	a,@r1
      000610 26               [12] 2339 	add	a,@r0
      000611 F8               [12] 2340 	mov	r0,a
      000612 76 00            [12] 2341 	mov	@r0,#0x00
                                   2342 ;	../../core/net/mac/xmac.c:507: strobe[len + 1] = TYPE_STROBE; /* type */
      000614 E5 81            [12] 2343 	mov	a,sp
      000616 24 F1            [12] 2344 	add	a,#0xf1
      000618 F8               [12] 2345 	mov	r0,a
      000619 E6               [12] 2346 	mov	a,@r0
      00061A 04               [12] 2347 	inc	a
      00061B C8               [12] 2348 	xch	a,r0
      00061C E5 81            [12] 2349 	mov	a,sp
      00061E 24 B8            [12] 2350 	add	a,#0xb8
      000620 C8               [12] 2351 	xch	a,r0
      000621 26               [12] 2352 	add	a,@r0
      000622 F8               [12] 2353 	mov	r0,a
      000623 76 10            [12] 2354 	mov	@r0,#0x10
                                   2355 ;	../../core/net/mac/xmac.c:509: packetbuf_compact();
      000625 12r00r00         [24] 2356 	lcall	_packetbuf_compact
                                   2357 ;	../../core/net/mac/xmac.c:510: packet = queuebuf_new_from_packetbuf();
      000628 12r00r00         [24] 2358 	lcall	_queuebuf_new_from_packetbuf
      00062B AD 82            [24] 2359 	mov	r5,dpl
      00062D AE 83            [24] 2360 	mov	r6,dph
      00062F AF F0            [24] 2361 	mov	r7,b
      000631 E5 81            [12] 2362 	mov	a,sp
      000633 24 F8            [12] 2363 	add	a,#0xf8
      000635 F8               [12] 2364 	mov	r0,a
      000636 A6 05            [24] 2365 	mov	@r0,ar5
      000638 08               [12] 2366 	inc	r0
      000639 A6 06            [24] 2367 	mov	@r0,ar6
      00063B 08               [12] 2368 	inc	r0
      00063C A6 07            [24] 2369 	mov	@r0,ar7
                                   2370 ;	../../core/net/mac/xmac.c:511: if(packet == NULL) {
      00063E E5 81            [12] 2371 	mov	a,sp
      000640 24 F8            [12] 2372 	add	a,#0xf8
      000642 F8               [12] 2373 	mov	r0,a
      000643 E6               [12] 2374 	mov	a,@r0
      000644 08               [12] 2375 	inc	r0
      000645 46               [12] 2376 	orl	a,@r0
      000646 70 06            [24] 2377 	jnz	00107$
                                   2378 ;	../../core/net/mac/xmac.c:515: return MAC_TX_ERR;
      000648 90 00 04         [24] 2379 	mov	dptr,#0x0004
      00064B 02r0BrDC         [24] 2380 	ljmp	00170$
      00064E                       2381 00107$:
                                   2382 ;	../../core/net/mac/xmac.c:519: if(is_streaming == 1 &&
      00064E 90r00r2A         [24] 2383 	mov	dptr,#_is_streaming
      000651 E0               [24] 2384 	movx	a,@dptr
      000652 FF               [12] 2385 	mov	r7,a
      000653 BF 01 64         [24] 2386 	cjne	r7,#0x01,00109$
                                   2387 ;	../../core/net/mac/xmac.c:521: &is_streaming_to) ||
                                   2388 ;	../../core/net/mac/xmac.c:520: (rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
      000656 75 82 19         [24] 2389 	mov	dpl,#0x19
      000659 12r00r00         [24] 2390 	lcall	_packetbuf_addr
      00065C AB 82            [24] 2391 	mov	r3,dpl
      00065E AE 83            [24] 2392 	mov	r6,dph
      000660 AF F0            [24] 2393 	mov	r7,b
      000662 74r2B            [12] 2394 	mov	a,#_is_streaming_to
      000664 C0 E0            [24] 2395 	push	acc
      000666 74s00            [12] 2396 	mov	a,#(_is_streaming_to >> 8)
      000668 C0 E0            [24] 2397 	push	acc
      00066A E4               [12] 2398 	clr	a
      00066B C0 E0            [24] 2399 	push	acc
      00066D 8B 82            [24] 2400 	mov	dpl,r3
      00066F 8E 83            [24] 2401 	mov	dph,r6
      000671 8F F0            [24] 2402 	mov	b,r7
      000673 12r00r00         [24] 2403 	lcall	_rimeaddr_cmp
      000676 AE 82            [24] 2404 	mov	r6,dpl
      000678 AF 83            [24] 2405 	mov	r7,dph
      00067A 15 81            [12] 2406 	dec	sp
      00067C 15 81            [12] 2407 	dec	sp
      00067E 15 81            [12] 2408 	dec	sp
      000680 EE               [12] 2409 	mov	a,r6
      000681 4F               [12] 2410 	orl	a,r7
      000682 70 2E            [24] 2411 	jnz	00108$
                                   2412 ;	../../core/net/mac/xmac.c:523: &is_streaming_to_too))) {
                                   2413 ;	../../core/net/mac/xmac.c:522: rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
      000684 75 82 19         [24] 2414 	mov	dpl,#0x19
      000687 12r00r00         [24] 2415 	lcall	_packetbuf_addr
      00068A AB 82            [24] 2416 	mov	r3,dpl
      00068C AE 83            [24] 2417 	mov	r6,dph
      00068E AF F0            [24] 2418 	mov	r7,b
      000690 74r2D            [12] 2419 	mov	a,#_is_streaming_to_too
      000692 C0 E0            [24] 2420 	push	acc
      000694 74s00            [12] 2421 	mov	a,#(_is_streaming_to_too >> 8)
      000696 C0 E0            [24] 2422 	push	acc
      000698 E4               [12] 2423 	clr	a
      000699 C0 E0            [24] 2424 	push	acc
      00069B 8B 82            [24] 2425 	mov	dpl,r3
      00069D 8E 83            [24] 2426 	mov	dph,r6
      00069F 8F F0            [24] 2427 	mov	b,r7
      0006A1 12r00r00         [24] 2428 	lcall	_rimeaddr_cmp
      0006A4 AE 82            [24] 2429 	mov	r6,dpl
      0006A6 AF 83            [24] 2430 	mov	r7,dph
      0006A8 15 81            [12] 2431 	dec	sp
      0006AA 15 81            [12] 2432 	dec	sp
      0006AC 15 81            [12] 2433 	dec	sp
      0006AE EE               [12] 2434 	mov	a,r6
      0006AF 4F               [12] 2435 	orl	a,r7
      0006B0 60 08            [24] 2436 	jz	00109$
      0006B2                       2437 00108$:
                                   2438 ;	../../core/net/mac/xmac.c:524: is_already_streaming = 1;
      0006B2 A8 81            [24] 2439 	mov	r0,sp
      0006B4 18               [12] 2440 	dec	r0
      0006B5 76 01            [12] 2441 	mov	@r0,#0x01
      0006B7 08               [12] 2442 	inc	r0
      0006B8 76 00            [12] 2443 	mov	@r0,#0x00
      0006BA                       2444 00109$:
                                   2445 ;	../../core/net/mac/xmac.c:526: if(packetbuf_attr(PACKETBUF_ATTR_PACKET_TYPE) ==
      0006BA 75 82 0E         [24] 2446 	mov	dpl,#0x0e
      0006BD 12r00r00         [24] 2447 	lcall	_packetbuf_attr
      0006C0 AE 82            [24] 2448 	mov	r6,dpl
      0006C2 AF 83            [24] 2449 	mov	r7,dph
      0006C4 BE 02 05         [24] 2450 	cjne	r6,#0x02,00306$
      0006C7 BF 00 02         [24] 2451 	cjne	r7,#0x00,00306$
      0006CA 80 03            [24] 2452 	sjmp	00307$
      0006CC                       2453 00306$:
      0006CC 02r07r84         [24] 2454 	ljmp	00118$
      0006CF                       2455 00307$:
                                   2456 ;	../../core/net/mac/xmac.c:528: is_streaming = 1;
      0006CF 90r00r2A         [24] 2457 	mov	dptr,#_is_streaming
      0006D2 74 01            [12] 2458 	mov	a,#0x01
      0006D4 F0               [24] 2459 	movx	@dptr,a
                                   2460 ;	../../core/net/mac/xmac.c:529: if(rimeaddr_cmp(&is_streaming_to, &rimeaddr_null)) {
      0006D5 74r00            [12] 2461 	mov	a,#_rimeaddr_null
      0006D7 C0 E0            [24] 2462 	push	acc
      0006D9 74s00            [12] 2463 	mov	a,#(_rimeaddr_null >> 8)
      0006DB C0 E0            [24] 2464 	push	acc
      0006DD 74 80            [12] 2465 	mov	a,#0x80
      0006DF C0 E0            [24] 2466 	push	acc
      0006E1 90r00r2B         [24] 2467 	mov	dptr,#_is_streaming_to
      0006E4 75 F0 00         [24] 2468 	mov	b,#0x00
      0006E7 12r00r00         [24] 2469 	lcall	_rimeaddr_cmp
      0006EA AE 82            [24] 2470 	mov	r6,dpl
      0006EC AF 83            [24] 2471 	mov	r7,dph
      0006EE 15 81            [12] 2472 	dec	sp
      0006F0 15 81            [12] 2473 	dec	sp
      0006F2 15 81            [12] 2474 	dec	sp
      0006F4 EE               [12] 2475 	mov	a,r6
      0006F5 4F               [12] 2476 	orl	a,r7
      0006F6 60 23            [24] 2477 	jz	00115$
                                   2478 ;	../../core/net/mac/xmac.c:530: rimeaddr_copy(&is_streaming_to, packetbuf_addr(PACKETBUF_ADDR_RECEIVER));
      0006F8 75 82 19         [24] 2479 	mov	dpl,#0x19
      0006FB 12r00r00         [24] 2480 	lcall	_packetbuf_addr
      0006FE AB 82            [24] 2481 	mov	r3,dpl
      000700 AE 83            [24] 2482 	mov	r6,dph
      000702 AF F0            [24] 2483 	mov	r7,b
      000704 C0 03            [24] 2484 	push	ar3
      000706 C0 06            [24] 2485 	push	ar6
      000708 C0 07            [24] 2486 	push	ar7
      00070A 90r00r2B         [24] 2487 	mov	dptr,#_is_streaming_to
      00070D 75 F0 00         [24] 2488 	mov	b,#0x00
      000710 12r00r00         [24] 2489 	lcall	_rimeaddr_copy
      000713 15 81            [12] 2490 	dec	sp
      000715 15 81            [12] 2491 	dec	sp
      000717 15 81            [12] 2492 	dec	sp
      000719 80 4A            [24] 2493 	sjmp	00116$
      00071B                       2494 00115$:
                                   2495 ;	../../core/net/mac/xmac.c:531: } else if(!rimeaddr_cmp(&is_streaming_to, packetbuf_addr(PACKETBUF_ADDR_RECEIVER))) {
      00071B 75 82 19         [24] 2496 	mov	dpl,#0x19
      00071E 12r00r00         [24] 2497 	lcall	_packetbuf_addr
      000721 AB 82            [24] 2498 	mov	r3,dpl
      000723 AE 83            [24] 2499 	mov	r6,dph
      000725 AF F0            [24] 2500 	mov	r7,b
      000727 C0 03            [24] 2501 	push	ar3
      000729 C0 06            [24] 2502 	push	ar6
      00072B C0 07            [24] 2503 	push	ar7
      00072D 90r00r2B         [24] 2504 	mov	dptr,#_is_streaming_to
      000730 75 F0 00         [24] 2505 	mov	b,#0x00
      000733 12r00r00         [24] 2506 	lcall	_rimeaddr_cmp
      000736 AE 82            [24] 2507 	mov	r6,dpl
      000738 AF 83            [24] 2508 	mov	r7,dph
      00073A 15 81            [12] 2509 	dec	sp
      00073C 15 81            [12] 2510 	dec	sp
      00073E 15 81            [12] 2511 	dec	sp
      000740 EE               [12] 2512 	mov	a,r6
      000741 4F               [12] 2513 	orl	a,r7
      000742 70 21            [24] 2514 	jnz	00116$
                                   2515 ;	../../core/net/mac/xmac.c:532: rimeaddr_copy(&is_streaming_to_too, packetbuf_addr(PACKETBUF_ADDR_RECEIVER));
      000744 75 82 19         [24] 2516 	mov	dpl,#0x19
      000747 12r00r00         [24] 2517 	lcall	_packetbuf_addr
      00074A AB 82            [24] 2518 	mov	r3,dpl
      00074C AE 83            [24] 2519 	mov	r6,dph
      00074E AF F0            [24] 2520 	mov	r7,b
      000750 C0 03            [24] 2521 	push	ar3
      000752 C0 06            [24] 2522 	push	ar6
      000754 C0 07            [24] 2523 	push	ar7
      000756 90r00r2D         [24] 2524 	mov	dptr,#_is_streaming_to_too
      000759 75 F0 00         [24] 2525 	mov	b,#0x00
      00075C 12r00r00         [24] 2526 	lcall	_rimeaddr_copy
      00075F 15 81            [12] 2527 	dec	sp
      000761 15 81            [12] 2528 	dec	sp
      000763 15 81            [12] 2529 	dec	sp
      000765                       2530 00116$:
                                   2531 ;	../../core/net/mac/xmac.c:534: stream_until = RTIMER_NOW() + DEFAULT_STREAM_TIME;
      000765 AE E2            [24] 2532 	mov	r6,_T1CNTL
      000767 7F 00            [12] 2533 	mov	r7,#0x00
      000769 AA E3            [24] 2534 	mov	r2,_T1CNTH
      00076B 8A 03            [24] 2535 	mov	ar3,r2
      00076D E4               [12] 2536 	clr	a
      00076E FA               [12] 2537 	mov	r2,a
      00076F 2E               [12] 2538 	add	a,r6
      000770 FE               [12] 2539 	mov	r6,a
      000771 EB               [12] 2540 	mov	a,r3
      000772 3F               [12] 2541 	addc	a,r7
      000773 FF               [12] 2542 	mov	r7,a
      000774 74 09            [12] 2543 	mov	a,#0x09
      000776 2E               [12] 2544 	add	a,r6
      000777 FE               [12] 2545 	mov	r6,a
      000778 74 3D            [12] 2546 	mov	a,#0x3d
      00077A 3F               [12] 2547 	addc	a,r7
      00077B FF               [12] 2548 	mov	r7,a
      00077C 90r00r2F         [24] 2549 	mov	dptr,#_stream_until
      00077F EE               [12] 2550 	mov	a,r6
      000780 F0               [24] 2551 	movx	@dptr,a
      000781 EF               [12] 2552 	mov	a,r7
      000782 A3               [24] 2553 	inc	dptr
      000783 F0               [24] 2554 	movx	@dptr,a
      000784                       2555 00118$:
                                   2556 ;	../../core/net/mac/xmac.c:538: off();
      000784 12r00r2C         [24] 2557 	lcall	_off
                                   2558 ;	../../core/net/mac/xmac.c:545: for(e = list_head(encounter_list); e != NULL; e = list_item_next(e)) {
      000787 90r00r10         [24] 2559 	mov	dptr,#_encounter_list
      00078A E0               [24] 2560 	movx	a,@dptr
      00078B FB               [12] 2561 	mov	r3,a
      00078C A3               [24] 2562 	inc	dptr
      00078D E0               [24] 2563 	movx	a,@dptr
      00078E FE               [12] 2564 	mov	r6,a
      00078F A3               [24] 2565 	inc	dptr
      000790 E0               [24] 2566 	movx	a,@dptr
      000791 FF               [12] 2567 	mov	r7,a
      000792 8B 82            [24] 2568 	mov	dpl,r3
      000794 8E 83            [24] 2569 	mov	dph,r6
      000796 8F F0            [24] 2570 	mov	b,r7
      000798 12r00r00         [24] 2571 	lcall	_list_head
      00079B AB 82            [24] 2572 	mov	r3,dpl
      00079D AE 83            [24] 2573 	mov	r6,dph
      00079F AF F0            [24] 2574 	mov	r7,b
      0007A1 E5 81            [12] 2575 	mov	a,sp
      0007A3 24 F5            [12] 2576 	add	a,#0xf5
      0007A5 F8               [12] 2577 	mov	r0,a
      0007A6 A6 03            [24] 2578 	mov	@r0,ar3
      0007A8 08               [12] 2579 	inc	r0
      0007A9 A6 06            [24] 2580 	mov	@r0,ar6
      0007AB 08               [12] 2581 	inc	r0
      0007AC A6 07            [24] 2582 	mov	@r0,ar7
      0007AE                       2583 00163$:
      0007AE E5 81            [12] 2584 	mov	a,sp
      0007B0 24 F5            [12] 2585 	add	a,#0xf5
      0007B2 F8               [12] 2586 	mov	r0,a
      0007B3 E6               [12] 2587 	mov	a,@r0
      0007B4 08               [12] 2588 	inc	r0
      0007B5 46               [12] 2589 	orl	a,@r0
      0007B6 70 03            [24] 2590 	jnz	00310$
      0007B8 02r08rB4         [24] 2591 	ljmp	00126$
      0007BB                       2592 00310$:
                                   2593 ;	../../core/net/mac/xmac.c:546: const rimeaddr_t *neighbor = packetbuf_addr(PACKETBUF_ADDR_RECEIVER);
      0007BB 75 82 19         [24] 2594 	mov	dpl,#0x19
      0007BE 12r00r00         [24] 2595 	lcall	_packetbuf_addr
      0007C1 AF 82            [24] 2596 	mov	r7,dpl
      0007C3 AE 83            [24] 2597 	mov	r6,dph
      0007C5 AD F0            [24] 2598 	mov	r5,b
      0007C7 8D 03            [24] 2599 	mov	ar3,r5
                                   2600 ;	../../core/net/mac/xmac.c:548: if(rimeaddr_cmp(neighbor, &e->neighbor)) {
      0007C9 E5 81            [12] 2601 	mov	a,sp
      0007CB 24 F5            [12] 2602 	add	a,#0xf5
      0007CD F8               [12] 2603 	mov	r0,a
      0007CE 74 03            [12] 2604 	mov	a,#0x03
      0007D0 26               [12] 2605 	add	a,@r0
      0007D1 FA               [12] 2606 	mov	r2,a
      0007D2 E4               [12] 2607 	clr	a
      0007D3 08               [12] 2608 	inc	r0
      0007D4 36               [12] 2609 	addc	a,@r0
      0007D5 FC               [12] 2610 	mov	r4,a
      0007D6 08               [12] 2611 	inc	r0
      0007D7 86 05            [24] 2612 	mov	ar5,@r0
      0007D9 C0 02            [24] 2613 	push	ar2
      0007DB C0 04            [24] 2614 	push	ar4
      0007DD C0 05            [24] 2615 	push	ar5
      0007DF 8F 82            [24] 2616 	mov	dpl,r7
      0007E1 8E 83            [24] 2617 	mov	dph,r6
      0007E3 8B F0            [24] 2618 	mov	b,r3
      0007E5 12r00r00         [24] 2619 	lcall	_rimeaddr_cmp
      0007E8 AC 82            [24] 2620 	mov	r4,dpl
      0007EA AD 83            [24] 2621 	mov	r5,dph
      0007EC 15 81            [12] 2622 	dec	sp
      0007EE 15 81            [12] 2623 	dec	sp
      0007F0 15 81            [12] 2624 	dec	sp
      0007F2 EC               [12] 2625 	mov	a,r4
      0007F3 4D               [12] 2626 	orl	a,r5
      0007F4 70 03            [24] 2627 	jnz	00311$
      0007F6 02r08r88         [24] 2628 	ljmp	00164$
      0007F9                       2629 00311$:
                                   2630 ;	../../core/net/mac/xmac.c:558: now = RTIMER_NOW();
      0007F9 AA E2            [24] 2631 	mov	r2,_T1CNTL
      0007FB 7D 00            [12] 2632 	mov	r5,#0x00
      0007FD AC E3            [24] 2633 	mov	r4,_T1CNTH
      0007FF 8C 07            [24] 2634 	mov	ar7,r4
      000801 E4               [12] 2635 	clr	a
      000802 2A               [12] 2636 	add	a,r2
      000803 FA               [12] 2637 	mov	r2,a
      000804 EF               [12] 2638 	mov	a,r7
      000805 3D               [12] 2639 	addc	a,r5
      000806 FC               [12] 2640 	mov	r4,a
                                   2641 ;	../../core/net/mac/xmac.c:559: wait = ((rtimer_clock_t)(e->time - now)) % (DEFAULT_PERIOD);
      000807 E5 81            [12] 2642 	mov	a,sp
      000809 24 F5            [12] 2643 	add	a,#0xf5
      00080B F8               [12] 2644 	mov	r0,a
      00080C 74 05            [12] 2645 	mov	a,#0x05
      00080E 26               [12] 2646 	add	a,@r0
      00080F FD               [12] 2647 	mov	r5,a
      000810 E4               [12] 2648 	clr	a
      000811 08               [12] 2649 	inc	r0
      000812 36               [12] 2650 	addc	a,@r0
      000813 FE               [12] 2651 	mov	r6,a
      000814 08               [12] 2652 	inc	r0
      000815 86 07            [24] 2653 	mov	ar7,@r0
      000817 8D 82            [24] 2654 	mov	dpl,r5
      000819 8E 83            [24] 2655 	mov	dph,r6
      00081B 8F F0            [24] 2656 	mov	b,r7
      00081D 12r00r00         [24] 2657 	lcall	__gptrget
      000820 FD               [12] 2658 	mov	r5,a
      000821 A3               [24] 2659 	inc	dptr
      000822 12r00r00         [24] 2660 	lcall	__gptrget
      000825 FE               [12] 2661 	mov	r6,a
      000826 ED               [12] 2662 	mov	a,r5
      000827 C3               [12] 2663 	clr	c
      000828 9A               [12] 2664 	subb	a,r2
      000829 FD               [12] 2665 	mov	r5,a
      00082A EE               [12] 2666 	mov	a,r6
      00082B 9C               [12] 2667 	subb	a,r4
      00082C FE               [12] 2668 	mov	r6,a
      00082D C0 04            [24] 2669 	push	ar4
      00082F C0 02            [24] 2670 	push	ar2
      000831 74 A1            [12] 2671 	mov	a,#0xa1
      000833 C0 E0            [24] 2672 	push	acc
      000835 74 07            [12] 2673 	mov	a,#0x07
      000837 C0 E0            [24] 2674 	push	acc
      000839 8D 82            [24] 2675 	mov	dpl,r5
      00083B 8E 83            [24] 2676 	mov	dph,r6
      00083D 12r00r00         [24] 2677 	lcall	__moduint
      000840 AE 82            [24] 2678 	mov	r6,dpl
      000842 AF 83            [24] 2679 	mov	r7,dph
      000844 15 81            [12] 2680 	dec	sp
      000846 15 81            [12] 2681 	dec	sp
      000848 D0 02            [24] 2682 	pop	ar2
      00084A D0 04            [24] 2683 	pop	ar4
      00084C 8E 05            [24] 2684 	mov	ar5,r6
      00084E 8F 03            [24] 2685 	mov	ar3,r7
                                   2686 ;	../../core/net/mac/xmac.c:560: if(wait < 2 * DEFAULT_ON_TIME) {
      000850 8D 06            [24] 2687 	mov	ar6,r5
      000852 8B 07            [24] 2688 	mov	ar7,r3
      000854 C3               [12] 2689 	clr	c
      000855 EE               [12] 2690 	mov	a,r6
      000856 94 C2            [12] 2691 	subb	a,#0xc2
      000858 EF               [12] 2692 	mov	a,r7
      000859 94 00            [12] 2693 	subb	a,#0x00
      00085B 50 04            [24] 2694 	jnc	00120$
                                   2695 ;	../../core/net/mac/xmac.c:561: wait = DEFAULT_PERIOD;
      00085D 7D A1            [12] 2696 	mov	r5,#0xa1
      00085F 7B 07            [12] 2697 	mov	r3,#0x07
      000861                       2698 00120$:
                                   2699 ;	../../core/net/mac/xmac.c:563: expected = now + wait - 2 * DEFAULT_ON_TIME;
      000861 ED               [12] 2700 	mov	a,r5
      000862 2A               [12] 2701 	add	a,r2
      000863 FE               [12] 2702 	mov	r6,a
      000864 EB               [12] 2703 	mov	a,r3
      000865 3C               [12] 2704 	addc	a,r4
      000866 FF               [12] 2705 	mov	r7,a
      000867 EE               [12] 2706 	mov	a,r6
      000868 24 3E            [12] 2707 	add	a,#0x3e
      00086A FE               [12] 2708 	mov	r6,a
      00086B EF               [12] 2709 	mov	a,r7
      00086C 34 FF            [12] 2710 	addc	a,#0xff
      00086E FF               [12] 2711 	mov	r7,a
                                   2712 ;	../../core/net/mac/xmac.c:576: while(RTIMER_CLOCK_LT(RTIMER_NOW(), expected));
      00086F                       2713 00121$:
      00086F AA E2            [24] 2714 	mov	r2,_T1CNTL
      000871 7B 00            [12] 2715 	mov	r3,#0x00
      000873 AC E3            [24] 2716 	mov	r4,_T1CNTH
      000875 8C 05            [24] 2717 	mov	ar5,r4
      000877 E4               [12] 2718 	clr	a
      000878 FC               [12] 2719 	mov	r4,a
      000879 2A               [12] 2720 	add	a,r2
      00087A FA               [12] 2721 	mov	r2,a
      00087B ED               [12] 2722 	mov	a,r5
      00087C 3B               [12] 2723 	addc	a,r3
      00087D FB               [12] 2724 	mov	r3,a
      00087E EA               [12] 2725 	mov	a,r2
      00087F C3               [12] 2726 	clr	c
      000880 9E               [12] 2727 	subb	a,r6
      000881 FA               [12] 2728 	mov	r2,a
      000882 EB               [12] 2729 	mov	a,r3
      000883 9F               [12] 2730 	subb	a,r7
      000884 FB               [12] 2731 	mov	r3,a
      000885 20 E7 E7         [24] 2732 	jb	acc.7,00121$
      000888                       2733 00164$:
                                   2734 ;	../../core/net/mac/xmac.c:545: for(e = list_head(encounter_list); e != NULL; e = list_item_next(e)) {
      000888 E5 81            [12] 2735 	mov	a,sp
      00088A 24 F5            [12] 2736 	add	a,#0xf5
      00088C F8               [12] 2737 	mov	r0,a
      00088D 86 03            [24] 2738 	mov	ar3,@r0
      00088F 08               [12] 2739 	inc	r0
      000890 86 06            [24] 2740 	mov	ar6,@r0
      000892 08               [12] 2741 	inc	r0
      000893 86 07            [24] 2742 	mov	ar7,@r0
      000895 8B 82            [24] 2743 	mov	dpl,r3
      000897 8E 83            [24] 2744 	mov	dph,r6
      000899 8F F0            [24] 2745 	mov	b,r7
      00089B 12r00r00         [24] 2746 	lcall	_list_item_next
      00089E AB 82            [24] 2747 	mov	r3,dpl
      0008A0 AE 83            [24] 2748 	mov	r6,dph
      0008A2 AF F0            [24] 2749 	mov	r7,b
      0008A4 E5 81            [12] 2750 	mov	a,sp
      0008A6 24 F5            [12] 2751 	add	a,#0xf5
      0008A8 F8               [12] 2752 	mov	r0,a
      0008A9 A6 03            [24] 2753 	mov	@r0,ar3
      0008AB 08               [12] 2754 	inc	r0
      0008AC A6 06            [24] 2755 	mov	@r0,ar6
      0008AE 08               [12] 2756 	inc	r0
      0008AF A6 07            [24] 2757 	mov	@r0,ar7
      0008B1 02r07rAE         [24] 2758 	ljmp	00163$
      0008B4                       2759 00126$:
                                   2760 ;	../../core/net/mac/xmac.c:584: we_are_sending = 1;
      0008B4 90r00r0B         [24] 2761 	mov	dptr,#_we_are_sending
      0008B7 74 01            [12] 2762 	mov	a,#0x01
      0008B9 F0               [24] 2763 	movx	@dptr,a
                                   2764 ;	../../core/net/mac/xmac.c:586: t0 = RTIMER_NOW();
      0008BA AE E2            [24] 2765 	mov	r6,_T1CNTL
      0008BC 7F 00            [12] 2766 	mov	r7,#0x00
      0008BE AA E3            [24] 2767 	mov	r2,_T1CNTH
      0008C0 8A 03            [24] 2768 	mov	ar3,r2
      0008C2 E4               [12] 2769 	clr	a
      0008C3 FA               [12] 2770 	mov	r2,a
      0008C4 2E               [12] 2771 	add	a,r6
      0008C5 FE               [12] 2772 	mov	r6,a
      0008C6 EB               [12] 2773 	mov	a,r3
      0008C7 3F               [12] 2774 	addc	a,r7
      0008C8 FF               [12] 2775 	mov	r7,a
      0008C9 E5 81            [12] 2776 	mov	a,sp
      0008CB 24 FB            [12] 2777 	add	a,#0xfb
      0008CD F8               [12] 2778 	mov	r0,a
      0008CE A6 06            [24] 2779 	mov	@r0,ar6
      0008D0 08               [12] 2780 	inc	r0
      0008D1 A6 07            [24] 2781 	mov	@r0,ar7
                                   2782 ;	../../core/net/mac/xmac.c:595: collisions = 0;
      0008D3 7B 00            [12] 2783 	mov	r3,#0x00
                                   2784 ;	../../core/net/mac/xmac.c:596: if(!is_already_streaming) {
      0008D5 A8 81            [24] 2785 	mov	r0,sp
      0008D7 18               [12] 2786 	dec	r0
      0008D8 E6               [12] 2787 	mov	a,@r0
      0008D9 08               [12] 2788 	inc	r0
      0008DA 46               [12] 2789 	orl	a,@r0
      0008DB 60 03            [24] 2790 	jz	00314$
      0008DD 02r0ArAA         [24] 2791 	ljmp	00142$
      0008E0                       2792 00314$:
                                   2793 ;	../../core/net/mac/xmac.c:597: watchdog_stop();
      0008E0 12r00r00         [24] 2794 	lcall	_watchdog_periodic
                                   2795 ;	../../core/net/mac/xmac.c:598: got_strobe_ack = 0;
      0008E3 E5 81            [12] 2796 	mov	a,sp
      0008E5 24 BB            [12] 2797 	add	a,#0xbb
      0008E7 F8               [12] 2798 	mov	r0,a
      0008E8 76 00            [12] 2799 	mov	@r0,#0x00
                                   2800 ;	../../core/net/mac/xmac.c:599: t = RTIMER_NOW();
      0008EA AA E2            [24] 2801 	mov	r2,_T1CNTL
      0008EC 7F 00            [12] 2802 	mov	r7,#0x00
      0008EE AD E3            [24] 2803 	mov	r5,_T1CNTH
      0008F0 8D 06            [24] 2804 	mov	ar6,r5
      0008F2 E4               [12] 2805 	clr	a
      0008F3 FD               [12] 2806 	mov	r5,a
      0008F4 2A               [12] 2807 	add	a,r2
      0008F5 FA               [12] 2808 	mov	r2,a
      0008F6 EE               [12] 2809 	mov	a,r6
      0008F7 3F               [12] 2810 	addc	a,r7
      0008F8 FF               [12] 2811 	mov	r7,a
      0008F9 E5 81            [12] 2812 	mov	a,sp
      0008FB 24 FD            [12] 2813 	add	a,#0xfd
      0008FD F8               [12] 2814 	mov	r0,a
      0008FE A6 02            [24] 2815 	mov	@r0,ar2
      000900 08               [12] 2816 	inc	r0
      000901 A6 07            [24] 2817 	mov	@r0,ar7
                                   2818 ;	../../core/net/mac/xmac.c:600: for(strobes = 0, collisions = 0;
      000903 7B 00            [12] 2819 	mov	r3,#0x00
      000905 E5 81            [12] 2820 	mov	a,sp
      000907 24 B8            [12] 2821 	add	a,#0xb8
      000909 F8               [12] 2822 	mov	r0,a
                                   2823 ;	../../core/net/mac/xmac.c:757: return MAC_TX_COLLISION;
                                   2824 ;	../../core/net/mac/xmac.c:600: for(strobes = 0, collisions = 0;
      00090A                       2825 00168$:
                                   2826 ;	../../core/net/mac/xmac.c:601: got_strobe_ack == 0 && collisions == 0 &&
      00090A E5 81            [12] 2827 	mov	a,sp
      00090C 24 BB            [12] 2828 	add	a,#0xbb
      00090E F8               [12] 2829 	mov	r0,a
      00090F E6               [12] 2830 	mov	a,@r0
      000910 60 03            [24] 2831 	jz	00315$
      000912 02r0ArAA         [24] 2832 	ljmp	00142$
      000915                       2833 00315$:
                                   2834 ;	../../core/net/mac/xmac.c:602: RTIMER_CLOCK_LT(RTIMER_NOW(), t0 + xmac_config.strobe_time);
      000915 C0 03            [24] 2835 	push	ar3
      000917 AC E2            [24] 2836 	mov	r4,_T1CNTL
      000919 7D 00            [12] 2837 	mov	r5,#0x00
      00091B AA E3            [24] 2838 	mov	r2,_T1CNTH
      00091D 8A 03            [24] 2839 	mov	ar3,r2
      00091F E4               [12] 2840 	clr	a
      000920 2C               [12] 2841 	add	a,r4
      000921 FC               [12] 2842 	mov	r4,a
      000922 EB               [12] 2843 	mov	a,r3
      000923 3D               [12] 2844 	addc	a,r5
      000924 FD               [12] 2845 	mov	r5,a
      000925 90r00r04         [24] 2846 	mov	dptr,#(_xmac_config + 0x0004)
      000928 E0               [24] 2847 	movx	a,@dptr
      000929 FA               [12] 2848 	mov	r2,a
      00092A A3               [24] 2849 	inc	dptr
      00092B E0               [24] 2850 	movx	a,@dptr
      00092C FB               [12] 2851 	mov	r3,a
      00092D E5 81            [12] 2852 	mov	a,sp
      00092F 24 FA            [12] 2853 	add	a,#0xfa
      000931 F8               [12] 2854 	mov	r0,a
      000932 EA               [12] 2855 	mov	a,r2
      000933 26               [12] 2856 	add	a,@r0
      000934 FA               [12] 2857 	mov	r2,a
      000935 EB               [12] 2858 	mov	a,r3
      000936 08               [12] 2859 	inc	r0
      000937 36               [12] 2860 	addc	a,@r0
      000938 FB               [12] 2861 	mov	r3,a
      000939 EC               [12] 2862 	mov	a,r4
      00093A C3               [12] 2863 	clr	c
      00093B 9A               [12] 2864 	subb	a,r2
      00093C FA               [12] 2865 	mov	r2,a
      00093D ED               [12] 2866 	mov	a,r5
      00093E 9B               [12] 2867 	subb	a,r3
      00093F D0 03            [24] 2868 	pop	ar3
      000941 20 E7 03         [24] 2869 	jb	acc.7,00316$
      000944 02r0ArAA         [24] 2870 	ljmp	00142$
      000947                       2871 00316$:
                                   2872 ;	../../core/net/mac/xmac.c:605: while(got_strobe_ack == 0 &&
      000947                       2873 00128$:
      000947 E5 81            [12] 2874 	mov	a,sp
      000949 24 BB            [12] 2875 	add	a,#0xbb
      00094B F8               [12] 2876 	mov	r0,a
      00094C E6               [12] 2877 	mov	a,@r0
      00094D 70 2E            [24] 2878 	jnz	00130$
                                   2879 ;	../../core/net/mac/xmac.c:606: RTIMER_CLOCK_LT(RTIMER_NOW(), t + xmac_config.strobe_wait_time)) {
      00094F C0 03            [24] 2880 	push	ar3
      000951 AC E2            [24] 2881 	mov	r4,_T1CNTL
      000953 7D 00            [12] 2882 	mov	r5,#0x00
      000955 AA E3            [24] 2883 	mov	r2,_T1CNTH
      000957 8A 03            [24] 2884 	mov	ar3,r2
      000959 E4               [12] 2885 	clr	a
      00095A 2C               [12] 2886 	add	a,r4
      00095B FC               [12] 2887 	mov	r4,a
      00095C EB               [12] 2888 	mov	a,r3
      00095D 3D               [12] 2889 	addc	a,r5
      00095E FD               [12] 2890 	mov	r5,a
      00095F 90r00r06         [24] 2891 	mov	dptr,#(_xmac_config + 0x0006)
      000962 E0               [24] 2892 	movx	a,@dptr
      000963 FA               [12] 2893 	mov	r2,a
      000964 A3               [24] 2894 	inc	dptr
      000965 E0               [24] 2895 	movx	a,@dptr
      000966 FB               [12] 2896 	mov	r3,a
      000967 E5 81            [12] 2897 	mov	a,sp
      000969 24 FC            [12] 2898 	add	a,#0xfc
      00096B F8               [12] 2899 	mov	r0,a
      00096C EA               [12] 2900 	mov	a,r2
      00096D 26               [12] 2901 	add	a,@r0
      00096E FA               [12] 2902 	mov	r2,a
      00096F EB               [12] 2903 	mov	a,r3
      000970 08               [12] 2904 	inc	r0
      000971 36               [12] 2905 	addc	a,@r0
      000972 FB               [12] 2906 	mov	r3,a
      000973 EC               [12] 2907 	mov	a,r4
      000974 C3               [12] 2908 	clr	c
      000975 9A               [12] 2909 	subb	a,r2
      000976 ED               [12] 2910 	mov	a,r5
      000977 9B               [12] 2911 	subb	a,r3
      000978 D0 03            [24] 2912 	pop	ar3
      00097A 20 E7 CA         [24] 2913 	jb	acc.7,00128$
      00097D                       2914 00130$:
                                   2915 ;	../../core/net/mac/xmac.c:638: t = RTIMER_NOW();
      00097D C0 03            [24] 2916 	push	ar3
      00097F AC E2            [24] 2917 	mov	r4,_T1CNTL
      000981 7D 00            [12] 2918 	mov	r5,#0x00
      000983 AA E3            [24] 2919 	mov	r2,_T1CNTH
      000985 8A 03            [24] 2920 	mov	ar3,r2
      000987 E4               [12] 2921 	clr	a
      000988 FA               [12] 2922 	mov	r2,a
      000989 2C               [12] 2923 	add	a,r4
      00098A FC               [12] 2924 	mov	r4,a
      00098B EB               [12] 2925 	mov	a,r3
      00098C 3D               [12] 2926 	addc	a,r5
      00098D FD               [12] 2927 	mov	r5,a
      00098E E5 81            [12] 2928 	mov	a,sp
      000990 24 FC            [12] 2929 	add	a,#0xfc
      000992 F8               [12] 2930 	mov	r0,a
      000993 A6 04            [24] 2931 	mov	@r0,ar4
      000995 08               [12] 2932 	inc	r0
      000996 A6 05            [24] 2933 	mov	@r0,ar5
                                   2934 ;	../../core/net/mac/xmac.c:640: if(got_strobe_ack == 0 && collisions == 0) {
      000998 D0 03            [24] 2935 	pop	ar3
      00099A E5 81            [12] 2936 	mov	a,sp
      00099C 24 BB            [12] 2937 	add	a,#0xbb
      00099E F8               [12] 2938 	mov	r0,a
      00099F E6               [12] 2939 	mov	a,@r0
      0009A0 60 03            [24] 2940 	jz	00319$
      0009A2 02r09r0A         [24] 2941 	ljmp	00168$
      0009A5                       2942 00319$:
                                   2943 ;	../../core/net/mac/xmac.c:642: if(is_broadcast) {
      0009A5 E5 81            [12] 2944 	mov	a,sp
      0009A7 24 F3            [12] 2945 	add	a,#0xf3
      0009A9 F8               [12] 2946 	mov	r0,a
      0009AA E6               [12] 2947 	mov	a,@r0
      0009AB 08               [12] 2948 	inc	r0
      0009AC 46               [12] 2949 	orl	a,@r0
      0009AD 60 7B            [24] 2950 	jz	00135$
                                   2951 ;	../../core/net/mac/xmac.c:647: queuebuf_to_packetbuf(packet);
      0009AF C0 03            [24] 2952 	push	ar3
      0009B1 E5 81            [12] 2953 	mov	a,sp
      0009B3 24 F7            [12] 2954 	add	a,#0xf7
      0009B5 F8               [12] 2955 	mov	r0,a
      0009B6 86 82            [24] 2956 	mov	dpl,@r0
      0009B8 08               [12] 2957 	inc	r0
      0009B9 86 83            [24] 2958 	mov	dph,@r0
      0009BB 08               [12] 2959 	inc	r0
      0009BC 86 F0            [24] 2960 	mov	b,@r0
      0009BE C0 03            [24] 2961 	push	ar3
      0009C0 12r00r00         [24] 2962 	lcall	_queuebuf_to_packetbuf
      0009C3 D0 03            [24] 2963 	pop	ar3
                                   2964 ;	../../core/net/mac/xmac.c:648: ret = NETSTACK_RADIO.send(packetbuf_hdrptr(), packetbuf_totlen());
      0009C5 90r00r06         [24] 2965 	mov	dptr,#(_cc2530_rf_driver + 0x0006)
      0009C8 E4               [12] 2966 	clr	a
      0009C9 93               [24] 2967 	movc	a,@a+dptr
      0009CA FC               [12] 2968 	mov	r4,a
      0009CB A3               [24] 2969 	inc	dptr
      0009CC E4               [12] 2970 	clr	a
      0009CD 93               [24] 2971 	movc	a,@a+dptr
      0009CE FD               [12] 2972 	mov	r5,a
      0009CF C0 05            [24] 2973 	push	ar5
      0009D1 C0 04            [24] 2974 	push	ar4
      0009D3 C0 03            [24] 2975 	push	ar3
      0009D5 12r00r00         [24] 2976 	lcall	_packetbuf_totlen
      0009D8 C8               [12] 2977 	xch	a,r0
      0009D9 E5 81            [12] 2978 	mov	a,sp
      0009DB 24 B5            [12] 2979 	add	a,#0xb5
      0009DD C8               [12] 2980 	xch	a,r0
      0009DE A6 82            [24] 2981 	mov	@r0,dpl
      0009E0 08               [12] 2982 	inc	r0
      0009E1 A6 83            [24] 2983 	mov	@r0,dph
      0009E3 D0 03            [24] 2984 	pop	ar3
      0009E5 12r00r00         [24] 2985 	lcall	_packetbuf_hdrptr
      0009E8 AB 82            [24] 2986 	mov	r3,dpl
      0009EA AE 83            [24] 2987 	mov	r6,dph
      0009EC AF F0            [24] 2988 	mov	r7,b
      0009EE D0 04            [24] 2989 	pop	ar4
      0009F0 D0 05            [24] 2990 	pop	ar5
      0009F2 C0 05            [24] 2991 	push	ar5
      0009F4 C0 04            [24] 2992 	push	ar4
      0009F6 C0 03            [24] 2993 	push	ar3
      0009F8 E5 81            [12] 2994 	mov	a,sp
      0009FA 24 B5            [12] 2995 	add	a,#0xb5
      0009FC F8               [12] 2996 	mov	r0,a
      0009FD E6               [12] 2997 	mov	a,@r0
      0009FE C0 E0            [24] 2998 	push	acc
      000A00 08               [12] 2999 	inc	r0
      000A01 E6               [12] 3000 	mov	a,@r0
      000A02 C0 E0            [24] 3001 	push	acc
      000A04 12r0Ar09         [24] 3002 	lcall	00321$
      000A07 80 0B            [24] 3003 	sjmp	00322$
      000A09                       3004 00321$:
      000A09 C0 04            [24] 3005 	push	ar4
      000A0B C0 05            [24] 3006 	push	ar5
      000A0D 8B 82            [24] 3007 	mov	dpl,r3
      000A0F 8E 83            [24] 3008 	mov	dph,r6
      000A11 8F F0            [24] 3009 	mov	b,r7
      000A13 22               [24] 3010 	ret
      000A14                       3011 00322$:
      000A14 15 81            [12] 3012 	dec	sp
      000A16 15 81            [12] 3013 	dec	sp
      000A18 D0 03            [24] 3014 	pop	ar3
      000A1A D0 04            [24] 3015 	pop	ar4
      000A1C D0 05            [24] 3016 	pop	ar5
                                   3017 ;	../../core/net/mac/xmac.c:650: off();
      000A1E C0 03            [24] 3018 	push	ar3
      000A20 12r00r2C         [24] 3019 	lcall	_off
      000A23 D0 03            [24] 3020 	pop	ar3
      000A25 D0 03            [24] 3021 	pop	ar3
      000A27 02r09r0A         [24] 3022 	ljmp	00168$
      000A2A                       3023 00135$:
                                   3024 ;	../../core/net/mac/xmac.c:655: on();
      000A2A C0 03            [24] 3025 	push	ar3
      000A2C C0 03            [24] 3026 	push	ar3
      000A2E 12r00r00         [24] 3027 	lcall	_on
      000A31 D0 03            [24] 3028 	pop	ar3
                                   3029 ;	../../core/net/mac/xmac.c:656: ret = NETSTACK_RADIO.send(strobe, strobe_len);
      000A33 90r00r06         [24] 3030 	mov	dptr,#(_cc2530_rf_driver + 0x0006)
      000A36 E4               [12] 3031 	clr	a
      000A37 93               [24] 3032 	movc	a,@a+dptr
      000A38 FE               [12] 3033 	mov	r6,a
      000A39 A3               [24] 3034 	inc	dptr
      000A3A E4               [12] 3035 	clr	a
      000A3B 93               [24] 3036 	movc	a,@a+dptr
      000A3C FF               [12] 3037 	mov	r7,a
      000A3D E5 81            [12] 3038 	mov	a,sp
      000A3F 24 EE            [12] 3039 	add	a,#0xee
      000A41 F8               [12] 3040 	mov	r0,a
      000A42 E5 81            [12] 3041 	mov	a,sp
      000A44 24 B8            [12] 3042 	add	a,#0xb8
      000A46 F9               [12] 3043 	mov	r1,a
      000A47 E6               [12] 3044 	mov	a,@r0
      000A48 F7               [12] 3045 	mov	@r1,a
      000A49 08               [12] 3046 	inc	r0
      000A4A 09               [12] 3047 	inc	r1
      000A4B E6               [12] 3048 	mov	a,@r0
      000A4C F7               [12] 3049 	mov	@r1,a
      000A4D E5 81            [12] 3050 	mov	a,sp
      000A4F 24 B7            [12] 3051 	add	a,#0xb7
      000A51 F8               [12] 3052 	mov	r0,a
      000A52 86 02            [24] 3053 	mov	ar2,@r0
      000A54 7B 00            [12] 3054 	mov	r3,#0x00
      000A56 7D 40            [12] 3055 	mov	r5,#0x40
      000A58 C0 07            [24] 3056 	push	ar7
      000A5A C0 06            [24] 3057 	push	ar6
      000A5C C0 03            [24] 3058 	push	ar3
      000A5E E5 81            [12] 3059 	mov	a,sp
      000A60 24 B5            [12] 3060 	add	a,#0xb5
      000A62 F8               [12] 3061 	mov	r0,a
      000A63 E6               [12] 3062 	mov	a,@r0
      000A64 C0 E0            [24] 3063 	push	acc
      000A66 08               [12] 3064 	inc	r0
      000A67 E6               [12] 3065 	mov	a,@r0
      000A68 C0 E0            [24] 3066 	push	acc
      000A6A 12r0Ar6F         [24] 3067 	lcall	00323$
      000A6D 80 0B            [24] 3068 	sjmp	00324$
      000A6F                       3069 00323$:
      000A6F C0 06            [24] 3070 	push	ar6
      000A71 C0 07            [24] 3071 	push	ar7
      000A73 8A 82            [24] 3072 	mov	dpl,r2
      000A75 8B 83            [24] 3073 	mov	dph,r3
      000A77 8D F0            [24] 3074 	mov	b,r5
      000A79 22               [24] 3075 	ret
      000A7A                       3076 00324$:
      000A7A 15 81            [12] 3077 	dec	sp
      000A7C 15 81            [12] 3078 	dec	sp
      000A7E D0 03            [24] 3079 	pop	ar3
      000A80 D0 06            [24] 3080 	pop	ar6
      000A82 D0 07            [24] 3081 	pop	ar7
                                   3082 ;	../../core/net/mac/xmac.c:672: if(detect_ack()) {
      000A84 C0 03            [24] 3083 	push	ar3
      000A86 12r03rB9         [24] 3084 	lcall	_detect_ack
      000A89 E5 82            [12] 3085 	mov	a,dpl
      000A8B 85 83 F0         [24] 3086 	mov	b,dph
      000A8E D0 03            [24] 3087 	pop	ar3
      000A90 D0 03            [24] 3088 	pop	ar3
      000A92 45 F0            [12] 3089 	orl	a,b
      000A94 60 0A            [24] 3090 	jz	00132$
                                   3091 ;	../../core/net/mac/xmac.c:673: got_strobe_ack = 1;
      000A96 E5 81            [12] 3092 	mov	a,sp
      000A98 24 BB            [12] 3093 	add	a,#0xbb
      000A9A F8               [12] 3094 	mov	r0,a
      000A9B 76 01            [12] 3095 	mov	@r0,#0x01
      000A9D 02r09r0A         [24] 3096 	ljmp	00168$
      000AA0                       3097 00132$:
                                   3098 ;	../../core/net/mac/xmac.c:675: off();
      000AA0 C0 03            [24] 3099 	push	ar3
      000AA2 12r00r2C         [24] 3100 	lcall	_off
      000AA5 D0 03            [24] 3101 	pop	ar3
                                   3102 ;	../../core/net/mac/xmac.c:603: strobes++) {
      000AA7 02r09r0A         [24] 3103 	ljmp	00168$
      000AAA                       3104 00142$:
                                   3105 ;	../../core/net/mac/xmac.c:700: queuebuf_to_packetbuf(packet);
      000AAA E5 81            [12] 3106 	mov	a,sp
      000AAC 24 F8            [12] 3107 	add	a,#0xf8
      000AAE F8               [12] 3108 	mov	r0,a
      000AAF 86 82            [24] 3109 	mov	dpl,@r0
      000AB1 08               [12] 3110 	inc	r0
      000AB2 86 83            [24] 3111 	mov	dph,@r0
      000AB4 08               [12] 3112 	inc	r0
      000AB5 86 F0            [24] 3113 	mov	b,@r0
      000AB7 C0 03            [24] 3114 	push	ar3
      000AB9 12r00r00         [24] 3115 	lcall	_queuebuf_to_packetbuf
      000ABC D0 03            [24] 3116 	pop	ar3
                                   3117 ;	../../core/net/mac/xmac.c:701: queuebuf_free(packet);
      000ABE E5 81            [12] 3118 	mov	a,sp
      000AC0 24 F8            [12] 3119 	add	a,#0xf8
      000AC2 F8               [12] 3120 	mov	r0,a
      000AC3 86 82            [24] 3121 	mov	dpl,@r0
      000AC5 08               [12] 3122 	inc	r0
      000AC6 86 83            [24] 3123 	mov	dph,@r0
      000AC8 08               [12] 3124 	inc	r0
      000AC9 86 F0            [24] 3125 	mov	b,@r0
      000ACB C0 03            [24] 3126 	push	ar3
      000ACD 12r00r00         [24] 3127 	lcall	_queuebuf_free
      000AD0 D0 03            [24] 3128 	pop	ar3
                                   3129 ;	../../core/net/mac/xmac.c:704: if((is_broadcast || got_strobe_ack || is_streaming) && collisions == 0) {
      000AD2 E5 81            [12] 3130 	mov	a,sp
      000AD4 24 F3            [12] 3131 	add	a,#0xf3
      000AD6 F8               [12] 3132 	mov	r0,a
      000AD7 E6               [12] 3133 	mov	a,@r0
      000AD8 08               [12] 3134 	inc	r0
      000AD9 46               [12] 3135 	orl	a,@r0
      000ADA 70 11            [24] 3136 	jnz	00151$
      000ADC E5 81            [12] 3137 	mov	a,sp
      000ADE 24 BB            [12] 3138 	add	a,#0xbb
      000AE0 F8               [12] 3139 	mov	r0,a
      000AE1 E6               [12] 3140 	mov	a,@r0
      000AE2 70 09            [24] 3141 	jnz	00151$
      000AE4 90r00r2A         [24] 3142 	mov	dptr,#_is_streaming
      000AE7 E0               [24] 3143 	movx	a,@dptr
      000AE8 70 03            [24] 3144 	jnz	00328$
      000AEA 02r0Br71         [24] 3145 	ljmp	00148$
      000AED                       3146 00328$:
      000AED                       3147 00151$:
      000AED EB               [12] 3148 	mov	a,r3
      000AEE 60 03            [24] 3149 	jz	00329$
      000AF0 02r0Br71         [24] 3150 	ljmp	00148$
      000AF3                       3151 00329$:
                                   3152 ;	../../core/net/mac/xmac.c:705: ret = NETSTACK_RADIO.send(packetbuf_hdrptr(), packetbuf_totlen());
      000AF3 C0 03            [24] 3153 	push	ar3
      000AF5 90r00r06         [24] 3154 	mov	dptr,#(_cc2530_rf_driver + 0x0006)
      000AF8 E4               [12] 3155 	clr	a
      000AF9 93               [24] 3156 	movc	a,@a+dptr
      000AFA FE               [12] 3157 	mov	r6,a
      000AFB A3               [24] 3158 	inc	dptr
      000AFC E4               [12] 3159 	clr	a
      000AFD 93               [24] 3160 	movc	a,@a+dptr
      000AFE FF               [12] 3161 	mov	r7,a
      000AFF C0 07            [24] 3162 	push	ar7
      000B01 C0 06            [24] 3163 	push	ar6
      000B03 C0 03            [24] 3164 	push	ar3
      000B05 12r00r00         [24] 3165 	lcall	_packetbuf_totlen
      000B08 C8               [12] 3166 	xch	a,r0
      000B09 E5 81            [12] 3167 	mov	a,sp
      000B0B 24 B5            [12] 3168 	add	a,#0xb5
      000B0D C8               [12] 3169 	xch	a,r0
      000B0E A6 82            [24] 3170 	mov	@r0,dpl
      000B10 08               [12] 3171 	inc	r0
      000B11 A6 83            [24] 3172 	mov	@r0,dph
      000B13 D0 03            [24] 3173 	pop	ar3
      000B15 12r00r00         [24] 3174 	lcall	_packetbuf_hdrptr
      000B18 AA 82            [24] 3175 	mov	r2,dpl
      000B1A AB 83            [24] 3176 	mov	r3,dph
      000B1C AD F0            [24] 3177 	mov	r5,b
      000B1E D0 06            [24] 3178 	pop	ar6
      000B20 D0 07            [24] 3179 	pop	ar7
      000B22 C0 07            [24] 3180 	push	ar7
      000B24 C0 06            [24] 3181 	push	ar6
      000B26 C0 03            [24] 3182 	push	ar3
      000B28 E5 81            [12] 3183 	mov	a,sp
      000B2A 24 B5            [12] 3184 	add	a,#0xb5
      000B2C F8               [12] 3185 	mov	r0,a
      000B2D E6               [12] 3186 	mov	a,@r0
      000B2E C0 E0            [24] 3187 	push	acc
      000B30 08               [12] 3188 	inc	r0
      000B31 E6               [12] 3189 	mov	a,@r0
      000B32 C0 E0            [24] 3190 	push	acc
      000B34 12r0Br39         [24] 3191 	lcall	00330$
      000B37 80 0B            [24] 3192 	sjmp	00331$
      000B39                       3193 00330$:
      000B39 C0 06            [24] 3194 	push	ar6
      000B3B C0 07            [24] 3195 	push	ar7
      000B3D 8A 82            [24] 3196 	mov	dpl,r2
      000B3F 8B 83            [24] 3197 	mov	dph,r3
      000B41 8D F0            [24] 3198 	mov	b,r5
      000B43 22               [24] 3199 	ret
      000B44                       3200 00331$:
      000B44 15 81            [12] 3201 	dec	sp
      000B46 15 81            [12] 3202 	dec	sp
      000B48 D0 03            [24] 3203 	pop	ar3
      000B4A D0 06            [24] 3204 	pop	ar6
      000B4C D0 07            [24] 3205 	pop	ar7
                                   3206 ;	../../core/net/mac/xmac.c:707: if(!is_broadcast) {
      000B4E D0 03            [24] 3207 	pop	ar3
      000B50 E5 81            [12] 3208 	mov	a,sp
      000B52 24 F3            [12] 3209 	add	a,#0xf3
      000B54 F8               [12] 3210 	mov	r0,a
      000B55 E6               [12] 3211 	mov	a,@r0
      000B56 08               [12] 3212 	inc	r0
      000B57 46               [12] 3213 	orl	a,@r0
      000B58 70 17            [24] 3214 	jnz	00148$
                                   3215 ;	../../core/net/mac/xmac.c:713: if(detect_ack()) {
      000B5A C0 03            [24] 3216 	push	ar3
      000B5C 12r03rB9         [24] 3217 	lcall	_detect_ack
      000B5F E5 82            [12] 3218 	mov	a,dpl
      000B61 85 83 F0         [24] 3219 	mov	b,dph
      000B64 D0 03            [24] 3220 	pop	ar3
      000B66 45 F0            [12] 3221 	orl	a,b
      000B68 60 07            [24] 3222 	jz	00148$
                                   3223 ;	../../core/net/mac/xmac.c:714: got_ack = 1;
      000B6A E5 81            [12] 3224 	mov	a,sp
      000B6C 24 BC            [12] 3225 	add	a,#0xbc
      000B6E F8               [12] 3226 	mov	r0,a
      000B6F 76 01            [12] 3227 	mov	@r0,#0x01
      000B71                       3228 00148$:
                                   3229 ;	../../core/net/mac/xmac.c:719: off();
      000B71 C0 03            [24] 3230 	push	ar3
      000B73 12r00r2C         [24] 3231 	lcall	_off
      000B76 D0 03            [24] 3232 	pop	ar3
                                   3233 ;	../../core/net/mac/xmac.c:722: if(got_strobe_ack && !is_streaming) {
      000B78 E5 81            [12] 3234 	mov	a,sp
      000B7A 24 BB            [12] 3235 	add	a,#0xbb
      000B7C F8               [12] 3236 	mov	r0,a
      000B7D E6               [12] 3237 	mov	a,@r0
      000B7E 60 28            [24] 3238 	jz	00153$
      000B80 90r00r2A         [24] 3239 	mov	dptr,#_is_streaming
      000B83 E0               [24] 3240 	movx	a,@dptr
      000B84 70 22            [24] 3241 	jnz	00153$
                                   3242 ;	../../core/net/mac/xmac.c:723: register_encounter(packetbuf_addr(PACKETBUF_ADDR_RECEIVER), encounter_time);
      000B86 75 82 19         [24] 3243 	mov	dpl,#0x19
      000B89 C0 03            [24] 3244 	push	ar3
      000B8B 12r00r00         [24] 3245 	lcall	_packetbuf_addr
      000B8E AD 82            [24] 3246 	mov	r5,dpl
      000B90 AE 83            [24] 3247 	mov	r6,dph
      000B92 AF F0            [24] 3248 	mov	r7,b
      000B94 E4               [12] 3249 	clr	a
      000B95 C0 E0            [24] 3250 	push	acc
      000B97 C0 E0            [24] 3251 	push	acc
      000B99 8D 82            [24] 3252 	mov	dpl,r5
      000B9B 8E 83            [24] 3253 	mov	dph,r6
      000B9D 8F F0            [24] 3254 	mov	b,r7
      000B9F 12r02r8A         [24] 3255 	lcall	_register_encounter
      000BA2 15 81            [12] 3256 	dec	sp
      000BA4 15 81            [12] 3257 	dec	sp
      000BA6 D0 03            [24] 3258 	pop	ar3
      000BA8                       3259 00153$:
                                   3260 ;	../../core/net/mac/xmac.c:726: watchdog_start();
      000BA8 C0 03            [24] 3261 	push	ar3
      000BAA 12r00r00         [24] 3262 	lcall	_watchdog_start
      000BAD D0 03            [24] 3263 	pop	ar3
                                   3264 ;	../../core/net/mac/xmac.c:746: we_are_sending = 0;
      000BAF 90r00r0B         [24] 3265 	mov	dptr,#_we_are_sending
      000BB2 E4               [12] 3266 	clr	a
      000BB3 F0               [24] 3267 	movx	@dptr,a
                                   3268 ;	../../core/net/mac/xmac.c:749: if(collisions == 0) {
      000BB4 EB               [12] 3269 	mov	a,r3
      000BB5 70 1C            [24] 3270 	jnz	00160$
                                   3271 ;	../../core/net/mac/xmac.c:750: if(is_broadcast == 0 && got_ack == 0) {
      000BB7 E5 81            [12] 3272 	mov	a,sp
      000BB9 24 F3            [12] 3273 	add	a,#0xf3
      000BBB F8               [12] 3274 	mov	r0,a
      000BBC E6               [12] 3275 	mov	a,@r0
      000BBD 08               [12] 3276 	inc	r0
      000BBE 46               [12] 3277 	orl	a,@r0
      000BBF 70 0D            [24] 3278 	jnz	00156$
      000BC1 E5 81            [12] 3279 	mov	a,sp
      000BC3 24 BC            [12] 3280 	add	a,#0xbc
      000BC5 F8               [12] 3281 	mov	r0,a
      000BC6 E6               [12] 3282 	mov	a,@r0
      000BC7 70 05            [24] 3283 	jnz	00156$
                                   3284 ;	../../core/net/mac/xmac.c:751: return MAC_TX_NOACK;
      000BC9 90 00 02         [24] 3285 	mov	dptr,#0x0002
      000BCC 80 0E            [24] 3286 	sjmp	00170$
      000BCE                       3287 00156$:
                                   3288 ;	../../core/net/mac/xmac.c:753: return MAC_TX_OK;
      000BCE 90 00 00         [24] 3289 	mov	dptr,#0x0000
      000BD1 80 09            [24] 3290 	sjmp	00170$
      000BD3                       3291 00160$:
                                   3292 ;	../../core/net/mac/xmac.c:756: someone_is_sending++;
      000BD3 90r00r0A         [24] 3293 	mov	dptr,#_someone_is_sending
      000BD6 E0               [24] 3294 	movx	a,@dptr
      000BD7 04               [12] 3295 	inc	a
      000BD8 F0               [24] 3296 	movx	@dptr,a
                                   3297 ;	../../core/net/mac/xmac.c:757: return MAC_TX_COLLISION;
      000BD9 90 00 01         [24] 3298 	mov	dptr,#0x0001
      000BDC                       3299 00170$:
                                   3300 ;	../../core/net/mac/xmac.c:760: }
      000BDC E5 81            [12] 3301 	mov	a,sp
      000BDE 24 B7            [12] 3302 	add	a,#0xb7
      000BE0 F5 81            [12] 3303 	mov	sp,a
      000BE2 22               [24] 3304 	ret
                                   3305 ;------------------------------------------------------------
                                   3306 ;Allocation info for local variables in function 'qsend_packet'
                                   3307 ;------------------------------------------------------------
                                   3308 ;ptr                       Allocated to stack - sp -4
                                   3309 ;sent                      Allocated to registers r6 r7 
                                   3310 ;ret                       Allocated to registers r4 r5 
                                   3311 ;------------------------------------------------------------
                                   3312 ;	../../core/net/mac/xmac.c:763: qsend_packet(mac_callback_t sent, void *ptr)
                                   3313 ;	-----------------------------------------
                                   3314 ;	 function qsend_packet
                                   3315 ;	-----------------------------------------
      000BE3                       3316 _qsend_packet:
      000BE3 AE 82            [24] 3317 	mov	r6,dpl
      000BE5 AF 83            [24] 3318 	mov	r7,dph
                                   3319 ;	../../core/net/mac/xmac.c:767: if(someone_is_sending) {
      000BE7 90r00r0A         [24] 3320 	mov	dptr,#_someone_is_sending
      000BEA E0               [24] 3321 	movx	a,@dptr
      000BEB 60 2F            [24] 3322 	jz	00102$
                                   3323 ;	../../core/net/mac/xmac.c:770: RIMESTATS_ADD(sendingdrop);
      000BED 90r00r3C         [24] 3324 	mov	dptr,#(_rimestats + 0x003c)
      000BF0 E0               [24] 3325 	movx	a,@dptr
      000BF1 FA               [12] 3326 	mov	r2,a
      000BF2 A3               [24] 3327 	inc	dptr
      000BF3 E0               [24] 3328 	movx	a,@dptr
      000BF4 FB               [12] 3329 	mov	r3,a
      000BF5 A3               [24] 3330 	inc	dptr
      000BF6 E0               [24] 3331 	movx	a,@dptr
      000BF7 FC               [12] 3332 	mov	r4,a
      000BF8 A3               [24] 3333 	inc	dptr
      000BF9 E0               [24] 3334 	movx	a,@dptr
      000BFA FD               [12] 3335 	mov	r5,a
      000BFB 0A               [12] 3336 	inc	r2
      000BFC BA 00 09         [24] 3337 	cjne	r2,#0x00,00120$
      000BFF 0B               [12] 3338 	inc	r3
      000C00 BB 00 05         [24] 3339 	cjne	r3,#0x00,00120$
      000C03 0C               [12] 3340 	inc	r4
      000C04 BC 00 01         [24] 3341 	cjne	r4,#0x00,00120$
      000C07 0D               [12] 3342 	inc	r5
      000C08                       3343 00120$:
      000C08 90r00r3C         [24] 3344 	mov	dptr,#(_rimestats + 0x003c)
      000C0B EA               [12] 3345 	mov	a,r2
      000C0C F0               [24] 3346 	movx	@dptr,a
      000C0D EB               [12] 3347 	mov	a,r3
      000C0E A3               [24] 3348 	inc	dptr
      000C0F F0               [24] 3349 	movx	@dptr,a
      000C10 EC               [12] 3350 	mov	a,r4
      000C11 A3               [24] 3351 	inc	dptr
      000C12 F0               [24] 3352 	movx	@dptr,a
      000C13 ED               [12] 3353 	mov	a,r5
      000C14 A3               [24] 3354 	inc	dptr
      000C15 F0               [24] 3355 	movx	@dptr,a
                                   3356 ;	../../core/net/mac/xmac.c:771: ret = MAC_TX_COLLISION;
      000C16 7C 01            [12] 3357 	mov	r4,#0x01
      000C18 7D 00            [12] 3358 	mov	r5,#0x00
      000C1A 80 13            [24] 3359 	sjmp	00106$
      000C1C                       3360 00102$:
                                   3361 ;	../../core/net/mac/xmac.c:774: ret = send_packet();
      000C1C C0 07            [24] 3362 	push	ar7
      000C1E C0 06            [24] 3363 	push	ar6
      000C20 12r04rEF         [24] 3364 	lcall	_send_packet
      000C23 AA 82            [24] 3365 	mov	r2,dpl
      000C25 AB 83            [24] 3366 	mov	r3,dph
      000C27 D0 06            [24] 3367 	pop	ar6
      000C29 D0 07            [24] 3368 	pop	ar7
      000C2B 8A 04            [24] 3369 	mov	ar4,r2
      000C2D 8B 05            [24] 3370 	mov	ar5,r3
                                   3371 ;	../../core/net/mac/xmac.c:777: mac_call_sent_callback(sent, ptr, ret, 1);
      000C2F                       3372 00106$:
      000C2F EE               [12] 3373 	mov	a,r6
      000C30 4F               [12] 3374 	orl	a,r7
      000C31 60 30            [24] 3375 	jz	00109$
      000C33 C0 07            [24] 3376 	push	ar7
      000C35 C0 06            [24] 3377 	push	ar6
      000C37 74 01            [12] 3378 	mov	a,#0x01
      000C39 C0 E0            [24] 3379 	push	acc
      000C3B E4               [12] 3380 	clr	a
      000C3C C0 E0            [24] 3381 	push	acc
      000C3E C0 04            [24] 3382 	push	ar4
      000C40 C0 05            [24] 3383 	push	ar5
      000C42 12r0Cr47         [24] 3384 	lcall	00122$
      000C45 80 12            [24] 3385 	sjmp	00123$
      000C47                       3386 00122$:
      000C47 C0 06            [24] 3387 	push	ar6
      000C49 C0 07            [24] 3388 	push	ar7
      000C4B E5 81            [12] 3389 	mov	a,sp
      000C4D 24 F2            [12] 3390 	add	a,#0xf2
      000C4F F8               [12] 3391 	mov	r0,a
      000C50 86 82            [24] 3392 	mov	dpl,@r0
      000C52 08               [12] 3393 	inc	r0
      000C53 86 83            [24] 3394 	mov	dph,@r0
      000C55 08               [12] 3395 	inc	r0
      000C56 86 F0            [24] 3396 	mov	b,@r0
      000C58 22               [24] 3397 	ret
      000C59                       3398 00123$:
      000C59 E5 81            [12] 3399 	mov	a,sp
      000C5B 24 FC            [12] 3400 	add	a,#0xfc
      000C5D F5 81            [12] 3401 	mov	sp,a
      000C5F D0 06            [24] 3402 	pop	ar6
      000C61 D0 07            [24] 3403 	pop	ar7
      000C63                       3404 00109$:
                                   3405 ;	../../core/net/mac/xmac.c:778: }
      000C63 22               [24] 3406 	ret
                                   3407 ;------------------------------------------------------------
                                   3408 ;Allocation info for local variables in function 'qsend_list'
                                   3409 ;------------------------------------------------------------
                                   3410 ;ptr                       Allocated to stack - sp -4
                                   3411 ;buf_list                  Allocated to stack - sp -7
                                   3412 ;sent                      Allocated to registers r6 r7 
                                   3413 ;------------------------------------------------------------
                                   3414 ;	../../core/net/mac/xmac.c:781: qsend_list(mac_callback_t sent, void *ptr, struct rdc_buf_list *buf_list)
                                   3415 ;	-----------------------------------------
                                   3416 ;	 function qsend_list
                                   3417 ;	-----------------------------------------
      000C64                       3418 _qsend_list:
      000C64 AE 82            [24] 3419 	mov	r6,dpl
      000C66 AF 83            [24] 3420 	mov	r7,dph
                                   3421 ;	../../core/net/mac/xmac.c:783: if(buf_list != NULL) {
      000C68 E5 81            [12] 3422 	mov	a,sp
      000C6A 24 F9            [12] 3423 	add	a,#0xf9
      000C6C F8               [12] 3424 	mov	r0,a
      000C6D E6               [12] 3425 	mov	a,@r0
      000C6E 08               [12] 3426 	inc	r0
      000C6F 46               [12] 3427 	orl	a,@r0
      000C70 60 56            [24] 3428 	jz	00103$
                                   3429 ;	../../core/net/mac/xmac.c:784: queuebuf_to_packetbuf(buf_list->buf);
      000C72 E5 81            [12] 3430 	mov	a,sp
      000C74 24 F9            [12] 3431 	add	a,#0xf9
      000C76 F8               [12] 3432 	mov	r0,a
      000C77 86 03            [24] 3433 	mov	ar3,@r0
      000C79 08               [12] 3434 	inc	r0
      000C7A 86 04            [24] 3435 	mov	ar4,@r0
      000C7C 08               [12] 3436 	inc	r0
      000C7D 86 05            [24] 3437 	mov	ar5,@r0
      000C7F 74 03            [12] 3438 	mov	a,#0x03
      000C81 2B               [12] 3439 	add	a,r3
      000C82 FB               [12] 3440 	mov	r3,a
      000C83 E4               [12] 3441 	clr	a
      000C84 3C               [12] 3442 	addc	a,r4
      000C85 FC               [12] 3443 	mov	r4,a
      000C86 8B 82            [24] 3444 	mov	dpl,r3
      000C88 8C 83            [24] 3445 	mov	dph,r4
      000C8A 8D F0            [24] 3446 	mov	b,r5
      000C8C 12r00r00         [24] 3447 	lcall	__gptrget
      000C8F FB               [12] 3448 	mov	r3,a
      000C90 A3               [24] 3449 	inc	dptr
      000C91 12r00r00         [24] 3450 	lcall	__gptrget
      000C94 FC               [12] 3451 	mov	r4,a
      000C95 A3               [24] 3452 	inc	dptr
      000C96 12r00r00         [24] 3453 	lcall	__gptrget
      000C99 FD               [12] 3454 	mov	r5,a
      000C9A 8B 82            [24] 3455 	mov	dpl,r3
      000C9C 8C 83            [24] 3456 	mov	dph,r4
      000C9E 8D F0            [24] 3457 	mov	b,r5
      000CA0 C0 07            [24] 3458 	push	ar7
      000CA2 C0 06            [24] 3459 	push	ar6
      000CA4 12r00r00         [24] 3460 	lcall	_queuebuf_to_packetbuf
      000CA7 D0 06            [24] 3461 	pop	ar6
      000CA9 D0 07            [24] 3462 	pop	ar7
                                   3463 ;	../../core/net/mac/xmac.c:785: qsend_packet(sent, ptr);
      000CAB E5 81            [12] 3464 	mov	a,sp
      000CAD 24 FC            [12] 3465 	add	a,#0xfc
      000CAF F8               [12] 3466 	mov	r0,a
      000CB0 E6               [12] 3467 	mov	a,@r0
      000CB1 C0 E0            [24] 3468 	push	acc
      000CB3 08               [12] 3469 	inc	r0
      000CB4 E6               [12] 3470 	mov	a,@r0
      000CB5 C0 E0            [24] 3471 	push	acc
      000CB7 08               [12] 3472 	inc	r0
      000CB8 E6               [12] 3473 	mov	a,@r0
      000CB9 C0 E0            [24] 3474 	push	acc
      000CBB 8E 82            [24] 3475 	mov	dpl,r6
      000CBD 8F 83            [24] 3476 	mov	dph,r7
      000CBF 12r0BrE3         [24] 3477 	lcall	_qsend_packet
      000CC2 15 81            [12] 3478 	dec	sp
      000CC4 15 81            [12] 3479 	dec	sp
      000CC6 15 81            [12] 3480 	dec	sp
      000CC8                       3481 00103$:
                                   3482 ;	../../core/net/mac/xmac.c:787: }
      000CC8 22               [24] 3483 	ret
                                   3484 ;------------------------------------------------------------
                                   3485 ;Allocation info for local variables in function 'input_packet'
                                   3486 ;------------------------------------------------------------
                                   3487 ;hdr                       Allocated to registers r5 r6 r7 
                                   3488 ;i                         Allocated to stack - sp -1
                                   3489 ;sloc0                     Allocated to stack - sp -6
                                   3490 ;sloc1                     Allocated to stack - sp +1
                                   3491 ;sloc2                     Allocated to stack - sp +3
                                   3492 ;sloc3                     Allocated to stack - sp -4
                                   3493 ;sloc4                     Allocated to stack - sp +8
                                   3494 ;------------------------------------------------------------
                                   3495 ;	../../core/net/mac/xmac.c:790: input_packet(void)
                                   3496 ;	-----------------------------------------
                                   3497 ;	 function input_packet
                                   3498 ;	-----------------------------------------
      000CC9                       3499 _input_packet:
      000CC9 E5 81            [12] 3500 	mov	a,sp
      000CCB 24 07            [12] 3501 	add	a,#0x07
      000CCD F5 81            [12] 3502 	mov	sp,a
                                   3503 ;	../../core/net/mac/xmac.c:794: if(NETSTACK_FRAMER.parse() >= 0) {
      000CCF 90r00r02         [24] 3504 	mov	dptr,#(_framer_802154 + 0x0002)
      000CD2 E4               [12] 3505 	clr	a
      000CD3 93               [24] 3506 	movc	a,@a+dptr
      000CD4 FE               [12] 3507 	mov	r6,a
      000CD5 A3               [24] 3508 	inc	dptr
      000CD6 E4               [12] 3509 	clr	a
      000CD7 93               [24] 3510 	movc	a,@a+dptr
      000CD8 FF               [12] 3511 	mov	r7,a
      000CD9 8E 82            [24] 3512 	mov	dpl,r6
      000CDB 8F 83            [24] 3513 	mov	dph,r7
      000CDD 12r00r00         [24] 3514 	lcall	__sdcc_call_dptr
      000CE0 AE 82            [24] 3515 	mov	r6,dpl
      000CE2 E5 83            [12] 3516 	mov	a,dph
      000CE4 FF               [12] 3517 	mov	r7,a
      000CE5 30 E7 03         [24] 3518 	jnb	acc.7,00177$
      000CE8 02r0Fr59         [24] 3519 	ljmp	00126$
      000CEB                       3520 00177$:
                                   3521 ;	../../core/net/mac/xmac.c:795: hdr = packetbuf_dataptr();
      000CEB 12r00r00         [24] 3522 	lcall	_packetbuf_dataptr
                                   3523 ;	../../core/net/mac/xmac.c:797: if(hdr->dispatch != DISPATCH) {
      000CEE AD 82            [24] 3524 	mov	r5,dpl
      000CF0 AE 83            [24] 3525 	mov	r6,dph
      000CF2 AF F0            [24] 3526 	mov	r7,b
      000CF4 12r00r00         [24] 3527 	lcall	__gptrget
      000CF7 70 03            [24] 3528 	jnz	00178$
      000CF9 02r0ErD3         [24] 3529 	ljmp	00118$
      000CFC                       3530 00178$:
                                   3531 ;	../../core/net/mac/xmac.c:798: someone_is_sending = 0;
      000CFC 90r00r0A         [24] 3532 	mov	dptr,#_someone_is_sending
      000CFF E4               [12] 3533 	clr	a
      000D00 F0               [24] 3534 	movx	@dptr,a
                                   3535 ;	../../core/net/mac/xmac.c:800: &rimeaddr_node_addr) ||
                                   3536 ;	../../core/net/mac/xmac.c:799: if(rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
      000D01 75 82 19         [24] 3537 	mov	dpl,#0x19
      000D04 12r00r00         [24] 3538 	lcall	_packetbuf_addr
      000D07 AA 82            [24] 3539 	mov	r2,dpl
      000D09 AB 83            [24] 3540 	mov	r3,dph
      000D0B AC F0            [24] 3541 	mov	r4,b
      000D0D 74r00            [12] 3542 	mov	a,#_rimeaddr_node_addr
      000D0F C0 E0            [24] 3543 	push	acc
      000D11 74s00            [12] 3544 	mov	a,#(_rimeaddr_node_addr >> 8)
      000D13 C0 E0            [24] 3545 	push	acc
      000D15 E4               [12] 3546 	clr	a
      000D16 C0 E0            [24] 3547 	push	acc
      000D18 8A 82            [24] 3548 	mov	dpl,r2
      000D1A 8B 83            [24] 3549 	mov	dph,r3
      000D1C 8C F0            [24] 3550 	mov	b,r4
      000D1E 12r00r00         [24] 3551 	lcall	_rimeaddr_cmp
      000D21 AB 82            [24] 3552 	mov	r3,dpl
      000D23 AC 83            [24] 3553 	mov	r4,dph
      000D25 15 81            [12] 3554 	dec	sp
      000D27 15 81            [12] 3555 	dec	sp
      000D29 15 81            [12] 3556 	dec	sp
      000D2B EB               [12] 3557 	mov	a,r3
      000D2C 4C               [12] 3558 	orl	a,r4
      000D2D 70 32            [24] 3559 	jnz	00106$
                                   3560 ;	../../core/net/mac/xmac.c:802: &rimeaddr_null)) {
                                   3561 ;	../../core/net/mac/xmac.c:801: rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
      000D2F 75 82 19         [24] 3562 	mov	dpl,#0x19
      000D32 12r00r00         [24] 3563 	lcall	_packetbuf_addr
      000D35 AA 82            [24] 3564 	mov	r2,dpl
      000D37 AB 83            [24] 3565 	mov	r3,dph
      000D39 AC F0            [24] 3566 	mov	r4,b
      000D3B 74r00            [12] 3567 	mov	a,#_rimeaddr_null
      000D3D C0 E0            [24] 3568 	push	acc
      000D3F 74s00            [12] 3569 	mov	a,#(_rimeaddr_null >> 8)
      000D41 C0 E0            [24] 3570 	push	acc
      000D43 74 80            [12] 3571 	mov	a,#0x80
      000D45 C0 E0            [24] 3572 	push	acc
      000D47 8A 82            [24] 3573 	mov	dpl,r2
      000D49 8B 83            [24] 3574 	mov	dph,r3
      000D4B 8C F0            [24] 3575 	mov	b,r4
      000D4D 12r00r00         [24] 3576 	lcall	_rimeaddr_cmp
      000D50 AB 82            [24] 3577 	mov	r3,dpl
      000D52 AC 83            [24] 3578 	mov	r4,dph
      000D54 15 81            [12] 3579 	dec	sp
      000D56 15 81            [12] 3580 	dec	sp
      000D58 15 81            [12] 3581 	dec	sp
      000D5A EB               [12] 3582 	mov	a,r3
      000D5B 4C               [12] 3583 	orl	a,r4
      000D5C 70 03            [24] 3584 	jnz	00180$
      000D5E 02r0Fr59         [24] 3585 	ljmp	00126$
      000D61                       3586 00180$:
      000D61                       3587 00106$:
                                   3588 ;	../../core/net/mac/xmac.c:808: off();
      000D61 12r00r2C         [24] 3589 	lcall	_off
                                   3590 ;	../../core/net/mac/xmac.c:814: for(i = 0; i < MAX_SEQNOS; ++i) {
      000D64 A8 81            [24] 3591 	mov	r0,sp
      000D66 18               [12] 3592 	dec	r0
      000D67 E4               [12] 3593 	clr	a
      000D68 F6               [12] 3594 	mov	@r0,a
      000D69 08               [12] 3595 	inc	r0
      000D6A F6               [12] 3596 	mov	@r0,a
      000D6B E5 81            [12] 3597 	mov	a,sp
      000D6D 24 FA            [12] 3598 	add	a,#0xfa
      000D6F F8               [12] 3599 	mov	r0,a
      000D70 E4               [12] 3600 	clr	a
      000D71 F6               [12] 3601 	mov	@r0,a
      000D72 08               [12] 3602 	inc	r0
      000D73 F6               [12] 3603 	mov	@r0,a
      000D74                       3604 00122$:
                                   3605 ;	../../core/net/mac/xmac.c:815: if(packetbuf_attr(PACKETBUF_ATTR_PACKET_ID) == received_seqnos[i].seqno &&
      000D74 75 82 0D         [24] 3606 	mov	dpl,#0x0d
      000D77 12r00r00         [24] 3607 	lcall	_packetbuf_attr
      000D7A AF 82            [24] 3608 	mov	r7,dpl
      000D7C AE 83            [24] 3609 	mov	r6,dph
      000D7E E5 81            [12] 3610 	mov	a,sp
      000D80 24 FA            [12] 3611 	add	a,#0xfa
      000D82 F8               [12] 3612 	mov	r0,a
      000D83 E6               [12] 3613 	mov	a,@r0
      000D84 24r31            [12] 3614 	add	a,#_received_seqnos
      000D86 FB               [12] 3615 	mov	r3,a
      000D87 08               [12] 3616 	inc	r0
      000D88 E6               [12] 3617 	mov	a,@r0
      000D89 34s00            [12] 3618 	addc	a,#(_received_seqnos >> 8)
      000D8B FD               [12] 3619 	mov	r5,a
      000D8C 8B 82            [24] 3620 	mov	dpl,r3
      000D8E 8D 83            [24] 3621 	mov	dph,r5
      000D90 A3               [24] 3622 	inc	dptr
      000D91 A3               [24] 3623 	inc	dptr
      000D92 E0               [24] 3624 	movx	a,@dptr
      000D93 FA               [12] 3625 	mov	r2,a
      000D94 7C 00            [12] 3626 	mov	r4,#0x00
      000D96 EF               [12] 3627 	mov	a,r7
      000D97 B5 02 2C         [24] 3628 	cjne	a,ar2,00123$
      000D9A EE               [12] 3629 	mov	a,r6
      000D9B B5 04 28         [24] 3630 	cjne	a,ar4,00123$
                                   3631 ;	../../core/net/mac/xmac.c:817: &received_seqnos[i].sender)) {
      000D9E 8D 04            [24] 3632 	mov	ar4,r5
      000DA0 8B 07            [24] 3633 	mov	ar7,r3
      000DA2 8C 06            [24] 3634 	mov	ar6,r4
      000DA4 7D 00            [12] 3635 	mov	r5,#0x00
                                   3636 ;	../../core/net/mac/xmac.c:816: rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_SENDER),
      000DA6 75 82 18         [24] 3637 	mov	dpl,#0x18
      000DA9 C0 07            [24] 3638 	push	ar7
      000DAB C0 06            [24] 3639 	push	ar6
      000DAD C0 05            [24] 3640 	push	ar5
      000DAF 12r00r00         [24] 3641 	lcall	_packetbuf_addr
      000DB2 12r00r00         [24] 3642 	lcall	_rimeaddr_cmp
      000DB5 AB 82            [24] 3643 	mov	r3,dpl
      000DB7 AC 83            [24] 3644 	mov	r4,dph
      000DB9 15 81            [12] 3645 	dec	sp
      000DBB 15 81            [12] 3646 	dec	sp
      000DBD 15 81            [12] 3647 	dec	sp
      000DBF EB               [12] 3648 	mov	a,r3
      000DC0 4C               [12] 3649 	orl	a,r4
      000DC1 60 03            [24] 3650 	jz	00123$
                                   3651 ;	../../core/net/mac/xmac.c:819: return;
      000DC3 02r0Fr59         [24] 3652 	ljmp	00126$
      000DC6                       3653 00123$:
                                   3654 ;	../../core/net/mac/xmac.c:814: for(i = 0; i < MAX_SEQNOS; ++i) {
      000DC6 E5 81            [12] 3655 	mov	a,sp
      000DC8 24 FA            [12] 3656 	add	a,#0xfa
      000DCA F8               [12] 3657 	mov	r0,a
      000DCB 74 03            [12] 3658 	mov	a,#0x03
      000DCD 26               [12] 3659 	add	a,@r0
      000DCE F6               [12] 3660 	mov	@r0,a
      000DCF E4               [12] 3661 	clr	a
      000DD0 08               [12] 3662 	inc	r0
      000DD1 36               [12] 3663 	addc	a,@r0
      000DD2 F6               [12] 3664 	mov	@r0,a
      000DD3 A8 81            [24] 3665 	mov	r0,sp
      000DD5 18               [12] 3666 	dec	r0
      000DD6 06               [12] 3667 	inc	@r0
      000DD7 B6 00 02         [24] 3668 	cjne	@r0,#0x00,00184$
      000DDA 08               [12] 3669 	inc	r0
      000DDB 06               [12] 3670 	inc	@r0
      000DDC                       3671 00184$:
      000DDC A8 81            [24] 3672 	mov	r0,sp
      000DDE 18               [12] 3673 	dec	r0
      000DDF C3               [12] 3674 	clr	c
      000DE0 E6               [12] 3675 	mov	a,@r0
      000DE1 94 08            [12] 3676 	subb	a,#0x08
      000DE3 08               [12] 3677 	inc	r0
      000DE4 E6               [12] 3678 	mov	a,@r0
      000DE5 64 80            [12] 3679 	xrl	a,#0x80
      000DE7 94 80            [12] 3680 	subb	a,#0x80
      000DE9 50 03            [24] 3681 	jnc	00185$
      000DEB 02r0Dr74         [24] 3682 	ljmp	00122$
      000DEE                       3683 00185$:
                                   3684 ;	../../core/net/mac/xmac.c:822: for(i = MAX_SEQNOS - 1; i > 0; --i) {
      000DEE A8 81            [24] 3685 	mov	r0,sp
      000DF0 18               [12] 3686 	dec	r0
      000DF1 76 07            [12] 3687 	mov	@r0,#0x07
      000DF3 08               [12] 3688 	inc	r0
      000DF4 76 00            [12] 3689 	mov	@r0,#0x00
      000DF6 E5 81            [12] 3690 	mov	a,sp
      000DF8 24 FC            [12] 3691 	add	a,#0xfc
      000DFA F8               [12] 3692 	mov	r0,a
      000DFB 76 15            [12] 3693 	mov	@r0,#0x15
      000DFD 08               [12] 3694 	inc	r0
      000DFE 76 00            [12] 3695 	mov	@r0,#0x00
      000E00                       3696 00124$:
                                   3697 ;	../../core/net/mac/xmac.c:823: memcpy(&received_seqnos[i], &received_seqnos[i - 1],
      000E00 A8 81            [24] 3698 	mov	r0,sp
      000E02 18               [12] 3699 	dec	r0
      000E03 86 03            [24] 3700 	mov	ar3,@r0
      000E05 1B               [12] 3701 	dec	r3
      000E06 C2 D5            [12] 3702 	clr	F0
      000E08 75 F0 03         [24] 3703 	mov	b,#0x03
      000E0B EB               [12] 3704 	mov	a,r3
      000E0C 30 E7 04         [24] 3705 	jnb	acc.7,00186$
      000E0F B2 D5            [12] 3706 	cpl	F0
      000E11 F4               [12] 3707 	cpl	a
      000E12 04               [12] 3708 	inc	a
      000E13                       3709 00186$:
      000E13 A4               [48] 3710 	mul	ab
      000E14 30 D5 0A         [24] 3711 	jnb	F0,00187$
      000E17 F4               [12] 3712 	cpl	a
      000E18 24 01            [12] 3713 	add	a,#0x01
      000E1A C5 F0            [12] 3714 	xch	a,b
      000E1C F4               [12] 3715 	cpl	a
      000E1D 34 00            [12] 3716 	addc	a,#0x00
      000E1F C5 F0            [12] 3717 	xch	a,b
      000E21                       3718 00187$:
      000E21 24r31            [12] 3719 	add	a,#_received_seqnos
      000E23 FB               [12] 3720 	mov	r3,a
      000E24 74s00            [12] 3721 	mov	a,#(_received_seqnos >> 8)
      000E26 35 F0            [12] 3722 	addc	a,b
      000E28 FC               [12] 3723 	mov	r4,a
      000E29 8B 07            [24] 3724 	mov	ar7,r3
      000E2B 8C 06            [24] 3725 	mov	ar6,r4
      000E2D 7D 00            [12] 3726 	mov	r5,#0x00
      000E2F E5 81            [12] 3727 	mov	a,sp
      000E31 24 FC            [12] 3728 	add	a,#0xfc
      000E33 F8               [12] 3729 	mov	r0,a
      000E34 E6               [12] 3730 	mov	a,@r0
      000E35 24r31            [12] 3731 	add	a,#_received_seqnos
      000E37 FB               [12] 3732 	mov	r3,a
      000E38 08               [12] 3733 	inc	r0
      000E39 E6               [12] 3734 	mov	a,@r0
      000E3A 34s00            [12] 3735 	addc	a,#(_received_seqnos >> 8)
      000E3C FC               [12] 3736 	mov	r4,a
      000E3D 7A 00            [12] 3737 	mov	r2,#0x00
      000E3F 74 03            [12] 3738 	mov	a,#0x03
      000E41 C0 E0            [24] 3739 	push	acc
      000E43 E4               [12] 3740 	clr	a
      000E44 C0 E0            [24] 3741 	push	acc
      000E46 C0 07            [24] 3742 	push	ar7
      000E48 C0 06            [24] 3743 	push	ar6
      000E4A C0 05            [24] 3744 	push	ar5
      000E4C 8B 82            [24] 3745 	mov	dpl,r3
      000E4E 8C 83            [24] 3746 	mov	dph,r4
      000E50 8A F0            [24] 3747 	mov	b,r2
      000E52 12r00r00         [24] 3748 	lcall	___memcpy
      000E55 E5 81            [12] 3749 	mov	a,sp
      000E57 24 FB            [12] 3750 	add	a,#0xfb
                                   3751 ;	../../core/net/mac/xmac.c:822: for(i = MAX_SEQNOS - 1; i > 0; --i) {
      000E59 F5 81            [12] 3752 	mov	sp,a
      000E5B 24 FC            [12] 3753 	add	a,#0xfc
      000E5D F8               [12] 3754 	mov	r0,a
      000E5E E6               [12] 3755 	mov	a,@r0
      000E5F 24 FD            [12] 3756 	add	a,#0xfd
      000E61 F6               [12] 3757 	mov	@r0,a
      000E62 08               [12] 3758 	inc	r0
      000E63 E6               [12] 3759 	mov	a,@r0
      000E64 34 FF            [12] 3760 	addc	a,#0xff
      000E66 F6               [12] 3761 	mov	@r0,a
      000E67 A8 81            [24] 3762 	mov	r0,sp
      000E69 18               [12] 3763 	dec	r0
      000E6A 16               [12] 3764 	dec	@r0
      000E6B B6 FF 02         [24] 3765 	cjne	@r0,#0xff,00188$
      000E6E 08               [12] 3766 	inc	r0
      000E6F 16               [12] 3767 	dec	@r0
      000E70                       3768 00188$:
      000E70 A8 81            [24] 3769 	mov	r0,sp
      000E72 18               [12] 3770 	dec	r0
      000E73 C3               [12] 3771 	clr	c
      000E74 E4               [12] 3772 	clr	a
      000E75 96               [12] 3773 	subb	a,@r0
      000E76 74 80            [12] 3774 	mov	a,#(0x00 ^ 0x80)
      000E78 08               [12] 3775 	inc	r0
      000E79 86 F0            [24] 3776 	mov	b,@r0
      000E7B 63 F0 80         [24] 3777 	xrl	b,#0x80
      000E7E 95 F0            [12] 3778 	subb	a,b
      000E80 50 03            [24] 3779 	jnc	00189$
      000E82 02r0Er00         [24] 3780 	ljmp	00124$
      000E85                       3781 00189$:
                                   3782 ;	../../core/net/mac/xmac.c:826: received_seqnos[0].seqno = packetbuf_attr(PACKETBUF_ATTR_PACKET_ID);
      000E85 75 82 0D         [24] 3783 	mov	dpl,#0x0d
      000E88 12r00r00         [24] 3784 	lcall	_packetbuf_attr
      000E8B AB 82            [24] 3785 	mov	r3,dpl
      000E8D 90r00r33         [24] 3786 	mov	dptr,#(_received_seqnos + 0x0002)
      000E90 EB               [12] 3787 	mov	a,r3
      000E91 F0               [24] 3788 	movx	@dptr,a
                                   3789 ;	../../core/net/mac/xmac.c:828: packetbuf_addr(PACKETBUF_ADDR_SENDER));
      000E92 75 82 18         [24] 3790 	mov	dpl,#0x18
      000E95 12r00r00         [24] 3791 	lcall	_packetbuf_addr
      000E98 AA 82            [24] 3792 	mov	r2,dpl
      000E9A AB 83            [24] 3793 	mov	r3,dph
      000E9C AC F0            [24] 3794 	mov	r4,b
                                   3795 ;	../../core/net/mac/xmac.c:827: rimeaddr_copy(&received_seqnos[0].sender,
      000E9E C0 02            [24] 3796 	push	ar2
      000EA0 C0 03            [24] 3797 	push	ar3
      000EA2 C0 04            [24] 3798 	push	ar4
      000EA4 90r00r31         [24] 3799 	mov	dptr,#_received_seqnos
      000EA7 75 F0 00         [24] 3800 	mov	b,#0x00
      000EAA 12r00r00         [24] 3801 	lcall	_rimeaddr_copy
      000EAD 15 81            [12] 3802 	dec	sp
      000EAF 15 81            [12] 3803 	dec	sp
      000EB1 15 81            [12] 3804 	dec	sp
                                   3805 ;	../../core/net/mac/xmac.c:845: waiting_for_packet = 0;
      000EB3 90r00r09         [24] 3806 	mov	dptr,#_waiting_for_packet
      000EB6 E4               [12] 3807 	clr	a
      000EB7 F0               [24] 3808 	movx	@dptr,a
                                   3809 ;	../../core/net/mac/xmac.c:848: NETSTACK_MAC.input();
      000EB8 90r00r07         [24] 3810 	mov	dptr,#(_csma_driver + 0x0007)
                                   3811 ;	genFromRTrack removed	clr	a
      000EBB 93               [24] 3812 	movc	a,@a+dptr
      000EBC FB               [12] 3813 	mov	r3,a
      000EBD A3               [24] 3814 	inc	dptr
      000EBE E4               [12] 3815 	clr	a
      000EBF 93               [24] 3816 	movc	a,@a+dptr
      000EC0 FC               [12] 3817 	mov	r4,a
      000EC1 C0 04            [24] 3818 	push	ar4
      000EC3 C0 03            [24] 3819 	push	ar3
      000EC5 8B 82            [24] 3820 	mov	dpl,r3
      000EC7 8C 83            [24] 3821 	mov	dph,r4
      000EC9 12r00r00         [24] 3822 	lcall	__sdcc_call_dptr
      000ECC D0 03            [24] 3823 	pop	ar3
      000ECE D0 04            [24] 3824 	pop	ar4
                                   3825 ;	../../core/net/mac/xmac.c:849: return;
      000ED0 02r0Fr59         [24] 3826 	ljmp	00126$
      000ED3                       3827 00118$:
                                   3828 ;	../../core/net/mac/xmac.c:854: } else if(hdr->type == TYPE_STROBE) {
      000ED3 0D               [12] 3829 	inc	r5
      000ED4 BD 00 01         [24] 3830 	cjne	r5,#0x00,00190$
      000ED7 0E               [12] 3831 	inc	r6
      000ED8                       3832 00190$:
      000ED8 8D 82            [24] 3833 	mov	dpl,r5
      000EDA 8E 83            [24] 3834 	mov	dph,r6
      000EDC 8F F0            [24] 3835 	mov	b,r7
      000EDE 12r00r00         [24] 3836 	lcall	__gptrget
      000EE1 FD               [12] 3837 	mov	r5,a
      000EE2 BD 10 74         [24] 3838 	cjne	r5,#0x10,00126$
                                   3839 ;	../../core/net/mac/xmac.c:855: someone_is_sending = 2;
      000EE5 90r00r0A         [24] 3840 	mov	dptr,#_someone_is_sending
      000EE8 74 02            [12] 3841 	mov	a,#0x02
      000EEA F0               [24] 3842 	movx	@dptr,a
                                   3843 ;	../../core/net/mac/xmac.c:858: &rimeaddr_node_addr)) {
                                   3844 ;	../../core/net/mac/xmac.c:857: if(rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
      000EEB 75 82 19         [24] 3845 	mov	dpl,#0x19
      000EEE 12r00r00         [24] 3846 	lcall	_packetbuf_addr
      000EF1 AD 82            [24] 3847 	mov	r5,dpl
      000EF3 AE 83            [24] 3848 	mov	r6,dph
      000EF5 AF F0            [24] 3849 	mov	r7,b
      000EF7 74r00            [12] 3850 	mov	a,#_rimeaddr_node_addr
      000EF9 C0 E0            [24] 3851 	push	acc
      000EFB 74s00            [12] 3852 	mov	a,#(_rimeaddr_node_addr >> 8)
      000EFD C0 E0            [24] 3853 	push	acc
      000EFF E4               [12] 3854 	clr	a
      000F00 C0 E0            [24] 3855 	push	acc
      000F02 8D 82            [24] 3856 	mov	dpl,r5
      000F04 8E 83            [24] 3857 	mov	dph,r6
      000F06 8F F0            [24] 3858 	mov	b,r7
      000F08 12r00r00         [24] 3859 	lcall	_rimeaddr_cmp
      000F0B AE 82            [24] 3860 	mov	r6,dpl
      000F0D AF 83            [24] 3861 	mov	r7,dph
      000F0F 15 81            [12] 3862 	dec	sp
      000F11 15 81            [12] 3863 	dec	sp
      000F13 15 81            [12] 3864 	dec	sp
      000F15 EE               [12] 3865 	mov	a,r6
      000F16 4F               [12] 3866 	orl	a,r7
      000F17 60 08            [24] 3867 	jz	00112$
                                   3868 ;	../../core/net/mac/xmac.c:865: waiting_for_packet = 1;
      000F19 90r00r09         [24] 3869 	mov	dptr,#_waiting_for_packet
      000F1C 74 01            [12] 3870 	mov	a,#0x01
      000F1E F0               [24] 3871 	movx	@dptr,a
      000F1F 80 38            [24] 3872 	sjmp	00113$
      000F21                       3873 00112$:
                                   3874 ;	../../core/net/mac/xmac.c:885: &rimeaddr_null)) {
                                   3875 ;	../../core/net/mac/xmac.c:884: } else if(rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
      000F21 75 82 19         [24] 3876 	mov	dpl,#0x19
      000F24 12r00r00         [24] 3877 	lcall	_packetbuf_addr
      000F27 AD 82            [24] 3878 	mov	r5,dpl
      000F29 AE 83            [24] 3879 	mov	r6,dph
      000F2B AF F0            [24] 3880 	mov	r7,b
      000F2D 74r00            [12] 3881 	mov	a,#_rimeaddr_null
      000F2F C0 E0            [24] 3882 	push	acc
      000F31 74s00            [12] 3883 	mov	a,#(_rimeaddr_null >> 8)
      000F33 C0 E0            [24] 3884 	push	acc
      000F35 74 80            [12] 3885 	mov	a,#0x80
      000F37 C0 E0            [24] 3886 	push	acc
      000F39 8D 82            [24] 3887 	mov	dpl,r5
      000F3B 8E 83            [24] 3888 	mov	dph,r6
      000F3D 8F F0            [24] 3889 	mov	b,r7
      000F3F 12r00r00         [24] 3890 	lcall	_rimeaddr_cmp
      000F42 AE 82            [24] 3891 	mov	r6,dpl
      000F44 AF 83            [24] 3892 	mov	r7,dph
      000F46 15 81            [12] 3893 	dec	sp
      000F48 15 81            [12] 3894 	dec	sp
      000F4A 15 81            [12] 3895 	dec	sp
      000F4C EE               [12] 3896 	mov	a,r6
      000F4D 4F               [12] 3897 	orl	a,r7
      000F4E 60 09            [24] 3898 	jz	00113$
                                   3899 ;	../../core/net/mac/xmac.c:890: waiting_for_packet = 1;
      000F50 90r00r09         [24] 3900 	mov	dptr,#_waiting_for_packet
      000F53 74 01            [12] 3901 	mov	a,#0x01
      000F55 F0               [24] 3902 	movx	@dptr,a
                                   3903 ;	../../core/net/mac/xmac.c:891: on();
      000F56 12r00r00         [24] 3904 	lcall	_on
      000F59                       3905 00113$:
                                   3906 ;	../../core/net/mac/xmac.c:898: return;
                                   3907 ;	../../core/net/mac/xmac.c:904: } else if(hdr->type == TYPE_STROBE_ACK) {
      000F59                       3908 00126$:
                                   3909 ;	../../core/net/mac/xmac.c:913: }
      000F59 E5 81            [12] 3910 	mov	a,sp
      000F5B 24 F9            [12] 3911 	add	a,#0xf9
      000F5D F5 81            [12] 3912 	mov	sp,a
      000F5F 22               [24] 3913 	ret
                                   3914 ;------------------------------------------------------------
                                   3915 ;Allocation info for local variables in function 'xmac_set_announcement_radio_txpower'
                                   3916 ;------------------------------------------------------------
                                   3917 ;txpower                   Allocated to registers 
                                   3918 ;------------------------------------------------------------
                                   3919 ;	../../core/net/mac/xmac.c:964: xmac_set_announcement_radio_txpower(int txpower)
                                   3920 ;	-----------------------------------------
                                   3921 ;	 function xmac_set_announcement_radio_txpower
                                   3922 ;	-----------------------------------------
      000F60                       3923 _xmac_set_announcement_radio_txpower:
                                   3924 ;	../../core/net/mac/xmac.c:969: }
      000F60 22               [24] 3925 	ret
                                   3926 ;------------------------------------------------------------
                                   3927 ;Allocation info for local variables in function 'init'
                                   3928 ;------------------------------------------------------------
                                   3929 ;	../../core/net/mac/xmac.c:972: init(void)
                                   3930 ;	-----------------------------------------
                                   3931 ;	 function init
                                   3932 ;	-----------------------------------------
      000F61                       3933 _init:
                                   3934 ;	../../core/net/mac/xmac.c:974: radio_is_on = 0;
      000F61 90r00r0C         [24] 3935 	mov	dptr,#_radio_is_on
      000F64 E4               [12] 3936 	clr	a
      000F65 F0               [24] 3937 	movx	@dptr,a
                                   3938 ;	../../core/net/mac/xmac.c:975: waiting_for_packet = 0;
      000F66 90r00r09         [24] 3939 	mov	dptr,#_waiting_for_packet
      000F69 F0               [24] 3940 	movx	@dptr,a
                                   3941 ;	../../core/net/mac/xmac.c:976: PT_INIT(&pt);
      000F6A 90r00r07         [24] 3942 	mov	dptr,#_pt
      000F6D F0               [24] 3943 	movx	@dptr,a
      000F6E A3               [24] 3944 	inc	dptr
      000F6F F0               [24] 3945 	movx	@dptr,a
                                   3946 ;	../../core/net/mac/xmac.c:978: (void (*)(struct rtimer *, void *))powercycle, NULL);
      000F70 7ErE5            [12] 3947 	mov	r6,#_powercycle
      000F72 7Fs00            [12] 3948 	mov	r7,#(_powercycle >> 8)
                                   3949 ;	../../core/net/mac/xmac.c:977: rtimer_set(&rt, RTIMER_NOW() + xmac_config.off_time, 1,
      000F74 AC E2            [24] 3950 	mov	r4,_T1CNTL
      000F76 7D 00            [12] 3951 	mov	r5,#0x00
      000F78 AA E3            [24] 3952 	mov	r2,_T1CNTH
      000F7A 8A 03            [24] 3953 	mov	ar3,r2
      000F7C E4               [12] 3954 	clr	a
      000F7D 2C               [12] 3955 	add	a,r4
      000F7E FC               [12] 3956 	mov	r4,a
      000F7F EB               [12] 3957 	mov	a,r3
      000F80 3D               [12] 3958 	addc	a,r5
      000F81 FD               [12] 3959 	mov	r5,a
      000F82 90r00r02         [24] 3960 	mov	dptr,#(_xmac_config + 0x0002)
      000F85 E0               [24] 3961 	movx	a,@dptr
      000F86 FA               [12] 3962 	mov	r2,a
      000F87 A3               [24] 3963 	inc	dptr
      000F88 E0               [24] 3964 	movx	a,@dptr
      000F89 FB               [12] 3965 	mov	r3,a
      000F8A EA               [12] 3966 	mov	a,r2
      000F8B 2C               [12] 3967 	add	a,r4
      000F8C FA               [12] 3968 	mov	r2,a
      000F8D EB               [12] 3969 	mov	a,r3
      000F8E 3D               [12] 3970 	addc	a,r5
      000F8F FB               [12] 3971 	mov	r3,a
      000F90 E4               [12] 3972 	clr	a
      000F91 C0 E0            [24] 3973 	push	acc
      000F93 C0 E0            [24] 3974 	push	acc
      000F95 C0 E0            [24] 3975 	push	acc
      000F97 C0 06            [24] 3976 	push	ar6
      000F99 C0 07            [24] 3977 	push	ar7
      000F9B 04               [12] 3978 	inc	a
      000F9C C0 E0            [24] 3979 	push	acc
      000F9E E4               [12] 3980 	clr	a
      000F9F C0 E0            [24] 3981 	push	acc
      000FA1 C0 02            [24] 3982 	push	ar2
      000FA3 C0 03            [24] 3983 	push	ar3
      000FA5 90r00r00         [24] 3984 	mov	dptr,#_rt
      000FA8 75 F0 00         [24] 3985 	mov	b,#0x00
      000FAB 12r00r00         [24] 3986 	lcall	_rtimer_set
      000FAE E5 81            [12] 3987 	mov	a,sp
      000FB0 24 F7            [12] 3988 	add	a,#0xf7
      000FB2 F5 81            [12] 3989 	mov	sp,a
                                   3990 ;	../../core/net/mac/xmac.c:980: xmac_is_on = 1;
      000FB4 90r00r08         [24] 3991 	mov	dptr,#_xmac_is_on
      000FB7 74 01            [12] 3992 	mov	a,#0x01
      000FB9 F0               [24] 3993 	movx	@dptr,a
                                   3994 ;	../../core/net/mac/xmac.c:983: list_init(encounter_list);
      000FBA 90r00r10         [24] 3995 	mov	dptr,#_encounter_list
      000FBD E0               [24] 3996 	movx	a,@dptr
      000FBE FD               [12] 3997 	mov	r5,a
      000FBF A3               [24] 3998 	inc	dptr
      000FC0 E0               [24] 3999 	movx	a,@dptr
      000FC1 FE               [12] 4000 	mov	r6,a
      000FC2 A3               [24] 4001 	inc	dptr
      000FC3 E0               [24] 4002 	movx	a,@dptr
      000FC4 FF               [12] 4003 	mov	r7,a
      000FC5 8D 82            [24] 4004 	mov	dpl,r5
      000FC7 8E 83            [24] 4005 	mov	dph,r6
      000FC9 8F F0            [24] 4006 	mov	b,r7
      000FCB 12r00r00         [24] 4007 	lcall	_list_init
                                   4008 ;	../../core/net/mac/xmac.c:984: memb_init(&encounter_memb);
      000FCE 90r00r13         [24] 4009 	mov	dptr,#_encounter_memb
      000FD1 75 F0 00         [24] 4010 	mov	b,#0x00
                                   4011 ;	../../core/net/mac/xmac.c:992: }
      000FD4 02r00r00         [24] 4012 	ljmp	_memb_init
                                   4013 ;------------------------------------------------------------
                                   4014 ;Allocation info for local variables in function 'turn_on'
                                   4015 ;------------------------------------------------------------
                                   4016 ;	../../core/net/mac/xmac.c:995: turn_on(void)
                                   4017 ;	-----------------------------------------
                                   4018 ;	 function turn_on
                                   4019 ;	-----------------------------------------
      000FD7                       4020 _turn_on:
                                   4021 ;	../../core/net/mac/xmac.c:997: xmac_is_on = 1;
      000FD7 90r00r08         [24] 4022 	mov	dptr,#_xmac_is_on
      000FDA 74 01            [12] 4023 	mov	a,#0x01
      000FDC F0               [24] 4024 	movx	@dptr,a
                                   4025 ;	../../core/net/mac/xmac.c:999: (void (*)(struct rtimer *, void *))powercycle, NULL);
      000FDD 7ErE5            [12] 4026 	mov	r6,#_powercycle
      000FDF 7Fs00            [12] 4027 	mov	r7,#(_powercycle >> 8)
                                   4028 ;	../../core/net/mac/xmac.c:998: rtimer_set(&rt, RTIMER_NOW() + xmac_config.off_time, 1,
      000FE1 AC E2            [24] 4029 	mov	r4,_T1CNTL
      000FE3 7D 00            [12] 4030 	mov	r5,#0x00
      000FE5 AA E3            [24] 4031 	mov	r2,_T1CNTH
      000FE7 8A 03            [24] 4032 	mov	ar3,r2
      000FE9 E4               [12] 4033 	clr	a
      000FEA 2C               [12] 4034 	add	a,r4
      000FEB FC               [12] 4035 	mov	r4,a
      000FEC EB               [12] 4036 	mov	a,r3
      000FED 3D               [12] 4037 	addc	a,r5
      000FEE FD               [12] 4038 	mov	r5,a
      000FEF 90r00r02         [24] 4039 	mov	dptr,#(_xmac_config + 0x0002)
      000FF2 E0               [24] 4040 	movx	a,@dptr
      000FF3 FA               [12] 4041 	mov	r2,a
      000FF4 A3               [24] 4042 	inc	dptr
      000FF5 E0               [24] 4043 	movx	a,@dptr
      000FF6 FB               [12] 4044 	mov	r3,a
      000FF7 EA               [12] 4045 	mov	a,r2
      000FF8 2C               [12] 4046 	add	a,r4
      000FF9 FA               [12] 4047 	mov	r2,a
      000FFA EB               [12] 4048 	mov	a,r3
      000FFB 3D               [12] 4049 	addc	a,r5
      000FFC FB               [12] 4050 	mov	r3,a
      000FFD E4               [12] 4051 	clr	a
      000FFE C0 E0            [24] 4052 	push	acc
      001000 C0 E0            [24] 4053 	push	acc
      001002 C0 E0            [24] 4054 	push	acc
      001004 C0 06            [24] 4055 	push	ar6
      001006 C0 07            [24] 4056 	push	ar7
      001008 04               [12] 4057 	inc	a
      001009 C0 E0            [24] 4058 	push	acc
      00100B E4               [12] 4059 	clr	a
      00100C C0 E0            [24] 4060 	push	acc
      00100E C0 02            [24] 4061 	push	ar2
      001010 C0 03            [24] 4062 	push	ar3
      001012 90r00r00         [24] 4063 	mov	dptr,#_rt
      001015 75 F0 00         [24] 4064 	mov	b,#0x00
      001018 12r00r00         [24] 4065 	lcall	_rtimer_set
      00101B E5 81            [12] 4066 	mov	a,sp
      00101D 24 F7            [12] 4067 	add	a,#0xf7
      00101F F5 81            [12] 4068 	mov	sp,a
                                   4069 ;	../../core/net/mac/xmac.c:1000: return 1;
      001021 90 00 01         [24] 4070 	mov	dptr,#0x0001
                                   4071 ;	../../core/net/mac/xmac.c:1001: }
      001024 22               [24] 4072 	ret
                                   4073 ;------------------------------------------------------------
                                   4074 ;Allocation info for local variables in function 'turn_off'
                                   4075 ;------------------------------------------------------------
                                   4076 ;keep_radio_on             Allocated to registers r6 r7 
                                   4077 ;------------------------------------------------------------
                                   4078 ;	../../core/net/mac/xmac.c:1004: turn_off(int keep_radio_on)
                                   4079 ;	-----------------------------------------
                                   4080 ;	 function turn_off
                                   4081 ;	-----------------------------------------
      001025                       4082 _turn_off:
      001025 AE 82            [24] 4083 	mov	r6,dpl
      001027 AF 83            [24] 4084 	mov	r7,dph
                                   4085 ;	../../core/net/mac/xmac.c:1006: xmac_is_on = 0;
      001029 90r00r08         [24] 4086 	mov	dptr,#_xmac_is_on
      00102C E4               [12] 4087 	clr	a
      00102D F0               [24] 4088 	movx	@dptr,a
                                   4089 ;	../../core/net/mac/xmac.c:1007: if(keep_radio_on) {
      00102E EE               [12] 4090 	mov	a,r6
      00102F 4F               [12] 4091 	orl	a,r7
      001030 60 11            [24] 4092 	jz	00102$
                                   4093 ;	../../core/net/mac/xmac.c:1008: return NETSTACK_RADIO.on();
      001032 90r00r10         [24] 4094 	mov	dptr,#(_cc2530_rf_driver + 0x0010)
      001035 E4               [12] 4095 	clr	a
      001036 93               [24] 4096 	movc	a,@a+dptr
      001037 FE               [12] 4097 	mov	r6,a
      001038 A3               [24] 4098 	inc	dptr
      001039 E4               [12] 4099 	clr	a
      00103A 93               [24] 4100 	movc	a,@a+dptr
      00103B FF               [12] 4101 	mov	r7,a
      00103C 8E 82            [24] 4102 	mov	dpl,r6
      00103E 8F 83            [24] 4103 	mov	dph,r7
      001040 02r00r00         [24] 4104 	ljmp	__sdcc_call_dptr
      001043                       4105 00102$:
                                   4106 ;	../../core/net/mac/xmac.c:1010: return NETSTACK_RADIO.off();
      001043 90r00r12         [24] 4107 	mov	dptr,#(_cc2530_rf_driver + 0x0012)
      001046 E4               [12] 4108 	clr	a
      001047 93               [24] 4109 	movc	a,@a+dptr
      001048 FE               [12] 4110 	mov	r6,a
      001049 A3               [24] 4111 	inc	dptr
      00104A E4               [12] 4112 	clr	a
      00104B 93               [24] 4113 	movc	a,@a+dptr
      00104C FF               [12] 4114 	mov	r7,a
      00104D 8E 82            [24] 4115 	mov	dpl,r6
      00104F 8F 83            [24] 4116 	mov	dph,r7
                                   4117 ;	../../core/net/mac/xmac.c:1012: }
      001051 02r00r00         [24] 4118 	ljmp	__sdcc_call_dptr
                                   4119 ;------------------------------------------------------------
                                   4120 ;Allocation info for local variables in function 'channel_check_interval'
                                   4121 ;------------------------------------------------------------
                                   4122 ;	../../core/net/mac/xmac.c:1015: channel_check_interval(void)
                                   4123 ;	-----------------------------------------
                                   4124 ;	 function channel_check_interval
                                   4125 ;	-----------------------------------------
      001054                       4126 _channel_check_interval:
                                   4127 ;	../../core/net/mac/xmac.c:1017: return (1ul * CLOCK_SECOND * DEFAULT_PERIOD) / RTIMER_ARCH_SECOND;
      001054 90 00 0F         [24] 4128 	mov	dptr,#0x000f
                                   4129 ;	../../core/net/mac/xmac.c:1018: }
      001057 22               [24] 4130 	ret
                                   4131 	.area CSEG    (CODE)
                                   4132 	.area CONST   (CODE)
      000000                       4133 _xmac_driver:
      000000r11s00 80              4134 	.byte __str_0, (__str_0 >> 8),#0x80
      000003r61s0F                 4135 	.byte _init, (_init >> 8)
      000005rE3s0B                 4136 	.byte _qsend_packet, (_qsend_packet >> 8)
      000007r64s0C                 4137 	.byte _qsend_list, (_qsend_list >> 8)
      000009rC9s0C                 4138 	.byte _input_packet, (_input_packet >> 8)
      00000BrD7s0F                 4139 	.byte _turn_on, (_turn_on >> 8)
      00000Dr25s10                 4140 	.byte _turn_off, (_turn_off >> 8)
      00000Fr54s10                 4141 	.byte _channel_check_interval, (_channel_check_interval >> 8)
                                   4142 	.area CONST   (CODE)
      000011                       4143 __str_0:
      000011 58 2D 4D 41 43        4144 	.ascii "X-MAC"
      000016 00                    4145 	.db 0x00
                                   4146 	.area CSEG    (CODE)
                                   4147 	.area XINIT   (CODE)
      000000                       4148 __xinit__xmac_config:
      000000 61 00                 4149 	.byte #0x61, #0x00	; 97
      000002 40 07                 4150 	.byte #0x40, #0x07	; 1856
      000004 C4 08                 4151 	.byte #0xc4, #0x08	; 2244
      000006 3C 00                 4152 	.byte #0x3c, #0x00	; 60
      000008                       4153 __xinit__xmac_is_on:
      000008 00                    4154 	.db #0x00	; 0
      000009                       4155 __xinit__waiting_for_packet:
      000009 00                    4156 	.db #0x00	; 0
      00000A                       4157 __xinit__someone_is_sending:
      00000A 00                    4158 	.db #0x00	; 0
      00000B                       4159 __xinit__we_are_sending:
      00000B 00                    4160 	.db #0x00	; 0
      00000C                       4161 __xinit__radio_is_on:
      00000C 00                    4162 	.db #0x00	; 0
      00000D                       4163 __xinit__encounter_list_list:
                                   4164 ; generic printIvalPtr
      00000D 00 00 00              4165 	.byte #0x00,#0x00,#0x00
      000010                       4166 __xinit__encounter_list:
      000010r0Ds00 00              4167 	.byte _encounter_list_list, (_encounter_list_list >> 8),#0x00
      000013                       4168 __xinit__encounter_memb:
      000013 07 00                 4169 	.byte #0x07, #0x00	; 7
      000015 04 00                 4170 	.byte #0x04, #0x00	; 4
      000017r0As00 00              4171 	.byte _encounter_memb_memb_count, (_encounter_memb_memb_count >> 8),#0x00
      00001Ar0Es00 00              4172 	.byte _encounter_memb_memb_mem, (_encounter_memb_memb_mem >> 8),#0x00
                                   4173 	.area CABS    (ABS,CODE)
