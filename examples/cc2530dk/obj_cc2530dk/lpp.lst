                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module lpp
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _lpp_driver
                                     12 	.globl _printf
                                     13 	.globl _compower_attrconv
                                     14 	.globl _compower_clear
                                     15 	.globl _compower_accumulate
                                     16 	.globl _queuebuf_addr
                                     17 	.globl _queuebuf_datalen
                                     18 	.globl _queuebuf_dataptr
                                     19 	.globl _queuebuf_free
                                     20 	.globl _queuebuf_to_packetbuf
                                     21 	.globl _queuebuf_new_from_packetbuf
                                     22 	.globl _packetbuf_addr
                                     23 	.globl _packetbuf_set_addr
                                     24 	.globl _packetbuf_attr
                                     25 	.globl _packetbuf_set_attr
                                     26 	.globl _packetbuf_hdrreduce
                                     27 	.globl _packetbuf_hdralloc
                                     28 	.globl _packetbuf_compact
                                     29 	.globl _packetbuf_set_datalen
                                     30 	.globl _packetbuf_totlen
                                     31 	.globl _packetbuf_datalen
                                     32 	.globl _packetbuf_hdrptr
                                     33 	.globl _packetbuf_dataptr
                                     34 	.globl _packetbuf_clear
                                     35 	.globl _ctimer_stop
                                     36 	.globl _ctimer_set
                                     37 	.globl _clock_time
                                     38 	.globl _announcement_register_listen_callback
                                     39 	.globl _announcement_list
                                     40 	.globl _rimeaddr_cmp
                                     41 	.globl _rimeaddr_copy
                                     42 	.globl _random_rand
                                     43 	.globl _memb_free
                                     44 	.globl _memb_alloc
                                     45 	.globl _memb_init
                                     46 	.globl ___memcpy
                                     47 	.globl _list_item_next
                                     48 	.globl _list_length
                                     49 	.globl _list_remove
                                     50 	.globl _list_add
                                     51 	.globl _list_head
                                     52 	.globl _list_init
                                     53 	.globl _leds_toggle
                                     54 	.globl _leds_off
                                     55 	.globl _leds_on
                                     56 	.globl _ACTIVE
                                     57 	.globl _TX_BYTE
                                     58 	.globl _RX_BYTE
                                     59 	.globl _ERR
                                     60 	.globl _FE
                                     61 	.globl _SLAVE
                                     62 	.globl _RE
                                     63 	.globl _MODE
                                     64 	.globl _T3OVFIF
                                     65 	.globl _T3CH0IF
                                     66 	.globl _T3CH1IF
                                     67 	.globl _T4OVFIF
                                     68 	.globl _T4CH0IF
                                     69 	.globl _T4CH1IF
                                     70 	.globl _OVFIM
                                     71 	.globl _B_0
                                     72 	.globl _B_1
                                     73 	.globl _B_2
                                     74 	.globl _B_3
                                     75 	.globl _B_4
                                     76 	.globl _B_5
                                     77 	.globl _B_6
                                     78 	.globl _B_7
                                     79 	.globl _P2IF
                                     80 	.globl _UTX0IF
                                     81 	.globl _UTX1IF
                                     82 	.globl _P1IF
                                     83 	.globl _WDTIF
                                     84 	.globl _ACC_0
                                     85 	.globl _ACC_1
                                     86 	.globl _ACC_2
                                     87 	.globl _ACC_3
                                     88 	.globl _ACC_4
                                     89 	.globl _ACC_5
                                     90 	.globl _ACC_6
                                     91 	.globl _ACC_7
                                     92 	.globl _P
                                     93 	.globl _F1
                                     94 	.globl _OV
                                     95 	.globl _RS0
                                     96 	.globl _RS1
                                     97 	.globl _F0
                                     98 	.globl _AC
                                     99 	.globl _CY
                                    100 	.globl _DMAIF
                                    101 	.globl _T1IF
                                    102 	.globl _T2IF
                                    103 	.globl _T3IF
                                    104 	.globl _T4IF
                                    105 	.globl _P0IF
                                    106 	.globl _STIF
                                    107 	.globl _DMAIE
                                    108 	.globl _T1IE
                                    109 	.globl _T2IE
                                    110 	.globl _T3IE
                                    111 	.globl _T4IE
                                    112 	.globl _P0IE
                                    113 	.globl _RFERRIE
                                    114 	.globl _ADCIE
                                    115 	.globl _URX0IE
                                    116 	.globl _URX1IE
                                    117 	.globl _ENCIE
                                    118 	.globl _STIE
                                    119 	.globl _EA
                                    120 	.globl _P2_0
                                    121 	.globl _P2_1
                                    122 	.globl _P2_2
                                    123 	.globl _P2_3
                                    124 	.globl _P2_4
                                    125 	.globl _P2_5
                                    126 	.globl _P2_6
                                    127 	.globl _P2_7
                                    128 	.globl _ENCIF_0
                                    129 	.globl _ENCIF_1
                                    130 	.globl _P1_0
                                    131 	.globl _P1_1
                                    132 	.globl _P1_2
                                    133 	.globl _P1_3
                                    134 	.globl _P1_4
                                    135 	.globl _P1_5
                                    136 	.globl _P1_6
                                    137 	.globl _P1_7
                                    138 	.globl _IT0
                                    139 	.globl _RFERRIF
                                    140 	.globl _IT1
                                    141 	.globl _URX0IF
                                    142 	.globl _ADCIF
                                    143 	.globl _URX1IF
                                    144 	.globl _P0_0
                                    145 	.globl _P0_1
                                    146 	.globl _P0_2
                                    147 	.globl _P0_3
                                    148 	.globl _P0_4
                                    149 	.globl _P0_5
                                    150 	.globl _P0_6
                                    151 	.globl _P0_7
                                    152 	.globl _WDCTL
                                    153 	.globl _U1GCR
                                    154 	.globl _U1UCR
                                    155 	.globl _U1BAUD
                                    156 	.globl _U1DBUF
                                    157 	.globl _U1CSR
                                    158 	.globl _U0GCR
                                    159 	.globl _U0UCR
                                    160 	.globl _U0BAUD
                                    161 	.globl _U0DBUF
                                    162 	.globl _U0CSR
                                    163 	.globl _TIMIF
                                    164 	.globl _T4CC1
                                    165 	.globl _T4CCTL1
                                    166 	.globl _T4CC0
                                    167 	.globl _T4CCTL0
                                    168 	.globl _T4CTL
                                    169 	.globl _T4CNT
                                    170 	.globl _T3CC1
                                    171 	.globl _T3CCTL1
                                    172 	.globl _T3CC0
                                    173 	.globl _T3CCTL0
                                    174 	.globl _T3CTL
                                    175 	.globl _T3CNT
                                    176 	.globl _T2MSEL
                                    177 	.globl _T2IRQM
                                    178 	.globl _T2MOVF2
                                    179 	.globl _T2MOVF1
                                    180 	.globl _T2MOVF0
                                    181 	.globl _T2M1
                                    182 	.globl _T2M0
                                    183 	.globl _T2IRQF
                                    184 	.globl _T2EVTCFG
                                    185 	.globl _T2CTRL
                                    186 	.globl _T1STAT
                                    187 	.globl _T1CCTL2
                                    188 	.globl _T1CCTL1
                                    189 	.globl _T1CCTL0
                                    190 	.globl _T1CTL
                                    191 	.globl _T1CNTH
                                    192 	.globl _T1CNTL
                                    193 	.globl _T1CC2H
                                    194 	.globl _T1CC2L
                                    195 	.globl _T1CC1H
                                    196 	.globl _T1CC1L
                                    197 	.globl _T1CC0H
                                    198 	.globl _T1CC0L
                                    199 	.globl _CLKCONSTA
                                    200 	.globl _CLKCONCMD
                                    201 	.globl _SLEEPSTA
                                    202 	.globl _SLEEPCMD
                                    203 	.globl _STLOAD
                                    204 	.globl _ST2
                                    205 	.globl _ST1
                                    206 	.globl _ST0
                                    207 	.globl _RFERRF
                                    208 	.globl _RFIRQF0
                                    209 	.globl _RFST
                                    210 	.globl _RFD
                                    211 	.globl _RFIRQF1
                                    212 	.globl _PSBANK
                                    213 	.globl _FMAP
                                    214 	.globl _MEMCTR
                                    215 	.globl __XPAGE
                                    216 	.globl _MPAGE
                                    217 	.globl _PMUX
                                    218 	.globl _P2DIR
                                    219 	.globl _P1DIR
                                    220 	.globl _P0DIR
                                    221 	.globl _P2INP
                                    222 	.globl _P1INP
                                    223 	.globl _P2SEL
                                    224 	.globl _P1SEL
                                    225 	.globl _P0SEL
                                    226 	.globl _APCFG
                                    227 	.globl _PERCFG
                                    228 	.globl _P0INP
                                    229 	.globl _P2IEN
                                    230 	.globl _P1IEN
                                    231 	.globl _P0IEN
                                    232 	.globl _PICTL
                                    233 	.globl _P2IFG
                                    234 	.globl _P1IFG
                                    235 	.globl _P0IFG
                                    236 	.globl _DMAREQ
                                    237 	.globl _DMAARM
                                    238 	.globl _DMA0CFGH
                                    239 	.globl _DMA0CFGL
                                    240 	.globl _DMA1CFGH
                                    241 	.globl _DMA1CFGL
                                    242 	.globl _DMAIRQ
                                    243 	.globl _ENCCS
                                    244 	.globl _ENCDO
                                    245 	.globl _ENCDI
                                    246 	.globl _RNDH
                                    247 	.globl _RNDL
                                    248 	.globl _ADCH
                                    249 	.globl _ADCL
                                    250 	.globl _ADCCON3
                                    251 	.globl _ADCCON2
                                    252 	.globl _ADCCON1
                                    253 	.globl _B
                                    254 	.globl _IRCON2
                                    255 	.globl _ACC
                                    256 	.globl _PSW
                                    257 	.globl _IRCON
                                    258 	.globl _IP1
                                    259 	.globl _IEN1
                                    260 	.globl _IP0
                                    261 	.globl _IEN0
                                    262 	.globl _P2
                                    263 	.globl _S1CON
                                    264 	.globl _IEN2
                                    265 	.globl _S0CON
                                    266 	.globl _DPS
                                    267 	.globl _P1
                                    268 	.globl _TCON
                                    269 	.globl _PCON
                                    270 	.globl _DPH1
                                    271 	.globl _DPL1
                                    272 	.globl _DPH0
                                    273 	.globl _DPL0
                                    274 	.globl _SP
                                    275 	.globl _P0
                                    276 	.globl _X_IEEE_ADDR
                                    277 	.globl _X_INFOPAGE
                                    278 	.globl _X_P2DIR
                                    279 	.globl _X_P1DIR
                                    280 	.globl _X_P0DIR
                                    281 	.globl _X_U1GCR
                                    282 	.globl _X_U1UCR
                                    283 	.globl _X_U1BAUD
                                    284 	.globl _X_U1DBUF
                                    285 	.globl _X_U1CSR
                                    286 	.globl _X_P2INP
                                    287 	.globl _X_P1INP
                                    288 	.globl _X_P2SEL
                                    289 	.globl _X_P1SEL
                                    290 	.globl _X_P0SEL
                                    291 	.globl _X_APCFG
                                    292 	.globl _X_PERCFG
                                    293 	.globl _X_T4CC1
                                    294 	.globl _X_T4CCTL1
                                    295 	.globl _X_T4CC0
                                    296 	.globl _X_T4CCTL0
                                    297 	.globl _X_T4CTL
                                    298 	.globl _X_T4CNT
                                    299 	.globl _X_RFIRQF0
                                    300 	.globl _X_T1CCTL2
                                    301 	.globl _X_T1CCTL1
                                    302 	.globl _X_T1CCTL0
                                    303 	.globl _X_T1CTL
                                    304 	.globl _X_T1CNTH
                                    305 	.globl _X_T1CNTL
                                    306 	.globl _X_RFST
                                    307 	.globl _X_T1CC2H
                                    308 	.globl _X_T1CC2L
                                    309 	.globl _X_T1CC1H
                                    310 	.globl _X_T1CC1L
                                    311 	.globl _X_T1CC0H
                                    312 	.globl _X_T1CC0L
                                    313 	.globl _X_RFD
                                    314 	.globl _X_TIMIF
                                    315 	.globl _X_DMAREQ
                                    316 	.globl _X_DMAARM
                                    317 	.globl _X_DMA0CFGH
                                    318 	.globl _X_DMA0CFGL
                                    319 	.globl _X_DMA1CFGH
                                    320 	.globl _X_DMA1CFGL
                                    321 	.globl _X_DMAIRQ
                                    322 	.globl _X_T3CC1
                                    323 	.globl _X_T3CCTL1
                                    324 	.globl _X_T3CC0
                                    325 	.globl _X_T3CCTL0
                                    326 	.globl _X_T3CTL
                                    327 	.globl _X_T3CNT
                                    328 	.globl _X_WDCTL
                                    329 	.globl _X_MEMCTR
                                    330 	.globl _X_CLKCONCMD
                                    331 	.globl _X_U0GCR
                                    332 	.globl _X_U0UCR
                                    333 	.globl _X_T2MSEL
                                    334 	.globl _X_U0BAUD
                                    335 	.globl _X_U0DBUF
                                    336 	.globl _X_RFERRF
                                    337 	.globl _X_SLEEPCMD
                                    338 	.globl _X_RNDH
                                    339 	.globl _X_RNDL
                                    340 	.globl _X_ADCH
                                    341 	.globl _X_ADCL
                                    342 	.globl _X_ADCCON3
                                    343 	.globl _X_ADCCON2
                                    344 	.globl _X_ADCCON1
                                    345 	.globl _X_ENCCS
                                    346 	.globl _X_ENCDO
                                    347 	.globl _X_ENCDI
                                    348 	.globl _X_T1STAT
                                    349 	.globl _X_PMUX
                                    350 	.globl _X_STLOAD
                                    351 	.globl _X_P2IEN
                                    352 	.globl _X_P0IEN
                                    353 	.globl _X_T2IRQM
                                    354 	.globl _X_T2MOVF2
                                    355 	.globl _X_T2MOVF1
                                    356 	.globl _X_T2MOVF0
                                    357 	.globl _X_T2M1
                                    358 	.globl _X_T2M0
                                    359 	.globl _X_T2IRQF
                                    360 	.globl _X_P2
                                    361 	.globl _X_PSBANK
                                    362 	.globl _X_FMAP
                                    363 	.globl _X_CLKCONSTA
                                    364 	.globl _X_SLEEPSTA
                                    365 	.globl _X_T2EVTCFG
                                    366 	.globl _X_ST2
                                    367 	.globl _X_ST1
                                    368 	.globl _X_ST0
                                    369 	.globl _X_T2CTRL
                                    370 	.globl _X__XPAGE
                                    371 	.globl _X_MPAGE
                                    372 	.globl _X_RFIRQF1
                                    373 	.globl _X_P1
                                    374 	.globl _X_P0INP
                                    375 	.globl _X_P1IEN
                                    376 	.globl _X_PICTL
                                    377 	.globl _X_P2IFG
                                    378 	.globl _X_P1IFG
                                    379 	.globl _X_P0IFG
                                    380 	.globl _X_U0CSR
                                    381 	.globl _X_P0
                                    382 	.globl _USBF5
                                    383 	.globl _USBF4
                                    384 	.globl _USBF3
                                    385 	.globl _USBF2
                                    386 	.globl _USBF1
                                    387 	.globl _USBF0
                                    388 	.globl _USBCNTH
                                    389 	.globl _USBCNTL
                                    390 	.globl _USBCNT0
                                    391 	.globl _USBCSOH
                                    392 	.globl _USBCSOL
                                    393 	.globl _USBMAXO
                                    394 	.globl _USBCSIH
                                    395 	.globl _USBCSIL
                                    396 	.globl _USBCS0
                                    397 	.globl _USBMAXI
                                    398 	.globl _USBCTRL
                                    399 	.globl _USBINDEX
                                    400 	.globl _USBFRMH
                                    401 	.globl _USBFRML
                                    402 	.globl _USBCIE
                                    403 	.globl _USBOIE
                                    404 	.globl _USBIIE
                                    405 	.globl _USBCIF
                                    406 	.globl _USBOIF
                                    407 	.globl _USBIIF
                                    408 	.globl _USBPOW
                                    409 	.globl _USBADDR
                                    410 	.globl _CSPT
                                    411 	.globl _CSPZ
                                    412 	.globl _CSPY
                                    413 	.globl _CSPX
                                    414 	.globl _CSPSTAT
                                    415 	.globl _CSPCTRL
                                    416 	.globl _CSPPROG23
                                    417 	.globl _CSPPROG22
                                    418 	.globl _CSPPROG21
                                    419 	.globl _CSPPROG20
                                    420 	.globl _CSPPROG19
                                    421 	.globl _CSPPROG18
                                    422 	.globl _CSPPROG17
                                    423 	.globl _CSPPROG16
                                    424 	.globl _CSPPROG15
                                    425 	.globl _CSPPROG14
                                    426 	.globl _CSPPROG13
                                    427 	.globl _CSPPROG12
                                    428 	.globl _CSPPROG11
                                    429 	.globl _CSPPROG10
                                    430 	.globl _CSPPROG9
                                    431 	.globl _CSPPROG8
                                    432 	.globl _CSPPROG7
                                    433 	.globl _CSPPROG6
                                    434 	.globl _CSPPROG5
                                    435 	.globl _CSPPROG4
                                    436 	.globl _CSPPROG3
                                    437 	.globl _CSPPROG2
                                    438 	.globl _CSPPROG1
                                    439 	.globl _CSPPROG0
                                    440 	.globl _RFC_OBS_CTRL2
                                    441 	.globl _RFC_OBS_CTRL1
                                    442 	.globl _RFC_OBS_CTRL0
                                    443 	.globl _TXFILTCFG
                                    444 	.globl _PTEST1
                                    445 	.globl _PTEST0
                                    446 	.globl _ATEST
                                    447 	.globl _DACTEST2
                                    448 	.globl _DACTEST1
                                    449 	.globl _DACTEST0
                                    450 	.globl _MDMTEST1
                                    451 	.globl _MDMTEST0
                                    452 	.globl _ADCTEST2
                                    453 	.globl _ADCTEST1
                                    454 	.globl _ADCTEST0
                                    455 	.globl _AGCCTRL3
                                    456 	.globl _AGCCTRL2
                                    457 	.globl _AGCCTRL1
                                    458 	.globl _AGCCTRL0
                                    459 	.globl _FSCAL3
                                    460 	.globl _FSCAL2
                                    461 	.globl _FSCAL1
                                    462 	.globl _FSCAL0
                                    463 	.globl _FSCTRL
                                    464 	.globl _RXCTRL
                                    465 	.globl _FREQEST
                                    466 	.globl _MDMCTRL1
                                    467 	.globl _MDMCTRL0
                                    468 	.globl _RFRND
                                    469 	.globl _RFERRM
                                    470 	.globl _RFIRQM1
                                    471 	.globl _RFIRQM0
                                    472 	.globl _TXLAST_PTR
                                    473 	.globl _TXFIRST_PTR
                                    474 	.globl _RXP1_PTR
                                    475 	.globl _RXLAST_PTR
                                    476 	.globl _RXFIRST_PTR
                                    477 	.globl _TXFIFOCNT
                                    478 	.globl _RXFIFOCNT
                                    479 	.globl _RXFIRST
                                    480 	.globl _RSSISTAT
                                    481 	.globl _RSSI
                                    482 	.globl _CCACTRL1
                                    483 	.globl _CCACTRL0
                                    484 	.globl _FSMCTRL
                                    485 	.globl _FIFOPCTRL
                                    486 	.globl _FSMSTAT1
                                    487 	.globl _FSMSTAT0
                                    488 	.globl _TXCTRL
                                    489 	.globl _TXPOWER
                                    490 	.globl _FREQCTRL
                                    491 	.globl _FREQTUNE
                                    492 	.globl _RXMASKCLR
                                    493 	.globl _RXMASKSET
                                    494 	.globl _RXENABLE
                                    495 	.globl _FRMCTRL1
                                    496 	.globl _FRMCTRL0
                                    497 	.globl _SRCEXTEN2
                                    498 	.globl _SRCEXTEN1
                                    499 	.globl _SRCEXTEN0
                                    500 	.globl _SRCSHORTEN2
                                    501 	.globl _SRCSHORTEN1
                                    502 	.globl _SRCSHORTEN0
                                    503 	.globl _SRCMATCH
                                    504 	.globl _FRMFILT1
                                    505 	.globl _FRMFILT0
                                    506 	.globl _SHORT_ADDR1
                                    507 	.globl _SHORT_ADDR0
                                    508 	.globl _PAN_ID1
                                    509 	.globl _PAN_ID0
                                    510 	.globl _EXT_ADDR7
                                    511 	.globl _EXT_ADDR6
                                    512 	.globl _EXT_ADDR5
                                    513 	.globl _EXT_ADDR4
                                    514 	.globl _EXT_ADDR3
                                    515 	.globl _EXT_ADDR2
                                    516 	.globl _EXT_ADDR1
                                    517 	.globl _EXT_ADDR0
                                    518 	.globl _SRCSHORTPENDEN2
                                    519 	.globl _SRCSHORTPENDEN1
                                    520 	.globl _SRCSHORTPENDEN0
                                    521 	.globl _SRCEXTPENDEN2
                                    522 	.globl _SRCEXTPENDEN1
                                    523 	.globl _SRCEXTPENDEN0
                                    524 	.globl _SRCRESINDEX
                                    525 	.globl _SRCRESMASK2
                                    526 	.globl _SRCRESMASK1
                                    527 	.globl _SRCRESMASK0
                                    528 	.globl _SRC_ADDR_TABLE
                                    529 	.globl _TXFIFO
                                    530 	.globl _RXFIFO
                                    531 	.globl _RFCORE_RAM
                                    532 	.globl _CMPCTL
                                    533 	.globl _OPAMPS
                                    534 	.globl _OPAMPC
                                    535 	.globl _STCV2
                                    536 	.globl _STCV1
                                    537 	.globl _STCV0
                                    538 	.globl _STCS
                                    539 	.globl _STCC
                                    540 	.globl _T1CC4H
                                    541 	.globl _T1CC4L
                                    542 	.globl _T1CC3H
                                    543 	.globl _T1CC3L
                                    544 	.globl _XX_T1CC2H
                                    545 	.globl _XX_T1CC2L
                                    546 	.globl _XX_T1CC1H
                                    547 	.globl _XX_T1CC1L
                                    548 	.globl _XX_T1CC0H
                                    549 	.globl _XX_T1CC0L
                                    550 	.globl _T1CCTL4
                                    551 	.globl _T1CCTL3
                                    552 	.globl _XX_T1CCTL2
                                    553 	.globl _XX_T1CCTL1
                                    554 	.globl _XX_T1CCTL0
                                    555 	.globl _CLD
                                    556 	.globl _IRCTL
                                    557 	.globl _CHIPINFO1
                                    558 	.globl _CHIPINFO0
                                    559 	.globl _FWDATA
                                    560 	.globl _FADDRH
                                    561 	.globl _FADDRL
                                    562 	.globl _FCTL
                                    563 	.globl _IVCTRL
                                    564 	.globl _BATTMON
                                    565 	.globl _SRCRC
                                    566 	.globl _DBGDATA
                                    567 	.globl _TESTREG0
                                    568 	.globl _CHIPID
                                    569 	.globl _CHVER
                                    570 	.globl _OBSSEL5
                                    571 	.globl _OBSSEL4
                                    572 	.globl _OBSSEL3
                                    573 	.globl _OBSSEL2
                                    574 	.globl _OBSSEL1
                                    575 	.globl _OBSSEL0
                                    576 	.globl _I2CIO
                                    577 	.globl _I2CWC
                                    578 	.globl _I2CADDR
                                    579 	.globl _I2CDATA
                                    580 	.globl _I2CSTAT
                                    581 	.globl _I2CCFG
                                    582 	.globl _OPAMPMC
                                    583 	.globl _MONMUX
                                    584 ;--------------------------------------------------------
                                    585 ; special function registers
                                    586 ;--------------------------------------------------------
                                    587 	.area RSEG    (ABS,DATA)
      000000                        588 	.org 0x0000
                           000080   589 _P0	=	0x0080
                           000081   590 _SP	=	0x0081
                           000082   591 _DPL0	=	0x0082
                           000083   592 _DPH0	=	0x0083
                           000084   593 _DPL1	=	0x0084
                           000085   594 _DPH1	=	0x0085
                           000087   595 _PCON	=	0x0087
                           000088   596 _TCON	=	0x0088
                           000090   597 _P1	=	0x0090
                           000092   598 _DPS	=	0x0092
                           000098   599 _S0CON	=	0x0098
                           00009A   600 _IEN2	=	0x009a
                           00009B   601 _S1CON	=	0x009b
                           0000A0   602 _P2	=	0x00a0
                           0000A8   603 _IEN0	=	0x00a8
                           0000A9   604 _IP0	=	0x00a9
                           0000B8   605 _IEN1	=	0x00b8
                           0000B9   606 _IP1	=	0x00b9
                           0000C0   607 _IRCON	=	0x00c0
                           0000D0   608 _PSW	=	0x00d0
                           0000E0   609 _ACC	=	0x00e0
                           0000E8   610 _IRCON2	=	0x00e8
                           0000F0   611 _B	=	0x00f0
                           0000B4   612 _ADCCON1	=	0x00b4
                           0000B5   613 _ADCCON2	=	0x00b5
                           0000B6   614 _ADCCON3	=	0x00b6
                           0000BA   615 _ADCL	=	0x00ba
                           0000BB   616 _ADCH	=	0x00bb
                           0000BC   617 _RNDL	=	0x00bc
                           0000BD   618 _RNDH	=	0x00bd
                           0000B1   619 _ENCDI	=	0x00b1
                           0000B2   620 _ENCDO	=	0x00b2
                           0000B3   621 _ENCCS	=	0x00b3
                           0000D1   622 _DMAIRQ	=	0x00d1
                           0000D2   623 _DMA1CFGL	=	0x00d2
                           0000D3   624 _DMA1CFGH	=	0x00d3
                           0000D4   625 _DMA0CFGL	=	0x00d4
                           0000D5   626 _DMA0CFGH	=	0x00d5
                           0000D6   627 _DMAARM	=	0x00d6
                           0000D7   628 _DMAREQ	=	0x00d7
                           000089   629 _P0IFG	=	0x0089
                           00008A   630 _P1IFG	=	0x008a
                           00008B   631 _P2IFG	=	0x008b
                           00008C   632 _PICTL	=	0x008c
                           0000AB   633 _P0IEN	=	0x00ab
                           00008D   634 _P1IEN	=	0x008d
                           0000AC   635 _P2IEN	=	0x00ac
                           00008F   636 _P0INP	=	0x008f
                           0000F1   637 _PERCFG	=	0x00f1
                           0000F2   638 _APCFG	=	0x00f2
                           0000F3   639 _P0SEL	=	0x00f3
                           0000F4   640 _P1SEL	=	0x00f4
                           0000F5   641 _P2SEL	=	0x00f5
                           0000F6   642 _P1INP	=	0x00f6
                           0000F7   643 _P2INP	=	0x00f7
                           0000FD   644 _P0DIR	=	0x00fd
                           0000FE   645 _P1DIR	=	0x00fe
                           0000FF   646 _P2DIR	=	0x00ff
                           0000AE   647 _PMUX	=	0x00ae
                           000093   648 _MPAGE	=	0x0093
                           000093   649 __XPAGE	=	0x0093
                           0000C7   650 _MEMCTR	=	0x00c7
                           00009F   651 _FMAP	=	0x009f
                           00009F   652 _PSBANK	=	0x009f
                           000091   653 _RFIRQF1	=	0x0091
                           0000D9   654 _RFD	=	0x00d9
                           0000E1   655 _RFST	=	0x00e1
                           0000E9   656 _RFIRQF0	=	0x00e9
                           0000BF   657 _RFERRF	=	0x00bf
                           000095   658 _ST0	=	0x0095
                           000096   659 _ST1	=	0x0096
                           000097   660 _ST2	=	0x0097
                           0000AD   661 _STLOAD	=	0x00ad
                           0000BE   662 _SLEEPCMD	=	0x00be
                           00009D   663 _SLEEPSTA	=	0x009d
                           0000C6   664 _CLKCONCMD	=	0x00c6
                           00009E   665 _CLKCONSTA	=	0x009e
                           0000DA   666 _T1CC0L	=	0x00da
                           0000DB   667 _T1CC0H	=	0x00db
                           0000DC   668 _T1CC1L	=	0x00dc
                           0000DD   669 _T1CC1H	=	0x00dd
                           0000DE   670 _T1CC2L	=	0x00de
                           0000DF   671 _T1CC2H	=	0x00df
                           0000E2   672 _T1CNTL	=	0x00e2
                           0000E3   673 _T1CNTH	=	0x00e3
                           0000E4   674 _T1CTL	=	0x00e4
                           0000E5   675 _T1CCTL0	=	0x00e5
                           0000E6   676 _T1CCTL1	=	0x00e6
                           0000E7   677 _T1CCTL2	=	0x00e7
                           0000AF   678 _T1STAT	=	0x00af
                           000094   679 _T2CTRL	=	0x0094
                           00009C   680 _T2EVTCFG	=	0x009c
                           0000A1   681 _T2IRQF	=	0x00a1
                           0000A2   682 _T2M0	=	0x00a2
                           0000A3   683 _T2M1	=	0x00a3
                           0000A4   684 _T2MOVF0	=	0x00a4
                           0000A5   685 _T2MOVF1	=	0x00a5
                           0000A6   686 _T2MOVF2	=	0x00a6
                           0000A7   687 _T2IRQM	=	0x00a7
                           0000C3   688 _T2MSEL	=	0x00c3
                           0000CA   689 _T3CNT	=	0x00ca
                           0000CB   690 _T3CTL	=	0x00cb
                           0000CC   691 _T3CCTL0	=	0x00cc
                           0000CD   692 _T3CC0	=	0x00cd
                           0000CE   693 _T3CCTL1	=	0x00ce
                           0000CF   694 _T3CC1	=	0x00cf
                           0000EA   695 _T4CNT	=	0x00ea
                           0000EB   696 _T4CTL	=	0x00eb
                           0000EC   697 _T4CCTL0	=	0x00ec
                           0000ED   698 _T4CC0	=	0x00ed
                           0000EE   699 _T4CCTL1	=	0x00ee
                           0000EF   700 _T4CC1	=	0x00ef
                           0000D8   701 _TIMIF	=	0x00d8
                           000086   702 _U0CSR	=	0x0086
                           0000C1   703 _U0DBUF	=	0x00c1
                           0000C2   704 _U0BAUD	=	0x00c2
                           0000C4   705 _U0UCR	=	0x00c4
                           0000C5   706 _U0GCR	=	0x00c5
                           0000F8   707 _U1CSR	=	0x00f8
                           0000F9   708 _U1DBUF	=	0x00f9
                           0000FA   709 _U1BAUD	=	0x00fa
                           0000FB   710 _U1UCR	=	0x00fb
                           0000FC   711 _U1GCR	=	0x00fc
                           0000C9   712 _WDCTL	=	0x00c9
                                    713 ;--------------------------------------------------------
                                    714 ; special function bits
                                    715 ;--------------------------------------------------------
                                    716 	.area RSEG    (ABS,DATA)
      000000                        717 	.org 0x0000
                           000087   718 _P0_7	=	0x0087
                           000086   719 _P0_6	=	0x0086
                           000085   720 _P0_5	=	0x0085
                           000084   721 _P0_4	=	0x0084
                           000083   722 _P0_3	=	0x0083
                           000082   723 _P0_2	=	0x0082
                           000081   724 _P0_1	=	0x0081
                           000080   725 _P0_0	=	0x0080
                           00008F   726 _URX1IF	=	0x008f
                           00008D   727 _ADCIF	=	0x008d
                           00008B   728 _URX0IF	=	0x008b
                           00008A   729 _IT1	=	0x008a
                           000089   730 _RFERRIF	=	0x0089
                           000088   731 _IT0	=	0x0088
                           000097   732 _P1_7	=	0x0097
                           000096   733 _P1_6	=	0x0096
                           000095   734 _P1_5	=	0x0095
                           000094   735 _P1_4	=	0x0094
                           000093   736 _P1_3	=	0x0093
                           000092   737 _P1_2	=	0x0092
                           000091   738 _P1_1	=	0x0091
                           000090   739 _P1_0	=	0x0090
                           000099   740 _ENCIF_1	=	0x0099
                           000098   741 _ENCIF_0	=	0x0098
                           0000A7   742 _P2_7	=	0x00a7
                           0000A6   743 _P2_6	=	0x00a6
                           0000A5   744 _P2_5	=	0x00a5
                           0000A4   745 _P2_4	=	0x00a4
                           0000A3   746 _P2_3	=	0x00a3
                           0000A2   747 _P2_2	=	0x00a2
                           0000A1   748 _P2_1	=	0x00a1
                           0000A0   749 _P2_0	=	0x00a0
                           0000AF   750 _EA	=	0x00af
                           0000AD   751 _STIE	=	0x00ad
                           0000AC   752 _ENCIE	=	0x00ac
                           0000AB   753 _URX1IE	=	0x00ab
                           0000AA   754 _URX0IE	=	0x00aa
                           0000A9   755 _ADCIE	=	0x00a9
                           0000A8   756 _RFERRIE	=	0x00a8
                           0000BD   757 _P0IE	=	0x00bd
                           0000BC   758 _T4IE	=	0x00bc
                           0000BB   759 _T3IE	=	0x00bb
                           0000BA   760 _T2IE	=	0x00ba
                           0000B9   761 _T1IE	=	0x00b9
                           0000B8   762 _DMAIE	=	0x00b8
                           0000C7   763 _STIF	=	0x00c7
                           0000C5   764 _P0IF	=	0x00c5
                           0000C4   765 _T4IF	=	0x00c4
                           0000C3   766 _T3IF	=	0x00c3
                           0000C2   767 _T2IF	=	0x00c2
                           0000C1   768 _T1IF	=	0x00c1
                           0000C0   769 _DMAIF	=	0x00c0
                           0000D7   770 _CY	=	0x00d7
                           0000D6   771 _AC	=	0x00d6
                           0000D5   772 _F0	=	0x00d5
                           0000D4   773 _RS1	=	0x00d4
                           0000D3   774 _RS0	=	0x00d3
                           0000D2   775 _OV	=	0x00d2
                           0000D1   776 _F1	=	0x00d1
                           0000D0   777 _P	=	0x00d0
                           0000E7   778 _ACC_7	=	0x00e7
                           0000E6   779 _ACC_6	=	0x00e6
                           0000E5   780 _ACC_5	=	0x00e5
                           0000E4   781 _ACC_4	=	0x00e4
                           0000E3   782 _ACC_3	=	0x00e3
                           0000E2   783 _ACC_2	=	0x00e2
                           0000E1   784 _ACC_1	=	0x00e1
                           0000E0   785 _ACC_0	=	0x00e0
                           0000EC   786 _WDTIF	=	0x00ec
                           0000EB   787 _P1IF	=	0x00eb
                           0000EA   788 _UTX1IF	=	0x00ea
                           0000E9   789 _UTX0IF	=	0x00e9
                           0000E8   790 _P2IF	=	0x00e8
                           0000F7   791 _B_7	=	0x00f7
                           0000F6   792 _B_6	=	0x00f6
                           0000F5   793 _B_5	=	0x00f5
                           0000F4   794 _B_4	=	0x00f4
                           0000F3   795 _B_3	=	0x00f3
                           0000F2   796 _B_2	=	0x00f2
                           0000F1   797 _B_1	=	0x00f1
                           0000F0   798 _B_0	=	0x00f0
                           0000DE   799 _OVFIM	=	0x00de
                           0000DD   800 _T4CH1IF	=	0x00dd
                           0000DC   801 _T4CH0IF	=	0x00dc
                           0000DB   802 _T4OVFIF	=	0x00db
                           0000DA   803 _T3CH1IF	=	0x00da
                           0000D9   804 _T3CH0IF	=	0x00d9
                           0000D8   805 _T3OVFIF	=	0x00d8
                           0000FF   806 _MODE	=	0x00ff
                           0000FE   807 _RE	=	0x00fe
                           0000FD   808 _SLAVE	=	0x00fd
                           0000FC   809 _FE	=	0x00fc
                           0000FB   810 _ERR	=	0x00fb
                           0000FA   811 _RX_BYTE	=	0x00fa
                           0000F9   812 _TX_BYTE	=	0x00f9
                           0000F8   813 _ACTIVE	=	0x00f8
                                    814 ;--------------------------------------------------------
                                    815 ; overlayable register banks
                                    816 ;--------------------------------------------------------
                                    817 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        818 	.ds 8
                                    819 ;--------------------------------------------------------
                                    820 ; internal ram data
                                    821 ;--------------------------------------------------------
                                    822 	.area DSEG    (DATA)
                                    823 ;--------------------------------------------------------
                                    824 ; overlayable items in internal ram 
                                    825 ;--------------------------------------------------------
                                    826 ;--------------------------------------------------------
                                    827 ; indirectly addressable internal ram data
                                    828 ;--------------------------------------------------------
                                    829 	.area ISEG    (DATA)
                                    830 ;--------------------------------------------------------
                                    831 ; absolute internal ram data
                                    832 ;--------------------------------------------------------
                                    833 	.area IABS    (ABS,DATA)
                                    834 	.area IABS    (ABS,DATA)
                                    835 ;--------------------------------------------------------
                                    836 ; bit data
                                    837 ;--------------------------------------------------------
                                    838 	.area BSEG    (BIT)
                                    839 ;--------------------------------------------------------
                                    840 ; paged external ram data
                                    841 ;--------------------------------------------------------
                                    842 	.area PSEG    (PAG,XDATA)
                                    843 ;--------------------------------------------------------
                                    844 ; external ram data
                                    845 ;--------------------------------------------------------
                                    846 	.area XSEG    (XDATA)
                           0061A6   847 _MONMUX	=	0x61a6
                           0061A6   848 _OPAMPMC	=	0x61a6
                           006230   849 _I2CCFG	=	0x6230
                           006231   850 _I2CSTAT	=	0x6231
                           006232   851 _I2CDATA	=	0x6232
                           006233   852 _I2CADDR	=	0x6233
                           006234   853 _I2CWC	=	0x6234
                           006235   854 _I2CIO	=	0x6235
                           006243   855 _OBSSEL0	=	0x6243
                           006244   856 _OBSSEL1	=	0x6244
                           006245   857 _OBSSEL2	=	0x6245
                           006246   858 _OBSSEL3	=	0x6246
                           006247   859 _OBSSEL4	=	0x6247
                           006248   860 _OBSSEL5	=	0x6248
                           006249   861 _CHVER	=	0x6249
                           00624A   862 _CHIPID	=	0x624a
                           00624B   863 _TESTREG0	=	0x624b
                           006260   864 _DBGDATA	=	0x6260
                           006262   865 _SRCRC	=	0x6262
                           006264   866 _BATTMON	=	0x6264
                           006265   867 _IVCTRL	=	0x6265
                           006270   868 _FCTL	=	0x6270
                           006271   869 _FADDRL	=	0x6271
                           006272   870 _FADDRH	=	0x6272
                           006273   871 _FWDATA	=	0x6273
                           006276   872 _CHIPINFO0	=	0x6276
                           006277   873 _CHIPINFO1	=	0x6277
                           006281   874 _IRCTL	=	0x6281
                           006290   875 _CLD	=	0x6290
                           0062A0   876 _XX_T1CCTL0	=	0x62a0
                           0062A1   877 _XX_T1CCTL1	=	0x62a1
                           0062A2   878 _XX_T1CCTL2	=	0x62a2
                           0062A3   879 _T1CCTL3	=	0x62a3
                           0062A4   880 _T1CCTL4	=	0x62a4
                           0062A6   881 _XX_T1CC0L	=	0x62a6
                           0062A7   882 _XX_T1CC0H	=	0x62a7
                           0062A8   883 _XX_T1CC1L	=	0x62a8
                           0062A9   884 _XX_T1CC1H	=	0x62a9
                           0062AA   885 _XX_T1CC2L	=	0x62aa
                           0062AB   886 _XX_T1CC2H	=	0x62ab
                           0062AC   887 _T1CC3L	=	0x62ac
                           0062AD   888 _T1CC3H	=	0x62ad
                           0062AE   889 _T1CC4L	=	0x62ae
                           0062AF   890 _T1CC4H	=	0x62af
                           0062B0   891 _STCC	=	0x62b0
                           0062B1   892 _STCS	=	0x62b1
                           0062B2   893 _STCV0	=	0x62b2
                           0062B3   894 _STCV1	=	0x62b3
                           0062B4   895 _STCV2	=	0x62b4
                           0062C0   896 _OPAMPC	=	0x62c0
                           0062C1   897 _OPAMPS	=	0x62c1
                           0062D0   898 _CMPCTL	=	0x62d0
                           006000   899 _RFCORE_RAM	=	0x6000
                           006000   900 _RXFIFO	=	0x6000
                           006080   901 _TXFIFO	=	0x6080
                           006100   902 _SRC_ADDR_TABLE	=	0x6100
                           006160   903 _SRCRESMASK0	=	0x6160
                           006161   904 _SRCRESMASK1	=	0x6161
                           006162   905 _SRCRESMASK2	=	0x6162
                           006163   906 _SRCRESINDEX	=	0x6163
                           006164   907 _SRCEXTPENDEN0	=	0x6164
                           006165   908 _SRCEXTPENDEN1	=	0x6165
                           006166   909 _SRCEXTPENDEN2	=	0x6166
                           006167   910 _SRCSHORTPENDEN0	=	0x6167
                           006168   911 _SRCSHORTPENDEN1	=	0x6168
                           006169   912 _SRCSHORTPENDEN2	=	0x6169
                           00616A   913 _EXT_ADDR0	=	0x616a
                           00616B   914 _EXT_ADDR1	=	0x616b
                           00616C   915 _EXT_ADDR2	=	0x616c
                           00616D   916 _EXT_ADDR3	=	0x616d
                           00616E   917 _EXT_ADDR4	=	0x616e
                           00616F   918 _EXT_ADDR5	=	0x616f
                           006170   919 _EXT_ADDR6	=	0x6170
                           006171   920 _EXT_ADDR7	=	0x6171
                           006172   921 _PAN_ID0	=	0x6172
                           006173   922 _PAN_ID1	=	0x6173
                           006174   923 _SHORT_ADDR0	=	0x6174
                           006175   924 _SHORT_ADDR1	=	0x6175
                           006180   925 _FRMFILT0	=	0x6180
                           006181   926 _FRMFILT1	=	0x6181
                           006182   927 _SRCMATCH	=	0x6182
                           006183   928 _SRCSHORTEN0	=	0x6183
                           006184   929 _SRCSHORTEN1	=	0x6184
                           006185   930 _SRCSHORTEN2	=	0x6185
                           006186   931 _SRCEXTEN0	=	0x6186
                           006187   932 _SRCEXTEN1	=	0x6187
                           006188   933 _SRCEXTEN2	=	0x6188
                           006189   934 _FRMCTRL0	=	0x6189
                           00618A   935 _FRMCTRL1	=	0x618a
                           00618B   936 _RXENABLE	=	0x618b
                           00618C   937 _RXMASKSET	=	0x618c
                           00618D   938 _RXMASKCLR	=	0x618d
                           00618E   939 _FREQTUNE	=	0x618e
                           00618F   940 _FREQCTRL	=	0x618f
                           006190   941 _TXPOWER	=	0x6190
                           006191   942 _TXCTRL	=	0x6191
                           006192   943 _FSMSTAT0	=	0x6192
                           006193   944 _FSMSTAT1	=	0x6193
                           006194   945 _FIFOPCTRL	=	0x6194
                           006195   946 _FSMCTRL	=	0x6195
                           006196   947 _CCACTRL0	=	0x6196
                           006197   948 _CCACTRL1	=	0x6197
                           006198   949 _RSSI	=	0x6198
                           006199   950 _RSSISTAT	=	0x6199
                           00619A   951 _RXFIRST	=	0x619a
                           00619B   952 _RXFIFOCNT	=	0x619b
                           00619C   953 _TXFIFOCNT	=	0x619c
                           00619D   954 _RXFIRST_PTR	=	0x619d
                           00619E   955 _RXLAST_PTR	=	0x619e
                           00619F   956 _RXP1_PTR	=	0x619f
                           0061A1   957 _TXFIRST_PTR	=	0x61a1
                           0061A2   958 _TXLAST_PTR	=	0x61a2
                           0061A3   959 _RFIRQM0	=	0x61a3
                           0061A4   960 _RFIRQM1	=	0x61a4
                           0061A5   961 _RFERRM	=	0x61a5
                           0061A7   962 _RFRND	=	0x61a7
                           0061A8   963 _MDMCTRL0	=	0x61a8
                           0061A9   964 _MDMCTRL1	=	0x61a9
                           0061AA   965 _FREQEST	=	0x61aa
                           0061AB   966 _RXCTRL	=	0x61ab
                           0061AC   967 _FSCTRL	=	0x61ac
                           0061AD   968 _FSCAL0	=	0x61ad
                           0061AE   969 _FSCAL1	=	0x61ae
                           0061AF   970 _FSCAL2	=	0x61af
                           0061B0   971 _FSCAL3	=	0x61b0
                           0061B1   972 _AGCCTRL0	=	0x61b1
                           0061B2   973 _AGCCTRL1	=	0x61b2
                           0061B3   974 _AGCCTRL2	=	0x61b3
                           0061B4   975 _AGCCTRL3	=	0x61b4
                           0061B5   976 _ADCTEST0	=	0x61b5
                           0061B6   977 _ADCTEST1	=	0x61b6
                           0061B7   978 _ADCTEST2	=	0x61b7
                           0061B8   979 _MDMTEST0	=	0x61b8
                           0061B9   980 _MDMTEST1	=	0x61b9
                           0061BA   981 _DACTEST0	=	0x61ba
                           0061BB   982 _DACTEST1	=	0x61bb
                           0061BC   983 _DACTEST2	=	0x61bc
                           0061BD   984 _ATEST	=	0x61bd
                           0061BE   985 _PTEST0	=	0x61be
                           0061BF   986 _PTEST1	=	0x61bf
                           0061FA   987 _TXFILTCFG	=	0x61fa
                           0061EB   988 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   989 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   990 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   991 _CSPPROG0	=	0x61c0
                           0061C1   992 _CSPPROG1	=	0x61c1
                           0061C2   993 _CSPPROG2	=	0x61c2
                           0061C3   994 _CSPPROG3	=	0x61c3
                           0061C4   995 _CSPPROG4	=	0x61c4
                           0061C5   996 _CSPPROG5	=	0x61c5
                           0061C6   997 _CSPPROG6	=	0x61c6
                           0061C7   998 _CSPPROG7	=	0x61c7
                           0061C8   999 _CSPPROG8	=	0x61c8
                           0061C9  1000 _CSPPROG9	=	0x61c9
                           0061CA  1001 _CSPPROG10	=	0x61ca
                           0061CB  1002 _CSPPROG11	=	0x61cb
                           0061CC  1003 _CSPPROG12	=	0x61cc
                           0061CD  1004 _CSPPROG13	=	0x61cd
                           0061CE  1005 _CSPPROG14	=	0x61ce
                           0061CF  1006 _CSPPROG15	=	0x61cf
                           0061D0  1007 _CSPPROG16	=	0x61d0
                           0061D1  1008 _CSPPROG17	=	0x61d1
                           0061D2  1009 _CSPPROG18	=	0x61d2
                           0061D3  1010 _CSPPROG19	=	0x61d3
                           0061D4  1011 _CSPPROG20	=	0x61d4
                           0061D5  1012 _CSPPROG21	=	0x61d5
                           0061D6  1013 _CSPPROG22	=	0x61d6
                           0061D7  1014 _CSPPROG23	=	0x61d7
                           0061E0  1015 _CSPCTRL	=	0x61e0
                           0061E1  1016 _CSPSTAT	=	0x61e1
                           0061E2  1017 _CSPX	=	0x61e2
                           0061E3  1018 _CSPY	=	0x61e3
                           0061E4  1019 _CSPZ	=	0x61e4
                           0061E5  1020 _CSPT	=	0x61e5
                           006200  1021 _USBADDR	=	0x6200
                           006201  1022 _USBPOW	=	0x6201
                           006202  1023 _USBIIF	=	0x6202
                           006204  1024 _USBOIF	=	0x6204
                           006206  1025 _USBCIF	=	0x6206
                           006207  1026 _USBIIE	=	0x6207
                           006209  1027 _USBOIE	=	0x6209
                           00620B  1028 _USBCIE	=	0x620b
                           00620C  1029 _USBFRML	=	0x620c
                           00620D  1030 _USBFRMH	=	0x620d
                           00620E  1031 _USBINDEX	=	0x620e
                           00620F  1032 _USBCTRL	=	0x620f
                           006210  1033 _USBMAXI	=	0x6210
                           006211  1034 _USBCS0	=	0x6211
                           006211  1035 _USBCSIL	=	0x6211
                           006212  1036 _USBCSIH	=	0x6212
                           006213  1037 _USBMAXO	=	0x6213
                           006214  1038 _USBCSOL	=	0x6214
                           006215  1039 _USBCSOH	=	0x6215
                           006216  1040 _USBCNT0	=	0x6216
                           006216  1041 _USBCNTL	=	0x6216
                           006217  1042 _USBCNTH	=	0x6217
                           006220  1043 _USBF0	=	0x6220
                           006222  1044 _USBF1	=	0x6222
                           006224  1045 _USBF2	=	0x6224
                           006226  1046 _USBF3	=	0x6226
                           006228  1047 _USBF4	=	0x6228
                           00622A  1048 _USBF5	=	0x622a
                           007080  1049 _X_P0	=	0x7080
                           007086  1050 _X_U0CSR	=	0x7086
                           007089  1051 _X_P0IFG	=	0x7089
                           00708A  1052 _X_P1IFG	=	0x708a
                           00708B  1053 _X_P2IFG	=	0x708b
                           00708C  1054 _X_PICTL	=	0x708c
                           00708D  1055 _X_P1IEN	=	0x708d
                           00708F  1056 _X_P0INP	=	0x708f
                           007090  1057 _X_P1	=	0x7090
                           007091  1058 _X_RFIRQF1	=	0x7091
                           007093  1059 _X_MPAGE	=	0x7093
                           007093  1060 _X__XPAGE	=	0x7093
                           007094  1061 _X_T2CTRL	=	0x7094
                           007095  1062 _X_ST0	=	0x7095
                           007096  1063 _X_ST1	=	0x7096
                           007097  1064 _X_ST2	=	0x7097
                           00709C  1065 _X_T2EVTCFG	=	0x709c
                           00709D  1066 _X_SLEEPSTA	=	0x709d
                           00709E  1067 _X_CLKCONSTA	=	0x709e
                           00709F  1068 _X_FMAP	=	0x709f
                           00709F  1069 _X_PSBANK	=	0x709f
                           0070A0  1070 _X_P2	=	0x70a0
                           0070A1  1071 _X_T2IRQF	=	0x70a1
                           0070A2  1072 _X_T2M0	=	0x70a2
                           0070A3  1073 _X_T2M1	=	0x70a3
                           0070A4  1074 _X_T2MOVF0	=	0x70a4
                           0070A5  1075 _X_T2MOVF1	=	0x70a5
                           0070A6  1076 _X_T2MOVF2	=	0x70a6
                           0070A7  1077 _X_T2IRQM	=	0x70a7
                           0070AB  1078 _X_P0IEN	=	0x70ab
                           0070AC  1079 _X_P2IEN	=	0x70ac
                           0070AD  1080 _X_STLOAD	=	0x70ad
                           0070AE  1081 _X_PMUX	=	0x70ae
                           0070AF  1082 _X_T1STAT	=	0x70af
                           0070B1  1083 _X_ENCDI	=	0x70b1
                           0070B2  1084 _X_ENCDO	=	0x70b2
                           0070B3  1085 _X_ENCCS	=	0x70b3
                           0070B4  1086 _X_ADCCON1	=	0x70b4
                           0070B5  1087 _X_ADCCON2	=	0x70b5
                           0070B6  1088 _X_ADCCON3	=	0x70b6
                           0070BA  1089 _X_ADCL	=	0x70ba
                           0070BB  1090 _X_ADCH	=	0x70bb
                           0070BC  1091 _X_RNDL	=	0x70bc
                           0070BD  1092 _X_RNDH	=	0x70bd
                           0070BE  1093 _X_SLEEPCMD	=	0x70be
                           0070BF  1094 _X_RFERRF	=	0x70bf
                           0070C1  1095 _X_U0DBUF	=	0x70c1
                           0070C2  1096 _X_U0BAUD	=	0x70c2
                           0070C3  1097 _X_T2MSEL	=	0x70c3
                           0070C4  1098 _X_U0UCR	=	0x70c4
                           0070C5  1099 _X_U0GCR	=	0x70c5
                           0070C6  1100 _X_CLKCONCMD	=	0x70c6
                           0070C7  1101 _X_MEMCTR	=	0x70c7
                           0070C9  1102 _X_WDCTL	=	0x70c9
                           0070CA  1103 _X_T3CNT	=	0x70ca
                           0070CB  1104 _X_T3CTL	=	0x70cb
                           0070CC  1105 _X_T3CCTL0	=	0x70cc
                           0070CD  1106 _X_T3CC0	=	0x70cd
                           0070CE  1107 _X_T3CCTL1	=	0x70ce
                           0070CF  1108 _X_T3CC1	=	0x70cf
                           0070D1  1109 _X_DMAIRQ	=	0x70d1
                           0070D2  1110 _X_DMA1CFGL	=	0x70d2
                           0070D3  1111 _X_DMA1CFGH	=	0x70d3
                           0070D4  1112 _X_DMA0CFGL	=	0x70d4
                           0070D5  1113 _X_DMA0CFGH	=	0x70d5
                           0070D6  1114 _X_DMAARM	=	0x70d6
                           0070D7  1115 _X_DMAREQ	=	0x70d7
                           0070D8  1116 _X_TIMIF	=	0x70d8
                           0070D9  1117 _X_RFD	=	0x70d9
                           0070DA  1118 _X_T1CC0L	=	0x70da
                           0070DB  1119 _X_T1CC0H	=	0x70db
                           0070DC  1120 _X_T1CC1L	=	0x70dc
                           0070DD  1121 _X_T1CC1H	=	0x70dd
                           0070DE  1122 _X_T1CC2L	=	0x70de
                           0070DF  1123 _X_T1CC2H	=	0x70df
                           0070E1  1124 _X_RFST	=	0x70e1
                           0070E2  1125 _X_T1CNTL	=	0x70e2
                           0070E3  1126 _X_T1CNTH	=	0x70e3
                           0070E4  1127 _X_T1CTL	=	0x70e4
                           0070E5  1128 _X_T1CCTL0	=	0x70e5
                           0070E6  1129 _X_T1CCTL1	=	0x70e6
                           0070E7  1130 _X_T1CCTL2	=	0x70e7
                           0070E9  1131 _X_RFIRQF0	=	0x70e9
                           0070EA  1132 _X_T4CNT	=	0x70ea
                           0070EB  1133 _X_T4CTL	=	0x70eb
                           0070EC  1134 _X_T4CCTL0	=	0x70ec
                           0070ED  1135 _X_T4CC0	=	0x70ed
                           0070EE  1136 _X_T4CCTL1	=	0x70ee
                           0070EF  1137 _X_T4CC1	=	0x70ef
                           0070F1  1138 _X_PERCFG	=	0x70f1
                           0070F2  1139 _X_APCFG	=	0x70f2
                           0070F3  1140 _X_P0SEL	=	0x70f3
                           0070F4  1141 _X_P1SEL	=	0x70f4
                           0070F5  1142 _X_P2SEL	=	0x70f5
                           0070F6  1143 _X_P1INP	=	0x70f6
                           0070F7  1144 _X_P2INP	=	0x70f7
                           0070F8  1145 _X_U1CSR	=	0x70f8
                           0070F9  1146 _X_U1DBUF	=	0x70f9
                           0070FA  1147 _X_U1BAUD	=	0x70fa
                           0070FB  1148 _X_U1UCR	=	0x70fb
                           0070FC  1149 _X_U1GCR	=	0x70fc
                           0070FD  1150 _X_P0DIR	=	0x70fd
                           0070FE  1151 _X_P1DIR	=	0x70fe
                           0070FF  1152 _X_P2DIR	=	0x70ff
                           007800  1153 _X_INFOPAGE	=	0x7800
                           00780C  1154 _X_IEEE_ADDR	=	0x780c
      000000                       1155 _lpp_is_on:
      000000                       1156 	.ds 1
      000001                       1157 _current_packet:
      000001                       1158 	.ds 8
      000009                       1159 _dutycycle_pt:
      000009                       1160 	.ds 2
      00000B                       1161 _timer:
      00000B                       1162 	.ds 21
      000020                       1163 _queued_packets_memb_memb_count:
      000020                       1164 	.ds 4
      000024                       1165 _queued_packets_memb_memb_mem:
      000024                       1166 	.ds 164
      0000C8                       1167 _encounter_memb_memb_count:
      0000C8                       1168 	.ds 4
      0000CC                       1169 _encounter_memb_memb_mem:
      0000CC                       1170 	.ds 196
      000190                       1171 _stream_probe_timer:
      000190                       1172 	.ds 21
      0001A5                       1173 _stream_off_timer:
      0001A5                       1174 	.ds 21
                                   1175 ;--------------------------------------------------------
                                   1176 ; absolute external ram data
                                   1177 ;--------------------------------------------------------
                                   1178 	.area XABS    (ABS,XDATA)
                                   1179 ;--------------------------------------------------------
                                   1180 ; external initialized ram data
                                   1181 ;--------------------------------------------------------
                                   1182 	.area XISEG   (XDATA)
      000000                       1183 _is_listening:
      000000                       1184 	.ds 1
      000001                       1185 _off_time_adjustment:
      000001                       1186 	.ds 2
      000003                       1187 _off_time:
      000003                       1188 	.ds 2
      000005                       1189 _pending_packets_list_list:
      000005                       1190 	.ds 3
      000008                       1191 _pending_packets_list:
      000008                       1192 	.ds 3
      00000B                       1193 _queued_packets_list_list:
      00000B                       1194 	.ds 3
      00000E                       1195 _queued_packets_list:
      00000E                       1196 	.ds 3
      000011                       1197 _queued_packets_memb:
      000011                       1198 	.ds 10
      00001B                       1199 _encounter_list_list:
      00001B                       1200 	.ds 3
      00001E                       1201 _encounter_list:
      00001E                       1202 	.ds 3
      000021                       1203 _encounter_memb:
      000021                       1204 	.ds 10
      00002B                       1205 _is_streaming:
      00002B                       1206 	.ds 1
                                   1207 	.area HOME    (CODE)
                                   1208 	.area GSINIT0 (CODE)
                                   1209 	.area GSINIT1 (CODE)
                                   1210 	.area GSINIT2 (CODE)
                                   1211 	.area GSINIT3 (CODE)
                                   1212 	.area GSINIT4 (CODE)
                                   1213 	.area GSINIT5 (CODE)
                                   1214 	.area GSINIT  (CODE)
                                   1215 	.area GSFINAL (CODE)
                                   1216 	.area CSEG    (CODE)
                                   1217 ;--------------------------------------------------------
                                   1218 ; global & static initialisations
                                   1219 ;--------------------------------------------------------
                                   1220 	.area HOME    (CODE)
                                   1221 	.area GSINIT  (CODE)
                                   1222 	.area GSFINAL (CODE)
                                   1223 	.area GSINIT  (CODE)
                                   1224 ;--------------------------------------------------------
                                   1225 ; Home
                                   1226 ;--------------------------------------------------------
                                   1227 	.area HOME    (CODE)
                                   1228 	.area HOME    (CODE)
                                   1229 ;--------------------------------------------------------
                                   1230 ; code
                                   1231 ;--------------------------------------------------------
                                   1232 	.area CSEG    (CODE)
                                   1233 ;------------------------------------------------------------
                                   1234 ;Allocation info for local variables in function 'turn_radio_on'
                                   1235 ;------------------------------------------------------------
                                   1236 ;	../../core/net/mac/lpp.c:191: turn_radio_on(void)
                                   1237 ;	-----------------------------------------
                                   1238 ;	 function turn_radio_on
                                   1239 ;	-----------------------------------------
      000000                       1240 _turn_radio_on:
                           000007  1241 	ar7 = 0x07
                           000006  1242 	ar6 = 0x06
                           000005  1243 	ar5 = 0x05
                           000004  1244 	ar4 = 0x04
                           000003  1245 	ar3 = 0x03
                           000002  1246 	ar2 = 0x02
                           000001  1247 	ar1 = 0x01
                           000000  1248 	ar0 = 0x00
                                   1249 ;	../../core/net/mac/lpp.c:193: NETSTACK_RADIO.on();
      000000 90r00r10         [24] 1250 	mov	dptr,#(_cc2530_rf_driver + 0x0010)
      000003 E4               [12] 1251 	clr	a
      000004 93               [24] 1252 	movc	a,@a+dptr
      000005 FE               [12] 1253 	mov	r6,a
      000006 A3               [24] 1254 	inc	dptr
      000007 E4               [12] 1255 	clr	a
      000008 93               [24] 1256 	movc	a,@a+dptr
      000009 FF               [12] 1257 	mov	r7,a
      00000A C0 07            [24] 1258 	push	ar7
      00000C C0 06            [24] 1259 	push	ar6
      00000E 8E 82            [24] 1260 	mov	dpl,r6
      000010 8F 83            [24] 1261 	mov	dph,r7
      000012 12r00r00         [24] 1262 	lcall	__sdcc_call_dptr
      000015 D0 06            [24] 1263 	pop	ar6
      000017 D0 07            [24] 1264 	pop	ar7
                                   1265 ;	../../core/net/mac/lpp.c:195: }
      000019 22               [24] 1266 	ret
                                   1267 ;------------------------------------------------------------
                                   1268 ;Allocation info for local variables in function 'turn_radio_off'
                                   1269 ;------------------------------------------------------------
                                   1270 ;	../../core/net/mac/lpp.c:198: turn_radio_off(void)
                                   1271 ;	-----------------------------------------
                                   1272 ;	 function turn_radio_off
                                   1273 ;	-----------------------------------------
      00001A                       1274 _turn_radio_off:
                                   1275 ;	../../core/net/mac/lpp.c:200: if(lpp_is_on && is_streaming == 0) {
      00001A 90r00r00         [24] 1276 	mov	dptr,#_lpp_is_on
      00001D E0               [24] 1277 	movx	a,@dptr
      00001E 60 1F            [24] 1278 	jz	00104$
      000020 90r00r2B         [24] 1279 	mov	dptr,#_is_streaming
      000023 E0               [24] 1280 	movx	a,@dptr
      000024 70 19            [24] 1281 	jnz	00104$
                                   1282 ;	../../core/net/mac/lpp.c:201: NETSTACK_RADIO.off();
      000026 90r00r12         [24] 1283 	mov	dptr,#(_cc2530_rf_driver + 0x0012)
      000029 E4               [12] 1284 	clr	a
      00002A 93               [24] 1285 	movc	a,@a+dptr
      00002B FE               [12] 1286 	mov	r6,a
      00002C A3               [24] 1287 	inc	dptr
      00002D E4               [12] 1288 	clr	a
      00002E 93               [24] 1289 	movc	a,@a+dptr
      00002F FF               [12] 1290 	mov	r7,a
      000030 C0 07            [24] 1291 	push	ar7
      000032 C0 06            [24] 1292 	push	ar6
      000034 8E 82            [24] 1293 	mov	dpl,r6
      000036 8F 83            [24] 1294 	mov	dph,r7
      000038 12r00r00         [24] 1295 	lcall	__sdcc_call_dptr
      00003B D0 06            [24] 1296 	pop	ar6
      00003D D0 07            [24] 1297 	pop	ar7
      00003F                       1298 00104$:
                                   1299 ;	../../core/net/mac/lpp.c:204: }
      00003F 22               [24] 1300 	ret
                                   1301 ;------------------------------------------------------------
                                   1302 ;Allocation info for local variables in function 'remove_encounter'
                                   1303 ;------------------------------------------------------------
                                   1304 ;encounter                 Allocated to registers r5 r6 r7 
                                   1305 ;e                         Allocated to stack - sp -2
                                   1306 ;------------------------------------------------------------
                                   1307 ;	../../core/net/mac/lpp.c:207: remove_encounter(void *encounter)
                                   1308 ;	-----------------------------------------
                                   1309 ;	 function remove_encounter
                                   1310 ;	-----------------------------------------
      000040                       1311 _remove_encounter:
      000040 05 81            [12] 1312 	inc	sp
      000042 05 81            [12] 1313 	inc	sp
      000044 05 81            [12] 1314 	inc	sp
      000046 AD 82            [24] 1315 	mov	r5,dpl
      000048 AE 83            [24] 1316 	mov	r6,dph
      00004A AF F0            [24] 1317 	mov	r7,b
                                   1318 ;	../../core/net/mac/lpp.c:209: struct encounter *e = encounter;
      00004C A8 81            [24] 1319 	mov	r0,sp
      00004E 18               [12] 1320 	dec	r0
      00004F 18               [12] 1321 	dec	r0
      000050 A6 05            [24] 1322 	mov	@r0,ar5
      000052 08               [12] 1323 	inc	r0
      000053 A6 06            [24] 1324 	mov	@r0,ar6
      000055 08               [12] 1325 	inc	r0
      000056 A6 07            [24] 1326 	mov	@r0,ar7
                                   1327 ;	../../core/net/mac/lpp.c:211: ctimer_stop(&e->remove_timer);
      000058 A8 81            [24] 1328 	mov	r0,sp
      00005A 18               [12] 1329 	dec	r0
      00005B 18               [12] 1330 	dec	r0
      00005C 74 07            [12] 1331 	mov	a,#0x07
      00005E 26               [12] 1332 	add	a,@r0
      00005F FA               [12] 1333 	mov	r2,a
      000060 E4               [12] 1334 	clr	a
      000061 08               [12] 1335 	inc	r0
      000062 36               [12] 1336 	addc	a,@r0
      000063 FB               [12] 1337 	mov	r3,a
      000064 08               [12] 1338 	inc	r0
      000065 86 04            [24] 1339 	mov	ar4,@r0
      000067 8A 82            [24] 1340 	mov	dpl,r2
      000069 8B 83            [24] 1341 	mov	dph,r3
      00006B 8C F0            [24] 1342 	mov	b,r4
      00006D 12r00r00         [24] 1343 	lcall	_ctimer_stop
                                   1344 ;	../../core/net/mac/lpp.c:212: ctimer_stop(&e->turn_on_radio_timer);
      000070 A8 81            [24] 1345 	mov	r0,sp
      000072 18               [12] 1346 	dec	r0
      000073 18               [12] 1347 	dec	r0
      000074 74 1C            [12] 1348 	mov	a,#0x1c
      000076 26               [12] 1349 	add	a,@r0
      000077 FA               [12] 1350 	mov	r2,a
      000078 E4               [12] 1351 	clr	a
      000079 08               [12] 1352 	inc	r0
      00007A 36               [12] 1353 	addc	a,@r0
      00007B FB               [12] 1354 	mov	r3,a
      00007C 08               [12] 1355 	inc	r0
      00007D 86 04            [24] 1356 	mov	ar4,@r0
      00007F 8A 82            [24] 1357 	mov	dpl,r2
      000081 8B 83            [24] 1358 	mov	dph,r3
      000083 8C F0            [24] 1359 	mov	b,r4
      000085 12r00r00         [24] 1360 	lcall	_ctimer_stop
                                   1361 ;	../../core/net/mac/lpp.c:213: list_remove(encounter_list, e);
      000088 A8 81            [24] 1362 	mov	r0,sp
      00008A 18               [12] 1363 	dec	r0
      00008B 18               [12] 1364 	dec	r0
      00008C 86 02            [24] 1365 	mov	ar2,@r0
      00008E 08               [12] 1366 	inc	r0
      00008F 86 03            [24] 1367 	mov	ar3,@r0
      000091 08               [12] 1368 	inc	r0
      000092 86 04            [24] 1369 	mov	ar4,@r0
      000094 90r00r1E         [24] 1370 	mov	dptr,#_encounter_list
      000097 E0               [24] 1371 	movx	a,@dptr
      000098 FD               [12] 1372 	mov	r5,a
      000099 A3               [24] 1373 	inc	dptr
      00009A E0               [24] 1374 	movx	a,@dptr
      00009B FE               [12] 1375 	mov	r6,a
      00009C A3               [24] 1376 	inc	dptr
      00009D E0               [24] 1377 	movx	a,@dptr
      00009E FF               [12] 1378 	mov	r7,a
      00009F C0 02            [24] 1379 	push	ar2
      0000A1 C0 03            [24] 1380 	push	ar3
      0000A3 C0 04            [24] 1381 	push	ar4
      0000A5 8D 82            [24] 1382 	mov	dpl,r5
      0000A7 8E 83            [24] 1383 	mov	dph,r6
      0000A9 8F F0            [24] 1384 	mov	b,r7
      0000AB 12r00r00         [24] 1385 	lcall	_list_remove
      0000AE 15 81            [12] 1386 	dec	sp
      0000B0 15 81            [12] 1387 	dec	sp
      0000B2 15 81            [12] 1388 	dec	sp
                                   1389 ;	../../core/net/mac/lpp.c:214: memb_free(&encounter_memb, e);
      0000B4 A8 81            [24] 1390 	mov	r0,sp
      0000B6 18               [12] 1391 	dec	r0
      0000B7 18               [12] 1392 	dec	r0
      0000B8 86 05            [24] 1393 	mov	ar5,@r0
      0000BA 08               [12] 1394 	inc	r0
      0000BB 86 06            [24] 1395 	mov	ar6,@r0
      0000BD 08               [12] 1396 	inc	r0
      0000BE 86 07            [24] 1397 	mov	ar7,@r0
      0000C0 C0 05            [24] 1398 	push	ar5
      0000C2 C0 06            [24] 1399 	push	ar6
      0000C4 C0 07            [24] 1400 	push	ar7
      0000C6 90r00r21         [24] 1401 	mov	dptr,#_encounter_memb
      0000C9 75 F0 00         [24] 1402 	mov	b,#0x00
      0000CC 12r00r00         [24] 1403 	lcall	_memb_free
      0000CF 15 81            [12] 1404 	dec	sp
      0000D1 15 81            [12] 1405 	dec	sp
      0000D3 15 81            [12] 1406 	dec	sp
                                   1407 ;	../../core/net/mac/lpp.c:215: }
      0000D5 15 81            [12] 1408 	dec	sp
      0000D7 15 81            [12] 1409 	dec	sp
      0000D9 15 81            [12] 1410 	dec	sp
      0000DB 22               [24] 1411 	ret
                                   1412 ;------------------------------------------------------------
                                   1413 ;Allocation info for local variables in function 'register_encounter'
                                   1414 ;------------------------------------------------------------
                                   1415 ;time                      Allocated to stack - sp -12
                                   1416 ;neighbor                  Allocated to stack - sp -8
                                   1417 ;e                         Allocated to stack - sp -2
                                   1418 ;sloc0                     Allocated to stack - sp -5
                                   1419 ;------------------------------------------------------------
                                   1420 ;	../../core/net/mac/lpp.c:218: register_encounter(rimeaddr_t *neighbor, clock_time_t time)
                                   1421 ;	-----------------------------------------
                                   1422 ;	 function register_encounter
                                   1423 ;	-----------------------------------------
      0000DC                       1424 _register_encounter:
      0000DC C0 82            [24] 1425 	push	dpl
      0000DE C0 83            [24] 1426 	push	dph
      0000E0 C0 F0            [24] 1427 	push	b
      0000E2 E5 81            [12] 1428 	mov	a,sp
      0000E4 24 06            [12] 1429 	add	a,#0x06
      0000E6 F5 81            [12] 1430 	mov	sp,a
                                   1431 ;	../../core/net/mac/lpp.c:223: for(e = list_head(encounter_list); e != NULL; e = list_item_next(e)) {
      0000E8 90r00r1E         [24] 1432 	mov	dptr,#_encounter_list
      0000EB E0               [24] 1433 	movx	a,@dptr
      0000EC FA               [12] 1434 	mov	r2,a
      0000ED A3               [24] 1435 	inc	dptr
      0000EE E0               [24] 1436 	movx	a,@dptr
      0000EF FB               [12] 1437 	mov	r3,a
      0000F0 A3               [24] 1438 	inc	dptr
      0000F1 E0               [24] 1439 	movx	a,@dptr
      0000F2 FC               [12] 1440 	mov	r4,a
      0000F3 8A 82            [24] 1441 	mov	dpl,r2
      0000F5 8B 83            [24] 1442 	mov	dph,r3
      0000F7 8C F0            [24] 1443 	mov	b,r4
      0000F9 12r00r00         [24] 1444 	lcall	_list_head
      0000FC AA 82            [24] 1445 	mov	r2,dpl
      0000FE AB 83            [24] 1446 	mov	r3,dph
      000100 AC F0            [24] 1447 	mov	r4,b
      000102                       1448 00109$:
      000102 EA               [12] 1449 	mov	a,r2
      000103 4B               [12] 1450 	orl	a,r3
      000104 70 03            [24] 1451 	jnz	00138$
      000106 02r01rD0         [24] 1452 	ljmp	00103$
      000109                       1453 00138$:
                                   1454 ;	../../core/net/mac/lpp.c:224: if(rimeaddr_cmp(neighbor, &e->neighbor)) {
      000109 74 03            [12] 1455 	mov	a,#0x03
      00010B 2A               [12] 1456 	add	a,r2
      00010C FD               [12] 1457 	mov	r5,a
      00010D E4               [12] 1458 	clr	a
      00010E 3B               [12] 1459 	addc	a,r3
      00010F FE               [12] 1460 	mov	r6,a
      000110 8C 07            [24] 1461 	mov	ar7,r4
      000112 C0 04            [24] 1462 	push	ar4
      000114 C0 03            [24] 1463 	push	ar3
      000116 C0 02            [24] 1464 	push	ar2
      000118 C0 05            [24] 1465 	push	ar5
      00011A C0 06            [24] 1466 	push	ar6
      00011C C0 07            [24] 1467 	push	ar7
      00011E E5 81            [12] 1468 	mov	a,sp
      000120 24 F2            [12] 1469 	add	a,#0xf2
      000122 F8               [12] 1470 	mov	r0,a
      000123 86 82            [24] 1471 	mov	dpl,@r0
      000125 08               [12] 1472 	inc	r0
      000126 86 83            [24] 1473 	mov	dph,@r0
      000128 08               [12] 1474 	inc	r0
      000129 86 F0            [24] 1475 	mov	b,@r0
      00012B 12r00r00         [24] 1476 	lcall	_rimeaddr_cmp
      00012E AE 82            [24] 1477 	mov	r6,dpl
      000130 AF 83            [24] 1478 	mov	r7,dph
      000132 15 81            [12] 1479 	dec	sp
      000134 15 81            [12] 1480 	dec	sp
      000136 15 81            [12] 1481 	dec	sp
      000138 D0 02            [24] 1482 	pop	ar2
      00013A D0 03            [24] 1483 	pop	ar3
      00013C D0 04            [24] 1484 	pop	ar4
      00013E EE               [12] 1485 	mov	a,r6
      00013F 4F               [12] 1486 	orl	a,r7
      000140 60 70            [24] 1487 	jz	00110$
                                   1488 ;	../../core/net/mac/lpp.c:225: e->time = time;
      000142 74 05            [12] 1489 	mov	a,#0x05
      000144 2A               [12] 1490 	add	a,r2
      000145 FD               [12] 1491 	mov	r5,a
      000146 E4               [12] 1492 	clr	a
      000147 3B               [12] 1493 	addc	a,r3
      000148 FE               [12] 1494 	mov	r6,a
      000149 8C 07            [24] 1495 	mov	ar7,r4
      00014B 8D 82            [24] 1496 	mov	dpl,r5
      00014D 8E 83            [24] 1497 	mov	dph,r6
      00014F 8F F0            [24] 1498 	mov	b,r7
      000151 E5 81            [12] 1499 	mov	a,sp
      000153 24 F4            [12] 1500 	add	a,#0xf4
      000155 F8               [12] 1501 	mov	r0,a
      000156 E6               [12] 1502 	mov	a,@r0
      000157 12r00r00         [24] 1503 	lcall	__gptrput
      00015A A3               [24] 1504 	inc	dptr
      00015B 08               [12] 1505 	inc	r0
      00015C E6               [12] 1506 	mov	a,@r0
      00015D 12r00r00         [24] 1507 	lcall	__gptrput
                                   1508 ;	../../core/net/mac/lpp.c:226: ctimer_set(&e->remove_timer, ENCOUNTER_LIFETIME, remove_encounter, e);
      000160 E5 81            [12] 1509 	mov	a,sp
      000162 24 FB            [12] 1510 	add	a,#0xfb
      000164 F8               [12] 1511 	mov	r0,a
      000165 A6 02            [24] 1512 	mov	@r0,ar2
      000167 08               [12] 1513 	inc	r0
      000168 A6 03            [24] 1514 	mov	@r0,ar3
      00016A 08               [12] 1515 	inc	r0
      00016B A6 04            [24] 1516 	mov	@r0,ar4
      00016D 74 07            [12] 1517 	mov	a,#0x07
      00016F 2A               [12] 1518 	add	a,r2
      000170 FD               [12] 1519 	mov	r5,a
      000171 E4               [12] 1520 	clr	a
      000172 3B               [12] 1521 	addc	a,r3
      000173 FE               [12] 1522 	mov	r6,a
      000174 8C 07            [24] 1523 	mov	ar7,r4
      000176 C0 04            [24] 1524 	push	ar4
      000178 C0 03            [24] 1525 	push	ar3
      00017A C0 02            [24] 1526 	push	ar2
      00017C E5 81            [12] 1527 	mov	a,sp
      00017E 24 F8            [12] 1528 	add	a,#0xf8
      000180 F8               [12] 1529 	mov	r0,a
      000181 E6               [12] 1530 	mov	a,@r0
      000182 C0 E0            [24] 1531 	push	acc
      000184 08               [12] 1532 	inc	r0
      000185 E6               [12] 1533 	mov	a,@r0
      000186 C0 E0            [24] 1534 	push	acc
      000188 08               [12] 1535 	inc	r0
      000189 E6               [12] 1536 	mov	a,@r0
      00018A C0 E0            [24] 1537 	push	acc
      00018C 74r40            [12] 1538 	mov	a,#_remove_encounter
      00018E C0 E0            [24] 1539 	push	acc
      000190 74s00            [12] 1540 	mov	a,#(_remove_encounter >> 8)
      000192 C0 E0            [24] 1541 	push	acc
      000194 74 F0            [12] 1542 	mov	a,#0xf0
      000196 C0 E0            [24] 1543 	push	acc
      000198 E4               [12] 1544 	clr	a
      000199 C0 E0            [24] 1545 	push	acc
      00019B 8D 82            [24] 1546 	mov	dpl,r5
      00019D 8E 83            [24] 1547 	mov	dph,r6
      00019F 8F F0            [24] 1548 	mov	b,r7
      0001A1 12r00r00         [24] 1549 	lcall	_ctimer_set
      0001A4 E5 81            [12] 1550 	mov	a,sp
      0001A6 24 F9            [12] 1551 	add	a,#0xf9
      0001A8 F5 81            [12] 1552 	mov	sp,a
      0001AA D0 02            [24] 1553 	pop	ar2
      0001AC D0 03            [24] 1554 	pop	ar3
      0001AE D0 04            [24] 1555 	pop	ar4
                                   1556 ;	../../core/net/mac/lpp.c:227: break;
      0001B0 80 1E            [24] 1557 	sjmp	00103$
      0001B2                       1558 00110$:
                                   1559 ;	../../core/net/mac/lpp.c:223: for(e = list_head(encounter_list); e != NULL; e = list_item_next(e)) {
      0001B2 8A 05            [24] 1560 	mov	ar5,r2
      0001B4 8B 06            [24] 1561 	mov	ar6,r3
      0001B6 8C 07            [24] 1562 	mov	ar7,r4
      0001B8 8D 82            [24] 1563 	mov	dpl,r5
      0001BA 8E 83            [24] 1564 	mov	dph,r6
      0001BC 8F F0            [24] 1565 	mov	b,r7
      0001BE 12r00r00         [24] 1566 	lcall	_list_item_next
      0001C1 AD 82            [24] 1567 	mov	r5,dpl
      0001C3 AE 83            [24] 1568 	mov	r6,dph
      0001C5 AF F0            [24] 1569 	mov	r7,b
      0001C7 8D 02            [24] 1570 	mov	ar2,r5
      0001C9 8E 03            [24] 1571 	mov	ar3,r6
      0001CB 8F 04            [24] 1572 	mov	ar4,r7
      0001CD 02r01r02         [24] 1573 	ljmp	00109$
      0001D0                       1574 00103$:
                                   1575 ;	../../core/net/mac/lpp.c:231: if(e == NULL) {
      0001D0 EA               [12] 1576 	mov	a,r2
      0001D1 4B               [12] 1577 	orl	a,r3
      0001D2 60 03            [24] 1578 	jz	00140$
      0001D4 02r02rBB         [24] 1579 	ljmp	00111$
      0001D7                       1580 00140$:
                                   1581 ;	../../core/net/mac/lpp.c:232: e = memb_alloc(&encounter_memb);
      0001D7 90r00r21         [24] 1582 	mov	dptr,#_encounter_memb
      0001DA 75 F0 00         [24] 1583 	mov	b,#0x00
      0001DD 12r00r00         [24] 1584 	lcall	_memb_alloc
      0001E0 AD 82            [24] 1585 	mov	r5,dpl
      0001E2 AE 83            [24] 1586 	mov	r6,dph
      0001E4 AF F0            [24] 1587 	mov	r7,b
      0001E6 A8 81            [24] 1588 	mov	r0,sp
      0001E8 18               [12] 1589 	dec	r0
      0001E9 18               [12] 1590 	dec	r0
      0001EA A6 05            [24] 1591 	mov	@r0,ar5
      0001EC 08               [12] 1592 	inc	r0
      0001ED A6 06            [24] 1593 	mov	@r0,ar6
      0001EF 08               [12] 1594 	inc	r0
      0001F0 A6 07            [24] 1595 	mov	@r0,ar7
                                   1596 ;	../../core/net/mac/lpp.c:233: if(e == NULL) {
      0001F2 A8 81            [24] 1597 	mov	r0,sp
      0001F4 18               [12] 1598 	dec	r0
      0001F5 18               [12] 1599 	dec	r0
      0001F6 E6               [12] 1600 	mov	a,@r0
      0001F7 08               [12] 1601 	inc	r0
      0001F8 46               [12] 1602 	orl	a,@r0
      0001F9 70 03            [24] 1603 	jnz	00105$
                                   1604 ;	../../core/net/mac/lpp.c:235: return;
      0001FB 02r02rBB         [24] 1605 	ljmp	00111$
      0001FE                       1606 00105$:
                                   1607 ;	../../core/net/mac/lpp.c:237: rimeaddr_copy(&e->neighbor, neighbor);
      0001FE A8 81            [24] 1608 	mov	r0,sp
      000200 18               [12] 1609 	dec	r0
      000201 18               [12] 1610 	dec	r0
      000202 74 03            [12] 1611 	mov	a,#0x03
      000204 26               [12] 1612 	add	a,@r0
      000205 FA               [12] 1613 	mov	r2,a
      000206 E4               [12] 1614 	clr	a
      000207 08               [12] 1615 	inc	r0
      000208 36               [12] 1616 	addc	a,@r0
      000209 FB               [12] 1617 	mov	r3,a
      00020A 08               [12] 1618 	inc	r0
      00020B 86 04            [24] 1619 	mov	ar4,@r0
      00020D E5 81            [12] 1620 	mov	a,sp
      00020F 24 F8            [12] 1621 	add	a,#0xf8
      000211 F8               [12] 1622 	mov	r0,a
      000212 E6               [12] 1623 	mov	a,@r0
      000213 C0 E0            [24] 1624 	push	acc
      000215 08               [12] 1625 	inc	r0
      000216 E6               [12] 1626 	mov	a,@r0
      000217 C0 E0            [24] 1627 	push	acc
      000219 08               [12] 1628 	inc	r0
      00021A E6               [12] 1629 	mov	a,@r0
      00021B C0 E0            [24] 1630 	push	acc
      00021D 8A 82            [24] 1631 	mov	dpl,r2
      00021F 8B 83            [24] 1632 	mov	dph,r3
      000221 8C F0            [24] 1633 	mov	b,r4
      000223 12r00r00         [24] 1634 	lcall	_rimeaddr_copy
      000226 15 81            [12] 1635 	dec	sp
      000228 15 81            [12] 1636 	dec	sp
      00022A 15 81            [12] 1637 	dec	sp
                                   1638 ;	../../core/net/mac/lpp.c:238: e->time = time;
      00022C A8 81            [24] 1639 	mov	r0,sp
      00022E 18               [12] 1640 	dec	r0
      00022F 18               [12] 1641 	dec	r0
      000230 74 05            [12] 1642 	mov	a,#0x05
      000232 26               [12] 1643 	add	a,@r0
      000233 FA               [12] 1644 	mov	r2,a
      000234 E4               [12] 1645 	clr	a
      000235 08               [12] 1646 	inc	r0
      000236 36               [12] 1647 	addc	a,@r0
      000237 FB               [12] 1648 	mov	r3,a
      000238 08               [12] 1649 	inc	r0
      000239 86 04            [24] 1650 	mov	ar4,@r0
      00023B 8A 82            [24] 1651 	mov	dpl,r2
      00023D 8B 83            [24] 1652 	mov	dph,r3
      00023F 8C F0            [24] 1653 	mov	b,r4
      000241 E5 81            [12] 1654 	mov	a,sp
      000243 24 F4            [12] 1655 	add	a,#0xf4
      000245 F8               [12] 1656 	mov	r0,a
      000246 E6               [12] 1657 	mov	a,@r0
      000247 12r00r00         [24] 1658 	lcall	__gptrput
      00024A A3               [24] 1659 	inc	dptr
      00024B 08               [12] 1660 	inc	r0
      00024C E6               [12] 1661 	mov	a,@r0
      00024D 12r00r00         [24] 1662 	lcall	__gptrput
                                   1663 ;	../../core/net/mac/lpp.c:239: ctimer_set(&e->remove_timer, ENCOUNTER_LIFETIME, remove_encounter, e);
      000250 A8 81            [24] 1664 	mov	r0,sp
      000252 18               [12] 1665 	dec	r0
      000253 18               [12] 1666 	dec	r0
      000254 86 02            [24] 1667 	mov	ar2,@r0
      000256 08               [12] 1668 	inc	r0
      000257 86 03            [24] 1669 	mov	ar3,@r0
      000259 08               [12] 1670 	inc	r0
      00025A 86 04            [24] 1671 	mov	ar4,@r0
      00025C A8 81            [24] 1672 	mov	r0,sp
      00025E 18               [12] 1673 	dec	r0
      00025F 18               [12] 1674 	dec	r0
      000260 74 07            [12] 1675 	mov	a,#0x07
      000262 26               [12] 1676 	add	a,@r0
      000263 FD               [12] 1677 	mov	r5,a
      000264 E4               [12] 1678 	clr	a
      000265 08               [12] 1679 	inc	r0
      000266 36               [12] 1680 	addc	a,@r0
      000267 FE               [12] 1681 	mov	r6,a
      000268 08               [12] 1682 	inc	r0
      000269 86 07            [24] 1683 	mov	ar7,@r0
      00026B C0 02            [24] 1684 	push	ar2
      00026D C0 03            [24] 1685 	push	ar3
      00026F C0 04            [24] 1686 	push	ar4
      000271 74r40            [12] 1687 	mov	a,#_remove_encounter
      000273 C0 E0            [24] 1688 	push	acc
      000275 74s00            [12] 1689 	mov	a,#(_remove_encounter >> 8)
      000277 C0 E0            [24] 1690 	push	acc
      000279 74 F0            [12] 1691 	mov	a,#0xf0
      00027B C0 E0            [24] 1692 	push	acc
      00027D E4               [12] 1693 	clr	a
      00027E C0 E0            [24] 1694 	push	acc
      000280 8D 82            [24] 1695 	mov	dpl,r5
      000282 8E 83            [24] 1696 	mov	dph,r6
      000284 8F F0            [24] 1697 	mov	b,r7
      000286 12r00r00         [24] 1698 	lcall	_ctimer_set
      000289 E5 81            [12] 1699 	mov	a,sp
      00028B 24 F9            [12] 1700 	add	a,#0xf9
      00028D F5 81            [12] 1701 	mov	sp,a
                                   1702 ;	../../core/net/mac/lpp.c:240: list_add(encounter_list, e);
      00028F A8 81            [24] 1703 	mov	r0,sp
      000291 18               [12] 1704 	dec	r0
      000292 18               [12] 1705 	dec	r0
      000293 86 05            [24] 1706 	mov	ar5,@r0
      000295 08               [12] 1707 	inc	r0
      000296 86 06            [24] 1708 	mov	ar6,@r0
      000298 08               [12] 1709 	inc	r0
      000299 86 07            [24] 1710 	mov	ar7,@r0
      00029B 90r00r1E         [24] 1711 	mov	dptr,#_encounter_list
      00029E E0               [24] 1712 	movx	a,@dptr
      00029F FA               [12] 1713 	mov	r2,a
      0002A0 A3               [24] 1714 	inc	dptr
      0002A1 E0               [24] 1715 	movx	a,@dptr
      0002A2 FB               [12] 1716 	mov	r3,a
      0002A3 A3               [24] 1717 	inc	dptr
      0002A4 E0               [24] 1718 	movx	a,@dptr
      0002A5 FC               [12] 1719 	mov	r4,a
      0002A6 C0 05            [24] 1720 	push	ar5
      0002A8 C0 06            [24] 1721 	push	ar6
      0002AA C0 07            [24] 1722 	push	ar7
      0002AC 8A 82            [24] 1723 	mov	dpl,r2
      0002AE 8B 83            [24] 1724 	mov	dph,r3
      0002B0 8C F0            [24] 1725 	mov	b,r4
      0002B2 12r00r00         [24] 1726 	lcall	_list_add
      0002B5 15 81            [12] 1727 	dec	sp
      0002B7 15 81            [12] 1728 	dec	sp
      0002B9 15 81            [12] 1729 	dec	sp
      0002BB                       1730 00111$:
                                   1731 ;	../../core/net/mac/lpp.c:242: }
      0002BB E5 81            [12] 1732 	mov	a,sp
      0002BD 24 F7            [12] 1733 	add	a,#0xf7
      0002BF F5 81            [12] 1734 	mov	sp,a
      0002C1 22               [24] 1735 	ret
                                   1736 ;------------------------------------------------------------
                                   1737 ;Allocation info for local variables in function 'stream_off'
                                   1738 ;------------------------------------------------------------
                                   1739 ;dummy                     Allocated to registers 
                                   1740 ;------------------------------------------------------------
                                   1741 ;	../../core/net/mac/lpp.c:261: stream_off(void *dummy)
                                   1742 ;	-----------------------------------------
                                   1743 ;	 function stream_off
                                   1744 ;	-----------------------------------------
      0002C2                       1745 _stream_off:
                                   1746 ;	../../core/net/mac/lpp.c:263: is_streaming = 0;
      0002C2 90r00r2B         [24] 1747 	mov	dptr,#_is_streaming
      0002C5 E4               [12] 1748 	clr	a
      0002C6 F0               [24] 1749 	movx	@dptr,a
                                   1750 ;	../../core/net/mac/lpp.c:264: }
      0002C7 22               [24] 1751 	ret
                                   1752 ;------------------------------------------------------------
                                   1753 ;Allocation info for local variables in function 'turn_radio_on_for_neighbor'
                                   1754 ;------------------------------------------------------------
                                   1755 ;i                         Allocated to stack - sp -4
                                   1756 ;neighbor                  Allocated to registers r5 r6 r7 
                                   1757 ;sloc0                     Allocated to stack - sp +4
                                   1758 ;------------------------------------------------------------
                                   1759 ;	../../core/net/mac/lpp.c:276: turn_radio_on_for_neighbor(rimeaddr_t *neighbor, struct queue_list_item *i)
                                   1760 ;	-----------------------------------------
                                   1761 ;	 function turn_radio_on_for_neighbor
                                   1762 ;	-----------------------------------------
      0002C8                       1763 _turn_radio_on_for_neighbor:
      0002C8 AD 82            [24] 1764 	mov	r5,dpl
      0002CA AE 83            [24] 1765 	mov	r6,dph
      0002CC AF F0            [24] 1766 	mov	r7,b
                                   1767 ;	../../core/net/mac/lpp.c:280: if(packetbuf_attr(PACKETBUF_ATTR_PACKET_TYPE) ==
      0002CE 75 82 0E         [24] 1768 	mov	dpl,#0x0e
      0002D1 C0 07            [24] 1769 	push	ar7
      0002D3 C0 06            [24] 1770 	push	ar6
      0002D5 C0 05            [24] 1771 	push	ar5
      0002D7 12r00r00         [24] 1772 	lcall	_packetbuf_attr
      0002DA AB 82            [24] 1773 	mov	r3,dpl
      0002DC AC 83            [24] 1774 	mov	r4,dph
      0002DE D0 05            [24] 1775 	pop	ar5
      0002E0 D0 06            [24] 1776 	pop	ar6
      0002E2 D0 07            [24] 1777 	pop	ar7
      0002E4 BB 02 5F         [24] 1778 	cjne	r3,#0x02,00102$
      0002E7 BC 00 5C         [24] 1779 	cjne	r4,#0x00,00102$
                                   1780 ;	../../core/net/mac/lpp.c:282: is_streaming = 1;
      0002EA 90r00r2B         [24] 1781 	mov	dptr,#_is_streaming
      0002ED 74 01            [12] 1782 	mov	a,#0x01
      0002EF F0               [24] 1783 	movx	@dptr,a
                                   1784 ;	../../core/net/mac/lpp.c:283: turn_radio_on();
      0002F0 12r00r00         [24] 1785 	lcall	_turn_radio_on
                                   1786 ;	../../core/net/mac/lpp.c:284: list_add(queued_packets_list, i);
      0002F3 E5 81            [12] 1787 	mov	a,sp
      0002F5 24 FC            [12] 1788 	add	a,#0xfc
      0002F7 F8               [12] 1789 	mov	r0,a
      0002F8 86 07            [24] 1790 	mov	ar7,@r0
      0002FA 08               [12] 1791 	inc	r0
      0002FB 86 06            [24] 1792 	mov	ar6,@r0
      0002FD 08               [12] 1793 	inc	r0
      0002FE 86 05            [24] 1794 	mov	ar5,@r0
      000300 90r00r0E         [24] 1795 	mov	dptr,#_queued_packets_list
      000303 E0               [24] 1796 	movx	a,@dptr
      000304 FA               [12] 1797 	mov	r2,a
      000305 A3               [24] 1798 	inc	dptr
      000306 E0               [24] 1799 	movx	a,@dptr
      000307 FB               [12] 1800 	mov	r3,a
      000308 A3               [24] 1801 	inc	dptr
      000309 E0               [24] 1802 	movx	a,@dptr
      00030A FC               [12] 1803 	mov	r4,a
      00030B C0 07            [24] 1804 	push	ar7
      00030D C0 06            [24] 1805 	push	ar6
      00030F C0 05            [24] 1806 	push	ar5
      000311 8A 82            [24] 1807 	mov	dpl,r2
      000313 8B 83            [24] 1808 	mov	dph,r3
      000315 8C F0            [24] 1809 	mov	b,r4
      000317 12r00r00         [24] 1810 	lcall	_list_add
      00031A 15 81            [12] 1811 	dec	sp
      00031C 15 81            [12] 1812 	dec	sp
      00031E 15 81            [12] 1813 	dec	sp
                                   1814 ;	../../core/net/mac/lpp.c:285: ctimer_set(&stream_off_timer, STREAM_OFF_TIME,
      000320 E4               [12] 1815 	clr	a
      000321 C0 E0            [24] 1816 	push	acc
      000323 C0 E0            [24] 1817 	push	acc
      000325 C0 E0            [24] 1818 	push	acc
      000327 74rC2            [12] 1819 	mov	a,#_stream_off
      000329 C0 E0            [24] 1820 	push	acc
      00032B 74s02            [12] 1821 	mov	a,#(_stream_off >> 8)
      00032D C0 E0            [24] 1822 	push	acc
      00032F 74 40            [12] 1823 	mov	a,#0x40
      000331 C0 E0            [24] 1824 	push	acc
      000333 E4               [12] 1825 	clr	a
      000334 C0 E0            [24] 1826 	push	acc
      000336 90r01rA5         [24] 1827 	mov	dptr,#_stream_off_timer
      000339 75 F0 00         [24] 1828 	mov	b,#0x00
      00033C 12r00r00         [24] 1829 	lcall	_ctimer_set
      00033F E5 81            [12] 1830 	mov	a,sp
      000341 24 F9            [12] 1831 	add	a,#0xf9
      000343 F5 81            [12] 1832 	mov	sp,a
                                   1833 ;	../../core/net/mac/lpp.c:287: return;
      000345 22               [24] 1834 	ret
      000346                       1835 00102$:
                                   1836 ;	../../core/net/mac/lpp.c:291: if(rimeaddr_cmp(neighbor, &rimeaddr_null)) {
      000346 74r00            [12] 1837 	mov	a,#_rimeaddr_null
      000348 C0 E0            [24] 1838 	push	acc
      00034A 74s00            [12] 1839 	mov	a,#(_rimeaddr_null >> 8)
      00034C C0 E0            [24] 1840 	push	acc
      00034E 74 80            [12] 1841 	mov	a,#0x80
      000350 C0 E0            [24] 1842 	push	acc
      000352 8D 82            [24] 1843 	mov	dpl,r5
      000354 8E 83            [24] 1844 	mov	dph,r6
      000356 8F F0            [24] 1845 	mov	b,r7
      000358 12r00r00         [24] 1846 	lcall	_rimeaddr_cmp
      00035B AE 82            [24] 1847 	mov	r6,dpl
      00035D AF 83            [24] 1848 	mov	r7,dph
      00035F 15 81            [12] 1849 	dec	sp
      000361 15 81            [12] 1850 	dec	sp
      000363 15 81            [12] 1851 	dec	sp
      000365 EE               [12] 1852 	mov	a,r6
      000366 4F               [12] 1853 	orl	a,r7
      000367 60 31            [24] 1854 	jz	00104$
                                   1855 ;	../../core/net/mac/lpp.c:295: turn_radio_on();
      000369 12r00r00         [24] 1856 	lcall	_turn_radio_on
                                   1857 ;	../../core/net/mac/lpp.c:297: list_add(queued_packets_list, i);
      00036C E5 81            [12] 1858 	mov	a,sp
      00036E 24 FC            [12] 1859 	add	a,#0xfc
      000370 F8               [12] 1860 	mov	r0,a
      000371 86 05            [24] 1861 	mov	ar5,@r0
      000373 08               [12] 1862 	inc	r0
      000374 86 06            [24] 1863 	mov	ar6,@r0
      000376 08               [12] 1864 	inc	r0
      000377 86 07            [24] 1865 	mov	ar7,@r0
      000379 90r00r0E         [24] 1866 	mov	dptr,#_queued_packets_list
      00037C E0               [24] 1867 	movx	a,@dptr
      00037D FA               [12] 1868 	mov	r2,a
      00037E A3               [24] 1869 	inc	dptr
      00037F E0               [24] 1870 	movx	a,@dptr
      000380 FB               [12] 1871 	mov	r3,a
      000381 A3               [24] 1872 	inc	dptr
      000382 E0               [24] 1873 	movx	a,@dptr
      000383 FC               [12] 1874 	mov	r4,a
      000384 C0 05            [24] 1875 	push	ar5
      000386 C0 06            [24] 1876 	push	ar6
      000388 C0 07            [24] 1877 	push	ar7
      00038A 8A 82            [24] 1878 	mov	dpl,r2
      00038C 8B 83            [24] 1879 	mov	dph,r3
      00038E 8C F0            [24] 1880 	mov	b,r4
      000390 12r00r00         [24] 1881 	lcall	_list_add
      000393 15 81            [12] 1882 	dec	sp
      000395 15 81            [12] 1883 	dec	sp
      000397 15 81            [12] 1884 	dec	sp
                                   1885 ;	../../core/net/mac/lpp.c:298: return;
      000399 22               [24] 1886 	ret
      00039A                       1887 00104$:
                                   1888 ;	../../core/net/mac/lpp.c:346: turn_radio_on();
      00039A 12r00r00         [24] 1889 	lcall	_turn_radio_on
                                   1890 ;	../../core/net/mac/lpp.c:347: list_add(queued_packets_list, i);
      00039D E5 81            [12] 1891 	mov	a,sp
      00039F 24 FC            [12] 1892 	add	a,#0xfc
      0003A1 F8               [12] 1893 	mov	r0,a
      0003A2 86 05            [24] 1894 	mov	ar5,@r0
      0003A4 08               [12] 1895 	inc	r0
      0003A5 86 06            [24] 1896 	mov	ar6,@r0
      0003A7 08               [12] 1897 	inc	r0
      0003A8 86 07            [24] 1898 	mov	ar7,@r0
      0003AA 90r00r0E         [24] 1899 	mov	dptr,#_queued_packets_list
      0003AD E0               [24] 1900 	movx	a,@dptr
      0003AE FA               [12] 1901 	mov	r2,a
      0003AF A3               [24] 1902 	inc	dptr
      0003B0 E0               [24] 1903 	movx	a,@dptr
      0003B1 FB               [12] 1904 	mov	r3,a
      0003B2 A3               [24] 1905 	inc	dptr
      0003B3 E0               [24] 1906 	movx	a,@dptr
      0003B4 FC               [12] 1907 	mov	r4,a
      0003B5 C0 05            [24] 1908 	push	ar5
      0003B7 C0 06            [24] 1909 	push	ar6
      0003B9 C0 07            [24] 1910 	push	ar7
      0003BB 8A 82            [24] 1911 	mov	dpl,r2
      0003BD 8B 83            [24] 1912 	mov	dph,r3
      0003BF 8C F0            [24] 1913 	mov	b,r4
      0003C1 12r00r00         [24] 1914 	lcall	_list_add
      0003C4 15 81            [12] 1915 	dec	sp
      0003C6 15 81            [12] 1916 	dec	sp
      0003C8 15 81            [12] 1917 	dec	sp
                                   1918 ;	../../core/net/mac/lpp.c:348: return;
                                   1919 ;	../../core/net/mac/lpp.c:349: }
      0003CA 22               [24] 1920 	ret
                                   1921 ;------------------------------------------------------------
                                   1922 ;Allocation info for local variables in function 'remove_queued_packet'
                                   1923 ;------------------------------------------------------------
                                   1924 ;tx_ok                     Allocated to stack - sp -10
                                   1925 ;i                         Allocated to stack - sp -7
                                   1926 ;sent                      Allocated to stack - sp -4
                                   1927 ;ptr                       Allocated to stack - sp -2
                                   1928 ;num_transmissions         Allocated to registers r2 r5 
                                   1929 ;status                    Allocated to registers r6 r7 
                                   1930 ;------------------------------------------------------------
                                   1931 ;	../../core/net/mac/lpp.c:352: remove_queued_packet(struct queue_list_item *i, uint8_t tx_ok)
                                   1932 ;	-----------------------------------------
                                   1933 ;	 function remove_queued_packet
                                   1934 ;	-----------------------------------------
      0003CB                       1935 _remove_queued_packet:
      0003CB C0 82            [24] 1936 	push	dpl
      0003CD C0 83            [24] 1937 	push	dph
      0003CF C0 F0            [24] 1938 	push	b
      0003D1 E5 81            [12] 1939 	mov	a,sp
      0003D3 24 05            [12] 1940 	add	a,#0x05
                                   1941 ;	../../core/net/mac/lpp.c:363: queuebuf_to_packetbuf(i->packet);
      0003D5 F5 81            [12] 1942 	mov	sp,a
      0003D7 24 F9            [12] 1943 	add	a,#0xf9
      0003D9 F8               [12] 1944 	mov	r0,a
      0003DA 74 03            [12] 1945 	mov	a,#0x03
      0003DC 26               [12] 1946 	add	a,@r0
      0003DD FA               [12] 1947 	mov	r2,a
      0003DE E4               [12] 1948 	clr	a
      0003DF 08               [12] 1949 	inc	r0
      0003E0 36               [12] 1950 	addc	a,@r0
      0003E1 FB               [12] 1951 	mov	r3,a
      0003E2 08               [12] 1952 	inc	r0
      0003E3 86 04            [24] 1953 	mov	ar4,@r0
      0003E5 8A 82            [24] 1954 	mov	dpl,r2
      0003E7 8B 83            [24] 1955 	mov	dph,r3
      0003E9 8C F0            [24] 1956 	mov	b,r4
      0003EB 12r00r00         [24] 1957 	lcall	__gptrget
      0003EE FD               [12] 1958 	mov	r5,a
      0003EF A3               [24] 1959 	inc	dptr
      0003F0 12r00r00         [24] 1960 	lcall	__gptrget
      0003F3 FE               [12] 1961 	mov	r6,a
      0003F4 A3               [24] 1962 	inc	dptr
      0003F5 12r00r00         [24] 1963 	lcall	__gptrget
      0003F8 FF               [12] 1964 	mov	r7,a
      0003F9 8D 82            [24] 1965 	mov	dpl,r5
      0003FB 8E 83            [24] 1966 	mov	dph,r6
      0003FD 8F F0            [24] 1967 	mov	b,r7
      0003FF C0 04            [24] 1968 	push	ar4
      000401 C0 03            [24] 1969 	push	ar3
      000403 C0 02            [24] 1970 	push	ar2
      000405 12r00r00         [24] 1971 	lcall	_queuebuf_to_packetbuf
      000408 D0 02            [24] 1972 	pop	ar2
      00040A D0 03            [24] 1973 	pop	ar3
      00040C D0 04            [24] 1974 	pop	ar4
                                   1975 ;	../../core/net/mac/lpp.c:365: ctimer_stop(&i->removal_timer);
      00040E E5 81            [12] 1976 	mov	a,sp
      000410 24 F9            [12] 1977 	add	a,#0xf9
      000412 F8               [12] 1978 	mov	r0,a
      000413 74 06            [12] 1979 	mov	a,#0x06
      000415 26               [12] 1980 	add	a,@r0
      000416 FD               [12] 1981 	mov	r5,a
      000417 E4               [12] 1982 	clr	a
      000418 08               [12] 1983 	inc	r0
      000419 36               [12] 1984 	addc	a,@r0
      00041A FE               [12] 1985 	mov	r6,a
      00041B 08               [12] 1986 	inc	r0
      00041C 86 07            [24] 1987 	mov	ar7,@r0
      00041E 8D 82            [24] 1988 	mov	dpl,r5
      000420 8E 83            [24] 1989 	mov	dph,r6
      000422 8F F0            [24] 1990 	mov	b,r7
      000424 C0 04            [24] 1991 	push	ar4
      000426 C0 03            [24] 1992 	push	ar3
      000428 C0 02            [24] 1993 	push	ar2
      00042A 12r00r00         [24] 1994 	lcall	_ctimer_stop
      00042D D0 02            [24] 1995 	pop	ar2
      00042F D0 03            [24] 1996 	pop	ar3
      000431 D0 04            [24] 1997 	pop	ar4
                                   1998 ;	../../core/net/mac/lpp.c:366: queuebuf_free(i->packet);
      000433 8A 82            [24] 1999 	mov	dpl,r2
      000435 8B 83            [24] 2000 	mov	dph,r3
      000437 8C F0            [24] 2001 	mov	b,r4
      000439 12r00r00         [24] 2002 	lcall	__gptrget
      00043C FA               [12] 2003 	mov	r2,a
      00043D A3               [24] 2004 	inc	dptr
      00043E 12r00r00         [24] 2005 	lcall	__gptrget
      000441 FB               [12] 2006 	mov	r3,a
      000442 A3               [24] 2007 	inc	dptr
      000443 12r00r00         [24] 2008 	lcall	__gptrget
      000446 FC               [12] 2009 	mov	r4,a
      000447 8A 82            [24] 2010 	mov	dpl,r2
      000449 8B 83            [24] 2011 	mov	dph,r3
      00044B 8C F0            [24] 2012 	mov	b,r4
      00044D 12r00r00         [24] 2013 	lcall	_queuebuf_free
                                   2014 ;	../../core/net/mac/lpp.c:367: list_remove(pending_packets_list, i);
      000450 E5 81            [12] 2015 	mov	a,sp
      000452 24 F9            [12] 2016 	add	a,#0xf9
      000454 F8               [12] 2017 	mov	r0,a
      000455 86 05            [24] 2018 	mov	ar5,@r0
      000457 08               [12] 2019 	inc	r0
      000458 86 06            [24] 2020 	mov	ar6,@r0
      00045A 08               [12] 2021 	inc	r0
      00045B 86 07            [24] 2022 	mov	ar7,@r0
      00045D 90r00r08         [24] 2023 	mov	dptr,#_pending_packets_list
      000460 E0               [24] 2024 	movx	a,@dptr
      000461 FA               [12] 2025 	mov	r2,a
      000462 A3               [24] 2026 	inc	dptr
      000463 E0               [24] 2027 	movx	a,@dptr
      000464 FB               [12] 2028 	mov	r3,a
      000465 A3               [24] 2029 	inc	dptr
      000466 E0               [24] 2030 	movx	a,@dptr
      000467 FC               [12] 2031 	mov	r4,a
      000468 C0 05            [24] 2032 	push	ar5
      00046A C0 06            [24] 2033 	push	ar6
      00046C C0 07            [24] 2034 	push	ar7
      00046E 8A 82            [24] 2035 	mov	dpl,r2
      000470 8B 83            [24] 2036 	mov	dph,r3
      000472 8C F0            [24] 2037 	mov	b,r4
      000474 12r00r00         [24] 2038 	lcall	_list_remove
      000477 15 81            [12] 2039 	dec	sp
      000479 15 81            [12] 2040 	dec	sp
      00047B 15 81            [12] 2041 	dec	sp
                                   2042 ;	../../core/net/mac/lpp.c:368: list_remove(queued_packets_list, i);
      00047D E5 81            [12] 2043 	mov	a,sp
      00047F 24 F9            [12] 2044 	add	a,#0xf9
      000481 F8               [12] 2045 	mov	r0,a
      000482 86 05            [24] 2046 	mov	ar5,@r0
      000484 08               [12] 2047 	inc	r0
      000485 86 06            [24] 2048 	mov	ar6,@r0
      000487 08               [12] 2049 	inc	r0
      000488 86 07            [24] 2050 	mov	ar7,@r0
      00048A 90r00r0E         [24] 2051 	mov	dptr,#_queued_packets_list
      00048D E0               [24] 2052 	movx	a,@dptr
      00048E FA               [12] 2053 	mov	r2,a
      00048F A3               [24] 2054 	inc	dptr
      000490 E0               [24] 2055 	movx	a,@dptr
      000491 FB               [12] 2056 	mov	r3,a
      000492 A3               [24] 2057 	inc	dptr
      000493 E0               [24] 2058 	movx	a,@dptr
      000494 FC               [12] 2059 	mov	r4,a
      000495 C0 05            [24] 2060 	push	ar5
      000497 C0 06            [24] 2061 	push	ar6
      000499 C0 07            [24] 2062 	push	ar7
      00049B 8A 82            [24] 2063 	mov	dpl,r2
      00049D 8B 83            [24] 2064 	mov	dph,r3
      00049F 8C F0            [24] 2065 	mov	b,r4
      0004A1 12r00r00         [24] 2066 	lcall	_list_remove
      0004A4 15 81            [12] 2067 	dec	sp
      0004A6 15 81            [12] 2068 	dec	sp
      0004A8 15 81            [12] 2069 	dec	sp
                                   2070 ;	../../core/net/mac/lpp.c:371: if(list_length(queued_packets_list) == 0 && is_listening == 0) {
      0004AA 90r00r0E         [24] 2071 	mov	dptr,#_queued_packets_list
      0004AD E0               [24] 2072 	movx	a,@dptr
      0004AE FD               [12] 2073 	mov	r5,a
      0004AF A3               [24] 2074 	inc	dptr
      0004B0 E0               [24] 2075 	movx	a,@dptr
      0004B1 FE               [12] 2076 	mov	r6,a
      0004B2 A3               [24] 2077 	inc	dptr
      0004B3 E0               [24] 2078 	movx	a,@dptr
      0004B4 FF               [12] 2079 	mov	r7,a
      0004B5 8D 82            [24] 2080 	mov	dpl,r5
      0004B7 8E 83            [24] 2081 	mov	dph,r6
      0004B9 8F F0            [24] 2082 	mov	b,r7
      0004BB 12r00r00         [24] 2083 	lcall	_list_length
      0004BE E5 82            [12] 2084 	mov	a,dpl
      0004C0 85 83 F0         [24] 2085 	mov	b,dph
      0004C3 45 F0            [12] 2086 	orl	a,b
      0004C5 70 22            [24] 2087 	jnz	00102$
      0004C7 90r00r00         [24] 2088 	mov	dptr,#_is_listening
      0004CA E0               [24] 2089 	movx	a,@dptr
      0004CB 70 1C            [24] 2090 	jnz	00102$
                                   2091 ;	../../core/net/mac/lpp.c:372: turn_radio_off();
      0004CD 12r00r1A         [24] 2092 	lcall	_turn_radio_off
                                   2093 ;	../../core/net/mac/lpp.c:373: compower_accumulate(&i->compower);
      0004D0 E5 81            [12] 2094 	mov	a,sp
      0004D2 24 F9            [12] 2095 	add	a,#0xf9
      0004D4 F8               [12] 2096 	mov	r0,a
      0004D5 74 1B            [12] 2097 	mov	a,#0x1b
      0004D7 26               [12] 2098 	add	a,@r0
      0004D8 FD               [12] 2099 	mov	r5,a
      0004D9 E4               [12] 2100 	clr	a
      0004DA 08               [12] 2101 	inc	r0
      0004DB 36               [12] 2102 	addc	a,@r0
      0004DC FE               [12] 2103 	mov	r6,a
      0004DD 08               [12] 2104 	inc	r0
      0004DE 86 07            [24] 2105 	mov	ar7,@r0
      0004E0 8D 82            [24] 2106 	mov	dpl,r5
      0004E2 8E 83            [24] 2107 	mov	dph,r6
      0004E4 8F F0            [24] 2108 	mov	b,r7
      0004E6 12r00r00         [24] 2109 	lcall	_compower_accumulate
      0004E9                       2110 00102$:
                                   2111 ;	../../core/net/mac/lpp.c:376: sent = i->sent_callback;
      0004E9 E5 81            [12] 2112 	mov	a,sp
      0004EB 24 F9            [12] 2113 	add	a,#0xf9
      0004ED F8               [12] 2114 	mov	r0,a
      0004EE 74 23            [12] 2115 	mov	a,#0x23
      0004F0 26               [12] 2116 	add	a,@r0
      0004F1 FE               [12] 2117 	mov	r6,a
      0004F2 E4               [12] 2118 	clr	a
      0004F3 08               [12] 2119 	inc	r0
      0004F4 36               [12] 2120 	addc	a,@r0
      0004F5 FD               [12] 2121 	mov	r5,a
      0004F6 08               [12] 2122 	inc	r0
      0004F7 86 07            [24] 2123 	mov	ar7,@r0
      0004F9 8E 82            [24] 2124 	mov	dpl,r6
      0004FB 8D 83            [24] 2125 	mov	dph,r5
      0004FD 8F F0            [24] 2126 	mov	b,r7
      0004FF E5 81            [12] 2127 	mov	a,sp
      000501 24 FC            [12] 2128 	add	a,#0xfc
      000503 F8               [12] 2129 	mov	r0,a
      000504 12r00r00         [24] 2130 	lcall	__gptrget
      000507 F6               [12] 2131 	mov	@r0,a
      000508 A3               [24] 2132 	inc	dptr
      000509 12r00r00         [24] 2133 	lcall	__gptrget
      00050C 08               [12] 2134 	inc	r0
      00050D F6               [12] 2135 	mov	@r0,a
                                   2136 ;	../../core/net/mac/lpp.c:377: ptr = i->sent_callback_ptr;
      00050E E5 81            [12] 2137 	mov	a,sp
      000510 24 F9            [12] 2138 	add	a,#0xf9
      000512 F8               [12] 2139 	mov	r0,a
      000513 74 25            [12] 2140 	mov	a,#0x25
      000515 26               [12] 2141 	add	a,@r0
      000516 FB               [12] 2142 	mov	r3,a
      000517 E4               [12] 2143 	clr	a
      000518 08               [12] 2144 	inc	r0
      000519 36               [12] 2145 	addc	a,@r0
      00051A FC               [12] 2146 	mov	r4,a
      00051B 08               [12] 2147 	inc	r0
      00051C 86 05            [24] 2148 	mov	ar5,@r0
      00051E 8B 82            [24] 2149 	mov	dpl,r3
      000520 8C 83            [24] 2150 	mov	dph,r4
      000522 8D F0            [24] 2151 	mov	b,r5
      000524 A8 81            [24] 2152 	mov	r0,sp
      000526 18               [12] 2153 	dec	r0
      000527 18               [12] 2154 	dec	r0
      000528 12r00r00         [24] 2155 	lcall	__gptrget
      00052B F6               [12] 2156 	mov	@r0,a
      00052C A3               [24] 2157 	inc	dptr
      00052D 12r00r00         [24] 2158 	lcall	__gptrget
      000530 08               [12] 2159 	inc	r0
      000531 F6               [12] 2160 	mov	@r0,a
      000532 A3               [24] 2161 	inc	dptr
      000533 12r00r00         [24] 2162 	lcall	__gptrget
      000536 08               [12] 2163 	inc	r0
      000537 F6               [12] 2164 	mov	@r0,a
                                   2165 ;	../../core/net/mac/lpp.c:378: num_transmissions = i->num_transmissions;
      000538 E5 81            [12] 2166 	mov	a,sp
      00053A 24 F9            [12] 2167 	add	a,#0xf9
      00053C F8               [12] 2168 	mov	r0,a
      00053D 74 28            [12] 2169 	mov	a,#0x28
      00053F 26               [12] 2170 	add	a,@r0
      000540 FA               [12] 2171 	mov	r2,a
      000541 E4               [12] 2172 	clr	a
      000542 08               [12] 2173 	inc	r0
      000543 36               [12] 2174 	addc	a,@r0
      000544 FC               [12] 2175 	mov	r4,a
      000545 08               [12] 2176 	inc	r0
      000546 86 05            [24] 2177 	mov	ar5,@r0
      000548 8A 82            [24] 2178 	mov	dpl,r2
      00054A 8C 83            [24] 2179 	mov	dph,r4
      00054C 8D F0            [24] 2180 	mov	b,r5
      00054E 12r00r00         [24] 2181 	lcall	__gptrget
      000551 FA               [12] 2182 	mov	r2,a
      000552 7D 00            [12] 2183 	mov	r5,#0x00
                                   2184 ;	../../core/net/mac/lpp.c:379: memb_free(&queued_packets_memb, i);
      000554 E5 81            [12] 2185 	mov	a,sp
      000556 24 F9            [12] 2186 	add	a,#0xf9
      000558 F8               [12] 2187 	mov	r0,a
      000559 86 03            [24] 2188 	mov	ar3,@r0
      00055B 08               [12] 2189 	inc	r0
      00055C 86 04            [24] 2190 	mov	ar4,@r0
      00055E 08               [12] 2191 	inc	r0
      00055F 86 07            [24] 2192 	mov	ar7,@r0
      000561 C0 05            [24] 2193 	push	ar5
      000563 C0 02            [24] 2194 	push	ar2
      000565 C0 03            [24] 2195 	push	ar3
      000567 C0 04            [24] 2196 	push	ar4
      000569 C0 07            [24] 2197 	push	ar7
      00056B 90r00r11         [24] 2198 	mov	dptr,#_queued_packets_memb
      00056E 75 F0 00         [24] 2199 	mov	b,#0x00
      000571 12r00r00         [24] 2200 	lcall	_memb_free
      000574 15 81            [12] 2201 	dec	sp
      000576 15 81            [12] 2202 	dec	sp
      000578 15 81            [12] 2203 	dec	sp
      00057A D0 02            [24] 2204 	pop	ar2
      00057C D0 05            [24] 2205 	pop	ar5
                                   2206 ;	../../core/net/mac/lpp.c:380: if(num_transmissions == 0 || tx_ok == 0) {
      00057E EA               [12] 2207 	mov	a,r2
      00057F 4D               [12] 2208 	orl	a,r5
      000580 60 08            [24] 2209 	jz	00104$
      000582 E5 81            [12] 2210 	mov	a,sp
      000584 24 F6            [12] 2211 	add	a,#0xf6
      000586 F8               [12] 2212 	mov	r0,a
      000587 E6               [12] 2213 	mov	a,@r0
      000588 70 06            [24] 2214 	jnz	00105$
      00058A                       2215 00104$:
                                   2216 ;	../../core/net/mac/lpp.c:381: status = MAC_TX_NOACK;
      00058A 7E 02            [12] 2217 	mov	r6,#0x02
      00058C 7F 00            [12] 2218 	mov	r7,#0x00
      00058E 80 04            [24] 2219 	sjmp	00110$
      000590                       2220 00105$:
                                   2221 ;	../../core/net/mac/lpp.c:383: status = MAC_TX_OK;
      000590 7E 00            [12] 2222 	mov	r6,#0x00
      000592 7F 00            [12] 2223 	mov	r7,#0x00
                                   2224 ;	../../core/net/mac/lpp.c:385: mac_call_sent_callback(sent, ptr, status, num_transmissions);
      000594                       2225 00110$:
      000594 E5 81            [12] 2226 	mov	a,sp
      000596 24 FC            [12] 2227 	add	a,#0xfc
      000598 F8               [12] 2228 	mov	r0,a
      000599 E6               [12] 2229 	mov	a,@r0
      00059A 08               [12] 2230 	inc	r0
      00059B 46               [12] 2231 	orl	a,@r0
      00059C 60 2D            [24] 2232 	jz	00113$
      00059E C0 02            [24] 2233 	push	ar2
      0005A0 C0 05            [24] 2234 	push	ar5
      0005A2 C0 06            [24] 2235 	push	ar6
      0005A4 C0 07            [24] 2236 	push	ar7
      0005A6 12r05rAB         [24] 2237 	lcall	00136$
      0005A9 80 1A            [24] 2238 	sjmp	00137$
      0005AB                       2239 00136$:
      0005AB E5 81            [12] 2240 	mov	a,sp
      0005AD 24 F6            [12] 2241 	add	a,#0xf6
      0005AF F8               [12] 2242 	mov	r0,a
      0005B0 E6               [12] 2243 	mov	a,@r0
      0005B1 C0 E0            [24] 2244 	push	acc
      0005B3 08               [12] 2245 	inc	r0
      0005B4 E6               [12] 2246 	mov	a,@r0
      0005B5 C0 E0            [24] 2247 	push	acc
      0005B7 E5 81            [12] 2248 	mov	a,sp
      0005B9 24 F6            [12] 2249 	add	a,#0xf6
      0005BB F8               [12] 2250 	mov	r0,a
      0005BC 86 82            [24] 2251 	mov	dpl,@r0
      0005BE 08               [12] 2252 	inc	r0
      0005BF 86 83            [24] 2253 	mov	dph,@r0
      0005C1 08               [12] 2254 	inc	r0
      0005C2 86 F0            [24] 2255 	mov	b,@r0
      0005C4 22               [24] 2256 	ret
      0005C5                       2257 00137$:
      0005C5 E5 81            [12] 2258 	mov	a,sp
      0005C7 24 FC            [12] 2259 	add	a,#0xfc
      0005C9 F5 81            [12] 2260 	mov	sp,a
      0005CB                       2261 00113$:
                                   2262 ;	../../core/net/mac/lpp.c:386: }
      0005CB E5 81            [12] 2263 	mov	a,sp
      0005CD 24 F8            [12] 2264 	add	a,#0xf8
      0005CF F5 81            [12] 2265 	mov	sp,a
      0005D1 22               [24] 2266 	ret
                                   2267 ;------------------------------------------------------------
                                   2268 ;Allocation info for local variables in function 'remove_queued_old_packet_callback'
                                   2269 ;------------------------------------------------------------
                                   2270 ;item                      Allocated to registers r5 r6 r7 
                                   2271 ;------------------------------------------------------------
                                   2272 ;	../../core/net/mac/lpp.c:389: remove_queued_old_packet_callback(void *item)
                                   2273 ;	-----------------------------------------
                                   2274 ;	 function remove_queued_old_packet_callback
                                   2275 ;	-----------------------------------------
      0005D2                       2276 _remove_queued_old_packet_callback:
      0005D2 AD 82            [24] 2277 	mov	r5,dpl
      0005D4 AE 83            [24] 2278 	mov	r6,dph
      0005D6 AF F0            [24] 2279 	mov	r7,b
                                   2280 ;	../../core/net/mac/lpp.c:391: remove_queued_packet(item, 0);
      0005D8 E4               [12] 2281 	clr	a
      0005D9 C0 E0            [24] 2282 	push	acc
      0005DB 8D 82            [24] 2283 	mov	dpl,r5
      0005DD 8E 83            [24] 2284 	mov	dph,r6
      0005DF 8F F0            [24] 2285 	mov	b,r7
      0005E1 12r03rCB         [24] 2286 	lcall	_remove_queued_packet
      0005E4 15 81            [12] 2287 	dec	sp
                                   2288 ;	../../core/net/mac/lpp.c:392: }
      0005E6 22               [24] 2289 	ret
                                   2290 ;------------------------------------------------------------
                                   2291 ;Allocation info for local variables in function 'listen_callback'
                                   2292 ;------------------------------------------------------------
                                   2293 ;periods                   Allocated to registers r6 r7 
                                   2294 ;------------------------------------------------------------
                                   2295 ;	../../core/net/mac/lpp.c:412: listen_callback(int periods)
                                   2296 ;	-----------------------------------------
                                   2297 ;	 function listen_callback
                                   2298 ;	-----------------------------------------
      0005E7                       2299 _listen_callback:
      0005E7 AE 82            [24] 2300 	mov	r6,dpl
                                   2301 ;	../../core/net/mac/lpp.c:414: is_listening = periods;
      0005E9 90r00r00         [24] 2302 	mov	dptr,#_is_listening
      0005EC EE               [12] 2303 	mov	a,r6
      0005ED F0               [24] 2304 	movx	@dptr,a
                                   2305 ;	../../core/net/mac/lpp.c:415: turn_radio_on();
                                   2306 ;	../../core/net/mac/lpp.c:416: }
      0005EE 02r00r00         [24] 2307 	ljmp	_turn_radio_on
                                   2308 ;------------------------------------------------------------
                                   2309 ;Allocation info for local variables in function 'send_probe'
                                   2310 ;------------------------------------------------------------
                                   2311 ;hdr                       Allocated to registers r5 r6 r7 
                                   2312 ;adata                     Allocated to stack - sp -5
                                   2313 ;a                         Allocated to stack - sp -2
                                   2314 ;hdrlen                    Allocated to registers r3 r4 
                                   2315 ;sloc0                     Allocated to stack - sp -8
                                   2316 ;------------------------------------------------------------
                                   2317 ;	../../core/net/mac/lpp.c:422: send_probe(void)
                                   2318 ;	-----------------------------------------
                                   2319 ;	 function send_probe
                                   2320 ;	-----------------------------------------
      0005F1                       2321 _send_probe:
      0005F1 E5 81            [12] 2322 	mov	a,sp
      0005F3 24 09            [12] 2323 	add	a,#0x09
      0005F5 F5 81            [12] 2324 	mov	sp,a
                                   2325 ;	../../core/net/mac/lpp.c:429: packetbuf_clear();
      0005F7 12r00r00         [24] 2326 	lcall	_packetbuf_clear
                                   2327 ;	../../core/net/mac/lpp.c:430: packetbuf_set_datalen(sizeof(struct lpp_hdr));
      0005FA 90 00 06         [24] 2328 	mov	dptr,#0x0006
      0005FD 12r00r00         [24] 2329 	lcall	_packetbuf_set_datalen
                                   2330 ;	../../core/net/mac/lpp.c:431: hdr = packetbuf_dataptr();
      000600 12r00r00         [24] 2331 	lcall	_packetbuf_dataptr
                                   2332 ;	../../core/net/mac/lpp.c:432: hdr->type = TYPE_PROBE;
      000603 AD 82            [24] 2333 	mov	r5,dpl
      000605 AE 83            [24] 2334 	mov	r6,dph
      000607 AF F0            [24] 2335 	mov	r7,b
      000609 74 01            [12] 2336 	mov	a,#0x01
      00060B 12r00r00         [24] 2337 	lcall	__gptrput
      00060E A3               [24] 2338 	inc	dptr
      00060F E4               [12] 2339 	clr	a
      000610 12r00r00         [24] 2340 	lcall	__gptrput
                                   2341 ;	../../core/net/mac/lpp.c:433: rimeaddr_copy(&hdr->sender, &rimeaddr_node_addr);
      000613 74 02            [12] 2342 	mov	a,#0x02
      000615 2D               [12] 2343 	add	a,r5
      000616 FA               [12] 2344 	mov	r2,a
      000617 E4               [12] 2345 	clr	a
      000618 3E               [12] 2346 	addc	a,r6
      000619 FB               [12] 2347 	mov	r3,a
      00061A 8F 04            [24] 2348 	mov	ar4,r7
      00061C C0 07            [24] 2349 	push	ar7
      00061E C0 06            [24] 2350 	push	ar6
      000620 C0 05            [24] 2351 	push	ar5
      000622 74r00            [12] 2352 	mov	a,#_rimeaddr_node_addr
      000624 C0 E0            [24] 2353 	push	acc
      000626 74s00            [12] 2354 	mov	a,#(_rimeaddr_node_addr >> 8)
      000628 C0 E0            [24] 2355 	push	acc
      00062A E4               [12] 2356 	clr	a
      00062B C0 E0            [24] 2357 	push	acc
      00062D 8A 82            [24] 2358 	mov	dpl,r2
      00062F 8B 83            [24] 2359 	mov	dph,r3
      000631 8C F0            [24] 2360 	mov	b,r4
      000633 12r00r00         [24] 2361 	lcall	_rimeaddr_copy
      000636 15 81            [12] 2362 	dec	sp
      000638 15 81            [12] 2363 	dec	sp
      00063A 15 81            [12] 2364 	dec	sp
      00063C D0 05            [24] 2365 	pop	ar5
      00063E D0 06            [24] 2366 	pop	ar6
      000640 D0 07            [24] 2367 	pop	ar7
                                   2368 ;	../../core/net/mac/lpp.c:435: rimeaddr_copy(&hdr->receiver, &rimeaddr_null);
      000642 74 04            [12] 2369 	mov	a,#0x04
      000644 2D               [12] 2370 	add	a,r5
      000645 FA               [12] 2371 	mov	r2,a
      000646 E4               [12] 2372 	clr	a
      000647 3E               [12] 2373 	addc	a,r6
      000648 FB               [12] 2374 	mov	r3,a
      000649 8F 04            [24] 2375 	mov	ar4,r7
      00064B C0 07            [24] 2376 	push	ar7
      00064D C0 06            [24] 2377 	push	ar6
      00064F C0 05            [24] 2378 	push	ar5
      000651 74r00            [12] 2379 	mov	a,#_rimeaddr_null
      000653 C0 E0            [24] 2380 	push	acc
      000655 74s00            [12] 2381 	mov	a,#(_rimeaddr_null >> 8)
      000657 C0 E0            [24] 2382 	push	acc
      000659 74 80            [12] 2383 	mov	a,#0x80
      00065B C0 E0            [24] 2384 	push	acc
      00065D 8A 82            [24] 2385 	mov	dpl,r2
      00065F 8B 83            [24] 2386 	mov	dph,r3
      000661 8C F0            [24] 2387 	mov	b,r4
      000663 12r00r00         [24] 2388 	lcall	_rimeaddr_copy
      000666 15 81            [12] 2389 	dec	sp
      000668 15 81            [12] 2390 	dec	sp
      00066A 15 81            [12] 2391 	dec	sp
                                   2392 ;	../../core/net/mac/lpp.c:437: packetbuf_set_addr(PACKETBUF_ADDR_RECEIVER, &rimeaddr_null);
      00066C 74r00            [12] 2393 	mov	a,#_rimeaddr_null
      00066E C0 E0            [24] 2394 	push	acc
      000670 74s00            [12] 2395 	mov	a,#(_rimeaddr_null >> 8)
      000672 C0 E0            [24] 2396 	push	acc
      000674 74 80            [12] 2397 	mov	a,#0x80
      000676 C0 E0            [24] 2398 	push	acc
      000678 75 82 19         [24] 2399 	mov	dpl,#0x19
      00067B 12r00r00         [24] 2400 	lcall	_packetbuf_set_addr
      00067E 15 81            [12] 2401 	dec	sp
      000680 15 81            [12] 2402 	dec	sp
      000682 15 81            [12] 2403 	dec	sp
                                   2404 ;	../../core/net/mac/lpp.c:439: int hdrlen = NETSTACK_FRAMER.create();
      000684 90r00r00         [24] 2405 	mov	dptr,#_framer_802154
      000687 E4               [12] 2406 	clr	a
      000688 93               [24] 2407 	movc	a,@a+dptr
      000689 FB               [12] 2408 	mov	r3,a
      00068A A3               [24] 2409 	inc	dptr
      00068B E4               [12] 2410 	clr	a
      00068C 93               [24] 2411 	movc	a,@a+dptr
      00068D FC               [12] 2412 	mov	r4,a
      00068E 8B 82            [24] 2413 	mov	dpl,r3
      000690 8C 83            [24] 2414 	mov	dph,r4
      000692 12r00r00         [24] 2415 	lcall	__sdcc_call_dptr
      000695 AB 82            [24] 2416 	mov	r3,dpl
      000697 AC 83            [24] 2417 	mov	r4,dph
      000699 D0 05            [24] 2418 	pop	ar5
      00069B D0 06            [24] 2419 	pop	ar6
      00069D D0 07            [24] 2420 	pop	ar7
                                   2421 ;	../../core/net/mac/lpp.c:440: if(hdrlen < 0) {
      00069F EC               [12] 2422 	mov	a,r4
      0006A0 30 E7 03         [24] 2423 	jnb	acc.7,00102$
                                   2424 ;	../../core/net/mac/lpp.c:442: return;
      0006A3 02r09r03         [24] 2425 	ljmp	00110$
      0006A6                       2426 00102$:
                                   2427 ;	../../core/net/mac/lpp.c:447: adata = (struct announcement_msg *)((char *)hdr + sizeof(struct lpp_hdr));
      0006A6 74 06            [12] 2428 	mov	a,#0x06
      0006A8 2D               [12] 2429 	add	a,r5
      0006A9 FD               [12] 2430 	mov	r5,a
      0006AA E4               [12] 2431 	clr	a
      0006AB 3E               [12] 2432 	addc	a,r6
      0006AC FE               [12] 2433 	mov	r6,a
      0006AD E5 81            [12] 2434 	mov	a,sp
      0006AF 24 FB            [12] 2435 	add	a,#0xfb
      0006B1 F8               [12] 2436 	mov	r0,a
      0006B2 A6 05            [24] 2437 	mov	@r0,ar5
      0006B4 08               [12] 2438 	inc	r0
      0006B5 A6 06            [24] 2439 	mov	@r0,ar6
      0006B7 08               [12] 2440 	inc	r0
      0006B8 A6 07            [24] 2441 	mov	@r0,ar7
                                   2442 ;	../../core/net/mac/lpp.c:449: adata->num = 0;
      0006BA E5 81            [12] 2443 	mov	a,sp
      0006BC 24 FB            [12] 2444 	add	a,#0xfb
      0006BE F8               [12] 2445 	mov	r0,a
      0006BF 86 82            [24] 2446 	mov	dpl,@r0
      0006C1 08               [12] 2447 	inc	r0
      0006C2 86 83            [24] 2448 	mov	dph,@r0
      0006C4 08               [12] 2449 	inc	r0
      0006C5 86 F0            [24] 2450 	mov	b,@r0
      0006C7 E4               [12] 2451 	clr	a
      0006C8 12r00r00         [24] 2452 	lcall	__gptrput
      0006CB A3               [24] 2453 	inc	dptr
      0006CC 12r00r00         [24] 2454 	lcall	__gptrput
                                   2455 ;	../../core/net/mac/lpp.c:450: for(a = announcement_list(); a != NULL; a = list_item_next(a)) {
      0006CF 12r00r00         [24] 2456 	lcall	_announcement_list
      0006D2 AA 82            [24] 2457 	mov	r2,dpl
      0006D4 AB 83            [24] 2458 	mov	r3,dph
      0006D6 AC F0            [24] 2459 	mov	r4,b
      0006D8 A8 81            [24] 2460 	mov	r0,sp
      0006DA 18               [12] 2461 	dec	r0
      0006DB 18               [12] 2462 	dec	r0
      0006DC A6 02            [24] 2463 	mov	@r0,ar2
      0006DE 08               [12] 2464 	inc	r0
      0006DF A6 03            [24] 2465 	mov	@r0,ar3
      0006E1 08               [12] 2466 	inc	r0
      0006E2 A6 04            [24] 2467 	mov	@r0,ar4
      0006E4 E5 81            [12] 2468 	mov	a,sp
      0006E6 24 FB            [12] 2469 	add	a,#0xfb
      0006E8 F8               [12] 2470 	mov	r0,a
      0006E9 74 02            [12] 2471 	mov	a,#0x02
      0006EB 26               [12] 2472 	add	a,@r0
      0006EC FA               [12] 2473 	mov	r2,a
      0006ED E4               [12] 2474 	clr	a
      0006EE 08               [12] 2475 	inc	r0
      0006EF 36               [12] 2476 	addc	a,@r0
      0006F0 FB               [12] 2477 	mov	r3,a
      0006F1 08               [12] 2478 	inc	r0
      0006F2 86 04            [24] 2479 	mov	ar4,@r0
      0006F4                       2480 00108$:
      0006F4 A8 81            [24] 2481 	mov	r0,sp
      0006F6 18               [12] 2482 	dec	r0
      0006F7 18               [12] 2483 	dec	r0
      0006F8 E6               [12] 2484 	mov	a,@r0
      0006F9 08               [12] 2485 	inc	r0
      0006FA 46               [12] 2486 	orl	a,@r0
      0006FB 70 03            [24] 2487 	jnz	00129$
      0006FD 02r08r39         [24] 2488 	ljmp	00103$
      000700                       2489 00129$:
                                   2490 ;	../../core/net/mac/lpp.c:451: adata->data[adata->num].id = a->id;
      000700 E5 81            [12] 2491 	mov	a,sp
      000702 24 FB            [12] 2492 	add	a,#0xfb
      000704 F8               [12] 2493 	mov	r0,a
      000705 86 82            [24] 2494 	mov	dpl,@r0
      000707 08               [12] 2495 	inc	r0
      000708 86 83            [24] 2496 	mov	dph,@r0
      00070A 08               [12] 2497 	inc	r0
      00070B 86 F0            [24] 2498 	mov	b,@r0
      00070D 12r00r00         [24] 2499 	lcall	__gptrget
      000710 FE               [12] 2500 	mov	r6,a
      000711 A3               [24] 2501 	inc	dptr
      000712 12r00r00         [24] 2502 	lcall	__gptrget
      000715 FF               [12] 2503 	mov	r7,a
      000716 EE               [12] 2504 	mov	a,r6
      000717 2E               [12] 2505 	add	a,r6
      000718 FE               [12] 2506 	mov	r6,a
      000719 EF               [12] 2507 	mov	a,r7
      00071A 33               [12] 2508 	rlc	a
      00071B FF               [12] 2509 	mov	r7,a
      00071C EE               [12] 2510 	mov	a,r6
      00071D 2E               [12] 2511 	add	a,r6
      00071E FE               [12] 2512 	mov	r6,a
      00071F EF               [12] 2513 	mov	a,r7
      000720 33               [12] 2514 	rlc	a
      000721 FF               [12] 2515 	mov	r7,a
      000722 E5 81            [12] 2516 	mov	a,sp
      000724 24 F8            [12] 2517 	add	a,#0xf8
      000726 F8               [12] 2518 	mov	r0,a
      000727 EE               [12] 2519 	mov	a,r6
      000728 2A               [12] 2520 	add	a,r2
      000729 F6               [12] 2521 	mov	@r0,a
      00072A EF               [12] 2522 	mov	a,r7
      00072B 3B               [12] 2523 	addc	a,r3
      00072C 08               [12] 2524 	inc	r0
      00072D F6               [12] 2525 	mov	@r0,a
      00072E 08               [12] 2526 	inc	r0
      00072F A6 04            [24] 2527 	mov	@r0,ar4
      000731 A8 81            [24] 2528 	mov	r0,sp
      000733 18               [12] 2529 	dec	r0
      000734 18               [12] 2530 	dec	r0
      000735 74 03            [12] 2531 	mov	a,#0x03
      000737 26               [12] 2532 	add	a,@r0
      000738 FE               [12] 2533 	mov	r6,a
      000739 E4               [12] 2534 	clr	a
      00073A 08               [12] 2535 	inc	r0
      00073B 36               [12] 2536 	addc	a,@r0
      00073C FD               [12] 2537 	mov	r5,a
      00073D 08               [12] 2538 	inc	r0
      00073E 86 07            [24] 2539 	mov	ar7,@r0
      000740 8E 82            [24] 2540 	mov	dpl,r6
      000742 8D 83            [24] 2541 	mov	dph,r5
      000744 8F F0            [24] 2542 	mov	b,r7
      000746 12r00r00         [24] 2543 	lcall	__gptrget
      000749 FE               [12] 2544 	mov	r6,a
      00074A A3               [24] 2545 	inc	dptr
      00074B 12r00r00         [24] 2546 	lcall	__gptrget
      00074E FD               [12] 2547 	mov	r5,a
      00074F E5 81            [12] 2548 	mov	a,sp
      000751 24 F8            [12] 2549 	add	a,#0xf8
      000753 F8               [12] 2550 	mov	r0,a
      000754 86 82            [24] 2551 	mov	dpl,@r0
      000756 08               [12] 2552 	inc	r0
      000757 86 83            [24] 2553 	mov	dph,@r0
      000759 08               [12] 2554 	inc	r0
      00075A 86 F0            [24] 2555 	mov	b,@r0
      00075C EE               [12] 2556 	mov	a,r6
      00075D 12r00r00         [24] 2557 	lcall	__gptrput
      000760 A3               [24] 2558 	inc	dptr
      000761 ED               [12] 2559 	mov	a,r5
      000762 12r00r00         [24] 2560 	lcall	__gptrput
                                   2561 ;	../../core/net/mac/lpp.c:452: adata->data[adata->num].value = a->value;
      000765 E5 81            [12] 2562 	mov	a,sp
      000767 24 FB            [12] 2563 	add	a,#0xfb
      000769 F8               [12] 2564 	mov	r0,a
      00076A 86 82            [24] 2565 	mov	dpl,@r0
      00076C 08               [12] 2566 	inc	r0
      00076D 86 83            [24] 2567 	mov	dph,@r0
      00076F 08               [12] 2568 	inc	r0
      000770 86 F0            [24] 2569 	mov	b,@r0
      000772 12r00r00         [24] 2570 	lcall	__gptrget
      000775 FE               [12] 2571 	mov	r6,a
      000776 A3               [24] 2572 	inc	dptr
      000777 12r00r00         [24] 2573 	lcall	__gptrget
      00077A FF               [12] 2574 	mov	r7,a
      00077B EE               [12] 2575 	mov	a,r6
      00077C 2E               [12] 2576 	add	a,r6
      00077D FE               [12] 2577 	mov	r6,a
      00077E EF               [12] 2578 	mov	a,r7
      00077F 33               [12] 2579 	rlc	a
      000780 FF               [12] 2580 	mov	r7,a
      000781 EE               [12] 2581 	mov	a,r6
      000782 2E               [12] 2582 	add	a,r6
      000783 FE               [12] 2583 	mov	r6,a
      000784 EF               [12] 2584 	mov	a,r7
      000785 33               [12] 2585 	rlc	a
      000786 FF               [12] 2586 	mov	r7,a
      000787 EE               [12] 2587 	mov	a,r6
      000788 2A               [12] 2588 	add	a,r2
      000789 FE               [12] 2589 	mov	r6,a
      00078A EF               [12] 2590 	mov	a,r7
      00078B 3B               [12] 2591 	addc	a,r3
      00078C FF               [12] 2592 	mov	r7,a
      00078D 8C 05            [24] 2593 	mov	ar5,r4
      00078F 74 02            [12] 2594 	mov	a,#0x02
      000791 2E               [12] 2595 	add	a,r6
      000792 FE               [12] 2596 	mov	r6,a
      000793 E4               [12] 2597 	clr	a
      000794 3F               [12] 2598 	addc	a,r7
      000795 FF               [12] 2599 	mov	r7,a
      000796 C0 02            [24] 2600 	push	ar2
      000798 C0 03            [24] 2601 	push	ar3
      00079A C0 04            [24] 2602 	push	ar4
      00079C E5 81            [12] 2603 	mov	a,sp
      00079E 24 FB            [12] 2604 	add	a,#0xfb
      0007A0 F8               [12] 2605 	mov	r0,a
      0007A1 74 05            [12] 2606 	mov	a,#0x05
      0007A3 26               [12] 2607 	add	a,@r0
      0007A4 FA               [12] 2608 	mov	r2,a
      0007A5 E4               [12] 2609 	clr	a
      0007A6 08               [12] 2610 	inc	r0
      0007A7 36               [12] 2611 	addc	a,@r0
      0007A8 FB               [12] 2612 	mov	r3,a
      0007A9 08               [12] 2613 	inc	r0
      0007AA 86 04            [24] 2614 	mov	ar4,@r0
      0007AC 8A 82            [24] 2615 	mov	dpl,r2
      0007AE 8B 83            [24] 2616 	mov	dph,r3
      0007B0 8C F0            [24] 2617 	mov	b,r4
      0007B2 12r00r00         [24] 2618 	lcall	__gptrget
      0007B5 FA               [12] 2619 	mov	r2,a
      0007B6 A3               [24] 2620 	inc	dptr
      0007B7 12r00r00         [24] 2621 	lcall	__gptrget
      0007BA FB               [12] 2622 	mov	r3,a
      0007BB 8E 82            [24] 2623 	mov	dpl,r6
      0007BD 8F 83            [24] 2624 	mov	dph,r7
      0007BF 8D F0            [24] 2625 	mov	b,r5
      0007C1 EA               [12] 2626 	mov	a,r2
      0007C2 12r00r00         [24] 2627 	lcall	__gptrput
      0007C5 A3               [24] 2628 	inc	dptr
      0007C6 EB               [12] 2629 	mov	a,r3
      0007C7 12r00r00         [24] 2630 	lcall	__gptrput
                                   2631 ;	../../core/net/mac/lpp.c:453: adata->num++;
      0007CA E5 81            [12] 2632 	mov	a,sp
      0007CC 24 F8            [12] 2633 	add	a,#0xf8
      0007CE F8               [12] 2634 	mov	r0,a
      0007CF 86 82            [24] 2635 	mov	dpl,@r0
      0007D1 08               [12] 2636 	inc	r0
      0007D2 86 83            [24] 2637 	mov	dph,@r0
      0007D4 08               [12] 2638 	inc	r0
      0007D5 86 F0            [24] 2639 	mov	b,@r0
      0007D7 12r00r00         [24] 2640 	lcall	__gptrget
      0007DA FF               [12] 2641 	mov	r7,a
      0007DB A3               [24] 2642 	inc	dptr
      0007DC 12r00r00         [24] 2643 	lcall	__gptrget
      0007DF FE               [12] 2644 	mov	r6,a
      0007E0 0F               [12] 2645 	inc	r7
      0007E1 BF 00 01         [24] 2646 	cjne	r7,#0x00,00130$
      0007E4 0E               [12] 2647 	inc	r6
      0007E5                       2648 00130$:
      0007E5 E5 81            [12] 2649 	mov	a,sp
      0007E7 24 F8            [12] 2650 	add	a,#0xf8
      0007E9 F8               [12] 2651 	mov	r0,a
      0007EA 86 82            [24] 2652 	mov	dpl,@r0
      0007EC 08               [12] 2653 	inc	r0
      0007ED 86 83            [24] 2654 	mov	dph,@r0
      0007EF 08               [12] 2655 	inc	r0
      0007F0 86 F0            [24] 2656 	mov	b,@r0
      0007F2 EF               [12] 2657 	mov	a,r7
      0007F3 12r00r00         [24] 2658 	lcall	__gptrput
      0007F6 A3               [24] 2659 	inc	dptr
      0007F7 EE               [12] 2660 	mov	a,r6
      0007F8 12r00r00         [24] 2661 	lcall	__gptrput
                                   2662 ;	../../core/net/mac/lpp.c:450: for(a = announcement_list(); a != NULL; a = list_item_next(a)) {
      0007FB E5 81            [12] 2663 	mov	a,sp
      0007FD 24 FB            [12] 2664 	add	a,#0xfb
      0007FF F8               [12] 2665 	mov	r0,a
      000800 86 02            [24] 2666 	mov	ar2,@r0
      000802 08               [12] 2667 	inc	r0
      000803 86 03            [24] 2668 	mov	ar3,@r0
      000805 08               [12] 2669 	inc	r0
      000806 86 04            [24] 2670 	mov	ar4,@r0
      000808 8A 82            [24] 2671 	mov	dpl,r2
      00080A 8B 83            [24] 2672 	mov	dph,r3
      00080C 8C F0            [24] 2673 	mov	b,r4
      00080E C0 04            [24] 2674 	push	ar4
      000810 C0 03            [24] 2675 	push	ar3
      000812 C0 02            [24] 2676 	push	ar2
      000814 12r00r00         [24] 2677 	lcall	_list_item_next
      000817 AD 82            [24] 2678 	mov	r5,dpl
      000819 AE 83            [24] 2679 	mov	r6,dph
      00081B AF F0            [24] 2680 	mov	r7,b
      00081D D0 02            [24] 2681 	pop	ar2
      00081F D0 03            [24] 2682 	pop	ar3
      000821 D0 04            [24] 2683 	pop	ar4
      000823 E5 81            [12] 2684 	mov	a,sp
      000825 24 FB            [12] 2685 	add	a,#0xfb
      000827 F8               [12] 2686 	mov	r0,a
      000828 A6 05            [24] 2687 	mov	@r0,ar5
      00082A 08               [12] 2688 	inc	r0
      00082B A6 06            [24] 2689 	mov	@r0,ar6
      00082D 08               [12] 2690 	inc	r0
      00082E A6 07            [24] 2691 	mov	@r0,ar7
      000830 D0 04            [24] 2692 	pop	ar4
      000832 D0 03            [24] 2693 	pop	ar3
      000834 D0 02            [24] 2694 	pop	ar2
      000836 02r06rF4         [24] 2695 	ljmp	00108$
      000839                       2696 00103$:
                                   2697 ;	../../core/net/mac/lpp.c:458: sizeof(struct announcement_data) * adata->num);
      000839 E5 81            [12] 2698 	mov	a,sp
      00083B 24 FB            [12] 2699 	add	a,#0xfb
      00083D F8               [12] 2700 	mov	r0,a
      00083E 86 82            [24] 2701 	mov	dpl,@r0
      000840 08               [12] 2702 	inc	r0
      000841 86 83            [24] 2703 	mov	dph,@r0
      000843 08               [12] 2704 	inc	r0
      000844 86 F0            [24] 2705 	mov	b,@r0
      000846 12r00r00         [24] 2706 	lcall	__gptrget
      000849 FE               [12] 2707 	mov	r6,a
      00084A A3               [24] 2708 	inc	dptr
      00084B 12r00r00         [24] 2709 	lcall	__gptrget
      00084E FF               [12] 2710 	mov	r7,a
      00084F EE               [12] 2711 	mov	a,r6
      000850 2E               [12] 2712 	add	a,r6
      000851 FE               [12] 2713 	mov	r6,a
      000852 EF               [12] 2714 	mov	a,r7
      000853 33               [12] 2715 	rlc	a
      000854 FF               [12] 2716 	mov	r7,a
      000855 EE               [12] 2717 	mov	a,r6
      000856 2E               [12] 2718 	add	a,r6
      000857 FE               [12] 2719 	mov	r6,a
      000858 EF               [12] 2720 	mov	a,r7
      000859 33               [12] 2721 	rlc	a
      00085A FF               [12] 2722 	mov	r7,a
      00085B 74 08            [12] 2723 	mov	a,#0x08
      00085D 2E               [12] 2724 	add	a,r6
      00085E FE               [12] 2725 	mov	r6,a
      00085F E4               [12] 2726 	clr	a
      000860 3F               [12] 2727 	addc	a,r7
      000861 FF               [12] 2728 	mov	r7,a
      000862 8E 82            [24] 2729 	mov	dpl,r6
      000864 8F 83            [24] 2730 	mov	dph,r7
      000866 12r00r00         [24] 2731 	lcall	_packetbuf_set_datalen
                                   2732 ;	../../core/net/mac/lpp.c:464: if(NETSTACK_RADIO.channel_clear()) {
      000869 90r00r0A         [24] 2733 	mov	dptr,#(_cc2530_rf_driver + 0x000a)
      00086C E4               [12] 2734 	clr	a
      00086D 93               [24] 2735 	movc	a,@a+dptr
      00086E FE               [12] 2736 	mov	r6,a
      00086F A3               [24] 2737 	inc	dptr
      000870 E4               [12] 2738 	clr	a
      000871 93               [24] 2739 	movc	a,@a+dptr
      000872 FF               [12] 2740 	mov	r7,a
      000873 8E 82            [24] 2741 	mov	dpl,r6
      000875 8F 83            [24] 2742 	mov	dph,r7
      000877 12r00r00         [24] 2743 	lcall	__sdcc_call_dptr
      00087A AE 82            [24] 2744 	mov	r6,dpl
      00087C AF 83            [24] 2745 	mov	r7,dph
      00087E EE               [12] 2746 	mov	a,r6
      00087F 4F               [12] 2747 	orl	a,r7
      000880 60 53            [24] 2748 	jz	00105$
                                   2749 ;	../../core/net/mac/lpp.c:465: NETSTACK_RADIO.send(packetbuf_hdrptr(), packetbuf_totlen());
      000882 90r00r06         [24] 2750 	mov	dptr,#(_cc2530_rf_driver + 0x0006)
      000885 E4               [12] 2751 	clr	a
      000886 93               [24] 2752 	movc	a,@a+dptr
      000887 FE               [12] 2753 	mov	r6,a
      000888 A3               [24] 2754 	inc	dptr
      000889 E4               [12] 2755 	clr	a
      00088A 93               [24] 2756 	movc	a,@a+dptr
      00088B FF               [12] 2757 	mov	r7,a
      00088C C0 07            [24] 2758 	push	ar7
      00088E C0 06            [24] 2759 	push	ar6
      000890 12r00r00         [24] 2760 	lcall	_packetbuf_totlen
      000893 C8               [12] 2761 	xch	a,r0
      000894 E5 81            [12] 2762 	mov	a,sp
      000896 24 F6            [12] 2763 	add	a,#0xf6
      000898 C8               [12] 2764 	xch	a,r0
      000899 A6 82            [24] 2765 	mov	@r0,dpl
      00089B 08               [12] 2766 	inc	r0
      00089C A6 83            [24] 2767 	mov	@r0,dph
      00089E 12r00r00         [24] 2768 	lcall	_packetbuf_hdrptr
      0008A1 AA 82            [24] 2769 	mov	r2,dpl
      0008A3 AB 83            [24] 2770 	mov	r3,dph
      0008A5 AD F0            [24] 2771 	mov	r5,b
      0008A7 D0 06            [24] 2772 	pop	ar6
      0008A9 D0 07            [24] 2773 	pop	ar7
      0008AB C0 07            [24] 2774 	push	ar7
      0008AD C0 06            [24] 2775 	push	ar6
      0008AF E5 81            [12] 2776 	mov	a,sp
      0008B1 24 F6            [12] 2777 	add	a,#0xf6
      0008B3 F8               [12] 2778 	mov	r0,a
      0008B4 E6               [12] 2779 	mov	a,@r0
      0008B5 C0 E0            [24] 2780 	push	acc
      0008B7 08               [12] 2781 	inc	r0
      0008B8 E6               [12] 2782 	mov	a,@r0
      0008B9 C0 E0            [24] 2783 	push	acc
      0008BB 12r08rC0         [24] 2784 	lcall	00132$
      0008BE 80 0B            [24] 2785 	sjmp	00133$
      0008C0                       2786 00132$:
      0008C0 C0 06            [24] 2787 	push	ar6
      0008C2 C0 07            [24] 2788 	push	ar7
      0008C4 8A 82            [24] 2789 	mov	dpl,r2
      0008C6 8B 83            [24] 2790 	mov	dph,r3
      0008C8 8D F0            [24] 2791 	mov	b,r5
      0008CA 22               [24] 2792 	ret
      0008CB                       2793 00133$:
      0008CB 15 81            [12] 2794 	dec	sp
      0008CD 15 81            [12] 2795 	dec	sp
      0008CF D0 06            [24] 2796 	pop	ar6
      0008D1 D0 07            [24] 2797 	pop	ar7
      0008D3 80 25            [24] 2798 	sjmp	00106$
      0008D5                       2799 00105$:
                                   2800 ;	../../core/net/mac/lpp.c:467: off_time_adjustment = random_rand() % (OFF_TIME / 2);
      0008D5 12r00r00         [24] 2801 	lcall	_random_rand
      0008D8 AE 82            [24] 2802 	mov	r6,dpl
      0008DA AF 83            [24] 2803 	mov	r7,dph
      0008DC 74 07            [12] 2804 	mov	a,#0x07
      0008DE C0 E0            [24] 2805 	push	acc
      0008E0 E4               [12] 2806 	clr	a
      0008E1 C0 E0            [24] 2807 	push	acc
      0008E3 8E 82            [24] 2808 	mov	dpl,r6
      0008E5 8F 83            [24] 2809 	mov	dph,r7
      0008E7 12r00r00         [24] 2810 	lcall	__moduint
      0008EA AE 82            [24] 2811 	mov	r6,dpl
      0008EC AF 83            [24] 2812 	mov	r7,dph
      0008EE 15 81            [12] 2813 	dec	sp
      0008F0 15 81            [12] 2814 	dec	sp
      0008F2 90r00r01         [24] 2815 	mov	dptr,#_off_time_adjustment
      0008F5 EE               [12] 2816 	mov	a,r6
      0008F6 F0               [24] 2817 	movx	@dptr,a
      0008F7 EF               [12] 2818 	mov	a,r7
      0008F8 A3               [24] 2819 	inc	dptr
      0008F9 F0               [24] 2820 	movx	@dptr,a
      0008FA                       2821 00106$:
                                   2822 ;	../../core/net/mac/lpp.c:470: compower_accumulate(&compower_idle_activity);
      0008FA 90r00r00         [24] 2823 	mov	dptr,#_compower_idle_activity
      0008FD 75 F0 00         [24] 2824 	mov	b,#0x00
      000900 12r00r00         [24] 2825 	lcall	_compower_accumulate
      000903                       2826 00110$:
                                   2827 ;	../../core/net/mac/lpp.c:471: }
      000903 E5 81            [12] 2828 	mov	a,sp
      000905 24 F7            [12] 2829 	add	a,#0xf7
      000907 F5 81            [12] 2830 	mov	sp,a
      000909 22               [24] 2831 	ret
                                   2832 ;------------------------------------------------------------
                                   2833 ;Allocation info for local variables in function 'send_stream_probe'
                                   2834 ;------------------------------------------------------------
                                   2835 ;dummy                     Allocated to registers 
                                   2836 ;------------------------------------------------------------
                                   2837 ;	../../core/net/mac/lpp.c:474: send_stream_probe(void *dummy)
                                   2838 ;	-----------------------------------------
                                   2839 ;	 function send_stream_probe
                                   2840 ;	-----------------------------------------
      00090A                       2841 _send_stream_probe:
                                   2842 ;	../../core/net/mac/lpp.c:478: turn_radio_on();
      00090A 12r00r00         [24] 2843 	lcall	_turn_radio_on
                                   2844 ;	../../core/net/mac/lpp.c:481: send_probe();
      00090D 12r05rF1         [24] 2845 	lcall	_send_probe
                                   2846 ;	../../core/net/mac/lpp.c:484: is_streaming = 1;
      000910 90r00r2B         [24] 2847 	mov	dptr,#_is_streaming
      000913 74 01            [12] 2848 	mov	a,#0x01
      000915 F0               [24] 2849 	movx	@dptr,a
                                   2850 ;	../../core/net/mac/lpp.c:486: }
      000916 22               [24] 2851 	ret
                                   2852 ;------------------------------------------------------------
                                   2853 ;Allocation info for local variables in function 'num_packets_to_send'
                                   2854 ;------------------------------------------------------------
                                   2855 ;	../../core/net/mac/lpp.c:489: num_packets_to_send(void)
                                   2856 ;	-----------------------------------------
                                   2857 ;	 function num_packets_to_send
                                   2858 ;	-----------------------------------------
      000917                       2859 _num_packets_to_send:
                                   2860 ;	../../core/net/mac/lpp.c:503: return list_length(queued_packets_list);
      000917 90r00r0E         [24] 2861 	mov	dptr,#_queued_packets_list
      00091A E0               [24] 2862 	movx	a,@dptr
      00091B FD               [12] 2863 	mov	r5,a
      00091C A3               [24] 2864 	inc	dptr
      00091D E0               [24] 2865 	movx	a,@dptr
      00091E FE               [12] 2866 	mov	r6,a
      00091F A3               [24] 2867 	inc	dptr
      000920 E0               [24] 2868 	movx	a,@dptr
      000921 FF               [12] 2869 	mov	r7,a
      000922 8D 82            [24] 2870 	mov	dpl,r5
      000924 8E 83            [24] 2871 	mov	dph,r6
      000926 8F F0            [24] 2872 	mov	b,r7
                                   2873 ;	../../core/net/mac/lpp.c:505: }
      000928 02r00r00         [24] 2874 	ljmp	_list_length
                                   2875 ;------------------------------------------------------------
                                   2876 ;Allocation info for local variables in function 'dutycycle'
                                   2877 ;------------------------------------------------------------
                                   2878 ;ptr                       Allocated to registers r5 r6 r7 
                                   2879 ;t                         Allocated to stack - sp -2
                                   2880 ;PT_YIELD_FLAG             Allocated to registers r4 
                                   2881 ;current_off_time          Allocated to registers r7 r4 
                                   2882 ;sloc0                     Allocated to stack - sp -8
                                   2883 ;sloc1                     Allocated to stack - sp -5
                                   2884 ;------------------------------------------------------------
                                   2885 ;	../../core/net/mac/lpp.c:513: dutycycle(void *ptr)
                                   2886 ;	-----------------------------------------
                                   2887 ;	 function dutycycle
                                   2888 ;	-----------------------------------------
      00092B                       2889 _dutycycle:
      00092B E5 81            [12] 2890 	mov	a,sp
      00092D 24 09            [12] 2891 	add	a,#0x09
      00092F F5 81            [12] 2892 	mov	sp,a
      000931 AD 82            [24] 2893 	mov	r5,dpl
      000933 AE 83            [24] 2894 	mov	r6,dph
      000935 AF F0            [24] 2895 	mov	r7,b
                                   2896 ;	../../core/net/mac/lpp.c:515: struct ctimer *t = ptr;
      000937 A8 81            [24] 2897 	mov	r0,sp
      000939 18               [12] 2898 	dec	r0
      00093A 18               [12] 2899 	dec	r0
      00093B A6 05            [24] 2900 	mov	@r0,ar5
      00093D 08               [12] 2901 	inc	r0
      00093E A6 06            [24] 2902 	mov	@r0,ar6
      000940 08               [12] 2903 	inc	r0
      000941 A6 07            [24] 2904 	mov	@r0,ar7
                                   2905 ;	../../core/net/mac/lpp.c:517: PT_BEGIN(&dutycycle_pt);
      000943 7C 01            [12] 2906 	mov	r4,#0x01
      000945 90r00r09         [24] 2907 	mov	dptr,#_dutycycle_pt
      000948 E0               [24] 2908 	movx	a,@dptr
      000949 FA               [12] 2909 	mov	r2,a
      00094A A3               [24] 2910 	inc	dptr
      00094B E0               [24] 2911 	movx	a,@dptr
      00094C FB               [12] 2912 	mov	r3,a
      00094D BA 00 05         [24] 2913 	cjne	r2,#0x00,00198$
      000950 BB 00 02         [24] 2914 	cjne	r3,#0x00,00198$
      000953 80 26            [24] 2915 	sjmp	00137$
      000955                       2916 00198$:
      000955 BA 21 05         [24] 2917 	cjne	r2,#0x21,00199$
      000958 BB 02 02         [24] 2918 	cjne	r3,#0x02,00199$
      00095B 80 6B            [24] 2919 	sjmp	00102$
      00095D                       2920 00199$:
      00095D BA 48 06         [24] 2921 	cjne	r2,#0x48,00200$
      000960 BB 02 03         [24] 2922 	cjne	r3,#0x02,00200$
      000963 02r0ArAF         [24] 2923 	ljmp	00112$
      000966                       2924 00200$:
      000966 BA 56 06         [24] 2925 	cjne	r2,#0x56,00201$
      000969 BB 02 03         [24] 2926 	cjne	r3,#0x02,00201$
      00096C 02r0Br08         [24] 2927 	ljmp	00118$
      00096F                       2928 00201$:
      00096F BA 5C 06         [24] 2929 	cjne	r2,#0x5c,00202$
      000972 BB 02 03         [24] 2930 	cjne	r3,#0x02,00202$
      000975 02r0Br5D         [24] 2931 	ljmp	00127$
      000978                       2932 00202$:
      000978 02r0Br68         [24] 2933 	ljmp	00139$
                                   2934 ;	../../core/net/mac/lpp.c:519: while(1) {
      00097B                       2935 00137$:
                                   2936 ;	../../core/net/mac/lpp.c:538: turn_radio_on();
      00097B 12r00r00         [24] 2937 	lcall	_turn_radio_on
                                   2938 ;	../../core/net/mac/lpp.c:541: send_probe();
      00097E 12r05rF1         [24] 2939 	lcall	_send_probe
                                   2940 ;	../../core/net/mac/lpp.c:544: ctimer_set(t, LISTEN_TIME, (void (*)(void *))dutycycle, t);
      000981 A8 81            [24] 2941 	mov	r0,sp
      000983 18               [12] 2942 	dec	r0
      000984 18               [12] 2943 	dec	r0
      000985 86 04            [24] 2944 	mov	ar4,@r0
      000987 08               [12] 2945 	inc	r0
      000988 86 03            [24] 2946 	mov	ar3,@r0
      00098A 08               [12] 2947 	inc	r0
      00098B 86 02            [24] 2948 	mov	ar2,@r0
      00098D 7Dr2B            [12] 2949 	mov	r5,#_dutycycle
      00098F 7Es09            [12] 2950 	mov	r6,#(_dutycycle >> 8)
      000991 7F 80            [12] 2951 	mov	r7,#0x80
      000993 C0 04            [24] 2952 	push	ar4
      000995 C0 03            [24] 2953 	push	ar3
      000997 C0 02            [24] 2954 	push	ar2
      000999 C0 05            [24] 2955 	push	ar5
      00099B C0 06            [24] 2956 	push	ar6
      00099D C0 07            [24] 2957 	push	ar7
      00099F 74 01            [12] 2958 	mov	a,#0x01
      0009A1 C0 E0            [24] 2959 	push	acc
      0009A3 E4               [12] 2960 	clr	a
      0009A4 C0 E0            [24] 2961 	push	acc
      0009A6 E5 81            [12] 2962 	mov	a,sp
      0009A8 24 F6            [12] 2963 	add	a,#0xf6
      0009AA F8               [12] 2964 	mov	r0,a
      0009AB 86 82            [24] 2965 	mov	dpl,@r0
      0009AD 08               [12] 2966 	inc	r0
      0009AE 86 83            [24] 2967 	mov	dph,@r0
      0009B0 08               [12] 2968 	inc	r0
      0009B1 86 F0            [24] 2969 	mov	b,@r0
      0009B3 12r00r00         [24] 2970 	lcall	_ctimer_set
      0009B6 E5 81            [12] 2971 	mov	a,sp
      0009B8 24 F8            [12] 2972 	add	a,#0xf8
      0009BA F5 81            [12] 2973 	mov	sp,a
                                   2974 ;	../../core/net/mac/lpp.c:545: PT_YIELD(&dutycycle_pt);
      0009BC 7C 00            [12] 2975 	mov	r4,#0x00
      0009BE 90r00r09         [24] 2976 	mov	dptr,#_dutycycle_pt
      0009C1 74 21            [12] 2977 	mov	a,#0x21
      0009C3 F0               [24] 2978 	movx	@dptr,a
      0009C4 74 02            [12] 2979 	mov	a,#0x02
      0009C6 A3               [24] 2980 	inc	dptr
      0009C7 F0               [24] 2981 	movx	@dptr,a
      0009C8                       2982 00102$:
      0009C8 EC               [12] 2983 	mov	a,r4
      0009C9 70 06            [24] 2984 	jnz	00106$
      0009CB 90 00 01         [24] 2985 	mov	dptr,#0x0001
      0009CE 02r0Br72         [24] 2986 	ljmp	00140$
      0009D1                       2987 00106$:
                                   2988 ;	../../core/net/mac/lpp.c:568: if(num_packets_to_send() == 0) {
      0009D1 12r09r17         [24] 2989 	lcall	_num_packets_to_send
      0009D4 E5 82            [12] 2990 	mov	a,dpl
      0009D6 85 83 F0         [24] 2991 	mov	b,dph
      0009D9 45 F0            [12] 2992 	orl	a,b
      0009DB 60 03            [24] 2993 	jz	00204$
      0009DD 02r0Br13         [24] 2994 	ljmp	00134$
      0009E0                       2995 00204$:
                                   2996 ;	../../core/net/mac/lpp.c:572: if(is_listening == 0) {
      0009E0 90r00r00         [24] 2997 	mov	dptr,#_is_listening
      0009E3 E0               [24] 2998 	movx	a,@dptr
      0009E4 FF               [12] 2999 	mov	r7,a
      0009E5 E0               [24] 3000 	movx	a,@dptr
      0009E6 60 03            [24] 3001 	jz	00205$
      0009E8 02r0ArBB         [24] 3002 	ljmp	00125$
      0009EB                       3003 00205$:
                                   3004 ;	../../core/net/mac/lpp.c:574: if(!NETSTACK_RADIO.receiving_packet()) {
      0009EB 90r00r0C         [24] 3005 	mov	dptr,#(_cc2530_rf_driver + 0x000c)
      0009EE E4               [12] 3006 	clr	a
      0009EF 93               [24] 3007 	movc	a,@a+dptr
      0009F0 FD               [12] 3008 	mov	r5,a
      0009F1 A3               [24] 3009 	inc	dptr
      0009F2 E4               [12] 3010 	clr	a
      0009F3 93               [24] 3011 	movc	a,@a+dptr
      0009F4 FE               [12] 3012 	mov	r6,a
      0009F5 8D 82            [24] 3013 	mov	dpl,r5
      0009F7 8E 83            [24] 3014 	mov	dph,r6
      0009F9 12r00r00         [24] 3015 	lcall	__sdcc_call_dptr
      0009FC AD 82            [24] 3016 	mov	r5,dpl
      0009FE AE 83            [24] 3017 	mov	r6,dph
      000A00 ED               [12] 3018 	mov	a,r5
      000A01 4E               [12] 3019 	orl	a,r6
      000A02 70 0C            [24] 3020 	jnz	00109$
                                   3021 ;	../../core/net/mac/lpp.c:575: turn_radio_off();
      000A04 12r00r1A         [24] 3022 	lcall	_turn_radio_off
                                   3023 ;	../../core/net/mac/lpp.c:576: compower_accumulate(&compower_idle_activity);
      000A07 90r00r00         [24] 3024 	mov	dptr,#_compower_idle_activity
      000A0A 75 F0 00         [24] 3025 	mov	b,#0x00
      000A0D 12r00r00         [24] 3026 	lcall	_compower_accumulate
      000A10                       3027 00109$:
                                   3028 ;	../../core/net/mac/lpp.c:578: current_off_time = off_time - off_time_adjustment;
      000A10 90r00r01         [24] 3029 	mov	dptr,#_off_time_adjustment
      000A13 E0               [24] 3030 	movx	a,@dptr
      000A14 FD               [12] 3031 	mov	r5,a
      000A15 A3               [24] 3032 	inc	dptr
      000A16 E0               [24] 3033 	movx	a,@dptr
      000A17 FE               [12] 3034 	mov	r6,a
      000A18 90r00r03         [24] 3035 	mov	dptr,#_off_time
      000A1B E0               [24] 3036 	movx	a,@dptr
      000A1C FA               [12] 3037 	mov	r2,a
      000A1D A3               [24] 3038 	inc	dptr
      000A1E E0               [24] 3039 	movx	a,@dptr
      000A1F FB               [12] 3040 	mov	r3,a
      000A20 EA               [12] 3041 	mov	a,r2
      000A21 C3               [12] 3042 	clr	c
      000A22 9D               [12] 3043 	subb	a,r5
      000A23 FD               [12] 3044 	mov	r5,a
      000A24 EB               [12] 3045 	mov	a,r3
      000A25 9E               [12] 3046 	subb	a,r6
      000A26 FE               [12] 3047 	mov	r6,a
      000A27 8D 07            [24] 3048 	mov	ar7,r5
      000A29 8E 04            [24] 3049 	mov	ar4,r6
                                   3050 ;	../../core/net/mac/lpp.c:579: if(current_off_time < LISTEN_TIME * 2) {
      000A2B C3               [12] 3051 	clr	c
      000A2C EF               [12] 3052 	mov	a,r7
      000A2D 94 02            [12] 3053 	subb	a,#0x02
      000A2F EC               [12] 3054 	mov	a,r4
      000A30 64 80            [12] 3055 	xrl	a,#0x80
      000A32 94 80            [12] 3056 	subb	a,#0x80
      000A34 50 04            [24] 3057 	jnc	00111$
                                   3058 ;	../../core/net/mac/lpp.c:580: current_off_time = LISTEN_TIME * 2;
      000A36 7F 02            [12] 3059 	mov	r7,#0x02
      000A38 7C 00            [12] 3060 	mov	r4,#0x00
      000A3A                       3061 00111$:
                                   3062 ;	../../core/net/mac/lpp.c:582: off_time_adjustment = 0;
      000A3A 90r00r01         [24] 3063 	mov	dptr,#_off_time_adjustment
      000A3D E4               [12] 3064 	clr	a
      000A3E F0               [24] 3065 	movx	@dptr,a
      000A3F A3               [24] 3066 	inc	dptr
      000A40 F0               [24] 3067 	movx	@dptr,a
                                   3068 ;	../../core/net/mac/lpp.c:583: ctimer_set(t, current_off_time, (void (*)(void *))dutycycle, t);
      000A41 A8 81            [24] 3069 	mov	r0,sp
      000A43 18               [12] 3070 	dec	r0
      000A44 18               [12] 3071 	dec	r0
      000A45 E5 81            [12] 3072 	mov	a,sp
      000A47 24 F8            [12] 3073 	add	a,#0xf8
      000A49 F9               [12] 3074 	mov	r1,a
      000A4A E6               [12] 3075 	mov	a,@r0
      000A4B F7               [12] 3076 	mov	@r1,a
      000A4C 08               [12] 3077 	inc	r0
      000A4D 09               [12] 3078 	inc	r1
      000A4E E6               [12] 3079 	mov	a,@r0
      000A4F F7               [12] 3080 	mov	@r1,a
      000A50 08               [12] 3081 	inc	r0
      000A51 09               [12] 3082 	inc	r1
      000A52 E6               [12] 3083 	mov	a,@r0
      000A53 F7               [12] 3084 	mov	@r1,a
      000A54 7Dr2B            [12] 3085 	mov	r5,#_dutycycle
      000A56 7Es09            [12] 3086 	mov	r6,#(_dutycycle >> 8)
      000A58 E5 81            [12] 3087 	mov	a,sp
      000A5A 24 FB            [12] 3088 	add	a,#0xfb
      000A5C F8               [12] 3089 	mov	r0,a
      000A5D A6 05            [24] 3090 	mov	@r0,ar5
      000A5F 08               [12] 3091 	inc	r0
      000A60 A6 06            [24] 3092 	mov	@r0,ar6
      000A62 08               [12] 3093 	inc	r0
      000A63 76 80            [12] 3094 	mov	@r0,#0x80
      000A65 8F 02            [24] 3095 	mov	ar2,r7
      000A67 8C 06            [24] 3096 	mov	ar6,r4
      000A69 E5 81            [12] 3097 	mov	a,sp
      000A6B 24 F8            [12] 3098 	add	a,#0xf8
      000A6D F8               [12] 3099 	mov	r0,a
      000A6E E6               [12] 3100 	mov	a,@r0
      000A6F C0 E0            [24] 3101 	push	acc
      000A71 08               [12] 3102 	inc	r0
      000A72 E6               [12] 3103 	mov	a,@r0
      000A73 C0 E0            [24] 3104 	push	acc
      000A75 08               [12] 3105 	inc	r0
      000A76 E6               [12] 3106 	mov	a,@r0
      000A77 C0 E0            [24] 3107 	push	acc
      000A79 E5 81            [12] 3108 	mov	a,sp
      000A7B 24 F8            [12] 3109 	add	a,#0xf8
      000A7D F8               [12] 3110 	mov	r0,a
      000A7E E6               [12] 3111 	mov	a,@r0
      000A7F C0 E0            [24] 3112 	push	acc
      000A81 08               [12] 3113 	inc	r0
      000A82 E6               [12] 3114 	mov	a,@r0
      000A83 C0 E0            [24] 3115 	push	acc
      000A85 08               [12] 3116 	inc	r0
      000A86 E6               [12] 3117 	mov	a,@r0
      000A87 C0 E0            [24] 3118 	push	acc
      000A89 C0 02            [24] 3119 	push	ar2
      000A8B C0 06            [24] 3120 	push	ar6
      000A8D E5 81            [12] 3121 	mov	a,sp
      000A8F 24 F6            [12] 3122 	add	a,#0xf6
      000A91 F8               [12] 3123 	mov	r0,a
      000A92 86 82            [24] 3124 	mov	dpl,@r0
      000A94 08               [12] 3125 	inc	r0
      000A95 86 83            [24] 3126 	mov	dph,@r0
      000A97 08               [12] 3127 	inc	r0
      000A98 86 F0            [24] 3128 	mov	b,@r0
      000A9A 12r00r00         [24] 3129 	lcall	_ctimer_set
      000A9D E5 81            [12] 3130 	mov	a,sp
      000A9F 24 F8            [12] 3131 	add	a,#0xf8
      000AA1 F5 81            [12] 3132 	mov	sp,a
                                   3133 ;	../../core/net/mac/lpp.c:584: PT_YIELD(&dutycycle_pt);
      000AA3 7C 00            [12] 3134 	mov	r4,#0x00
      000AA5 90r00r09         [24] 3135 	mov	dptr,#_dutycycle_pt
      000AA8 74 48            [12] 3136 	mov	a,#0x48
      000AAA F0               [24] 3137 	movx	@dptr,a
      000AAB 74 02            [12] 3138 	mov	a,#0x02
      000AAD A3               [24] 3139 	inc	dptr
      000AAE F0               [24] 3140 	movx	@dptr,a
      000AAF                       3141 00112$:
      000AAF EC               [12] 3142 	mov	a,r4
      000AB0 60 03            [24] 3143 	jz	00208$
      000AB2 02r09r7B         [24] 3144 	ljmp	00137$
      000AB5                       3145 00208$:
      000AB5 90 00 01         [24] 3146 	mov	dptr,#0x0001
      000AB8 02r0Br72         [24] 3147 	ljmp	00140$
      000ABB                       3148 00125$:
                                   3149 ;	../../core/net/mac/lpp.c:596: is_listening--;
      000ABB EF               [12] 3150 	mov	a,r7
      000ABC 14               [12] 3151 	dec	a
      000ABD 90r00r00         [24] 3152 	mov	dptr,#_is_listening
      000AC0 F0               [24] 3153 	movx	@dptr,a
                                   3154 ;	../../core/net/mac/lpp.c:597: ctimer_set(t, OFF_TIME, (void (*)(void *))dutycycle, t);
      000AC1 A8 81            [24] 3155 	mov	r0,sp
      000AC3 18               [12] 3156 	dec	r0
      000AC4 18               [12] 3157 	dec	r0
      000AC5 86 05            [24] 3158 	mov	ar5,@r0
      000AC7 08               [12] 3159 	inc	r0
      000AC8 86 06            [24] 3160 	mov	ar6,@r0
      000ACA 08               [12] 3161 	inc	r0
      000ACB 86 04            [24] 3162 	mov	ar4,@r0
      000ACD 7Ar2B            [12] 3163 	mov	r2,#_dutycycle
      000ACF 7Bs09            [12] 3164 	mov	r3,#(_dutycycle >> 8)
      000AD1 7F 80            [12] 3165 	mov	r7,#0x80
      000AD3 C0 05            [24] 3166 	push	ar5
      000AD5 C0 06            [24] 3167 	push	ar6
      000AD7 C0 04            [24] 3168 	push	ar4
      000AD9 C0 02            [24] 3169 	push	ar2
      000ADB C0 03            [24] 3170 	push	ar3
      000ADD C0 07            [24] 3171 	push	ar7
      000ADF 74 0F            [12] 3172 	mov	a,#0x0f
      000AE1 C0 E0            [24] 3173 	push	acc
      000AE3 E4               [12] 3174 	clr	a
      000AE4 C0 E0            [24] 3175 	push	acc
      000AE6 E5 81            [12] 3176 	mov	a,sp
      000AE8 24 F6            [12] 3177 	add	a,#0xf6
      000AEA F8               [12] 3178 	mov	r0,a
      000AEB 86 82            [24] 3179 	mov	dpl,@r0
      000AED 08               [12] 3180 	inc	r0
      000AEE 86 83            [24] 3181 	mov	dph,@r0
      000AF0 08               [12] 3182 	inc	r0
      000AF1 86 F0            [24] 3183 	mov	b,@r0
      000AF3 12r00r00         [24] 3184 	lcall	_ctimer_set
      000AF6 E5 81            [12] 3185 	mov	a,sp
      000AF8 24 F8            [12] 3186 	add	a,#0xf8
      000AFA F5 81            [12] 3187 	mov	sp,a
                                   3188 ;	../../core/net/mac/lpp.c:598: PT_YIELD(&dutycycle_pt);
      000AFC 7C 00            [12] 3189 	mov	r4,#0x00
      000AFE 90r00r09         [24] 3190 	mov	dptr,#_dutycycle_pt
      000B01 74 56            [12] 3191 	mov	a,#0x56
      000B03 F0               [24] 3192 	movx	@dptr,a
      000B04 74 02            [12] 3193 	mov	a,#0x02
      000B06 A3               [24] 3194 	inc	dptr
      000B07 F0               [24] 3195 	movx	@dptr,a
      000B08                       3196 00118$:
      000B08 EC               [12] 3197 	mov	a,r4
      000B09 60 03            [24] 3198 	jz	00209$
      000B0B 02r09r7B         [24] 3199 	ljmp	00137$
      000B0E                       3200 00209$:
      000B0E 90 00 01         [24] 3201 	mov	dptr,#0x0001
      000B11 80 5F            [24] 3202 	sjmp	00140$
      000B13                       3203 00134$:
                                   3204 ;	../../core/net/mac/lpp.c:603: ctimer_set(t, off_time, (void (*)(void *))dutycycle, t);
      000B13 A8 81            [24] 3205 	mov	r0,sp
      000B15 18               [12] 3206 	dec	r0
      000B16 18               [12] 3207 	dec	r0
      000B17 86 05            [24] 3208 	mov	ar5,@r0
      000B19 08               [12] 3209 	inc	r0
      000B1A 86 06            [24] 3210 	mov	ar6,@r0
      000B1C 08               [12] 3211 	inc	r0
      000B1D 86 04            [24] 3212 	mov	ar4,@r0
      000B1F 7Ar2B            [12] 3213 	mov	r2,#_dutycycle
      000B21 7Bs09            [12] 3214 	mov	r3,#(_dutycycle >> 8)
      000B23 7F 80            [12] 3215 	mov	r7,#0x80
      000B25 C0 05            [24] 3216 	push	ar5
      000B27 C0 06            [24] 3217 	push	ar6
      000B29 C0 04            [24] 3218 	push	ar4
      000B2B C0 02            [24] 3219 	push	ar2
      000B2D C0 03            [24] 3220 	push	ar3
      000B2F C0 07            [24] 3221 	push	ar7
      000B31 90r00r03         [24] 3222 	mov	dptr,#_off_time
      000B34 E0               [24] 3223 	movx	a,@dptr
      000B35 C0 E0            [24] 3224 	push	acc
      000B37 A3               [24] 3225 	inc	dptr
      000B38 E0               [24] 3226 	movx	a,@dptr
      000B39 C0 E0            [24] 3227 	push	acc
      000B3B E5 81            [12] 3228 	mov	a,sp
      000B3D 24 F6            [12] 3229 	add	a,#0xf6
      000B3F F8               [12] 3230 	mov	r0,a
      000B40 86 82            [24] 3231 	mov	dpl,@r0
      000B42 08               [12] 3232 	inc	r0
      000B43 86 83            [24] 3233 	mov	dph,@r0
      000B45 08               [12] 3234 	inc	r0
      000B46 86 F0            [24] 3235 	mov	b,@r0
      000B48 12r00r00         [24] 3236 	lcall	_ctimer_set
      000B4B E5 81            [12] 3237 	mov	a,sp
      000B4D 24 F8            [12] 3238 	add	a,#0xf8
      000B4F F5 81            [12] 3239 	mov	sp,a
                                   3240 ;	../../core/net/mac/lpp.c:604: PT_YIELD(&dutycycle_pt);
      000B51 7C 00            [12] 3241 	mov	r4,#0x00
      000B53 90r00r09         [24] 3242 	mov	dptr,#_dutycycle_pt
      000B56 74 5C            [12] 3243 	mov	a,#0x5c
      000B58 F0               [24] 3244 	movx	@dptr,a
      000B59 74 02            [12] 3245 	mov	a,#0x02
      000B5B A3               [24] 3246 	inc	dptr
      000B5C F0               [24] 3247 	movx	@dptr,a
      000B5D                       3248 00127$:
      000B5D EC               [12] 3249 	mov	a,r4
      000B5E 60 03            [24] 3250 	jz	00210$
      000B60 02r09r7B         [24] 3251 	ljmp	00137$
      000B63                       3252 00210$:
      000B63 90 00 01         [24] 3253 	mov	dptr,#0x0001
                                   3254 ;	../../core/net/mac/lpp.c:608: PT_END(&dutycycle_pt);
      000B66 80 0A            [24] 3255 	sjmp	00140$
      000B68                       3256 00139$:
      000B68 90r00r09         [24] 3257 	mov	dptr,#_dutycycle_pt
      000B6B E4               [12] 3258 	clr	a
      000B6C F0               [24] 3259 	movx	@dptr,a
      000B6D A3               [24] 3260 	inc	dptr
      000B6E F0               [24] 3261 	movx	@dptr,a
      000B6F 90 00 03         [24] 3262 	mov	dptr,#0x0003
      000B72                       3263 00140$:
                                   3264 ;	../../core/net/mac/lpp.c:609: }
      000B72 E5 81            [12] 3265 	mov	a,sp
      000B74 24 F7            [12] 3266 	add	a,#0xf7
      000B76 F5 81            [12] 3267 	mov	sp,a
      000B78 22               [24] 3268 	ret
                                   3269 ;------------------------------------------------------------
                                   3270 ;Allocation info for local variables in function 'restart_dutycycle'
                                   3271 ;------------------------------------------------------------
                                   3272 ;initial_wait              Allocated to registers r6 r7 
                                   3273 ;------------------------------------------------------------
                                   3274 ;	../../core/net/mac/lpp.c:612: restart_dutycycle(clock_time_t initial_wait)
                                   3275 ;	-----------------------------------------
                                   3276 ;	 function restart_dutycycle
                                   3277 ;	-----------------------------------------
      000B79                       3278 _restart_dutycycle:
      000B79 AE 82            [24] 3279 	mov	r6,dpl
      000B7B AF 83            [24] 3280 	mov	r7,dph
                                   3281 ;	../../core/net/mac/lpp.c:614: PT_INIT(&dutycycle_pt);
      000B7D 90r00r09         [24] 3282 	mov	dptr,#_dutycycle_pt
      000B80 E4               [12] 3283 	clr	a
      000B81 F0               [24] 3284 	movx	@dptr,a
      000B82 A3               [24] 3285 	inc	dptr
      000B83 F0               [24] 3286 	movx	@dptr,a
                                   3287 ;	../../core/net/mac/lpp.c:615: ctimer_set(&timer, initial_wait, (void (*)(void *))dutycycle, &timer);  
      000B84 7Cr2B            [12] 3288 	mov	r4,#_dutycycle
      000B86 7Ds09            [12] 3289 	mov	r5,#(_dutycycle >> 8)
      000B88 7B 80            [12] 3290 	mov	r3,#0x80
      000B8A 74r0B            [12] 3291 	mov	a,#_timer
      000B8C C0 E0            [24] 3292 	push	acc
      000B8E 74s00            [12] 3293 	mov	a,#(_timer >> 8)
      000B90 C0 E0            [24] 3294 	push	acc
      000B92 E4               [12] 3295 	clr	a
      000B93 C0 E0            [24] 3296 	push	acc
      000B95 C0 04            [24] 3297 	push	ar4
      000B97 C0 05            [24] 3298 	push	ar5
      000B99 C0 03            [24] 3299 	push	ar3
      000B9B C0 06            [24] 3300 	push	ar6
      000B9D C0 07            [24] 3301 	push	ar7
      000B9F 90r00r0B         [24] 3302 	mov	dptr,#_timer
      000BA2 75 F0 00         [24] 3303 	mov	b,#0x00
      000BA5 12r00r00         [24] 3304 	lcall	_ctimer_set
      000BA8 E5 81            [12] 3305 	mov	a,sp
      000BAA 24 F8            [12] 3306 	add	a,#0xf8
      000BAC F5 81            [12] 3307 	mov	sp,a
                                   3308 ;	../../core/net/mac/lpp.c:616: }
      000BAE 22               [24] 3309 	ret
                                   3310 ;------------------------------------------------------------
                                   3311 ;Allocation info for local variables in function 'send_packet'
                                   3312 ;------------------------------------------------------------
                                   3313 ;ptr                       Allocated to stack - sp -19
                                   3314 ;sent                      Allocated to stack - sp -14
                                   3315 ;hdr                       Allocated to stack - sp -11
                                   3316 ;timeout                   Allocated to stack - sp -5
                                   3317 ;is_broadcast              Allocated to stack - sp -3
                                   3318 ;hdrlen                    Allocated to registers r6 r7 
                                   3319 ;i                         Allocated to stack - sp -2
                                   3320 ;sloc0                     Allocated to stack - sp -12
                                   3321 ;------------------------------------------------------------
                                   3322 ;	../../core/net/mac/lpp.c:633: send_packet(mac_callback_t sent, void *ptr)
                                   3323 ;	-----------------------------------------
                                   3324 ;	 function send_packet
                                   3325 ;	-----------------------------------------
      000BAF                       3326 _send_packet:
      000BAF C0 82            [24] 3327 	push	dpl
      000BB1 C0 83            [24] 3328 	push	dph
      000BB3 E5 81            [12] 3329 	mov	a,sp
      000BB5 24 0D            [12] 3330 	add	a,#0x0d
                                   3331 ;	../../core/net/mac/lpp.c:637: uint8_t is_broadcast = 0;
      000BB7 F5 81            [12] 3332 	mov	sp,a
      000BB9 24 FD            [12] 3333 	add	a,#0xfd
      000BBB F8               [12] 3334 	mov	r0,a
      000BBC 76 00            [12] 3335 	mov	@r0,#0x00
                                   3336 ;	../../core/net/mac/lpp.c:639: rimeaddr_copy(&hdr.sender, &rimeaddr_node_addr);
      000BBE E5 81            [12] 3337 	mov	a,sp
      000BC0 24 F5            [12] 3338 	add	a,#0xf5
      000BC2 F9               [12] 3339 	mov	r1,a
      000BC3 24 02            [12] 3340 	add	a,#0x02
      000BC5 FC               [12] 3341 	mov	r4,a
      000BC6 7B 00            [12] 3342 	mov	r3,#0x00
      000BC8 7A 40            [12] 3343 	mov	r2,#0x40
      000BCA C0 01            [24] 3344 	push	ar1
      000BCC 74r00            [12] 3345 	mov	a,#_rimeaddr_node_addr
      000BCE C0 E0            [24] 3346 	push	acc
      000BD0 74s00            [12] 3347 	mov	a,#(_rimeaddr_node_addr >> 8)
      000BD2 C0 E0            [24] 3348 	push	acc
      000BD4 E4               [12] 3349 	clr	a
      000BD5 C0 E0            [24] 3350 	push	acc
      000BD7 8C 82            [24] 3351 	mov	dpl,r4
      000BD9 8B 83            [24] 3352 	mov	dph,r3
      000BDB 8A F0            [24] 3353 	mov	b,r2
      000BDD 12r00r00         [24] 3354 	lcall	_rimeaddr_copy
      000BE0 15 81            [12] 3355 	dec	sp
      000BE2 15 81            [12] 3356 	dec	sp
      000BE4 15 81            [12] 3357 	dec	sp
                                   3358 ;	../../core/net/mac/lpp.c:640: rimeaddr_copy(&hdr.receiver, packetbuf_addr(PACKETBUF_ADDR_RECEIVER));
      000BE6 75 82 19         [24] 3359 	mov	dpl,#0x19
      000BE9 12r00r00         [24] 3360 	lcall	_packetbuf_addr
      000BEC AA 82            [24] 3361 	mov	r2,dpl
      000BEE AB 83            [24] 3362 	mov	r3,dph
      000BF0 AC F0            [24] 3363 	mov	r4,b
      000BF2 D0 01            [24] 3364 	pop	ar1
      000BF4 E5 81            [12] 3365 	mov	a,sp
      000BF6 24 F4            [12] 3366 	add	a,#0xf4
      000BF8 F8               [12] 3367 	mov	r0,a
      000BF9 74 04            [12] 3368 	mov	a,#0x04
      000BFB 29               [12] 3369 	add	a,r1
      000BFC F6               [12] 3370 	mov	@r0,a
      000BFD E5 81            [12] 3371 	mov	a,sp
      000BFF 24 F4            [12] 3372 	add	a,#0xf4
      000C01 F8               [12] 3373 	mov	r0,a
      000C02 86 05            [24] 3374 	mov	ar5,@r0
      000C04 7E 00            [12] 3375 	mov	r6,#0x00
      000C06 7F 40            [12] 3376 	mov	r7,#0x40
      000C08 C0 01            [24] 3377 	push	ar1
      000C0A C0 02            [24] 3378 	push	ar2
      000C0C C0 03            [24] 3379 	push	ar3
      000C0E C0 04            [24] 3380 	push	ar4
      000C10 8D 82            [24] 3381 	mov	dpl,r5
      000C12 8E 83            [24] 3382 	mov	dph,r6
      000C14 8F F0            [24] 3383 	mov	b,r7
      000C16 12r00r00         [24] 3384 	lcall	_rimeaddr_copy
      000C19 15 81            [12] 3385 	dec	sp
      000C1B 15 81            [12] 3386 	dec	sp
      000C1D 15 81            [12] 3387 	dec	sp
      000C1F D0 01            [24] 3388 	pop	ar1
                                   3389 ;	../../core/net/mac/lpp.c:641: if(rimeaddr_cmp(&hdr.receiver, &rimeaddr_null)) {
      000C21 E5 81            [12] 3390 	mov	a,sp
      000C23 24 F4            [12] 3391 	add	a,#0xf4
      000C25 F8               [12] 3392 	mov	r0,a
      000C26 86 07            [24] 3393 	mov	ar7,@r0
      000C28 7E 00            [12] 3394 	mov	r6,#0x00
      000C2A 7D 40            [12] 3395 	mov	r5,#0x40
      000C2C C0 01            [24] 3396 	push	ar1
      000C2E 74r00            [12] 3397 	mov	a,#_rimeaddr_null
      000C30 C0 E0            [24] 3398 	push	acc
      000C32 74s00            [12] 3399 	mov	a,#(_rimeaddr_null >> 8)
      000C34 C0 E0            [24] 3400 	push	acc
      000C36 74 80            [12] 3401 	mov	a,#0x80
      000C38 C0 E0            [24] 3402 	push	acc
      000C3A 8F 82            [24] 3403 	mov	dpl,r7
      000C3C 8E 83            [24] 3404 	mov	dph,r6
      000C3E 8D F0            [24] 3405 	mov	b,r5
      000C40 12r00r00         [24] 3406 	lcall	_rimeaddr_cmp
      000C43 AE 82            [24] 3407 	mov	r6,dpl
      000C45 AF 83            [24] 3408 	mov	r7,dph
      000C47 15 81            [12] 3409 	dec	sp
      000C49 15 81            [12] 3410 	dec	sp
      000C4B 15 81            [12] 3411 	dec	sp
      000C4D D0 01            [24] 3412 	pop	ar1
      000C4F EE               [12] 3413 	mov	a,r6
      000C50 4F               [12] 3414 	orl	a,r7
      000C51 60 07            [24] 3415 	jz	00102$
                                   3416 ;	../../core/net/mac/lpp.c:642: is_broadcast = 1;
      000C53 E5 81            [12] 3417 	mov	a,sp
      000C55 24 FD            [12] 3418 	add	a,#0xfd
      000C57 F8               [12] 3419 	mov	r0,a
      000C58 76 01            [12] 3420 	mov	@r0,#0x01
      000C5A                       3421 00102$:
                                   3422 ;	../../core/net/mac/lpp.c:644: hdr.type = TYPE_DATA;
      000C5A 77 02            [12] 3423 	mov	@r1,#0x02
      000C5C 09               [12] 3424 	inc	r1
      000C5D 77 00            [12] 3425 	mov	@r1,#0x00
      000C5F 19               [12] 3426 	dec	r1
                                   3427 ;	../../core/net/mac/lpp.c:646: packetbuf_hdralloc(sizeof(struct lpp_hdr));
      000C60 90 00 06         [24] 3428 	mov	dptr,#0x0006
      000C63 C0 01            [24] 3429 	push	ar1
      000C65 12r00r00         [24] 3430 	lcall	_packetbuf_hdralloc
      000C68 D0 01            [24] 3431 	pop	ar1
                                   3432 ;	../../core/net/mac/lpp.c:647: memcpy(packetbuf_hdrptr(), &hdr, sizeof(struct lpp_hdr));
      000C6A 89 07            [24] 3433 	mov	ar7,r1
      000C6C 7E 00            [12] 3434 	mov	r6,#0x00
      000C6E 7D 40            [12] 3435 	mov	r5,#0x40
      000C70 C0 07            [24] 3436 	push	ar7
      000C72 C0 06            [24] 3437 	push	ar6
      000C74 C0 05            [24] 3438 	push	ar5
      000C76 12r00r00         [24] 3439 	lcall	_packetbuf_hdrptr
      000C79 AA 82            [24] 3440 	mov	r2,dpl
      000C7B AB 83            [24] 3441 	mov	r3,dph
      000C7D AC F0            [24] 3442 	mov	r4,b
      000C7F D0 05            [24] 3443 	pop	ar5
      000C81 D0 06            [24] 3444 	pop	ar6
      000C83 D0 07            [24] 3445 	pop	ar7
      000C85 74 06            [12] 3446 	mov	a,#0x06
      000C87 C0 E0            [24] 3447 	push	acc
      000C89 E4               [12] 3448 	clr	a
      000C8A C0 E0            [24] 3449 	push	acc
      000C8C C0 07            [24] 3450 	push	ar7
      000C8E C0 06            [24] 3451 	push	ar6
      000C90 C0 05            [24] 3452 	push	ar5
      000C92 8A 82            [24] 3453 	mov	dpl,r2
      000C94 8B 83            [24] 3454 	mov	dph,r3
      000C96 8C F0            [24] 3455 	mov	b,r4
      000C98 12r00r00         [24] 3456 	lcall	___memcpy
      000C9B E5 81            [12] 3457 	mov	a,sp
      000C9D 24 FB            [12] 3458 	add	a,#0xfb
      000C9F F5 81            [12] 3459 	mov	sp,a
                                   3460 ;	../../core/net/mac/lpp.c:648: packetbuf_compact();
      000CA1 12r00r00         [24] 3461 	lcall	_packetbuf_compact
                                   3462 ;	../../core/net/mac/lpp.c:650: packetbuf_set_attr(PACKETBUF_ATTR_MAC_ACK, 1);
      000CA4 74 01            [12] 3463 	mov	a,#0x01
      000CA6 C0 E0            [24] 3464 	push	acc
      000CA8 E4               [12] 3465 	clr	a
      000CA9 C0 E0            [24] 3466 	push	acc
      000CAB 75 82 0B         [24] 3467 	mov	dpl,#0x0b
      000CAE 12r00r00         [24] 3468 	lcall	_packetbuf_set_attr
      000CB1 15 81            [12] 3469 	dec	sp
      000CB3 15 81            [12] 3470 	dec	sp
                                   3471 ;	../../core/net/mac/lpp.c:653: int hdrlen = NETSTACK_FRAMER.create();
      000CB5 90r00r00         [24] 3472 	mov	dptr,#_framer_802154
      000CB8 E4               [12] 3473 	clr	a
      000CB9 93               [24] 3474 	movc	a,@a+dptr
      000CBA FE               [12] 3475 	mov	r6,a
      000CBB A3               [24] 3476 	inc	dptr
      000CBC E4               [12] 3477 	clr	a
      000CBD 93               [24] 3478 	movc	a,@a+dptr
      000CBE FF               [12] 3479 	mov	r7,a
      000CBF 8E 82            [24] 3480 	mov	dpl,r6
      000CC1 8F 83            [24] 3481 	mov	dph,r7
      000CC3 12r00r00         [24] 3482 	lcall	__sdcc_call_dptr
      000CC6 AE 82            [24] 3483 	mov	r6,dpl
                                   3484 ;	../../core/net/mac/lpp.c:654: if(hdrlen < 0) {
      000CC8 E5 83            [12] 3485 	mov	a,dph
      000CCA FF               [12] 3486 	mov	r7,a
      000CCB 30 E7 3E         [24] 3487 	jnb	acc.7,00109$
                                   3488 ;	../../core/net/mac/lpp.c:656: mac_call_sent_callback(sent, ptr, MAC_TX_ERR_FATAL, 0);
      000CCE E5 81            [12] 3489 	mov	a,sp
      000CD0 24 F2            [12] 3490 	add	a,#0xf2
      000CD2 F8               [12] 3491 	mov	r0,a
      000CD3 E6               [12] 3492 	mov	a,@r0
      000CD4 08               [12] 3493 	inc	r0
      000CD5 46               [12] 3494 	orl	a,@r0
      000CD6 60 31            [24] 3495 	jz	00106$
      000CD8 E4               [12] 3496 	clr	a
      000CD9 C0 E0            [24] 3497 	push	acc
      000CDB C0 E0            [24] 3498 	push	acc
      000CDD 74 05            [12] 3499 	mov	a,#0x05
      000CDF C0 E0            [24] 3500 	push	acc
      000CE1 E4               [12] 3501 	clr	a
      000CE2 C0 E0            [24] 3502 	push	acc
      000CE4 12r0CrE9         [24] 3503 	lcall	00166$
      000CE7 80 1A            [24] 3504 	sjmp	00167$
      000CE9                       3505 00166$:
      000CE9 E5 81            [12] 3506 	mov	a,sp
      000CEB 24 EC            [12] 3507 	add	a,#0xec
      000CED F8               [12] 3508 	mov	r0,a
      000CEE E6               [12] 3509 	mov	a,@r0
      000CEF C0 E0            [24] 3510 	push	acc
      000CF1 08               [12] 3511 	inc	r0
      000CF2 E6               [12] 3512 	mov	a,@r0
      000CF3 C0 E0            [24] 3513 	push	acc
      000CF5 E5 81            [12] 3514 	mov	a,sp
      000CF7 24 E5            [12] 3515 	add	a,#0xe5
      000CF9 F8               [12] 3516 	mov	r0,a
      000CFA 86 82            [24] 3517 	mov	dpl,@r0
      000CFC 08               [12] 3518 	inc	r0
      000CFD 86 83            [24] 3519 	mov	dph,@r0
      000CFF 08               [12] 3520 	inc	r0
      000D00 86 F0            [24] 3521 	mov	b,@r0
      000D02 22               [24] 3522 	ret
      000D03                       3523 00167$:
      000D03 E5 81            [12] 3524 	mov	a,sp
      000D05 24 FC            [12] 3525 	add	a,#0xfc
      000D07 F5 81            [12] 3526 	mov	sp,a
      000D09                       3527 00106$:
                                   3528 ;	../../core/net/mac/lpp.c:657: return;
      000D09 02r0Fr25         [24] 3529 	ljmp	00129$
      000D0C                       3530 00109$:
                                   3531 ;	../../core/net/mac/lpp.c:681: i = memb_alloc(&queued_packets_memb);
      000D0C 90r00r11         [24] 3532 	mov	dptr,#_queued_packets_memb
      000D0F 75 F0 00         [24] 3533 	mov	b,#0x00
      000D12 12r00r00         [24] 3534 	lcall	_memb_alloc
      000D15 AD 82            [24] 3535 	mov	r5,dpl
      000D17 AE 83            [24] 3536 	mov	r6,dph
      000D19 AF F0            [24] 3537 	mov	r7,b
      000D1B A8 81            [24] 3538 	mov	r0,sp
      000D1D 18               [12] 3539 	dec	r0
      000D1E 18               [12] 3540 	dec	r0
      000D1F A6 05            [24] 3541 	mov	@r0,ar5
      000D21 08               [12] 3542 	inc	r0
      000D22 A6 06            [24] 3543 	mov	@r0,ar6
      000D24 08               [12] 3544 	inc	r0
      000D25 A6 07            [24] 3545 	mov	@r0,ar7
                                   3546 ;	../../core/net/mac/lpp.c:682: if(i != NULL) {
      000D27 A8 81            [24] 3547 	mov	r0,sp
      000D29 18               [12] 3548 	dec	r0
      000D2A 18               [12] 3549 	dec	r0
      000D2B E6               [12] 3550 	mov	a,@r0
      000D2C 08               [12] 3551 	inc	r0
      000D2D 46               [12] 3552 	orl	a,@r0
      000D2E 70 03            [24] 3553 	jnz	00168$
      000D30 02r0ErD5         [24] 3554 	ljmp	00127$
      000D33                       3555 00168$:
                                   3556 ;	../../core/net/mac/lpp.c:683: i->sent_callback = sent;
      000D33 A8 81            [24] 3557 	mov	r0,sp
      000D35 18               [12] 3558 	dec	r0
      000D36 18               [12] 3559 	dec	r0
      000D37 74 23            [12] 3560 	mov	a,#0x23
      000D39 26               [12] 3561 	add	a,@r0
      000D3A FA               [12] 3562 	mov	r2,a
      000D3B E4               [12] 3563 	clr	a
      000D3C 08               [12] 3564 	inc	r0
      000D3D 36               [12] 3565 	addc	a,@r0
      000D3E FB               [12] 3566 	mov	r3,a
      000D3F 08               [12] 3567 	inc	r0
      000D40 86 04            [24] 3568 	mov	ar4,@r0
      000D42 8A 82            [24] 3569 	mov	dpl,r2
      000D44 8B 83            [24] 3570 	mov	dph,r3
      000D46 8C F0            [24] 3571 	mov	b,r4
      000D48 E5 81            [12] 3572 	mov	a,sp
      000D4A 24 F2            [12] 3573 	add	a,#0xf2
      000D4C F8               [12] 3574 	mov	r0,a
      000D4D E6               [12] 3575 	mov	a,@r0
      000D4E 12r00r00         [24] 3576 	lcall	__gptrput
      000D51 A3               [24] 3577 	inc	dptr
      000D52 08               [12] 3578 	inc	r0
      000D53 E6               [12] 3579 	mov	a,@r0
      000D54 12r00r00         [24] 3580 	lcall	__gptrput
                                   3581 ;	../../core/net/mac/lpp.c:684: i->sent_callback_ptr = ptr;
      000D57 A8 81            [24] 3582 	mov	r0,sp
      000D59 18               [12] 3583 	dec	r0
      000D5A 18               [12] 3584 	dec	r0
      000D5B 74 25            [12] 3585 	mov	a,#0x25
      000D5D 26               [12] 3586 	add	a,@r0
      000D5E FA               [12] 3587 	mov	r2,a
      000D5F E4               [12] 3588 	clr	a
      000D60 08               [12] 3589 	inc	r0
      000D61 36               [12] 3590 	addc	a,@r0
      000D62 FB               [12] 3591 	mov	r3,a
      000D63 08               [12] 3592 	inc	r0
      000D64 86 04            [24] 3593 	mov	ar4,@r0
      000D66 8A 82            [24] 3594 	mov	dpl,r2
      000D68 8B 83            [24] 3595 	mov	dph,r3
      000D6A 8C F0            [24] 3596 	mov	b,r4
      000D6C E5 81            [12] 3597 	mov	a,sp
      000D6E 24 ED            [12] 3598 	add	a,#0xed
      000D70 F8               [12] 3599 	mov	r0,a
      000D71 E6               [12] 3600 	mov	a,@r0
      000D72 12r00r00         [24] 3601 	lcall	__gptrput
      000D75 A3               [24] 3602 	inc	dptr
      000D76 08               [12] 3603 	inc	r0
      000D77 E6               [12] 3604 	mov	a,@r0
      000D78 12r00r00         [24] 3605 	lcall	__gptrput
      000D7B A3               [24] 3606 	inc	dptr
      000D7C 08               [12] 3607 	inc	r0
      000D7D E6               [12] 3608 	mov	a,@r0
      000D7E 12r00r00         [24] 3609 	lcall	__gptrput
                                   3610 ;	../../core/net/mac/lpp.c:685: i->num_transmissions = 0;
      000D81 A8 81            [24] 3611 	mov	r0,sp
      000D83 18               [12] 3612 	dec	r0
      000D84 18               [12] 3613 	dec	r0
      000D85 74 28            [12] 3614 	mov	a,#0x28
      000D87 26               [12] 3615 	add	a,@r0
      000D88 FA               [12] 3616 	mov	r2,a
      000D89 E4               [12] 3617 	clr	a
      000D8A 08               [12] 3618 	inc	r0
      000D8B 36               [12] 3619 	addc	a,@r0
      000D8C FB               [12] 3620 	mov	r3,a
      000D8D 08               [12] 3621 	inc	r0
      000D8E 86 04            [24] 3622 	mov	ar4,@r0
      000D90 8A 82            [24] 3623 	mov	dpl,r2
      000D92 8B 83            [24] 3624 	mov	dph,r3
      000D94 8C F0            [24] 3625 	mov	b,r4
      000D96 E4               [12] 3626 	clr	a
      000D97 12r00r00         [24] 3627 	lcall	__gptrput
                                   3628 ;	../../core/net/mac/lpp.c:686: i->packet = queuebuf_new_from_packetbuf();
      000D9A A8 81            [24] 3629 	mov	r0,sp
      000D9C 18               [12] 3630 	dec	r0
      000D9D 18               [12] 3631 	dec	r0
      000D9E 74 03            [12] 3632 	mov	a,#0x03
      000DA0 26               [12] 3633 	add	a,@r0
      000DA1 FA               [12] 3634 	mov	r2,a
      000DA2 E4               [12] 3635 	clr	a
      000DA3 08               [12] 3636 	inc	r0
      000DA4 36               [12] 3637 	addc	a,@r0
      000DA5 FB               [12] 3638 	mov	r3,a
      000DA6 08               [12] 3639 	inc	r0
      000DA7 86 04            [24] 3640 	mov	ar4,@r0
      000DA9 C0 04            [24] 3641 	push	ar4
      000DAB C0 03            [24] 3642 	push	ar3
      000DAD C0 02            [24] 3643 	push	ar2
      000DAF 12r00r00         [24] 3644 	lcall	_queuebuf_new_from_packetbuf
      000DB2 AD 82            [24] 3645 	mov	r5,dpl
      000DB4 AE 83            [24] 3646 	mov	r6,dph
      000DB6 AF F0            [24] 3647 	mov	r7,b
      000DB8 D0 02            [24] 3648 	pop	ar2
      000DBA D0 03            [24] 3649 	pop	ar3
      000DBC D0 04            [24] 3650 	pop	ar4
      000DBE 8A 82            [24] 3651 	mov	dpl,r2
      000DC0 8B 83            [24] 3652 	mov	dph,r3
      000DC2 8C F0            [24] 3653 	mov	b,r4
      000DC4 ED               [12] 3654 	mov	a,r5
      000DC5 12r00r00         [24] 3655 	lcall	__gptrput
      000DC8 A3               [24] 3656 	inc	dptr
      000DC9 EE               [12] 3657 	mov	a,r6
      000DCA 12r00r00         [24] 3658 	lcall	__gptrput
      000DCD A3               [24] 3659 	inc	dptr
      000DCE EF               [12] 3660 	mov	a,r7
      000DCF 12r00r00         [24] 3661 	lcall	__gptrput
                                   3662 ;	../../core/net/mac/lpp.c:687: if(i->packet == NULL) {
      000DD2 ED               [12] 3663 	mov	a,r5
      000DD3 4E               [12] 3664 	orl	a,r6
      000DD4 70 74            [24] 3665 	jnz	00119$
                                   3666 ;	../../core/net/mac/lpp.c:688: memb_free(&queued_packets_memb, i);
      000DD6 A8 81            [24] 3667 	mov	r0,sp
      000DD8 18               [12] 3668 	dec	r0
      000DD9 18               [12] 3669 	dec	r0
      000DDA 86 05            [24] 3670 	mov	ar5,@r0
      000DDC 08               [12] 3671 	inc	r0
      000DDD 86 06            [24] 3672 	mov	ar6,@r0
      000DDF 08               [12] 3673 	inc	r0
      000DE0 86 07            [24] 3674 	mov	ar7,@r0
      000DE2 C0 05            [24] 3675 	push	ar5
      000DE4 C0 06            [24] 3676 	push	ar6
      000DE6 C0 07            [24] 3677 	push	ar7
      000DE8 90r00r11         [24] 3678 	mov	dptr,#_queued_packets_memb
      000DEB 75 F0 00         [24] 3679 	mov	b,#0x00
      000DEE 12r00r00         [24] 3680 	lcall	_memb_free
      000DF1 15 81            [12] 3681 	dec	sp
      000DF3 15 81            [12] 3682 	dec	sp
      000DF5 15 81            [12] 3683 	dec	sp
                                   3684 ;	../../core/net/mac/lpp.c:689: printf("null packet\n");
      000DF7 74r00            [12] 3685 	mov	a,#___str_0
      000DF9 C0 E0            [24] 3686 	push	acc
      000DFB 74s00            [12] 3687 	mov	a,#(___str_0 >> 8)
      000DFD C0 E0            [24] 3688 	push	acc
      000DFF 74 80            [12] 3689 	mov	a,#0x80
      000E01 C0 E0            [24] 3690 	push	acc
      000E03 12r00r00         [24] 3691 	lcall	_printf
      000E06 15 81            [12] 3692 	dec	sp
      000E08 15 81            [12] 3693 	dec	sp
      000E0A 15 81            [12] 3694 	dec	sp
                                   3695 ;	../../core/net/mac/lpp.c:690: mac_call_sent_callback(sent, ptr, MAC_TX_ERR, 0);
      000E0C E5 81            [12] 3696 	mov	a,sp
      000E0E 24 F2            [12] 3697 	add	a,#0xf2
      000E10 F8               [12] 3698 	mov	r0,a
      000E11 E6               [12] 3699 	mov	a,@r0
      000E12 08               [12] 3700 	inc	r0
      000E13 46               [12] 3701 	orl	a,@r0
      000E14 60 31            [24] 3702 	jz	00113$
      000E16 E4               [12] 3703 	clr	a
      000E17 C0 E0            [24] 3704 	push	acc
      000E19 C0 E0            [24] 3705 	push	acc
      000E1B 74 04            [12] 3706 	mov	a,#0x04
      000E1D C0 E0            [24] 3707 	push	acc
      000E1F E4               [12] 3708 	clr	a
      000E20 C0 E0            [24] 3709 	push	acc
      000E22 12r0Er27         [24] 3710 	lcall	00171$
      000E25 80 1A            [24] 3711 	sjmp	00172$
      000E27                       3712 00171$:
      000E27 E5 81            [12] 3713 	mov	a,sp
      000E29 24 EC            [12] 3714 	add	a,#0xec
      000E2B F8               [12] 3715 	mov	r0,a
      000E2C E6               [12] 3716 	mov	a,@r0
      000E2D C0 E0            [24] 3717 	push	acc
      000E2F 08               [12] 3718 	inc	r0
      000E30 E6               [12] 3719 	mov	a,@r0
      000E31 C0 E0            [24] 3720 	push	acc
      000E33 E5 81            [12] 3721 	mov	a,sp
      000E35 24 E5            [12] 3722 	add	a,#0xe5
      000E37 F8               [12] 3723 	mov	r0,a
      000E38 86 82            [24] 3724 	mov	dpl,@r0
      000E3A 08               [12] 3725 	inc	r0
      000E3B 86 83            [24] 3726 	mov	dph,@r0
      000E3D 08               [12] 3727 	inc	r0
      000E3E 86 F0            [24] 3728 	mov	b,@r0
      000E40 22               [24] 3729 	ret
      000E41                       3730 00172$:
      000E41 E5 81            [12] 3731 	mov	a,sp
      000E43 24 FC            [12] 3732 	add	a,#0xfc
      000E45 F5 81            [12] 3733 	mov	sp,a
      000E47                       3734 00113$:
                                   3735 ;	../../core/net/mac/lpp.c:691: return;
      000E47 02r0Fr25         [24] 3736 	ljmp	00129$
      000E4A                       3737 00119$:
                                   3738 ;	../../core/net/mac/lpp.c:693: if(is_broadcast) {
      000E4A E5 81            [12] 3739 	mov	a,sp
      000E4C 24 FD            [12] 3740 	add	a,#0xfd
      000E4E F8               [12] 3741 	mov	r0,a
      000E4F E6               [12] 3742 	mov	a,@r0
      000E50 60 0C            [24] 3743 	jz	00116$
                                   3744 ;	../../core/net/mac/lpp.c:694: timeout = PACKET_LIFETIME;
      000E52 E5 81            [12] 3745 	mov	a,sp
      000E54 24 FB            [12] 3746 	add	a,#0xfb
      000E56 F8               [12] 3747 	mov	r0,a
      000E57 76 10            [12] 3748 	mov	@r0,#0x10
      000E59 08               [12] 3749 	inc	r0
      000E5A 76 00            [12] 3750 	mov	@r0,#0x00
      000E5C 80 0A            [24] 3751 	sjmp	00117$
      000E5E                       3752 00116$:
                                   3753 ;	../../core/net/mac/lpp.c:708: timeout = UNICAST_TIMEOUT;
      000E5E E5 81            [12] 3754 	mov	a,sp
      000E60 24 FB            [12] 3755 	add	a,#0xfb
      000E62 F8               [12] 3756 	mov	r0,a
      000E63 76 18            [12] 3757 	mov	@r0,#0x18
      000E65 08               [12] 3758 	inc	r0
      000E66 76 00            [12] 3759 	mov	@r0,#0x00
      000E68                       3760 00117$:
                                   3761 ;	../../core/net/mac/lpp.c:714: remove_queued_old_packet_callback, i);
      000E68 A8 81            [24] 3762 	mov	r0,sp
      000E6A 18               [12] 3763 	dec	r0
      000E6B 18               [12] 3764 	dec	r0
      000E6C 86 03            [24] 3765 	mov	ar3,@r0
      000E6E 08               [12] 3766 	inc	r0
      000E6F 86 04            [24] 3767 	mov	ar4,@r0
      000E71 08               [12] 3768 	inc	r0
      000E72 86 05            [24] 3769 	mov	ar5,@r0
                                   3770 ;	../../core/net/mac/lpp.c:713: ctimer_set(&i->removal_timer, timeout,
      000E74 A8 81            [24] 3771 	mov	r0,sp
      000E76 18               [12] 3772 	dec	r0
      000E77 18               [12] 3773 	dec	r0
      000E78 74 06            [12] 3774 	mov	a,#0x06
      000E7A 26               [12] 3775 	add	a,@r0
      000E7B FA               [12] 3776 	mov	r2,a
      000E7C E4               [12] 3777 	clr	a
      000E7D 08               [12] 3778 	inc	r0
      000E7E 36               [12] 3779 	addc	a,@r0
      000E7F FE               [12] 3780 	mov	r6,a
      000E80 08               [12] 3781 	inc	r0
      000E81 86 07            [24] 3782 	mov	ar7,@r0
      000E83 C0 03            [24] 3783 	push	ar3
      000E85 C0 04            [24] 3784 	push	ar4
      000E87 C0 05            [24] 3785 	push	ar5
      000E89 74rD2            [12] 3786 	mov	a,#_remove_queued_old_packet_callback
      000E8B C0 E0            [24] 3787 	push	acc
      000E8D 74s05            [12] 3788 	mov	a,#(_remove_queued_old_packet_callback >> 8)
      000E8F C0 E0            [24] 3789 	push	acc
      000E91 E5 81            [12] 3790 	mov	a,sp
      000E93 24 F6            [12] 3791 	add	a,#0xf6
      000E95 F8               [12] 3792 	mov	r0,a
      000E96 E6               [12] 3793 	mov	a,@r0
      000E97 C0 E0            [24] 3794 	push	acc
      000E99 08               [12] 3795 	inc	r0
      000E9A E6               [12] 3796 	mov	a,@r0
      000E9B C0 E0            [24] 3797 	push	acc
      000E9D 8A 82            [24] 3798 	mov	dpl,r2
      000E9F 8E 83            [24] 3799 	mov	dph,r6
      000EA1 8F F0            [24] 3800 	mov	b,r7
      000EA3 12r00r00         [24] 3801 	lcall	_ctimer_set
      000EA6 E5 81            [12] 3802 	mov	a,sp
      000EA8 24 F9            [12] 3803 	add	a,#0xf9
                                   3804 ;	../../core/net/mac/lpp.c:719: turn_radio_on_for_neighbor(&hdr.receiver, i);
      000EAA F5 81            [12] 3805 	mov	sp,a
      000EAC 24 F4            [12] 3806 	add	a,#0xf4
      000EAE F8               [12] 3807 	mov	r0,a
      000EAF 86 07            [24] 3808 	mov	ar7,@r0
      000EB1 7E 00            [12] 3809 	mov	r6,#0x00
      000EB3 7D 40            [12] 3810 	mov	r5,#0x40
      000EB5 A8 81            [24] 3811 	mov	r0,sp
      000EB7 18               [12] 3812 	dec	r0
      000EB8 18               [12] 3813 	dec	r0
      000EB9 E6               [12] 3814 	mov	a,@r0
      000EBA C0 E0            [24] 3815 	push	acc
      000EBC 08               [12] 3816 	inc	r0
      000EBD E6               [12] 3817 	mov	a,@r0
      000EBE C0 E0            [24] 3818 	push	acc
      000EC0 08               [12] 3819 	inc	r0
      000EC1 E6               [12] 3820 	mov	a,@r0
      000EC2 C0 E0            [24] 3821 	push	acc
      000EC4 8F 82            [24] 3822 	mov	dpl,r7
      000EC6 8E 83            [24] 3823 	mov	dph,r6
      000EC8 8D F0            [24] 3824 	mov	b,r5
      000ECA 12r02rC8         [24] 3825 	lcall	_turn_radio_on_for_neighbor
      000ECD 15 81            [12] 3826 	dec	sp
      000ECF 15 81            [12] 3827 	dec	sp
      000ED1 15 81            [12] 3828 	dec	sp
      000ED3 80 50            [24] 3829 	sjmp	00129$
      000ED5                       3830 00127$:
                                   3831 ;	../../core/net/mac/lpp.c:723: printf("i == NULL\n");
      000ED5 74r0D            [12] 3832 	mov	a,#___str_1
      000ED7 C0 E0            [24] 3833 	push	acc
      000ED9 74s00            [12] 3834 	mov	a,#(___str_1 >> 8)
      000EDB C0 E0            [24] 3835 	push	acc
      000EDD 74 80            [12] 3836 	mov	a,#0x80
      000EDF C0 E0            [24] 3837 	push	acc
      000EE1 12r00r00         [24] 3838 	lcall	_printf
      000EE4 15 81            [12] 3839 	dec	sp
      000EE6 15 81            [12] 3840 	dec	sp
      000EE8 15 81            [12] 3841 	dec	sp
                                   3842 ;	../../core/net/mac/lpp.c:724: mac_call_sent_callback(sent, ptr, MAC_TX_ERR, 0);
      000EEA E5 81            [12] 3843 	mov	a,sp
      000EEC 24 F2            [12] 3844 	add	a,#0xf2
      000EEE F8               [12] 3845 	mov	r0,a
      000EEF E6               [12] 3846 	mov	a,@r0
      000EF0 08               [12] 3847 	inc	r0
      000EF1 46               [12] 3848 	orl	a,@r0
      000EF2 60 31            [24] 3849 	jz	00129$
      000EF4 E4               [12] 3850 	clr	a
      000EF5 C0 E0            [24] 3851 	push	acc
      000EF7 C0 E0            [24] 3852 	push	acc
      000EF9 74 04            [12] 3853 	mov	a,#0x04
      000EFB C0 E0            [24] 3854 	push	acc
      000EFD E4               [12] 3855 	clr	a
      000EFE C0 E0            [24] 3856 	push	acc
      000F00 12r0Fr05         [24] 3857 	lcall	00175$
      000F03 80 1A            [24] 3858 	sjmp	00176$
      000F05                       3859 00175$:
      000F05 E5 81            [12] 3860 	mov	a,sp
      000F07 24 EC            [12] 3861 	add	a,#0xec
      000F09 F8               [12] 3862 	mov	r0,a
      000F0A E6               [12] 3863 	mov	a,@r0
      000F0B C0 E0            [24] 3864 	push	acc
      000F0D 08               [12] 3865 	inc	r0
      000F0E E6               [12] 3866 	mov	a,@r0
      000F0F C0 E0            [24] 3867 	push	acc
      000F11 E5 81            [12] 3868 	mov	a,sp
      000F13 24 E5            [12] 3869 	add	a,#0xe5
      000F15 F8               [12] 3870 	mov	r0,a
      000F16 86 82            [24] 3871 	mov	dpl,@r0
      000F18 08               [12] 3872 	inc	r0
      000F19 86 83            [24] 3873 	mov	dph,@r0
      000F1B 08               [12] 3874 	inc	r0
      000F1C 86 F0            [24] 3875 	mov	b,@r0
      000F1E 22               [24] 3876 	ret
      000F1F                       3877 00176$:
      000F1F E5 81            [12] 3878 	mov	a,sp
      000F21 24 FC            [12] 3879 	add	a,#0xfc
      000F23 F5 81            [12] 3880 	mov	sp,a
      000F25                       3881 00129$:
                                   3882 ;	../../core/net/mac/lpp.c:727: }
      000F25 E5 81            [12] 3883 	mov	a,sp
      000F27 24 F1            [12] 3884 	add	a,#0xf1
      000F29 F5 81            [12] 3885 	mov	sp,a
      000F2B 22               [24] 3886 	ret
                                   3887 ;------------------------------------------------------------
                                   3888 ;Allocation info for local variables in function 'send_list'
                                   3889 ;------------------------------------------------------------
                                   3890 ;ptr                       Allocated to stack - sp -4
                                   3891 ;buf_list                  Allocated to stack - sp -7
                                   3892 ;sent                      Allocated to registers r6 r7 
                                   3893 ;------------------------------------------------------------
                                   3894 ;	../../core/net/mac/lpp.c:730: send_list(mac_callback_t sent, void *ptr, struct rdc_buf_list *buf_list)
                                   3895 ;	-----------------------------------------
                                   3896 ;	 function send_list
                                   3897 ;	-----------------------------------------
      000F2C                       3898 _send_list:
      000F2C AE 82            [24] 3899 	mov	r6,dpl
      000F2E AF 83            [24] 3900 	mov	r7,dph
                                   3901 ;	../../core/net/mac/lpp.c:732: if(buf_list != NULL) {
      000F30 E5 81            [12] 3902 	mov	a,sp
      000F32 24 F9            [12] 3903 	add	a,#0xf9
      000F34 F8               [12] 3904 	mov	r0,a
      000F35 E6               [12] 3905 	mov	a,@r0
      000F36 08               [12] 3906 	inc	r0
      000F37 46               [12] 3907 	orl	a,@r0
      000F38 60 56            [24] 3908 	jz	00103$
                                   3909 ;	../../core/net/mac/lpp.c:733: queuebuf_to_packetbuf(buf_list->buf);
      000F3A E5 81            [12] 3910 	mov	a,sp
      000F3C 24 F9            [12] 3911 	add	a,#0xf9
      000F3E F8               [12] 3912 	mov	r0,a
      000F3F 86 03            [24] 3913 	mov	ar3,@r0
      000F41 08               [12] 3914 	inc	r0
      000F42 86 04            [24] 3915 	mov	ar4,@r0
      000F44 08               [12] 3916 	inc	r0
      000F45 86 05            [24] 3917 	mov	ar5,@r0
      000F47 74 03            [12] 3918 	mov	a,#0x03
      000F49 2B               [12] 3919 	add	a,r3
      000F4A FB               [12] 3920 	mov	r3,a
      000F4B E4               [12] 3921 	clr	a
      000F4C 3C               [12] 3922 	addc	a,r4
      000F4D FC               [12] 3923 	mov	r4,a
      000F4E 8B 82            [24] 3924 	mov	dpl,r3
      000F50 8C 83            [24] 3925 	mov	dph,r4
      000F52 8D F0            [24] 3926 	mov	b,r5
      000F54 12r00r00         [24] 3927 	lcall	__gptrget
      000F57 FB               [12] 3928 	mov	r3,a
      000F58 A3               [24] 3929 	inc	dptr
      000F59 12r00r00         [24] 3930 	lcall	__gptrget
      000F5C FC               [12] 3931 	mov	r4,a
      000F5D A3               [24] 3932 	inc	dptr
      000F5E 12r00r00         [24] 3933 	lcall	__gptrget
      000F61 FD               [12] 3934 	mov	r5,a
      000F62 8B 82            [24] 3935 	mov	dpl,r3
      000F64 8C 83            [24] 3936 	mov	dph,r4
      000F66 8D F0            [24] 3937 	mov	b,r5
      000F68 C0 07            [24] 3938 	push	ar7
      000F6A C0 06            [24] 3939 	push	ar6
      000F6C 12r00r00         [24] 3940 	lcall	_queuebuf_to_packetbuf
      000F6F D0 06            [24] 3941 	pop	ar6
      000F71 D0 07            [24] 3942 	pop	ar7
                                   3943 ;	../../core/net/mac/lpp.c:734: send_packet(sent, ptr);
      000F73 E5 81            [12] 3944 	mov	a,sp
      000F75 24 FC            [12] 3945 	add	a,#0xfc
      000F77 F8               [12] 3946 	mov	r0,a
      000F78 E6               [12] 3947 	mov	a,@r0
      000F79 C0 E0            [24] 3948 	push	acc
      000F7B 08               [12] 3949 	inc	r0
      000F7C E6               [12] 3950 	mov	a,@r0
      000F7D C0 E0            [24] 3951 	push	acc
      000F7F 08               [12] 3952 	inc	r0
      000F80 E6               [12] 3953 	mov	a,@r0
      000F81 C0 E0            [24] 3954 	push	acc
      000F83 8E 82            [24] 3955 	mov	dpl,r6
      000F85 8F 83            [24] 3956 	mov	dph,r7
      000F87 12r0BrAF         [24] 3957 	lcall	_send_packet
      000F8A 15 81            [12] 3958 	dec	sp
      000F8C 15 81            [12] 3959 	dec	sp
      000F8E 15 81            [12] 3960 	dec	sp
      000F90                       3961 00103$:
                                   3962 ;	../../core/net/mac/lpp.c:736: }
      000F90 22               [24] 3963 	ret
                                   3964 ;------------------------------------------------------------
                                   3965 ;Allocation info for local variables in function 'detect_ack'
                                   3966 ;------------------------------------------------------------
                                   3967 ;wt                        Allocated to registers r5 r6 
                                   3968 ;ack_received              Allocated to registers r7 
                                   3969 ;len                       Allocated to registers r5 r6 
                                   3970 ;ackbuf                    Allocated to stack - sp -4
                                   3971 ;------------------------------------------------------------
                                   3972 ;	../../core/net/mac/lpp.c:739: detect_ack(void)
                                   3973 ;	-----------------------------------------
                                   3974 ;	 function detect_ack
                                   3975 ;	-----------------------------------------
      000F91                       3976 _detect_ack:
      000F91 E5 81            [12] 3977 	mov	a,sp
      000F93 24 05            [12] 3978 	add	a,#0x05
      000F95 F5 81            [12] 3979 	mov	sp,a
                                   3980 ;	../../core/net/mac/lpp.c:745: uint8_t ack_received = 0;
      000F97 7F 00            [12] 3981 	mov	r7,#0x00
                                   3982 ;	../../core/net/mac/lpp.c:747: wt = RTIMER_NOW();
      000F99 AD E2            [24] 3983 	mov	r5,_T1CNTL
      000F9B 7E 00            [12] 3984 	mov	r6,#0x00
      000F9D AB E3            [24] 3985 	mov	r3,_T1CNTH
      000F9F 8B 04            [24] 3986 	mov	ar4,r3
      000FA1 E4               [12] 3987 	clr	a
      000FA2 2D               [12] 3988 	add	a,r5
      000FA3 FD               [12] 3989 	mov	r5,a
      000FA4 EC               [12] 3990 	mov	a,r4
      000FA5 3E               [12] 3991 	addc	a,r6
      000FA6 FE               [12] 3992 	mov	r6,a
                                   3993 ;	../../core/net/mac/lpp.c:748: leds_on(LEDS_GREEN);
      000FA7 75 82 01         [24] 3994 	mov	dpl,#0x01
      000FAA C0 07            [24] 3995 	push	ar7
      000FAC C0 06            [24] 3996 	push	ar6
      000FAE C0 05            [24] 3997 	push	ar5
      000FB0 12r00r00         [24] 3998 	lcall	_leds_on
      000FB3 D0 05            [24] 3999 	pop	ar5
      000FB5 D0 06            [24] 4000 	pop	ar6
      000FB7 D0 07            [24] 4001 	pop	ar7
                                   4002 ;	../../core/net/mac/lpp.c:749: while(RTIMER_CLOCK_LT(RTIMER_NOW(), wt + INTER_PACKET_INTERVAL)) { }
      000FB9                       4003 00101$:
      000FB9 C0 07            [24] 4004 	push	ar7
      000FBB AB E2            [24] 4005 	mov	r3,_T1CNTL
      000FBD 7C 00            [12] 4006 	mov	r4,#0x00
      000FBF AA E3            [24] 4007 	mov	r2,_T1CNTH
      000FC1 8A 07            [24] 4008 	mov	ar7,r2
      000FC3 E4               [12] 4009 	clr	a
      000FC4 2B               [12] 4010 	add	a,r3
      000FC5 FB               [12] 4011 	mov	r3,a
      000FC6 EF               [12] 4012 	mov	a,r7
      000FC7 3C               [12] 4013 	addc	a,r4
      000FC8 FC               [12] 4014 	mov	r4,a
      000FC9 8D 02            [24] 4015 	mov	ar2,r5
      000FCB 8E 07            [24] 4016 	mov	ar7,r6
      000FCD 74 03            [12] 4017 	mov	a,#0x03
      000FCF 2A               [12] 4018 	add	a,r2
      000FD0 FA               [12] 4019 	mov	r2,a
      000FD1 E4               [12] 4020 	clr	a
      000FD2 3F               [12] 4021 	addc	a,r7
      000FD3 FF               [12] 4022 	mov	r7,a
      000FD4 EB               [12] 4023 	mov	a,r3
      000FD5 C3               [12] 4024 	clr	c
      000FD6 9A               [12] 4025 	subb	a,r2
      000FD7 EC               [12] 4026 	mov	a,r4
      000FD8 9F               [12] 4027 	subb	a,r7
      000FD9 D0 07            [24] 4028 	pop	ar7
      000FDB 20 E7 DB         [24] 4029 	jb	acc.7,00101$
                                   4030 ;	../../core/net/mac/lpp.c:750: leds_off(LEDS_GREEN);
      000FDE 75 82 01         [24] 4031 	mov	dpl,#0x01
      000FE1 C0 07            [24] 4032 	push	ar7
      000FE3 12r00r00         [24] 4033 	lcall	_leds_off
                                   4034 ;	../../core/net/mac/lpp.c:752: if((NETSTACK_RADIO.receiving_packet() ||
      000FE6 90r00r0C         [24] 4035 	mov	dptr,#(_cc2530_rf_driver + 0x000c)
      000FE9 E4               [12] 4036 	clr	a
      000FEA 93               [24] 4037 	movc	a,@a+dptr
      000FEB FD               [12] 4038 	mov	r5,a
      000FEC A3               [24] 4039 	inc	dptr
      000FED E4               [12] 4040 	clr	a
      000FEE 93               [24] 4041 	movc	a,@a+dptr
      000FEF FE               [12] 4042 	mov	r6,a
      000FF0 8D 82            [24] 4043 	mov	dpl,r5
      000FF2 8E 83            [24] 4044 	mov	dph,r6
      000FF4 12r00r00         [24] 4045 	lcall	__sdcc_call_dptr
      000FF7 AD 82            [24] 4046 	mov	r5,dpl
      000FF9 AE 83            [24] 4047 	mov	r6,dph
      000FFB D0 07            [24] 4048 	pop	ar7
      000FFD ED               [12] 4049 	mov	a,r5
      000FFE 4E               [12] 4050 	orl	a,r6
      000FFF 70 3A            [24] 4051 	jnz	00109$
                                   4052 ;	../../core/net/mac/lpp.c:753: NETSTACK_RADIO.pending_packet() ||
      001001 90r00r0E         [24] 4053 	mov	dptr,#(_cc2530_rf_driver + 0x000e)
      001004 E4               [12] 4054 	clr	a
      001005 93               [24] 4055 	movc	a,@a+dptr
      001006 FD               [12] 4056 	mov	r5,a
      001007 A3               [24] 4057 	inc	dptr
      001008 E4               [12] 4058 	clr	a
      001009 93               [24] 4059 	movc	a,@a+dptr
      00100A FE               [12] 4060 	mov	r6,a
      00100B C0 07            [24] 4061 	push	ar7
      00100D 8D 82            [24] 4062 	mov	dpl,r5
      00100F 8E 83            [24] 4063 	mov	dph,r6
      001011 12r00r00         [24] 4064 	lcall	__sdcc_call_dptr
      001014 AD 82            [24] 4065 	mov	r5,dpl
      001016 AE 83            [24] 4066 	mov	r6,dph
      001018 D0 07            [24] 4067 	pop	ar7
      00101A ED               [12] 4068 	mov	a,r5
      00101B 4E               [12] 4069 	orl	a,r6
      00101C 70 1D            [24] 4070 	jnz	00109$
                                   4071 ;	../../core/net/mac/lpp.c:754: NETSTACK_RADIO.channel_clear() == 0)) {
      00101E 90r00r0A         [24] 4072 	mov	dptr,#(_cc2530_rf_driver + 0x000a)
      001021 E4               [12] 4073 	clr	a
      001022 93               [24] 4074 	movc	a,@a+dptr
      001023 FD               [12] 4075 	mov	r5,a
      001024 A3               [24] 4076 	inc	dptr
      001025 E4               [12] 4077 	clr	a
      001026 93               [24] 4078 	movc	a,@a+dptr
      001027 FE               [12] 4079 	mov	r6,a
      001028 C0 07            [24] 4080 	push	ar7
      00102A 8D 82            [24] 4081 	mov	dpl,r5
      00102C 8E 83            [24] 4082 	mov	dph,r6
      00102E 12r00r00         [24] 4083 	lcall	__sdcc_call_dptr
      001031 AD 82            [24] 4084 	mov	r5,dpl
      001033 AE 83            [24] 4085 	mov	r6,dph
      001035 D0 07            [24] 4086 	pop	ar7
      001037 ED               [12] 4087 	mov	a,r5
      001038 4E               [12] 4088 	orl	a,r6
      001039 70 72            [24] 4089 	jnz	00110$
      00103B                       4090 00109$:
                                   4091 ;	../../core/net/mac/lpp.c:758: wt = RTIMER_NOW();
      00103B AD E2            [24] 4092 	mov	r5,_T1CNTL
      00103D 7E 00            [12] 4093 	mov	r6,#0x00
      00103F AB E3            [24] 4094 	mov	r3,_T1CNTH
      001041 8B 04            [24] 4095 	mov	ar4,r3
      001043 E4               [12] 4096 	clr	a
      001044 FB               [12] 4097 	mov	r3,a
      001045 2D               [12] 4098 	add	a,r5
      001046 FD               [12] 4099 	mov	r5,a
      001047 EC               [12] 4100 	mov	a,r4
      001048 3E               [12] 4101 	addc	a,r6
      001049 FE               [12] 4102 	mov	r6,a
                                   4103 ;	../../core/net/mac/lpp.c:759: while(RTIMER_CLOCK_LT(RTIMER_NOW(), wt + AFTER_ACK_DETECTECT_WAIT_TIME)) { }
      00104A                       4104 00104$:
      00104A C0 07            [24] 4105 	push	ar7
      00104C AB E2            [24] 4106 	mov	r3,_T1CNTL
      00104E 7C 00            [12] 4107 	mov	r4,#0x00
      001050 AA E3            [24] 4108 	mov	r2,_T1CNTH
      001052 8A 07            [24] 4109 	mov	ar7,r2
      001054 E4               [12] 4110 	clr	a
      001055 2B               [12] 4111 	add	a,r3
      001056 FB               [12] 4112 	mov	r3,a
      001057 EF               [12] 4113 	mov	a,r7
      001058 3C               [12] 4114 	addc	a,r4
      001059 FC               [12] 4115 	mov	r4,a
      00105A 8D 02            [24] 4116 	mov	ar2,r5
      00105C 8E 07            [24] 4117 	mov	ar7,r6
      00105E 74 0F            [12] 4118 	mov	a,#0x0f
      001060 2A               [12] 4119 	add	a,r2
      001061 FA               [12] 4120 	mov	r2,a
      001062 E4               [12] 4121 	clr	a
      001063 3F               [12] 4122 	addc	a,r7
      001064 FF               [12] 4123 	mov	r7,a
      001065 EB               [12] 4124 	mov	a,r3
      001066 C3               [12] 4125 	clr	c
      001067 9A               [12] 4126 	subb	a,r2
      001068 EC               [12] 4127 	mov	a,r4
      001069 9F               [12] 4128 	subb	a,r7
      00106A D0 07            [24] 4129 	pop	ar7
      00106C 20 E7 DB         [24] 4130 	jb	acc.7,00104$
                                   4131 ;	../../core/net/mac/lpp.c:761: len = NETSTACK_RADIO.read(ackbuf, ACK_LEN);
      00106F 90r00r08         [24] 4132 	mov	dptr,#(_cc2530_rf_driver + 0x0008)
      001072 E4               [12] 4133 	clr	a
      001073 93               [24] 4134 	movc	a,@a+dptr
      001074 FD               [12] 4135 	mov	r5,a
      001075 A3               [24] 4136 	inc	dptr
      001076 E4               [12] 4137 	clr	a
      001077 93               [24] 4138 	movc	a,@a+dptr
      001078 FE               [12] 4139 	mov	r6,a
      001079 E5 81            [12] 4140 	mov	a,sp
      00107B 24 FC            [12] 4141 	add	a,#0xfc
      00107D FC               [12] 4142 	mov	r4,a
      00107E 7B 00            [12] 4143 	mov	r3,#0x00
      001080 7A 40            [12] 4144 	mov	r2,#0x40
      001082 C0 07            [24] 4145 	push	ar7
      001084 74 03            [12] 4146 	mov	a,#0x03
      001086 C0 E0            [24] 4147 	push	acc
      001088 E4               [12] 4148 	clr	a
      001089 C0 E0            [24] 4149 	push	acc
      00108B 12r10r90         [24] 4150 	lcall	00162$
      00108E 80 0B            [24] 4151 	sjmp	00163$
      001090                       4152 00162$:
      001090 C0 05            [24] 4153 	push	ar5
      001092 C0 06            [24] 4154 	push	ar6
      001094 8C 82            [24] 4155 	mov	dpl,r4
      001096 8B 83            [24] 4156 	mov	dph,r3
      001098 8A F0            [24] 4157 	mov	b,r2
      00109A 22               [24] 4158 	ret
      00109B                       4159 00163$:
      00109B AD 82            [24] 4160 	mov	r5,dpl
      00109D AE 83            [24] 4161 	mov	r6,dph
      00109F 15 81            [12] 4162 	dec	sp
      0010A1 15 81            [12] 4163 	dec	sp
      0010A3 D0 07            [24] 4164 	pop	ar7
                                   4165 ;	../../core/net/mac/lpp.c:762: if(len == ACK_LEN) {
      0010A5 BD 03 05         [24] 4166 	cjne	r5,#0x03,00110$
      0010A8 BE 00 02         [24] 4167 	cjne	r6,#0x00,00110$
                                   4168 ;	../../core/net/mac/lpp.c:763: ack_received = 1;
      0010AB 7F 01            [12] 4169 	mov	r7,#0x01
      0010AD                       4170 00110$:
                                   4171 ;	../../core/net/mac/lpp.c:766: if(ack_received) {
      0010AD EF               [12] 4172 	mov	a,r7
      0010AE 60 0A            [24] 4173 	jz	00114$
                                   4174 ;	../../core/net/mac/lpp.c:767: leds_toggle(LEDS_RED);
      0010B0 75 82 02         [24] 4175 	mov	dpl,#0x02
      0010B3 C0 07            [24] 4176 	push	ar7
      0010B5 12r00r00         [24] 4177 	lcall	_leds_toggle
      0010B8 D0 07            [24] 4178 	pop	ar7
      0010BA                       4179 00114$:
                                   4180 ;	../../core/net/mac/lpp.c:769: return ack_received;
      0010BA 7E 00            [12] 4181 	mov	r6,#0x00
      0010BC 8F 82            [24] 4182 	mov	dpl,r7
      0010BE 8E 83            [24] 4183 	mov	dph,r6
                                   4184 ;	../../core/net/mac/lpp.c:770: }
      0010C0 E5 81            [12] 4185 	mov	a,sp
      0010C2 24 FB            [12] 4186 	add	a,#0xfb
      0010C4 F5 81            [12] 4187 	mov	sp,a
      0010C6 22               [24] 4188 	ret
                                   4189 ;------------------------------------------------------------
                                   4190 ;Allocation info for local variables in function 'input_packet'
                                   4191 ;------------------------------------------------------------
                                   4192 ;hdr                       Allocated to stack - sp -13
                                   4193 ;reception_time            Allocated to registers 
                                   4194 ;ret                       Allocated to registers 
                                   4195 ;adata                     Allocated to stack - sp -7
                                   4196 ;i                         Allocated to stack - sp -5
                                   4197 ;receiver                  Allocated to stack - sp -2
                                   4198 ;sent                      Allocated to registers 
                                   4199 ;sloc0                     Allocated to stack - sp +4
                                   4200 ;sloc1                     Allocated to stack - sp -15
                                   4201 ;------------------------------------------------------------
                                   4202 ;	../../core/net/mac/lpp.c:779: input_packet(void)
                                   4203 ;	-----------------------------------------
                                   4204 ;	 function input_packet
                                   4205 ;	-----------------------------------------
      0010C7                       4206 _input_packet:
      0010C7 E5 81            [12] 4207 	mov	a,sp
      0010C9 24 10            [12] 4208 	add	a,#0x10
      0010CB F5 81            [12] 4209 	mov	sp,a
                                   4210 ;	../../core/net/mac/lpp.c:785: reception_time = clock_time();
      0010CD 12r00r00         [24] 4211 	lcall	_clock_time
      0010D0 AE 82            [24] 4212 	mov	r6,dpl
      0010D2 AF 83            [24] 4213 	mov	r7,dph
                                   4214 ;	../../core/net/mac/lpp.c:787: if(NETSTACK_FRAMER.parse() < 0) {
      0010D4 90r00r02         [24] 4215 	mov	dptr,#(_framer_802154 + 0x0002)
      0010D7 E4               [12] 4216 	clr	a
      0010D8 93               [24] 4217 	movc	a,@a+dptr
      0010D9 FC               [12] 4218 	mov	r4,a
      0010DA A3               [24] 4219 	inc	dptr
      0010DB E4               [12] 4220 	clr	a
      0010DC 93               [24] 4221 	movc	a,@a+dptr
      0010DD FD               [12] 4222 	mov	r5,a
      0010DE C0 07            [24] 4223 	push	ar7
      0010E0 C0 06            [24] 4224 	push	ar6
      0010E2 8C 82            [24] 4225 	mov	dpl,r4
      0010E4 8D 83            [24] 4226 	mov	dph,r5
      0010E6 12r00r00         [24] 4227 	lcall	__sdcc_call_dptr
      0010E9 AD 83            [24] 4228 	mov	r5,dph
      0010EB D0 06            [24] 4229 	pop	ar6
      0010ED D0 07            [24] 4230 	pop	ar7
      0010EF ED               [12] 4231 	mov	a,r5
      0010F0 30 E7 1D         [24] 4232 	jnb	acc.7,00102$
                                   4233 ;	../../core/net/mac/lpp.c:788: printf("lpp input_packet framer error\n");
      0010F3 C0 07            [24] 4234 	push	ar7
      0010F5 C0 06            [24] 4235 	push	ar6
      0010F7 74r18            [12] 4236 	mov	a,#___str_2
      0010F9 C0 E0            [24] 4237 	push	acc
      0010FB 74s00            [12] 4238 	mov	a,#(___str_2 >> 8)
      0010FD C0 E0            [24] 4239 	push	acc
      0010FF 74 80            [12] 4240 	mov	a,#0x80
      001101 C0 E0            [24] 4241 	push	acc
      001103 12r00r00         [24] 4242 	lcall	_printf
      001106 15 81            [12] 4243 	dec	sp
      001108 15 81            [12] 4244 	dec	sp
      00110A 15 81            [12] 4245 	dec	sp
      00110C D0 06            [24] 4246 	pop	ar6
      00110E D0 07            [24] 4247 	pop	ar7
      001110                       4248 00102$:
                                   4249 ;	../../core/net/mac/lpp.c:791: memcpy(&hdr, packetbuf_dataptr(), sizeof(struct lpp_hdr));;
      001110 C0 06            [24] 4250 	push	ar6
      001112 C0 07            [24] 4251 	push	ar7
      001114 C0 07            [24] 4252 	push	ar7
      001116 C0 06            [24] 4253 	push	ar6
      001118 12r00r00         [24] 4254 	lcall	_packetbuf_dataptr
      00111B AB 82            [24] 4255 	mov	r3,dpl
      00111D AC 83            [24] 4256 	mov	r4,dph
      00111F AD F0            [24] 4257 	mov	r5,b
      001121 D0 06            [24] 4258 	pop	ar6
      001123 D0 07            [24] 4259 	pop	ar7
      001125 E5 81            [12] 4260 	mov	a,sp
      001127 24 F1            [12] 4261 	add	a,#0xf1
      001129 F9               [12] 4262 	mov	r1,a
      00112A FA               [12] 4263 	mov	r2,a
      00112B 7E 00            [12] 4264 	mov	r6,#0x00
      00112D 7F 40            [12] 4265 	mov	r7,#0x40
      00112F C0 07            [24] 4266 	push	ar7
      001131 C0 06            [24] 4267 	push	ar6
      001133 C0 01            [24] 4268 	push	ar1
      001135 74 06            [12] 4269 	mov	a,#0x06
      001137 C0 E0            [24] 4270 	push	acc
      001139 E4               [12] 4271 	clr	a
      00113A C0 E0            [24] 4272 	push	acc
      00113C C0 03            [24] 4273 	push	ar3
      00113E C0 04            [24] 4274 	push	ar4
      001140 C0 05            [24] 4275 	push	ar5
      001142 8A 82            [24] 4276 	mov	dpl,r2
      001144 8E 83            [24] 4277 	mov	dph,r6
      001146 8F F0            [24] 4278 	mov	b,r7
      001148 12r00r00         [24] 4279 	lcall	___memcpy
      00114B E5 81            [12] 4280 	mov	a,sp
      00114D 24 FB            [12] 4281 	add	a,#0xfb
      00114F F5 81            [12] 4282 	mov	sp,a
                                   4283 ;	../../core/net/mac/lpp.c:792: packetbuf_hdrreduce(sizeof(struct lpp_hdr));
      001151 90 00 06         [24] 4284 	mov	dptr,#0x0006
      001154 12r00r00         [24] 4285 	lcall	_packetbuf_hdrreduce
      001157 D0 01            [24] 4286 	pop	ar1
      001159 D0 06            [24] 4287 	pop	ar6
      00115B D0 07            [24] 4288 	pop	ar7
                                   4289 ;	../../core/net/mac/lpp.c:795: if(hdr.type == TYPE_PROBE) {
      00115D 87 06            [24] 4290 	mov	ar6,@r1
      00115F 09               [12] 4291 	inc	r1
      001160 87 07            [24] 4292 	mov	ar7,@r1
      001162 19               [12] 4293 	dec	r1
      001163 8E 05            [24] 4294 	mov	ar5,r6
      001165 8F 04            [24] 4295 	mov	ar4,r7
      001167 BD 01 05         [24] 4296 	cjne	r5,#0x01,00188$
      00116A BC 00 02         [24] 4297 	cjne	r4,#0x00,00188$
      00116D 80 07            [24] 4298 	sjmp	00189$
      00116F                       4299 00188$:
      00116F D0 07            [24] 4300 	pop	ar7
      001171 D0 06            [24] 4301 	pop	ar6
      001173 02r14rE2         [24] 4302 	ljmp	00125$
      001176                       4303 00189$:
      001176 D0 07            [24] 4304 	pop	ar7
      001178 D0 06            [24] 4305 	pop	ar6
                                   4306 ;	../../core/net/mac/lpp.c:800: register_encounter(&hdr.sender, reception_time);
      00117A 74 02            [12] 4307 	mov	a,#0x02
      00117C 29               [12] 4308 	add	a,r1
      00117D FD               [12] 4309 	mov	r5,a
      00117E FA               [12] 4310 	mov	r2,a
      00117F 7B 00            [12] 4311 	mov	r3,#0x00
      001181 7C 40            [12] 4312 	mov	r4,#0x40
      001183 C0 05            [24] 4313 	push	ar5
      001185 C0 06            [24] 4314 	push	ar6
      001187 C0 07            [24] 4315 	push	ar7
      001189 8A 82            [24] 4316 	mov	dpl,r2
      00118B 8B 83            [24] 4317 	mov	dph,r3
      00118D 8C F0            [24] 4318 	mov	b,r4
      00118F 12r00rDC         [24] 4319 	lcall	_register_encounter
      001192 15 81            [12] 4320 	dec	sp
      001194 15 81            [12] 4321 	dec	sp
                                   4322 ;	../../core/net/mac/lpp.c:803: memcpy(&adata, packetbuf_dataptr(),
      001196 12r00r00         [24] 4323 	lcall	_packetbuf_datalen
      001199 AE 82            [24] 4324 	mov	r6,dpl
      00119B AF 83            [24] 4325 	mov	r7,dph
      00119D D0 05            [24] 4326 	pop	ar5
      00119F C3               [12] 4327 	clr	c
      0011A0 EE               [12] 4328 	mov	a,r6
      0011A1 94 02            [12] 4329 	subb	a,#0x02
      0011A3 EF               [12] 4330 	mov	a,r7
      0011A4 94 00            [12] 4331 	subb	a,#0x00
      0011A6 50 0D            [24] 4332 	jnc	00132$
      0011A8 C0 05            [24] 4333 	push	ar5
      0011AA 12r00r00         [24] 4334 	lcall	_packetbuf_datalen
      0011AD AE 82            [24] 4335 	mov	r6,dpl
      0011AF AF 83            [24] 4336 	mov	r7,dph
      0011B1 D0 05            [24] 4337 	pop	ar5
      0011B3 80 04            [24] 4338 	sjmp	00133$
      0011B5                       4339 00132$:
      0011B5 7E 02            [12] 4340 	mov	r6,#0x02
      0011B7 7F 00            [12] 4341 	mov	r7,#0x00
      0011B9                       4342 00133$:
      0011B9 C0 05            [24] 4343 	push	ar5
      0011BB E5 81            [12] 4344 	mov	a,sp
      0011BD 24 F0            [12] 4345 	add	a,#0xf0
      0011BF F8               [12] 4346 	mov	r0,a
      0011C0 A6 06            [24] 4347 	mov	@r0,ar6
      0011C2 08               [12] 4348 	inc	r0
      0011C3 A6 07            [24] 4349 	mov	@r0,ar7
      0011C5 C0 05            [24] 4350 	push	ar5
      0011C7 12r00r00         [24] 4351 	lcall	_packetbuf_dataptr
      0011CA AA 82            [24] 4352 	mov	r2,dpl
      0011CC AB 83            [24] 4353 	mov	r3,dph
      0011CE AC F0            [24] 4354 	mov	r4,b
      0011D0 D0 05            [24] 4355 	pop	ar5
      0011D2 E5 81            [12] 4356 	mov	a,sp
      0011D4 24 F8            [12] 4357 	add	a,#0xf8
      0011D6 FD               [12] 4358 	mov	r5,a
      0011D7 7E 00            [12] 4359 	mov	r6,#0x00
      0011D9 7F 40            [12] 4360 	mov	r7,#0x40
      0011DB C0 05            [24] 4361 	push	ar5
      0011DD E5 81            [12] 4362 	mov	a,sp
      0011DF 24 EF            [12] 4363 	add	a,#0xef
      0011E1 F8               [12] 4364 	mov	r0,a
      0011E2 E6               [12] 4365 	mov	a,@r0
      0011E3 C0 E0            [24] 4366 	push	acc
      0011E5 08               [12] 4367 	inc	r0
      0011E6 E6               [12] 4368 	mov	a,@r0
      0011E7 C0 E0            [24] 4369 	push	acc
      0011E9 C0 02            [24] 4370 	push	ar2
      0011EB C0 03            [24] 4371 	push	ar3
      0011ED C0 04            [24] 4372 	push	ar4
      0011EF 8D 82            [24] 4373 	mov	dpl,r5
      0011F1 8E 83            [24] 4374 	mov	dph,r6
      0011F3 8F F0            [24] 4375 	mov	b,r7
      0011F5 12r00r00         [24] 4376 	lcall	___memcpy
      0011F8 E5 81            [12] 4377 	mov	a,sp
      0011FA 24 FB            [12] 4378 	add	a,#0xfb
      0011FC F5 81            [12] 4379 	mov	sp,a
      0011FE D0 05            [24] 4380 	pop	ar5
                                   4381 ;	../../core/net/mac/lpp.c:831: if(list_length(queued_packets_list) > 0) {
      001200 90r00r0E         [24] 4382 	mov	dptr,#_queued_packets_list
      001203 E0               [24] 4383 	movx	a,@dptr
      001204 FD               [12] 4384 	mov	r5,a
      001205 A3               [24] 4385 	inc	dptr
      001206 E0               [24] 4386 	movx	a,@dptr
      001207 FE               [12] 4387 	mov	r6,a
      001208 A3               [24] 4388 	inc	dptr
      001209 E0               [24] 4389 	movx	a,@dptr
      00120A FF               [12] 4390 	mov	r7,a
      00120B 8D 82            [24] 4391 	mov	dpl,r5
      00120D 8E 83            [24] 4392 	mov	dph,r6
      00120F 8F F0            [24] 4393 	mov	b,r7
      001211 C0 05            [24] 4394 	push	ar5
      001213 12r00r00         [24] 4395 	lcall	_list_length
      001216 AE 82            [24] 4396 	mov	r6,dpl
      001218 AF 83            [24] 4397 	mov	r7,dph
      00121A D0 05            [24] 4398 	pop	ar5
      00121C C3               [12] 4399 	clr	c
      00121D E4               [12] 4400 	clr	a
      00121E 9E               [12] 4401 	subb	a,r6
      00121F 74 80            [12] 4402 	mov	a,#(0x00 ^ 0x80)
      001221 8F F0            [24] 4403 	mov	b,r7
      001223 63 F0 80         [24] 4404 	xrl	b,#0x80
      001226 95 F0            [12] 4405 	subb	a,b
      001228 D0 05            [24] 4406 	pop	ar5
      00122A 40 03            [24] 4407 	jc	00191$
      00122C 02r15rBF         [24] 4408 	ljmp	00130$
      00122F                       4409 00191$:
                                   4410 ;	../../core/net/mac/lpp.c:833: for(i = list_head(queued_packets_list); i != NULL; i = list_item_next(i)) {
      00122F 90r00r0E         [24] 4411 	mov	dptr,#_queued_packets_list
      001232 E0               [24] 4412 	movx	a,@dptr
      001233 FC               [12] 4413 	mov	r4,a
      001234 A3               [24] 4414 	inc	dptr
      001235 E0               [24] 4415 	movx	a,@dptr
      001236 FE               [12] 4416 	mov	r6,a
      001237 A3               [24] 4417 	inc	dptr
      001238 E0               [24] 4418 	movx	a,@dptr
      001239 FF               [12] 4419 	mov	r7,a
      00123A 8C 82            [24] 4420 	mov	dpl,r4
      00123C 8E 83            [24] 4421 	mov	dph,r6
      00123E 8F F0            [24] 4422 	mov	b,r7
      001240 C0 05            [24] 4423 	push	ar5
      001242 12r00r00         [24] 4424 	lcall	_list_head
      001245 AC 82            [24] 4425 	mov	r4,dpl
      001247 AE 83            [24] 4426 	mov	r6,dph
      001249 AF F0            [24] 4427 	mov	r7,b
      00124B D0 05            [24] 4428 	pop	ar5
      00124D E5 81            [12] 4429 	mov	a,sp
      00124F 24 FB            [12] 4430 	add	a,#0xfb
      001251 F8               [12] 4431 	mov	r0,a
      001252 A6 04            [24] 4432 	mov	@r0,ar4
      001254 08               [12] 4433 	inc	r0
      001255 A6 06            [24] 4434 	mov	@r0,ar6
      001257 08               [12] 4435 	inc	r0
      001258 A6 07            [24] 4436 	mov	@r0,ar7
      00125A                       4437 00128$:
      00125A E5 81            [12] 4438 	mov	a,sp
      00125C 24 FB            [12] 4439 	add	a,#0xfb
      00125E F8               [12] 4440 	mov	r0,a
      00125F E6               [12] 4441 	mov	a,@r0
      001260 08               [12] 4442 	inc	r0
      001261 46               [12] 4443 	orl	a,@r0
      001262 70 03            [24] 4444 	jnz	00192$
      001264 02r15rBF         [24] 4445 	ljmp	00130$
      001267                       4446 00192$:
                                   4447 ;	../../core/net/mac/lpp.c:839: receiver = queuebuf_addr(i->packet, PACKETBUF_ADDR_RECEIVER);
      001267 E5 81            [12] 4448 	mov	a,sp
      001269 24 FB            [12] 4449 	add	a,#0xfb
      00126B F8               [12] 4450 	mov	r0,a
      00126C 74 03            [12] 4451 	mov	a,#0x03
      00126E 26               [12] 4452 	add	a,@r0
      00126F FA               [12] 4453 	mov	r2,a
      001270 E4               [12] 4454 	clr	a
      001271 08               [12] 4455 	inc	r0
      001272 36               [12] 4456 	addc	a,@r0
      001273 FB               [12] 4457 	mov	r3,a
      001274 08               [12] 4458 	inc	r0
      001275 86 07            [24] 4459 	mov	ar7,@r0
      001277 8A 82            [24] 4460 	mov	dpl,r2
      001279 8B 83            [24] 4461 	mov	dph,r3
      00127B 8F F0            [24] 4462 	mov	b,r7
      00127D 12r00r00         [24] 4463 	lcall	__gptrget
      001280 FA               [12] 4464 	mov	r2,a
      001281 A3               [24] 4465 	inc	dptr
      001282 12r00r00         [24] 4466 	lcall	__gptrget
      001285 FB               [12] 4467 	mov	r3,a
      001286 A3               [24] 4468 	inc	dptr
      001287 12r00r00         [24] 4469 	lcall	__gptrget
      00128A FF               [12] 4470 	mov	r7,a
      00128B C0 05            [24] 4471 	push	ar5
      00128D 74 19            [12] 4472 	mov	a,#0x19
      00128F C0 E0            [24] 4473 	push	acc
      001291 8A 82            [24] 4474 	mov	dpl,r2
      001293 8B 83            [24] 4475 	mov	dph,r3
      001295 8F F0            [24] 4476 	mov	b,r7
      001297 12r00r00         [24] 4477 	lcall	_queuebuf_addr
      00129A AC 82            [24] 4478 	mov	r4,dpl
      00129C AE 83            [24] 4479 	mov	r6,dph
      00129E AF F0            [24] 4480 	mov	r7,b
      0012A0 15 81            [12] 4481 	dec	sp
      0012A2 D0 05            [24] 4482 	pop	ar5
      0012A4 A8 81            [24] 4483 	mov	r0,sp
      0012A6 18               [12] 4484 	dec	r0
      0012A7 18               [12] 4485 	dec	r0
      0012A8 A6 04            [24] 4486 	mov	@r0,ar4
      0012AA 08               [12] 4487 	inc	r0
      0012AB A6 06            [24] 4488 	mov	@r0,ar6
      0012AD 08               [12] 4489 	inc	r0
      0012AE A6 07            [24] 4490 	mov	@r0,ar7
                                   4491 ;	../../core/net/mac/lpp.c:840: if(rimeaddr_cmp(receiver, &hdr.sender) ||
      0012B0 8D 02            [24] 4492 	mov	ar2,r5
      0012B2 7B 00            [12] 4493 	mov	r3,#0x00
      0012B4 7F 40            [12] 4494 	mov	r7,#0x40
      0012B6 C0 05            [24] 4495 	push	ar5
      0012B8 C0 02            [24] 4496 	push	ar2
      0012BA C0 03            [24] 4497 	push	ar3
      0012BC C0 07            [24] 4498 	push	ar7
      0012BE E5 81            [12] 4499 	mov	a,sp
      0012C0 24 FA            [12] 4500 	add	a,#0xfa
      0012C2 F8               [12] 4501 	mov	r0,a
      0012C3 86 82            [24] 4502 	mov	dpl,@r0
      0012C5 08               [12] 4503 	inc	r0
      0012C6 86 83            [24] 4504 	mov	dph,@r0
      0012C8 08               [12] 4505 	inc	r0
      0012C9 86 F0            [24] 4506 	mov	b,@r0
      0012CB 12r00r00         [24] 4507 	lcall	_rimeaddr_cmp
      0012CE AE 82            [24] 4508 	mov	r6,dpl
      0012D0 AF 83            [24] 4509 	mov	r7,dph
      0012D2 15 81            [12] 4510 	dec	sp
      0012D4 15 81            [12] 4511 	dec	sp
      0012D6 15 81            [12] 4512 	dec	sp
      0012D8 D0 05            [24] 4513 	pop	ar5
      0012DA EE               [12] 4514 	mov	a,r6
      0012DB 4F               [12] 4515 	orl	a,r7
      0012DC 70 31            [24] 4516 	jnz	00112$
                                   4517 ;	../../core/net/mac/lpp.c:841: rimeaddr_cmp(receiver, &rimeaddr_null)) {
      0012DE C0 05            [24] 4518 	push	ar5
      0012E0 74r00            [12] 4519 	mov	a,#_rimeaddr_null
      0012E2 C0 E0            [24] 4520 	push	acc
      0012E4 74s00            [12] 4521 	mov	a,#(_rimeaddr_null >> 8)
      0012E6 C0 E0            [24] 4522 	push	acc
      0012E8 74 80            [12] 4523 	mov	a,#0x80
      0012EA C0 E0            [24] 4524 	push	acc
      0012EC E5 81            [12] 4525 	mov	a,sp
      0012EE 24 FA            [12] 4526 	add	a,#0xfa
      0012F0 F8               [12] 4527 	mov	r0,a
      0012F1 86 82            [24] 4528 	mov	dpl,@r0
      0012F3 08               [12] 4529 	inc	r0
      0012F4 86 83            [24] 4530 	mov	dph,@r0
      0012F6 08               [12] 4531 	inc	r0
      0012F7 86 F0            [24] 4532 	mov	b,@r0
      0012F9 12r00r00         [24] 4533 	lcall	_rimeaddr_cmp
      0012FC AE 82            [24] 4534 	mov	r6,dpl
      0012FE AF 83            [24] 4535 	mov	r7,dph
      001300 15 81            [12] 4536 	dec	sp
      001302 15 81            [12] 4537 	dec	sp
      001304 15 81            [12] 4538 	dec	sp
      001306 D0 05            [24] 4539 	pop	ar5
      001308 EE               [12] 4540 	mov	a,r6
      001309 4F               [12] 4541 	orl	a,r7
      00130A 70 03            [24] 4542 	jnz	00194$
      00130C 02r14rB2         [24] 4543 	ljmp	00129$
      00130F                       4544 00194$:
      00130F                       4545 00112$:
                                   4546 ;	../../core/net/mac/lpp.c:842: queuebuf_to_packetbuf(i->packet);
      00130F C0 05            [24] 4547 	push	ar5
      001311 E5 81            [12] 4548 	mov	a,sp
      001313 24 FA            [12] 4549 	add	a,#0xfa
      001315 F8               [12] 4550 	mov	r0,a
      001316 74 03            [12] 4551 	mov	a,#0x03
      001318 26               [12] 4552 	add	a,@r0
      001319 FC               [12] 4553 	mov	r4,a
      00131A E4               [12] 4554 	clr	a
      00131B 08               [12] 4555 	inc	r0
      00131C 36               [12] 4556 	addc	a,@r0
      00131D FE               [12] 4557 	mov	r6,a
      00131E 08               [12] 4558 	inc	r0
      00131F 86 07            [24] 4559 	mov	ar7,@r0
      001321 8C 82            [24] 4560 	mov	dpl,r4
      001323 8E 83            [24] 4561 	mov	dph,r6
      001325 8F F0            [24] 4562 	mov	b,r7
      001327 12r00r00         [24] 4563 	lcall	__gptrget
      00132A FA               [12] 4564 	mov	r2,a
      00132B A3               [24] 4565 	inc	dptr
      00132C 12r00r00         [24] 4566 	lcall	__gptrget
      00132F FB               [12] 4567 	mov	r3,a
      001330 A3               [24] 4568 	inc	dptr
      001331 12r00r00         [24] 4569 	lcall	__gptrget
      001334 FD               [12] 4570 	mov	r5,a
      001335 8A 82            [24] 4571 	mov	dpl,r2
      001337 8B 83            [24] 4572 	mov	dph,r3
      001339 8D F0            [24] 4573 	mov	b,r5
      00133B C0 07            [24] 4574 	push	ar7
      00133D C0 06            [24] 4575 	push	ar6
      00133F C0 05            [24] 4576 	push	ar5
      001341 C0 04            [24] 4577 	push	ar4
      001343 12r00r00         [24] 4578 	lcall	_queuebuf_to_packetbuf
      001346 D0 04            [24] 4579 	pop	ar4
      001348 D0 05            [24] 4580 	pop	ar5
      00134A D0 06            [24] 4581 	pop	ar6
      00134C D0 07            [24] 4582 	pop	ar7
                                   4583 ;	../../core/net/mac/lpp.c:862: i->num_transmissions = 1;
      00134E E5 81            [12] 4584 	mov	a,sp
      001350 24 FA            [12] 4585 	add	a,#0xfa
      001352 F8               [12] 4586 	mov	r0,a
      001353 74 28            [12] 4587 	mov	a,#0x28
      001355 26               [12] 4588 	add	a,@r0
      001356 FA               [12] 4589 	mov	r2,a
      001357 E4               [12] 4590 	clr	a
      001358 08               [12] 4591 	inc	r0
      001359 36               [12] 4592 	addc	a,@r0
      00135A FB               [12] 4593 	mov	r3,a
      00135B 08               [12] 4594 	inc	r0
      00135C 86 05            [24] 4595 	mov	ar5,@r0
      00135E 8A 82            [24] 4596 	mov	dpl,r2
      001360 8B 83            [24] 4597 	mov	dph,r3
      001362 8D F0            [24] 4598 	mov	b,r5
      001364 74 01            [12] 4599 	mov	a,#0x01
      001366 12r00r00         [24] 4600 	lcall	__gptrput
                                   4601 ;	../../core/net/mac/lpp.c:863: ret = NETSTACK_RADIO.send(queuebuf_dataptr(i->packet),
      001369 90r00r06         [24] 4602 	mov	dptr,#(_cc2530_rf_driver + 0x0006)
      00136C E5 81            [12] 4603 	mov	a,sp
      00136E 24 F0            [12] 4604 	add	a,#0xf0
      001370 F8               [12] 4605 	mov	r0,a
      001371 E4               [12] 4606 	clr	a
      001372 93               [24] 4607 	movc	a,@a+dptr
      001373 F6               [12] 4608 	mov	@r0,a
      001374 A3               [24] 4609 	inc	dptr
      001375 E4               [12] 4610 	clr	a
      001376 93               [24] 4611 	movc	a,@a+dptr
      001377 08               [12] 4612 	inc	r0
      001378 F6               [12] 4613 	mov	@r0,a
                                   4614 ;	../../core/net/mac/lpp.c:864: queuebuf_datalen(i->packet));
      001379 8C 82            [24] 4615 	mov	dpl,r4
      00137B 8E 83            [24] 4616 	mov	dph,r6
      00137D 8F F0            [24] 4617 	mov	b,r7
      00137F 12r00r00         [24] 4618 	lcall	__gptrget
      001382 FA               [12] 4619 	mov	r2,a
      001383 A3               [24] 4620 	inc	dptr
      001384 12r00r00         [24] 4621 	lcall	__gptrget
      001387 FB               [12] 4622 	mov	r3,a
      001388 A3               [24] 4623 	inc	dptr
      001389 12r00r00         [24] 4624 	lcall	__gptrget
      00138C FD               [12] 4625 	mov	r5,a
      00138D 8A 82            [24] 4626 	mov	dpl,r2
      00138F 8B 83            [24] 4627 	mov	dph,r3
      001391 8D F0            [24] 4628 	mov	b,r5
      001393 C0 07            [24] 4629 	push	ar7
      001395 C0 06            [24] 4630 	push	ar6
      001397 C0 04            [24] 4631 	push	ar4
      001399 12r00r00         [24] 4632 	lcall	_queuebuf_datalen
      00139C AB 82            [24] 4633 	mov	r3,dpl
      00139E AD 83            [24] 4634 	mov	r5,dph
      0013A0 D0 04            [24] 4635 	pop	ar4
      0013A2 D0 06            [24] 4636 	pop	ar6
      0013A4 D0 07            [24] 4637 	pop	ar7
                                   4638 ;	../../core/net/mac/lpp.c:863: ret = NETSTACK_RADIO.send(queuebuf_dataptr(i->packet),
      0013A6 8C 82            [24] 4639 	mov	dpl,r4
      0013A8 8E 83            [24] 4640 	mov	dph,r6
      0013AA 8F F0            [24] 4641 	mov	b,r7
      0013AC 12r00r00         [24] 4642 	lcall	__gptrget
      0013AF FC               [12] 4643 	mov	r4,a
      0013B0 A3               [24] 4644 	inc	dptr
      0013B1 12r00r00         [24] 4645 	lcall	__gptrget
      0013B4 FE               [12] 4646 	mov	r6,a
      0013B5 A3               [24] 4647 	inc	dptr
      0013B6 12r00r00         [24] 4648 	lcall	__gptrget
      0013B9 FF               [12] 4649 	mov	r7,a
      0013BA 8C 82            [24] 4650 	mov	dpl,r4
      0013BC 8E 83            [24] 4651 	mov	dph,r6
      0013BE 8F F0            [24] 4652 	mov	b,r7
      0013C0 C0 05            [24] 4653 	push	ar5
      0013C2 C0 03            [24] 4654 	push	ar3
      0013C4 12r00r00         [24] 4655 	lcall	_queuebuf_dataptr
      0013C7 AC 82            [24] 4656 	mov	r4,dpl
      0013C9 AE 83            [24] 4657 	mov	r6,dph
      0013CB AF F0            [24] 4658 	mov	r7,b
      0013CD D0 03            [24] 4659 	pop	ar3
      0013CF D0 05            [24] 4660 	pop	ar5
      0013D1 C0 05            [24] 4661 	push	ar5
      0013D3 C0 03            [24] 4662 	push	ar3
      0013D5 C0 05            [24] 4663 	push	ar5
      0013D7 12r13rDC         [24] 4664 	lcall	00195$
      0013DA 80 13            [24] 4665 	sjmp	00196$
      0013DC                       4666 00195$:
      0013DC E5 81            [12] 4667 	mov	a,sp
      0013DE 24 EB            [12] 4668 	add	a,#0xeb
      0013E0 F8               [12] 4669 	mov	r0,a
      0013E1 E6               [12] 4670 	mov	a,@r0
      0013E2 C0 E0            [24] 4671 	push	acc
      0013E4 08               [12] 4672 	inc	r0
      0013E5 E6               [12] 4673 	mov	a,@r0
      0013E6 C0 E0            [24] 4674 	push	acc
      0013E8 8C 82            [24] 4675 	mov	dpl,r4
      0013EA 8E 83            [24] 4676 	mov	dph,r6
      0013EC 8F F0            [24] 4677 	mov	b,r7
      0013EE 22               [24] 4678 	ret
      0013EF                       4679 00196$:
      0013EF 15 81            [12] 4680 	dec	sp
      0013F1 15 81            [12] 4681 	dec	sp
      0013F3 D0 05            [24] 4682 	pop	ar5
                                   4683 ;	../../core/net/mac/lpp.c:875: compower_accumulate(&i->compower);
      0013F5 E5 81            [12] 4684 	mov	a,sp
      0013F7 24 FA            [12] 4685 	add	a,#0xfa
      0013F9 F8               [12] 4686 	mov	r0,a
      0013FA 74 1B            [12] 4687 	mov	a,#0x1b
      0013FC 26               [12] 4688 	add	a,@r0
      0013FD FD               [12] 4689 	mov	r5,a
      0013FE E4               [12] 4690 	clr	a
      0013FF 08               [12] 4691 	inc	r0
      001400 36               [12] 4692 	addc	a,@r0
      001401 FE               [12] 4693 	mov	r6,a
      001402 08               [12] 4694 	inc	r0
      001403 86 07            [24] 4695 	mov	ar7,@r0
      001405 8D 82            [24] 4696 	mov	dpl,r5
      001407 8E 83            [24] 4697 	mov	dph,r6
      001409 8F F0            [24] 4698 	mov	b,r7
      00140B C0 05            [24] 4699 	push	ar5
      00140D 12r00r00         [24] 4700 	lcall	_compower_accumulate
                                   4701 ;	../../core/net/mac/lpp.c:881: if(!rimeaddr_cmp(receiver, &rimeaddr_null)) {
      001410 74r00            [12] 4702 	mov	a,#_rimeaddr_null
      001412 C0 E0            [24] 4703 	push	acc
      001414 74s00            [12] 4704 	mov	a,#(_rimeaddr_null >> 8)
      001416 C0 E0            [24] 4705 	push	acc
      001418 74 80            [12] 4706 	mov	a,#0x80
      00141A C0 E0            [24] 4707 	push	acc
      00141C E5 81            [12] 4708 	mov	a,sp
      00141E 24 F9            [12] 4709 	add	a,#0xf9
      001420 F8               [12] 4710 	mov	r0,a
      001421 86 82            [24] 4711 	mov	dpl,@r0
      001423 08               [12] 4712 	inc	r0
      001424 86 83            [24] 4713 	mov	dph,@r0
      001426 08               [12] 4714 	inc	r0
      001427 86 F0            [24] 4715 	mov	b,@r0
      001429 12r00r00         [24] 4716 	lcall	_rimeaddr_cmp
      00142C AE 82            [24] 4717 	mov	r6,dpl
      00142E AF 83            [24] 4718 	mov	r7,dph
      001430 15 81            [12] 4719 	dec	sp
      001432 15 81            [12] 4720 	dec	sp
      001434 15 81            [12] 4721 	dec	sp
      001436 D0 05            [24] 4722 	pop	ar5
      001438 D0 05            [24] 4723 	pop	ar5
      00143A EE               [12] 4724 	mov	a,r6
      00143B 4F               [12] 4725 	orl	a,r7
      00143C 70 74            [24] 4726 	jnz	00129$
                                   4727 ;	../../core/net/mac/lpp.c:890: if(detect_ack()) {
      00143E C0 05            [24] 4728 	push	ar5
      001440 12r0Fr91         [24] 4729 	lcall	_detect_ack
      001443 E5 82            [12] 4730 	mov	a,dpl
      001445 85 83 F0         [24] 4731 	mov	b,dph
      001448 D0 05            [24] 4732 	pop	ar5
      00144A 45 F0            [12] 4733 	orl	a,b
      00144C 60 1C            [24] 4734 	jz	00104$
                                   4735 ;	../../core/net/mac/lpp.c:891: remove_queued_packet(i, 1);
      00144E C0 05            [24] 4736 	push	ar5
      001450 74 01            [12] 4737 	mov	a,#0x01
      001452 C0 E0            [24] 4738 	push	acc
      001454 E5 81            [12] 4739 	mov	a,sp
      001456 24 F9            [12] 4740 	add	a,#0xf9
      001458 F8               [12] 4741 	mov	r0,a
      001459 86 82            [24] 4742 	mov	dpl,@r0
      00145B 08               [12] 4743 	inc	r0
      00145C 86 83            [24] 4744 	mov	dph,@r0
      00145E 08               [12] 4745 	inc	r0
      00145F 86 F0            [24] 4746 	mov	b,@r0
      001461 12r03rCB         [24] 4747 	lcall	_remove_queued_packet
      001464 15 81            [12] 4748 	dec	sp
      001466 D0 05            [24] 4749 	pop	ar5
      001468 80 19            [24] 4750 	sjmp	00105$
      00146A                       4751 00104$:
                                   4752 ;	../../core/net/mac/lpp.c:893: remove_queued_packet(i, 0);
      00146A C0 05            [24] 4753 	push	ar5
      00146C E4               [12] 4754 	clr	a
      00146D C0 E0            [24] 4755 	push	acc
      00146F E5 81            [12] 4756 	mov	a,sp
      001471 24 F9            [12] 4757 	add	a,#0xf9
      001473 F8               [12] 4758 	mov	r0,a
      001474 86 82            [24] 4759 	mov	dpl,@r0
      001476 08               [12] 4760 	inc	r0
      001477 86 83            [24] 4761 	mov	dph,@r0
      001479 08               [12] 4762 	inc	r0
      00147A 86 F0            [24] 4763 	mov	b,@r0
      00147C 12r03rCB         [24] 4764 	lcall	_remove_queued_packet
      00147F 15 81            [12] 4765 	dec	sp
      001481 D0 05            [24] 4766 	pop	ar5
      001483                       4767 00105$:
                                   4768 ;	../../core/net/mac/lpp.c:905: if(is_streaming) {
      001483 90r00r2B         [24] 4769 	mov	dptr,#_is_streaming
      001486 E0               [24] 4770 	movx	a,@dptr
      001487 60 29            [24] 4771 	jz	00129$
                                   4772 ;	../../core/net/mac/lpp.c:906: ctimer_set(&stream_probe_timer, STREAM_PROBE_TIME,
      001489 C0 05            [24] 4773 	push	ar5
      00148B E4               [12] 4774 	clr	a
      00148C C0 E0            [24] 4775 	push	acc
      00148E C0 E0            [24] 4776 	push	acc
      001490 C0 E0            [24] 4777 	push	acc
      001492 74r0A            [12] 4778 	mov	a,#_send_stream_probe
      001494 C0 E0            [24] 4779 	push	acc
      001496 74s09            [12] 4780 	mov	a,#(_send_stream_probe >> 8)
      001498 C0 E0            [24] 4781 	push	acc
      00149A 74 01            [12] 4782 	mov	a,#0x01
      00149C C0 E0            [24] 4783 	push	acc
      00149E E4               [12] 4784 	clr	a
      00149F C0 E0            [24] 4785 	push	acc
      0014A1 90r01r90         [24] 4786 	mov	dptr,#_stream_probe_timer
      0014A4 75 F0 00         [24] 4787 	mov	b,#0x00
      0014A7 12r00r00         [24] 4788 	lcall	_ctimer_set
      0014AA E5 81            [12] 4789 	mov	a,sp
      0014AC 24 F9            [12] 4790 	add	a,#0xf9
      0014AE F5 81            [12] 4791 	mov	sp,a
      0014B0 D0 05            [24] 4792 	pop	ar5
                                   4793 ;	../../core/net/mac/lpp.c:913: turn_radio_off();
      0014B2                       4794 00129$:
                                   4795 ;	../../core/net/mac/lpp.c:833: for(i = list_head(queued_packets_list); i != NULL; i = list_item_next(i)) {
      0014B2 E5 81            [12] 4796 	mov	a,sp
      0014B4 24 FB            [12] 4797 	add	a,#0xfb
      0014B6 F8               [12] 4798 	mov	r0,a
      0014B7 86 04            [24] 4799 	mov	ar4,@r0
      0014B9 08               [12] 4800 	inc	r0
      0014BA 86 06            [24] 4801 	mov	ar6,@r0
      0014BC 08               [12] 4802 	inc	r0
      0014BD 86 07            [24] 4803 	mov	ar7,@r0
      0014BF 8C 82            [24] 4804 	mov	dpl,r4
      0014C1 8E 83            [24] 4805 	mov	dph,r6
      0014C3 8F F0            [24] 4806 	mov	b,r7
      0014C5 C0 05            [24] 4807 	push	ar5
      0014C7 12r00r00         [24] 4808 	lcall	_list_item_next
      0014CA AC 82            [24] 4809 	mov	r4,dpl
      0014CC AE 83            [24] 4810 	mov	r6,dph
      0014CE AF F0            [24] 4811 	mov	r7,b
      0014D0 D0 05            [24] 4812 	pop	ar5
      0014D2 E5 81            [12] 4813 	mov	a,sp
      0014D4 24 FB            [12] 4814 	add	a,#0xfb
      0014D6 F8               [12] 4815 	mov	r0,a
      0014D7 A6 04            [24] 4816 	mov	@r0,ar4
      0014D9 08               [12] 4817 	inc	r0
      0014DA A6 06            [24] 4818 	mov	@r0,ar6
      0014DC 08               [12] 4819 	inc	r0
      0014DD A6 07            [24] 4820 	mov	@r0,ar7
      0014DF 02r12r5A         [24] 4821 	ljmp	00128$
      0014E2                       4822 00125$:
                                   4823 ;	../../core/net/mac/lpp.c:929: } else if(hdr.type == TYPE_DATA) {
      0014E2 BD 02 05         [24] 4824 	cjne	r5,#0x02,00200$
      0014E5 BC 00 02         [24] 4825 	cjne	r4,#0x00,00200$
      0014E8 80 03            [24] 4826 	sjmp	00201$
      0014EA                       4827 00200$:
      0014EA 02r15rBF         [24] 4828 	ljmp	00130$
      0014ED                       4829 00201$:
                                   4830 ;	../../core/net/mac/lpp.c:930: turn_radio_off();
      0014ED C0 01            [24] 4831 	push	ar1
      0014EF 12r00r1A         [24] 4832 	lcall	_turn_radio_off
      0014F2 D0 01            [24] 4833 	pop	ar1
                                   4834 ;	../../core/net/mac/lpp.c:931: if(!rimeaddr_cmp(&hdr.receiver, &rimeaddr_null)) {
      0014F4 74 04            [12] 4835 	mov	a,#0x04
      0014F6 29               [12] 4836 	add	a,r1
      0014F7 FF               [12] 4837 	mov	r7,a
      0014F8 FC               [12] 4838 	mov	r4,a
      0014F9 7D 00            [12] 4839 	mov	r5,#0x00
      0014FB 7E 40            [12] 4840 	mov	r6,#0x40
      0014FD C0 07            [24] 4841 	push	ar7
      0014FF C0 01            [24] 4842 	push	ar1
      001501 74r00            [12] 4843 	mov	a,#_rimeaddr_null
      001503 C0 E0            [24] 4844 	push	acc
      001505 74s00            [12] 4845 	mov	a,#(_rimeaddr_null >> 8)
      001507 C0 E0            [24] 4846 	push	acc
      001509 74 80            [12] 4847 	mov	a,#0x80
      00150B C0 E0            [24] 4848 	push	acc
      00150D 8C 82            [24] 4849 	mov	dpl,r4
      00150F 8D 83            [24] 4850 	mov	dph,r5
      001511 8E F0            [24] 4851 	mov	b,r6
      001513 12r00r00         [24] 4852 	lcall	_rimeaddr_cmp
      001516 AD 82            [24] 4853 	mov	r5,dpl
      001518 AE 83            [24] 4854 	mov	r6,dph
      00151A 15 81            [12] 4855 	dec	sp
      00151C 15 81            [12] 4856 	dec	sp
      00151E 15 81            [12] 4857 	dec	sp
      001520 D0 01            [24] 4858 	pop	ar1
      001522 D0 07            [24] 4859 	pop	ar7
      001524 ED               [12] 4860 	mov	a,r5
      001525 4E               [12] 4861 	orl	a,r6
                                   4862 ;	../../core/net/mac/lpp.c:932: if(!rimeaddr_cmp(&hdr.receiver, &rimeaddr_node_addr)) {
      001526 70 49            [24] 4863 	jnz	00121$
      001528 8F 06            [24] 4864 	mov	ar6,r7
      00152A FD               [12] 4865 	mov	r5,a
      00152B 7C 40            [12] 4866 	mov	r4,#0x40
      00152D C0 07            [24] 4867 	push	ar7
      00152F C0 01            [24] 4868 	push	ar1
      001531 74r00            [12] 4869 	mov	a,#_rimeaddr_node_addr
      001533 C0 E0            [24] 4870 	push	acc
      001535 74s00            [12] 4871 	mov	a,#(_rimeaddr_node_addr >> 8)
      001537 C0 E0            [24] 4872 	push	acc
      001539 E4               [12] 4873 	clr	a
      00153A C0 E0            [24] 4874 	push	acc
      00153C 8E 82            [24] 4875 	mov	dpl,r6
      00153E 8D 83            [24] 4876 	mov	dph,r5
      001540 8C F0            [24] 4877 	mov	b,r4
      001542 12r00r00         [24] 4878 	lcall	_rimeaddr_cmp
      001545 AD 82            [24] 4879 	mov	r5,dpl
      001547 AE 83            [24] 4880 	mov	r6,dph
      001549 15 81            [12] 4881 	dec	sp
      00154B 15 81            [12] 4882 	dec	sp
      00154D 15 81            [12] 4883 	dec	sp
      00154F D0 01            [24] 4884 	pop	ar1
      001551 D0 07            [24] 4885 	pop	ar7
      001553 ED               [12] 4886 	mov	a,r5
      001554 4E               [12] 4887 	orl	a,r6
                                   4888 ;	../../core/net/mac/lpp.c:937: return;
      001555 60 68            [24] 4889 	jz	00130$
                                   4890 ;	../../core/net/mac/lpp.c:939: packetbuf_set_addr(PACKETBUF_ADDR_RECEIVER, &hdr.receiver);
      001557 7E 00            [12] 4891 	mov	r6,#0x00
      001559 7D 40            [12] 4892 	mov	r5,#0x40
      00155B C0 01            [24] 4893 	push	ar1
      00155D C0 07            [24] 4894 	push	ar7
      00155F C0 06            [24] 4895 	push	ar6
      001561 C0 05            [24] 4896 	push	ar5
      001563 75 82 19         [24] 4897 	mov	dpl,#0x19
      001566 12r00r00         [24] 4898 	lcall	_packetbuf_set_addr
      001569 15 81            [12] 4899 	dec	sp
      00156B 15 81            [12] 4900 	dec	sp
      00156D 15 81            [12] 4901 	dec	sp
      00156F D0 01            [24] 4902 	pop	ar1
      001571                       4903 00121$:
                                   4904 ;	../../core/net/mac/lpp.c:941: packetbuf_set_addr(PACKETBUF_ADDR_SENDER, &hdr.sender);
      001571 74 02            [12] 4905 	mov	a,#0x02
      001573 29               [12] 4906 	add	a,r1
      001574 FF               [12] 4907 	mov	r7,a
      001575 7E 00            [12] 4908 	mov	r6,#0x00
      001577 7D 40            [12] 4909 	mov	r5,#0x40
      001579 C0 07            [24] 4910 	push	ar7
      00157B C0 06            [24] 4911 	push	ar6
      00157D C0 05            [24] 4912 	push	ar5
      00157F 75 82 18         [24] 4913 	mov	dpl,#0x18
      001582 12r00r00         [24] 4914 	lcall	_packetbuf_set_addr
      001585 15 81            [12] 4915 	dec	sp
      001587 15 81            [12] 4916 	dec	sp
      001589 15 81            [12] 4917 	dec	sp
                                   4918 ;	../../core/net/mac/lpp.c:948: compower_accumulate(&current_packet);
      00158B 90r00r01         [24] 4919 	mov	dptr,#_current_packet
      00158E 75 F0 00         [24] 4920 	mov	b,#0x00
      001591 12r00r00         [24] 4921 	lcall	_compower_accumulate
                                   4922 ;	../../core/net/mac/lpp.c:953: compower_attrconv(&current_packet);
      001594 90r00r01         [24] 4923 	mov	dptr,#_current_packet
      001597 75 F0 00         [24] 4924 	mov	b,#0x00
      00159A 12r00r00         [24] 4925 	lcall	_compower_attrconv
                                   4926 ;	../../core/net/mac/lpp.c:957: compower_clear(&current_packet);
      00159D 90r00r01         [24] 4927 	mov	dptr,#_current_packet
      0015A0 75 F0 00         [24] 4928 	mov	b,#0x00
      0015A3 12r00r00         [24] 4929 	lcall	_compower_clear
                                   4930 ;	../../core/net/mac/lpp.c:1000: NETSTACK_MAC.input();
      0015A6 90r00r07         [24] 4931 	mov	dptr,#(_csma_driver + 0x0007)
      0015A9 E4               [12] 4932 	clr	a
      0015AA 93               [24] 4933 	movc	a,@a+dptr
      0015AB FE               [12] 4934 	mov	r6,a
      0015AC A3               [24] 4935 	inc	dptr
      0015AD E4               [12] 4936 	clr	a
      0015AE 93               [24] 4937 	movc	a,@a+dptr
      0015AF FF               [12] 4938 	mov	r7,a
      0015B0 C0 07            [24] 4939 	push	ar7
      0015B2 C0 06            [24] 4940 	push	ar6
      0015B4 8E 82            [24] 4941 	mov	dpl,r6
      0015B6 8F 83            [24] 4942 	mov	dph,r7
      0015B8 12r00r00         [24] 4943 	lcall	__sdcc_call_dptr
      0015BB D0 06            [24] 4944 	pop	ar6
      0015BD D0 07            [24] 4945 	pop	ar7
      0015BF                       4946 00130$:
                                   4947 ;	../../core/net/mac/lpp.c:1002: }
      0015BF E5 81            [12] 4948 	mov	a,sp
      0015C1 24 F0            [12] 4949 	add	a,#0xf0
      0015C3 F5 81            [12] 4950 	mov	sp,a
      0015C5 22               [24] 4951 	ret
                                   4952 ;------------------------------------------------------------
                                   4953 ;Allocation info for local variables in function 'on'
                                   4954 ;------------------------------------------------------------
                                   4955 ;	../../core/net/mac/lpp.c:1005: on(void)
                                   4956 ;	-----------------------------------------
                                   4957 ;	 function on
                                   4958 ;	-----------------------------------------
      0015C6                       4959 _on:
                                   4960 ;	../../core/net/mac/lpp.c:1007: lpp_is_on = 1;
      0015C6 90r00r00         [24] 4961 	mov	dptr,#_lpp_is_on
      0015C9 74 01            [12] 4962 	mov	a,#0x01
      0015CB F0               [24] 4963 	movx	@dptr,a
                                   4964 ;	../../core/net/mac/lpp.c:1008: turn_radio_on();
      0015CC 12r00r00         [24] 4965 	lcall	_turn_radio_on
                                   4966 ;	../../core/net/mac/lpp.c:1009: return 1;
      0015CF 90 00 01         [24] 4967 	mov	dptr,#0x0001
                                   4968 ;	../../core/net/mac/lpp.c:1010: }
      0015D2 22               [24] 4969 	ret
                                   4970 ;------------------------------------------------------------
                                   4971 ;Allocation info for local variables in function 'off'
                                   4972 ;------------------------------------------------------------
                                   4973 ;keep_radio_on             Allocated to registers r6 r7 
                                   4974 ;------------------------------------------------------------
                                   4975 ;	../../core/net/mac/lpp.c:1013: off(int keep_radio_on)
                                   4976 ;	-----------------------------------------
                                   4977 ;	 function off
                                   4978 ;	-----------------------------------------
      0015D3                       4979 _off:
      0015D3 AE 82            [24] 4980 	mov	r6,dpl
      0015D5 AF 83            [24] 4981 	mov	r7,dph
                                   4982 ;	../../core/net/mac/lpp.c:1015: lpp_is_on = 0;
      0015D7 90r00r00         [24] 4983 	mov	dptr,#_lpp_is_on
      0015DA E4               [12] 4984 	clr	a
      0015DB F0               [24] 4985 	movx	@dptr,a
                                   4986 ;	../../core/net/mac/lpp.c:1016: if(keep_radio_on) {
      0015DC EE               [12] 4987 	mov	a,r6
      0015DD 4F               [12] 4988 	orl	a,r7
      0015DE 60 05            [24] 4989 	jz	00102$
                                   4990 ;	../../core/net/mac/lpp.c:1017: turn_radio_on();
      0015E0 12r00r00         [24] 4991 	lcall	_turn_radio_on
      0015E3 80 03            [24] 4992 	sjmp	00103$
      0015E5                       4993 00102$:
                                   4994 ;	../../core/net/mac/lpp.c:1019: turn_radio_off();
      0015E5 12r00r1A         [24] 4995 	lcall	_turn_radio_off
      0015E8                       4996 00103$:
                                   4997 ;	../../core/net/mac/lpp.c:1021: return 1;
      0015E8 90 00 01         [24] 4998 	mov	dptr,#0x0001
                                   4999 ;	../../core/net/mac/lpp.c:1022: }
      0015EB 22               [24] 5000 	ret
                                   5001 ;------------------------------------------------------------
                                   5002 ;Allocation info for local variables in function 'channel_check_interval'
                                   5003 ;------------------------------------------------------------
                                   5004 ;	../../core/net/mac/lpp.c:1025: channel_check_interval(void)
                                   5005 ;	-----------------------------------------
                                   5006 ;	 function channel_check_interval
                                   5007 ;	-----------------------------------------
      0015EC                       5008 _channel_check_interval:
                                   5009 ;	../../core/net/mac/lpp.c:1027: return OFF_TIME + LISTEN_TIME;
      0015EC 90 00 10         [24] 5010 	mov	dptr,#0x0010
                                   5011 ;	../../core/net/mac/lpp.c:1028: }
      0015EF 22               [24] 5012 	ret
                                   5013 ;------------------------------------------------------------
                                   5014 ;Allocation info for local variables in function 'init'
                                   5015 ;------------------------------------------------------------
                                   5016 ;	../../core/net/mac/lpp.c:1031: init(void)
                                   5017 ;	-----------------------------------------
                                   5018 ;	 function init
                                   5019 ;	-----------------------------------------
      0015F0                       5020 _init:
                                   5021 ;	../../core/net/mac/lpp.c:1033: restart_dutycycle(random_rand() % OFF_TIME);
      0015F0 12r00r00         [24] 5022 	lcall	_random_rand
      0015F3 AE 82            [24] 5023 	mov	r6,dpl
      0015F5 AF 83            [24] 5024 	mov	r7,dph
      0015F7 74 0F            [12] 5025 	mov	a,#0x0f
      0015F9 C0 E0            [24] 5026 	push	acc
      0015FB E4               [12] 5027 	clr	a
      0015FC C0 E0            [24] 5028 	push	acc
      0015FE 8E 82            [24] 5029 	mov	dpl,r6
      001600 8F 83            [24] 5030 	mov	dph,r7
      001602 12r00r00         [24] 5031 	lcall	__moduint
      001605 AE 82            [24] 5032 	mov	r6,dpl
      001607 AF 83            [24] 5033 	mov	r7,dph
      001609 15 81            [12] 5034 	dec	sp
      00160B 15 81            [12] 5035 	dec	sp
      00160D 8E 82            [24] 5036 	mov	dpl,r6
      00160F 8F 83            [24] 5037 	mov	dph,r7
      001611 12r0Br79         [24] 5038 	lcall	_restart_dutycycle
                                   5039 ;	../../core/net/mac/lpp.c:1035: lpp_is_on = 1;
      001614 90r00r00         [24] 5040 	mov	dptr,#_lpp_is_on
      001617 74 01            [12] 5041 	mov	a,#0x01
      001619 F0               [24] 5042 	movx	@dptr,a
                                   5043 ;	../../core/net/mac/lpp.c:1037: announcement_register_listen_callback(listen_callback);
      00161A 90r05rE7         [24] 5044 	mov	dptr,#_listen_callback
      00161D 12r00r00         [24] 5045 	lcall	_announcement_register_listen_callback
                                   5046 ;	../../core/net/mac/lpp.c:1039: memb_init(&queued_packets_memb);
      001620 90r00r11         [24] 5047 	mov	dptr,#_queued_packets_memb
      001623 75 F0 00         [24] 5048 	mov	b,#0x00
      001626 12r00r00         [24] 5049 	lcall	_memb_init
                                   5050 ;	../../core/net/mac/lpp.c:1040: list_init(queued_packets_list);
      001629 90r00r0E         [24] 5051 	mov	dptr,#_queued_packets_list
      00162C E0               [24] 5052 	movx	a,@dptr
      00162D FD               [12] 5053 	mov	r5,a
      00162E A3               [24] 5054 	inc	dptr
      00162F E0               [24] 5055 	movx	a,@dptr
      001630 FE               [12] 5056 	mov	r6,a
      001631 A3               [24] 5057 	inc	dptr
      001632 E0               [24] 5058 	movx	a,@dptr
      001633 FF               [12] 5059 	mov	r7,a
      001634 8D 82            [24] 5060 	mov	dpl,r5
      001636 8E 83            [24] 5061 	mov	dph,r6
      001638 8F F0            [24] 5062 	mov	b,r7
      00163A 12r00r00         [24] 5063 	lcall	_list_init
                                   5064 ;	../../core/net/mac/lpp.c:1041: list_init(pending_packets_list);
      00163D 90r00r08         [24] 5065 	mov	dptr,#_pending_packets_list
      001640 E0               [24] 5066 	movx	a,@dptr
      001641 FD               [12] 5067 	mov	r5,a
      001642 A3               [24] 5068 	inc	dptr
      001643 E0               [24] 5069 	movx	a,@dptr
      001644 FE               [12] 5070 	mov	r6,a
      001645 A3               [24] 5071 	inc	dptr
      001646 E0               [24] 5072 	movx	a,@dptr
      001647 FF               [12] 5073 	mov	r7,a
      001648 8D 82            [24] 5074 	mov	dpl,r5
      00164A 8E 83            [24] 5075 	mov	dph,r6
      00164C 8F F0            [24] 5076 	mov	b,r7
                                   5077 ;	../../core/net/mac/lpp.c:1042: }
      00164E 02r00r00         [24] 5078 	ljmp	_list_init
                                   5079 	.area CSEG    (CODE)
                                   5080 	.area CONST   (CODE)
                                   5081 	.area CONST   (CODE)
      000000                       5082 ___str_0:
      000000 6E 75 6C 6C 20 70 61  5083 	.ascii "null packet"
             63 6B 65 74
      00000B 0A                    5084 	.db 0x0a
      00000C 00                    5085 	.db 0x00
                                   5086 	.area CSEG    (CODE)
                                   5087 	.area CONST   (CODE)
      00000D                       5088 ___str_1:
      00000D 69 20 3D 3D 20 4E 55  5089 	.ascii "i == NULL"
             4C 4C
      000016 0A                    5090 	.db 0x0a
      000017 00                    5091 	.db 0x00
                                   5092 	.area CSEG    (CODE)
                                   5093 	.area CONST   (CODE)
      000018                       5094 ___str_2:
      000018 6C 70 70 20 69 6E 70  5095 	.ascii "lpp input_packet framer error"
             75 74 5F 70 61 63 6B
             65 74 20 66 72 61 6D
             65 72 20 65 72 72 6F
             72
      000035 0A                    5096 	.db 0x0a
      000036 00                    5097 	.db 0x00
                                   5098 	.area CSEG    (CODE)
      001651                       5099 _lpp_driver:
      001651r37s00 80              5100 	.byte __str_3, (__str_3 >> 8),#0x80
      001654rF0s15                 5101 	.byte _init, (_init >> 8)
      001656rAFs0B                 5102 	.byte _send_packet, (_send_packet >> 8)
      001658r2Cs0F                 5103 	.byte _send_list, (_send_list >> 8)
      00165ArC7s10                 5104 	.byte _input_packet, (_input_packet >> 8)
      00165CrC6s15                 5105 	.byte _on, (_on >> 8)
      00165ErD3s15                 5106 	.byte _off, (_off >> 8)
      001660rECs15                 5107 	.byte _channel_check_interval, (_channel_check_interval >> 8)
                                   5108 	.area CONST   (CODE)
      000037                       5109 __str_3:
      000037 4C 50 50              5110 	.ascii "LPP"
      00003A 00                    5111 	.db 0x00
                                   5112 	.area CSEG    (CODE)
                                   5113 	.area XINIT   (CODE)
      000000                       5114 __xinit__is_listening:
      000000 00                    5115 	.db #0x00	; 0
      000001                       5116 __xinit__off_time_adjustment:
      000001 00 00                 5117 	.byte #0x00, #0x00	; 0
      000003                       5118 __xinit__off_time:
      000003 0F 00                 5119 	.byte #0x0f, #0x00	; 15
      000005                       5120 __xinit__pending_packets_list_list:
                                   5121 ; generic printIvalPtr
      000005 00 00 00              5122 	.byte #0x00,#0x00,#0x00
      000008                       5123 __xinit__pending_packets_list:
      000008r05s00 00              5124 	.byte _pending_packets_list_list, (_pending_packets_list_list >> 8),#0x00
      00000B                       5125 __xinit__queued_packets_list_list:
                                   5126 ; generic printIvalPtr
      00000B 00 00 00              5127 	.byte #0x00,#0x00,#0x00
      00000E                       5128 __xinit__queued_packets_list:
      00000Er0Bs00 00              5129 	.byte _queued_packets_list_list, (_queued_packets_list_list >> 8),#0x00
      000011                       5130 __xinit__queued_packets_memb:
      000011 29 00                 5131 	.byte #0x29, #0x00	; 41
      000013 04 00                 5132 	.byte #0x04, #0x00	; 4
      000015r20s00 00              5133 	.byte _queued_packets_memb_memb_count, (_queued_packets_memb_memb_count >> 8),#0x00
      000018r24s00 00              5134 	.byte _queued_packets_memb_memb_mem, (_queued_packets_memb_memb_mem >> 8),#0x00
      00001B                       5135 __xinit__encounter_list_list:
                                   5136 ; generic printIvalPtr
      00001B 00 00 00              5137 	.byte #0x00,#0x00,#0x00
      00001E                       5138 __xinit__encounter_list:
      00001Er1Bs00 00              5139 	.byte _encounter_list_list, (_encounter_list_list >> 8),#0x00
      000021                       5140 __xinit__encounter_memb:
      000021 31 00                 5141 	.byte #0x31, #0x00	; 49
      000023 04 00                 5142 	.byte #0x04, #0x00	; 4
      000025rC8s00 00              5143 	.byte _encounter_memb_memb_count, (_encounter_memb_memb_count >> 8),#0x00
      000028rCCs00 00              5144 	.byte _encounter_memb_memb_mem, (_encounter_memb_memb_mem >> 8),#0x00
      00002B                       5145 __xinit__is_streaming:
      00002B 00                    5146 	.db #0x00	; 0
                                   5147 	.area CABS    (ABS,CODE)
