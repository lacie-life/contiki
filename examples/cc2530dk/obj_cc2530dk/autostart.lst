                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module autostart
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _process_exit
                                     12 	.globl _process_start
                                     13 	.globl _autostart_start
                                     14 	.globl _autostart_exit
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram 
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; indirectly addressable internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area ISEG    (DATA)
                                     41 ;--------------------------------------------------------
                                     42 ; absolute internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area IABS    (ABS,DATA)
                                     45 	.area IABS    (ABS,DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; bit data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSEG    (BIT)
                                     50 ;--------------------------------------------------------
                                     51 ; paged external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area PSEG    (PAG,XDATA)
                                     54 ;--------------------------------------------------------
                                     55 ; external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XSEG    (XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XABS    (ABS,XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; external initialized ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XISEG   (XDATA)
                                     66 	.area HOME    (CODE)
                                     67 	.area GSINIT0 (CODE)
                                     68 	.area GSINIT1 (CODE)
                                     69 	.area GSINIT2 (CODE)
                                     70 	.area GSINIT3 (CODE)
                                     71 	.area GSINIT4 (CODE)
                                     72 	.area GSINIT5 (CODE)
                                     73 	.area GSINIT  (CODE)
                                     74 	.area GSFINAL (CODE)
                                     75 	.area CSEG    (CODE)
                                     76 ;--------------------------------------------------------
                                     77 ; global & static initialisations
                                     78 ;--------------------------------------------------------
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 ;--------------------------------------------------------
                                     84 ; Home
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area HOME    (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; code
                                     90 ;--------------------------------------------------------
                                     91 	.area CSEG    (CODE)
                                     92 ;------------------------------------------------------------
                                     93 ;Allocation info for local variables in function 'autostart_start'
                                     94 ;------------------------------------------------------------
                                     95 ;processes                 Allocated to registers r5 r6 r7 
                                     96 ;i                         Allocated to registers 
                                     97 ;------------------------------------------------------------
                                     98 ;	../../core/sys/autostart.c:52: autostart_start(struct process * const processes[])
                                     99 ;	-----------------------------------------
                                    100 ;	 function autostart_start
                                    101 ;	-----------------------------------------
      000000                        102 _autostart_start:
                           000007   103 	ar7 = 0x07
                           000006   104 	ar6 = 0x06
                           000005   105 	ar5 = 0x05
                           000004   106 	ar4 = 0x04
                           000003   107 	ar3 = 0x03
                           000002   108 	ar2 = 0x02
                           000001   109 	ar1 = 0x01
                           000000   110 	ar0 = 0x00
      000000 AD 82            [24]  111 	mov	r5,dpl
      000002 AE 83            [24]  112 	mov	r6,dph
      000004 AF F0            [24]  113 	mov	r7,b
                                    114 ;	../../core/sys/autostart.c:56: for(i = 0; processes[i] != NULL; ++i) {
      000006 7B 00            [12]  115 	mov	r3,#0x00
      000008 7C 00            [12]  116 	mov	r4,#0x00
      00000A                        117 00103$:
      00000A EB               [12]  118 	mov	a,r3
      00000B 2D               [12]  119 	add	a,r5
      00000C F8               [12]  120 	mov	r0,a
      00000D EC               [12]  121 	mov	a,r4
      00000E 3E               [12]  122 	addc	a,r6
      00000F F9               [12]  123 	mov	r1,a
      000010 8F 02            [24]  124 	mov	ar2,r7
      000012 88 82            [24]  125 	mov	dpl,r0
      000014 89 83            [24]  126 	mov	dph,r1
      000016 8A F0            [24]  127 	mov	b,r2
      000018 12r00r00         [24]  128 	lcall	__gptrget
      00001B F8               [12]  129 	mov	r0,a
      00001C A3               [24]  130 	inc	dptr
      00001D 12r00r00         [24]  131 	lcall	__gptrget
      000020 F9               [12]  132 	mov	r1,a
      000021 A3               [24]  133 	inc	dptr
      000022 12r00r00         [24]  134 	lcall	__gptrget
      000025 FA               [12]  135 	mov	r2,a
      000026 E8               [12]  136 	mov	a,r0
      000027 49               [12]  137 	orl	a,r1
      000028 60 33            [24]  138 	jz	00105$
                                    139 ;	../../core/sys/autostart.c:57: process_start(processes[i], NULL);
      00002A C0 07            [24]  140 	push	ar7
      00002C C0 06            [24]  141 	push	ar6
      00002E C0 05            [24]  142 	push	ar5
      000030 C0 04            [24]  143 	push	ar4
      000032 C0 03            [24]  144 	push	ar3
      000034 E4               [12]  145 	clr	a
      000035 C0 E0            [24]  146 	push	acc
      000037 C0 E0            [24]  147 	push	acc
      000039 C0 E0            [24]  148 	push	acc
      00003B 88 82            [24]  149 	mov	dpl,r0
      00003D 89 83            [24]  150 	mov	dph,r1
      00003F 8A F0            [24]  151 	mov	b,r2
      000041 12r00r00         [24]  152 	lcall	_process_start
      000044 15 81            [12]  153 	dec	sp
      000046 15 81            [12]  154 	dec	sp
      000048 15 81            [12]  155 	dec	sp
      00004A D0 03            [24]  156 	pop	ar3
      00004C D0 04            [24]  157 	pop	ar4
      00004E D0 05            [24]  158 	pop	ar5
      000050 D0 06            [24]  159 	pop	ar6
      000052 D0 07            [24]  160 	pop	ar7
                                    161 ;	../../core/sys/autostart.c:56: for(i = 0; processes[i] != NULL; ++i) {
      000054 74 03            [12]  162 	mov	a,#0x03
      000056 2B               [12]  163 	add	a,r3
      000057 FB               [12]  164 	mov	r3,a
      000058 E4               [12]  165 	clr	a
      000059 3C               [12]  166 	addc	a,r4
      00005A FC               [12]  167 	mov	r4,a
      00005B 80 AD            [24]  168 	sjmp	00103$
      00005D                        169 00105$:
                                    170 ;	../../core/sys/autostart.c:60: }
      00005D 22               [24]  171 	ret
                                    172 ;------------------------------------------------------------
                                    173 ;Allocation info for local variables in function 'autostart_exit'
                                    174 ;------------------------------------------------------------
                                    175 ;processes                 Allocated to registers r5 r6 r7 
                                    176 ;i                         Allocated to registers 
                                    177 ;------------------------------------------------------------
                                    178 ;	../../core/sys/autostart.c:63: autostart_exit(struct process * const processes[])
                                    179 ;	-----------------------------------------
                                    180 ;	 function autostart_exit
                                    181 ;	-----------------------------------------
      00005E                        182 _autostart_exit:
      00005E AD 82            [24]  183 	mov	r5,dpl
      000060 AE 83            [24]  184 	mov	r6,dph
      000062 AF F0            [24]  185 	mov	r7,b
                                    186 ;	../../core/sys/autostart.c:67: for(i = 0; processes[i] != NULL; ++i) {
      000064 7B 00            [12]  187 	mov	r3,#0x00
      000066 7C 00            [12]  188 	mov	r4,#0x00
      000068                        189 00103$:
      000068 EB               [12]  190 	mov	a,r3
      000069 2D               [12]  191 	add	a,r5
      00006A F8               [12]  192 	mov	r0,a
      00006B EC               [12]  193 	mov	a,r4
      00006C 3E               [12]  194 	addc	a,r6
      00006D F9               [12]  195 	mov	r1,a
      00006E 8F 02            [24]  196 	mov	ar2,r7
      000070 88 82            [24]  197 	mov	dpl,r0
      000072 89 83            [24]  198 	mov	dph,r1
      000074 8A F0            [24]  199 	mov	b,r2
      000076 12r00r00         [24]  200 	lcall	__gptrget
      000079 F8               [12]  201 	mov	r0,a
      00007A A3               [24]  202 	inc	dptr
      00007B 12r00r00         [24]  203 	lcall	__gptrget
      00007E F9               [12]  204 	mov	r1,a
      00007F A3               [24]  205 	inc	dptr
      000080 12r00r00         [24]  206 	lcall	__gptrget
      000083 FA               [12]  207 	mov	r2,a
      000084 E8               [12]  208 	mov	a,r0
      000085 49               [12]  209 	orl	a,r1
      000086 60 26            [24]  210 	jz	00105$
                                    211 ;	../../core/sys/autostart.c:68: process_exit(processes[i]);
      000088 88 82            [24]  212 	mov	dpl,r0
      00008A 89 83            [24]  213 	mov	dph,r1
      00008C 8A F0            [24]  214 	mov	b,r2
      00008E C0 07            [24]  215 	push	ar7
      000090 C0 06            [24]  216 	push	ar6
      000092 C0 05            [24]  217 	push	ar5
      000094 C0 04            [24]  218 	push	ar4
      000096 C0 03            [24]  219 	push	ar3
      000098 12r00r00         [24]  220 	lcall	_process_exit
      00009B D0 03            [24]  221 	pop	ar3
      00009D D0 04            [24]  222 	pop	ar4
      00009F D0 05            [24]  223 	pop	ar5
      0000A1 D0 06            [24]  224 	pop	ar6
      0000A3 D0 07            [24]  225 	pop	ar7
                                    226 ;	../../core/sys/autostart.c:67: for(i = 0; processes[i] != NULL; ++i) {
      0000A5 74 03            [12]  227 	mov	a,#0x03
      0000A7 2B               [12]  228 	add	a,r3
      0000A8 FB               [12]  229 	mov	r3,a
      0000A9 E4               [12]  230 	clr	a
      0000AA 3C               [12]  231 	addc	a,r4
      0000AB FC               [12]  232 	mov	r4,a
      0000AC 80 BA            [24]  233 	sjmp	00103$
      0000AE                        234 00105$:
                                    235 ;	../../core/sys/autostart.c:71: }
      0000AE 22               [24]  236 	ret
                                    237 	.area CSEG    (CODE)
                                    238 	.area CONST   (CODE)
                                    239 	.area XINIT   (CODE)
                                    240 	.area CABS    (ABS,CODE)
