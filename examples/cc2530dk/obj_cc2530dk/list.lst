                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module list
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _list_init
                                     12 	.globl _list_head
                                     13 	.globl _list_copy
                                     14 	.globl _list_tail
                                     15 	.globl _list_add
                                     16 	.globl _list_push
                                     17 	.globl _list_chop
                                     18 	.globl _list_pop
                                     19 	.globl _list_remove
                                     20 	.globl _list_length
                                     21 	.globl _list_insert
                                     22 	.globl _list_item_next
                                     23 ;--------------------------------------------------------
                                     24 ; special function registers
                                     25 ;--------------------------------------------------------
                                     26 	.area RSEG    (ABS,DATA)
      000000                         27 	.org 0x0000
                                     28 ;--------------------------------------------------------
                                     29 ; special function bits
                                     30 ;--------------------------------------------------------
                                     31 	.area RSEG    (ABS,DATA)
      000000                         32 	.org 0x0000
                                     33 ;--------------------------------------------------------
                                     34 ; overlayable register banks
                                     35 ;--------------------------------------------------------
                                     36 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         37 	.ds 8
                                     38 ;--------------------------------------------------------
                                     39 ; internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area DSEG    (DATA)
                                     42 ;--------------------------------------------------------
                                     43 ; overlayable items in internal ram 
                                     44 ;--------------------------------------------------------
                                     45 ;--------------------------------------------------------
                                     46 ; indirectly addressable internal ram data
                                     47 ;--------------------------------------------------------
                                     48 	.area ISEG    (DATA)
                                     49 ;--------------------------------------------------------
                                     50 ; absolute internal ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area IABS    (ABS,DATA)
                                     53 	.area IABS    (ABS,DATA)
                                     54 ;--------------------------------------------------------
                                     55 ; bit data
                                     56 ;--------------------------------------------------------
                                     57 	.area BSEG    (BIT)
                                     58 ;--------------------------------------------------------
                                     59 ; paged external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area PSEG    (PAG,XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; external ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XSEG    (XDATA)
                                     66 ;--------------------------------------------------------
                                     67 ; absolute external ram data
                                     68 ;--------------------------------------------------------
                                     69 	.area XABS    (ABS,XDATA)
                                     70 ;--------------------------------------------------------
                                     71 ; external initialized ram data
                                     72 ;--------------------------------------------------------
                                     73 	.area XISEG   (XDATA)
                                     74 	.area HOME    (CODE)
                                     75 	.area GSINIT0 (CODE)
                                     76 	.area GSINIT1 (CODE)
                                     77 	.area GSINIT2 (CODE)
                                     78 	.area GSINIT3 (CODE)
                                     79 	.area GSINIT4 (CODE)
                                     80 	.area GSINIT5 (CODE)
                                     81 	.area GSINIT  (CODE)
                                     82 	.area GSFINAL (CODE)
                                     83 	.area CSEG    (CODE)
                                     84 ;--------------------------------------------------------
                                     85 ; global & static initialisations
                                     86 ;--------------------------------------------------------
                                     87 	.area HOME    (CODE)
                                     88 	.area GSINIT  (CODE)
                                     89 	.area GSFINAL (CODE)
                                     90 	.area GSINIT  (CODE)
                                     91 ;--------------------------------------------------------
                                     92 ; Home
                                     93 ;--------------------------------------------------------
                                     94 	.area HOME    (CODE)
                                     95 	.area HOME    (CODE)
                                     96 ;--------------------------------------------------------
                                     97 ; code
                                     98 ;--------------------------------------------------------
                                     99 	.area CSEG    (CODE)
                                    100 ;------------------------------------------------------------
                                    101 ;Allocation info for local variables in function 'list_init'
                                    102 ;------------------------------------------------------------
                                    103 ;list                      Allocated to registers r5 r6 r7 
                                    104 ;------------------------------------------------------------
                                    105 ;	../../core/lib/list.c:65: list_init(list_t list)
                                    106 ;	-----------------------------------------
                                    107 ;	 function list_init
                                    108 ;	-----------------------------------------
      000000                        109 _list_init:
                           000007   110 	ar7 = 0x07
                           000006   111 	ar6 = 0x06
                           000005   112 	ar5 = 0x05
                           000004   113 	ar4 = 0x04
                           000003   114 	ar3 = 0x03
                           000002   115 	ar2 = 0x02
                           000001   116 	ar1 = 0x01
                           000000   117 	ar0 = 0x00
                                    118 ;	../../core/lib/list.c:67: *list = NULL;
      000000 E4               [12]  119 	clr	a
      000001 12r00r00         [24]  120 	lcall	__gptrput
      000004 A3               [24]  121 	inc	dptr
      000005 12r00r00         [24]  122 	lcall	__gptrput
      000008 A3               [24]  123 	inc	dptr
                                    124 ;	../../core/lib/list.c:68: }
      000009 02r00r00         [24]  125 	ljmp	__gptrput
                                    126 ;------------------------------------------------------------
                                    127 ;Allocation info for local variables in function 'list_head'
                                    128 ;------------------------------------------------------------
                                    129 ;list                      Allocated to registers r5 r6 r7 
                                    130 ;------------------------------------------------------------
                                    131 ;	../../core/lib/list.c:82: list_head(list_t list)
                                    132 ;	-----------------------------------------
                                    133 ;	 function list_head
                                    134 ;	-----------------------------------------
      00000C                        135 _list_head:
                                    136 ;	../../core/lib/list.c:84: return *list;
      00000C 12r00r00         [24]  137 	lcall	__gptrget
      00000F FD               [12]  138 	mov	r5,a
      000010 A3               [24]  139 	inc	dptr
      000011 12r00r00         [24]  140 	lcall	__gptrget
      000014 FE               [12]  141 	mov	r6,a
      000015 A3               [24]  142 	inc	dptr
      000016 12r00r00         [24]  143 	lcall	__gptrget
      000019 FF               [12]  144 	mov	r7,a
      00001A 8D 82            [24]  145 	mov	dpl,r5
      00001C 8E 83            [24]  146 	mov	dph,r6
      00001E 8F F0            [24]  147 	mov	b,r7
                                    148 ;	../../core/lib/list.c:85: }
      000020 22               [24]  149 	ret
                                    150 ;------------------------------------------------------------
                                    151 ;Allocation info for local variables in function 'list_copy'
                                    152 ;------------------------------------------------------------
                                    153 ;src                       Allocated to stack - sp -4
                                    154 ;dest                      Allocated to registers r5 r6 r7 
                                    155 ;------------------------------------------------------------
                                    156 ;	../../core/lib/list.c:100: list_copy(list_t dest, list_t src)
                                    157 ;	-----------------------------------------
                                    158 ;	 function list_copy
                                    159 ;	-----------------------------------------
      000021                        160 _list_copy:
      000021 AD 82            [24]  161 	mov	r5,dpl
      000023 AE 83            [24]  162 	mov	r6,dph
      000025 AF F0            [24]  163 	mov	r7,b
                                    164 ;	../../core/lib/list.c:102: *dest = *src;
      000027 E5 81            [12]  165 	mov	a,sp
      000029 24 FC            [12]  166 	add	a,#0xfc
      00002B F8               [12]  167 	mov	r0,a
      00002C 86 02            [24]  168 	mov	ar2,@r0
      00002E 08               [12]  169 	inc	r0
      00002F 86 03            [24]  170 	mov	ar3,@r0
      000031 08               [12]  171 	inc	r0
      000032 86 04            [24]  172 	mov	ar4,@r0
      000034 8A 82            [24]  173 	mov	dpl,r2
      000036 8B 83            [24]  174 	mov	dph,r3
      000038 8C F0            [24]  175 	mov	b,r4
      00003A 12r00r00         [24]  176 	lcall	__gptrget
      00003D FA               [12]  177 	mov	r2,a
      00003E A3               [24]  178 	inc	dptr
      00003F 12r00r00         [24]  179 	lcall	__gptrget
      000042 FB               [12]  180 	mov	r3,a
      000043 A3               [24]  181 	inc	dptr
      000044 12r00r00         [24]  182 	lcall	__gptrget
      000047 FC               [12]  183 	mov	r4,a
      000048 8D 82            [24]  184 	mov	dpl,r5
      00004A 8E 83            [24]  185 	mov	dph,r6
      00004C 8F F0            [24]  186 	mov	b,r7
      00004E EA               [12]  187 	mov	a,r2
      00004F 12r00r00         [24]  188 	lcall	__gptrput
      000052 A3               [24]  189 	inc	dptr
      000053 EB               [12]  190 	mov	a,r3
      000054 12r00r00         [24]  191 	lcall	__gptrput
      000057 A3               [24]  192 	inc	dptr
      000058 EC               [12]  193 	mov	a,r4
                                    194 ;	../../core/lib/list.c:103: }
      000059 02r00r00         [24]  195 	ljmp	__gptrput
                                    196 ;------------------------------------------------------------
                                    197 ;Allocation info for local variables in function 'list_tail'
                                    198 ;------------------------------------------------------------
                                    199 ;list                      Allocated to registers r5 r6 r7 
                                    200 ;l                         Allocated to registers r5 r6 r7 
                                    201 ;------------------------------------------------------------
                                    202 ;	../../core/lib/list.c:117: list_tail(list_t list)
                                    203 ;	-----------------------------------------
                                    204 ;	 function list_tail
                                    205 ;	-----------------------------------------
      00005C                        206 _list_tail:
                                    207 ;	../../core/lib/list.c:121: if(*list == NULL) {
      00005C 12r00r00         [24]  208 	lcall	__gptrget
      00005F FD               [12]  209 	mov	r5,a
      000060 A3               [24]  210 	inc	dptr
      000061 12r00r00         [24]  211 	lcall	__gptrget
      000064 FE               [12]  212 	mov	r6,a
      000065 A3               [24]  213 	inc	dptr
      000066 12r00r00         [24]  214 	lcall	__gptrget
      000069 FF               [12]  215 	mov	r7,a
      00006A ED               [12]  216 	mov	a,r5
      00006B 4E               [12]  217 	orl	a,r6
                                    218 ;	../../core/lib/list.c:122: return NULL;
      00006C 70 06            [24]  219 	jnz	00102$
      00006E 90 00 00         [24]  220 	mov	dptr,#0x0000
      000071 F5 F0            [12]  221 	mov	b,a
      000073 22               [24]  222 	ret
      000074                        223 00102$:
                                    224 ;	../../core/lib/list.c:125: for(l = *list; l->next != NULL; l = l->next);
      000074                        225 00105$:
      000074 8D 82            [24]  226 	mov	dpl,r5
      000076 8E 83            [24]  227 	mov	dph,r6
      000078 8F F0            [24]  228 	mov	b,r7
      00007A 12r00r00         [24]  229 	lcall	__gptrget
      00007D FA               [12]  230 	mov	r2,a
      00007E A3               [24]  231 	inc	dptr
      00007F 12r00r00         [24]  232 	lcall	__gptrget
      000082 FB               [12]  233 	mov	r3,a
      000083 A3               [24]  234 	inc	dptr
      000084 12r00r00         [24]  235 	lcall	__gptrget
      000087 FC               [12]  236 	mov	r4,a
      000088 EA               [12]  237 	mov	a,r2
      000089 4B               [12]  238 	orl	a,r3
      00008A 60 08            [24]  239 	jz	00103$
      00008C 8A 05            [24]  240 	mov	ar5,r2
      00008E 8B 06            [24]  241 	mov	ar6,r3
      000090 8C 07            [24]  242 	mov	ar7,r4
      000092 80 E0            [24]  243 	sjmp	00105$
      000094                        244 00103$:
                                    245 ;	../../core/lib/list.c:127: return l;
      000094 8D 82            [24]  246 	mov	dpl,r5
      000096 8E 83            [24]  247 	mov	dph,r6
      000098 8F F0            [24]  248 	mov	b,r7
                                    249 ;	../../core/lib/list.c:128: }
      00009A 22               [24]  250 	ret
                                    251 ;------------------------------------------------------------
                                    252 ;Allocation info for local variables in function 'list_add'
                                    253 ;------------------------------------------------------------
                                    254 ;item                      Allocated to stack - sp -7
                                    255 ;list                      Allocated to registers r5 r6 r7 
                                    256 ;l                         Allocated to stack - sp -2
                                    257 ;------------------------------------------------------------
                                    258 ;	../../core/lib/list.c:142: list_add(list_t list, void *item)
                                    259 ;	-----------------------------------------
                                    260 ;	 function list_add
                                    261 ;	-----------------------------------------
      00009B                        262 _list_add:
      00009B 05 81            [12]  263 	inc	sp
      00009D 05 81            [12]  264 	inc	sp
      00009F 05 81            [12]  265 	inc	sp
      0000A1 AD 82            [24]  266 	mov	r5,dpl
      0000A3 AE 83            [24]  267 	mov	r6,dph
      0000A5 AF F0            [24]  268 	mov	r7,b
                                    269 ;	../../core/lib/list.c:147: list_remove(list, item);
      0000A7 C0 07            [24]  270 	push	ar7
      0000A9 C0 06            [24]  271 	push	ar6
      0000AB C0 05            [24]  272 	push	ar5
      0000AD E5 81            [12]  273 	mov	a,sp
      0000AF 24 F6            [12]  274 	add	a,#0xf6
      0000B1 F8               [12]  275 	mov	r0,a
      0000B2 E6               [12]  276 	mov	a,@r0
      0000B3 C0 E0            [24]  277 	push	acc
      0000B5 08               [12]  278 	inc	r0
      0000B6 E6               [12]  279 	mov	a,@r0
      0000B7 C0 E0            [24]  280 	push	acc
      0000B9 08               [12]  281 	inc	r0
      0000BA E6               [12]  282 	mov	a,@r0
      0000BB C0 E0            [24]  283 	push	acc
      0000BD 8D 82            [24]  284 	mov	dpl,r5
      0000BF 8E 83            [24]  285 	mov	dph,r6
      0000C1 8F F0            [24]  286 	mov	b,r7
      0000C3 12r03r51         [24]  287 	lcall	_list_remove
      0000C6 15 81            [12]  288 	dec	sp
      0000C8 15 81            [12]  289 	dec	sp
      0000CA 15 81            [12]  290 	dec	sp
      0000CC D0 05            [24]  291 	pop	ar5
      0000CE D0 06            [24]  292 	pop	ar6
      0000D0 D0 07            [24]  293 	pop	ar7
                                    294 ;	../../core/lib/list.c:149: ((struct list *)item)->next = NULL;
      0000D2 E5 81            [12]  295 	mov	a,sp
      0000D4 24 F9            [12]  296 	add	a,#0xf9
      0000D6 F8               [12]  297 	mov	r0,a
      0000D7 86 02            [24]  298 	mov	ar2,@r0
      0000D9 08               [12]  299 	inc	r0
      0000DA 86 03            [24]  300 	mov	ar3,@r0
      0000DC 08               [12]  301 	inc	r0
      0000DD 86 04            [24]  302 	mov	ar4,@r0
      0000DF 8A 82            [24]  303 	mov	dpl,r2
      0000E1 8B 83            [24]  304 	mov	dph,r3
      0000E3 8C F0            [24]  305 	mov	b,r4
      0000E5 E4               [12]  306 	clr	a
      0000E6 12r00r00         [24]  307 	lcall	__gptrput
      0000E9 A3               [24]  308 	inc	dptr
      0000EA 12r00r00         [24]  309 	lcall	__gptrput
      0000ED A3               [24]  310 	inc	dptr
      0000EE 12r00r00         [24]  311 	lcall	__gptrput
                                    312 ;	../../core/lib/list.c:151: l = list_tail(list);
      0000F1 8D 82            [24]  313 	mov	dpl,r5
      0000F3 8E 83            [24]  314 	mov	dph,r6
      0000F5 8F F0            [24]  315 	mov	b,r7
      0000F7 C0 07            [24]  316 	push	ar7
      0000F9 C0 06            [24]  317 	push	ar6
      0000FB C0 05            [24]  318 	push	ar5
      0000FD 12r00r5C         [24]  319 	lcall	_list_tail
      000100 AA 82            [24]  320 	mov	r2,dpl
      000102 AB 83            [24]  321 	mov	r3,dph
      000104 AC F0            [24]  322 	mov	r4,b
      000106 D0 05            [24]  323 	pop	ar5
      000108 D0 06            [24]  324 	pop	ar6
      00010A D0 07            [24]  325 	pop	ar7
      00010C A8 81            [24]  326 	mov	r0,sp
      00010E 18               [12]  327 	dec	r0
      00010F 18               [12]  328 	dec	r0
      000110 A6 02            [24]  329 	mov	@r0,ar2
      000112 08               [12]  330 	inc	r0
      000113 A6 03            [24]  331 	mov	@r0,ar3
      000115 08               [12]  332 	inc	r0
      000116 A6 04            [24]  333 	mov	@r0,ar4
      000118 A8 81            [24]  334 	mov	r0,sp
      00011A 18               [12]  335 	dec	r0
      00011B 18               [12]  336 	dec	r0
      00011C 86 02            [24]  337 	mov	ar2,@r0
      00011E 08               [12]  338 	inc	r0
      00011F 86 03            [24]  339 	mov	ar3,@r0
      000121 08               [12]  340 	inc	r0
      000122 86 04            [24]  341 	mov	ar4,@r0
                                    342 ;	../../core/lib/list.c:153: if(l == NULL) {
      000124 A8 81            [24]  343 	mov	r0,sp
      000126 18               [12]  344 	dec	r0
      000127 18               [12]  345 	dec	r0
      000128 E6               [12]  346 	mov	a,@r0
      000129 08               [12]  347 	inc	r0
      00012A 46               [12]  348 	orl	a,@r0
      00012B 70 1D            [24]  349 	jnz	00102$
                                    350 ;	../../core/lib/list.c:154: *list = item;
      00012D 8D 82            [24]  351 	mov	dpl,r5
      00012F 8E 83            [24]  352 	mov	dph,r6
      000131 8F F0            [24]  353 	mov	b,r7
      000133 E5 81            [12]  354 	mov	a,sp
      000135 24 F9            [12]  355 	add	a,#0xf9
      000137 F8               [12]  356 	mov	r0,a
      000138 E6               [12]  357 	mov	a,@r0
      000139 12r00r00         [24]  358 	lcall	__gptrput
      00013C A3               [24]  359 	inc	dptr
      00013D 08               [12]  360 	inc	r0
      00013E E6               [12]  361 	mov	a,@r0
      00013F 12r00r00         [24]  362 	lcall	__gptrput
      000142 A3               [24]  363 	inc	dptr
      000143 08               [12]  364 	inc	r0
      000144 E6               [12]  365 	mov	a,@r0
      000145 12r00r00         [24]  366 	lcall	__gptrput
      000148 80 21            [24]  367 	sjmp	00104$
      00014A                        368 00102$:
                                    369 ;	../../core/lib/list.c:156: l->next = item;
      00014A E5 81            [12]  370 	mov	a,sp
      00014C 24 F9            [12]  371 	add	a,#0xf9
      00014E F8               [12]  372 	mov	r0,a
      00014F 86 05            [24]  373 	mov	ar5,@r0
      000151 08               [12]  374 	inc	r0
      000152 86 06            [24]  375 	mov	ar6,@r0
      000154 08               [12]  376 	inc	r0
      000155 86 07            [24]  377 	mov	ar7,@r0
      000157 8A 82            [24]  378 	mov	dpl,r2
      000159 8B 83            [24]  379 	mov	dph,r3
      00015B 8C F0            [24]  380 	mov	b,r4
      00015D ED               [12]  381 	mov	a,r5
      00015E 12r00r00         [24]  382 	lcall	__gptrput
      000161 A3               [24]  383 	inc	dptr
      000162 EE               [12]  384 	mov	a,r6
      000163 12r00r00         [24]  385 	lcall	__gptrput
      000166 A3               [24]  386 	inc	dptr
      000167 EF               [12]  387 	mov	a,r7
      000168 12r00r00         [24]  388 	lcall	__gptrput
      00016B                        389 00104$:
                                    390 ;	../../core/lib/list.c:158: }
      00016B 15 81            [12]  391 	dec	sp
      00016D 15 81            [12]  392 	dec	sp
      00016F 15 81            [12]  393 	dec	sp
      000171 22               [24]  394 	ret
                                    395 ;------------------------------------------------------------
                                    396 ;Allocation info for local variables in function 'list_push'
                                    397 ;------------------------------------------------------------
                                    398 ;item                      Allocated to stack - sp -7
                                    399 ;list                      Allocated to stack - sp -2
                                    400 ;------------------------------------------------------------
                                    401 ;	../../core/lib/list.c:164: list_push(list_t list, void *item)
                                    402 ;	-----------------------------------------
                                    403 ;	 function list_push
                                    404 ;	-----------------------------------------
      000172                        405 _list_push:
      000172 C0 82            [24]  406 	push	dpl
      000174 C0 83            [24]  407 	push	dph
      000176 C0 F0            [24]  408 	push	b
                                    409 ;	../../core/lib/list.c:169: list_remove(list, item);
      000178 E5 81            [12]  410 	mov	a,sp
      00017A 24 F9            [12]  411 	add	a,#0xf9
      00017C F8               [12]  412 	mov	r0,a
      00017D E6               [12]  413 	mov	a,@r0
      00017E C0 E0            [24]  414 	push	acc
      000180 08               [12]  415 	inc	r0
      000181 E6               [12]  416 	mov	a,@r0
      000182 C0 E0            [24]  417 	push	acc
      000184 08               [12]  418 	inc	r0
      000185 E6               [12]  419 	mov	a,@r0
      000186 C0 E0            [24]  420 	push	acc
      000188 E5 81            [12]  421 	mov	a,sp
      00018A 24 FB            [12]  422 	add	a,#0xfb
      00018C F8               [12]  423 	mov	r0,a
      00018D 86 82            [24]  424 	mov	dpl,@r0
      00018F 08               [12]  425 	inc	r0
      000190 86 83            [24]  426 	mov	dph,@r0
      000192 08               [12]  427 	inc	r0
      000193 86 F0            [24]  428 	mov	b,@r0
      000195 12r03r51         [24]  429 	lcall	_list_remove
      000198 15 81            [12]  430 	dec	sp
      00019A 15 81            [12]  431 	dec	sp
      00019C 15 81            [12]  432 	dec	sp
                                    433 ;	../../core/lib/list.c:171: ((struct list *)item)->next = *list;
      00019E E5 81            [12]  434 	mov	a,sp
      0001A0 24 F9            [12]  435 	add	a,#0xf9
      0001A2 F8               [12]  436 	mov	r0,a
      0001A3 86 02            [24]  437 	mov	ar2,@r0
      0001A5 08               [12]  438 	inc	r0
      0001A6 86 03            [24]  439 	mov	ar3,@r0
      0001A8 08               [12]  440 	inc	r0
      0001A9 86 04            [24]  441 	mov	ar4,@r0
      0001AB A8 81            [24]  442 	mov	r0,sp
      0001AD 18               [12]  443 	dec	r0
      0001AE 18               [12]  444 	dec	r0
      0001AF 86 82            [24]  445 	mov	dpl,@r0
      0001B1 08               [12]  446 	inc	r0
      0001B2 86 83            [24]  447 	mov	dph,@r0
      0001B4 08               [12]  448 	inc	r0
      0001B5 86 F0            [24]  449 	mov	b,@r0
      0001B7 12r00r00         [24]  450 	lcall	__gptrget
      0001BA FD               [12]  451 	mov	r5,a
      0001BB A3               [24]  452 	inc	dptr
      0001BC 12r00r00         [24]  453 	lcall	__gptrget
      0001BF FE               [12]  454 	mov	r6,a
      0001C0 A3               [24]  455 	inc	dptr
      0001C1 12r00r00         [24]  456 	lcall	__gptrget
      0001C4 FF               [12]  457 	mov	r7,a
      0001C5 8A 82            [24]  458 	mov	dpl,r2
      0001C7 8B 83            [24]  459 	mov	dph,r3
      0001C9 8C F0            [24]  460 	mov	b,r4
      0001CB ED               [12]  461 	mov	a,r5
      0001CC 12r00r00         [24]  462 	lcall	__gptrput
      0001CF A3               [24]  463 	inc	dptr
      0001D0 EE               [12]  464 	mov	a,r6
      0001D1 12r00r00         [24]  465 	lcall	__gptrput
      0001D4 A3               [24]  466 	inc	dptr
      0001D5 EF               [12]  467 	mov	a,r7
      0001D6 12r00r00         [24]  468 	lcall	__gptrput
                                    469 ;	../../core/lib/list.c:172: *list = item;
      0001D9 A8 81            [24]  470 	mov	r0,sp
      0001DB 18               [12]  471 	dec	r0
      0001DC 18               [12]  472 	dec	r0
      0001DD 86 82            [24]  473 	mov	dpl,@r0
      0001DF 08               [12]  474 	inc	r0
      0001E0 86 83            [24]  475 	mov	dph,@r0
      0001E2 08               [12]  476 	inc	r0
      0001E3 86 F0            [24]  477 	mov	b,@r0
      0001E5 E5 81            [12]  478 	mov	a,sp
      0001E7 24 F9            [12]  479 	add	a,#0xf9
      0001E9 F9               [12]  480 	mov	r1,a
      0001EA E7               [12]  481 	mov	a,@r1
      0001EB 12r00r00         [24]  482 	lcall	__gptrput
      0001EE A3               [24]  483 	inc	dptr
      0001EF 09               [12]  484 	inc	r1
      0001F0 E7               [12]  485 	mov	a,@r1
      0001F1 12r00r00         [24]  486 	lcall	__gptrput
      0001F4 A3               [24]  487 	inc	dptr
      0001F5 09               [12]  488 	inc	r1
      0001F6 E7               [12]  489 	mov	a,@r1
      0001F7 12r00r00         [24]  490 	lcall	__gptrput
                                    491 ;	../../core/lib/list.c:173: }
      0001FA 15 81            [12]  492 	dec	sp
      0001FC 15 81            [12]  493 	dec	sp
      0001FE 15 81            [12]  494 	dec	sp
      000200 22               [24]  495 	ret
                                    496 ;------------------------------------------------------------
                                    497 ;Allocation info for local variables in function 'list_chop'
                                    498 ;------------------------------------------------------------
                                    499 ;list                      Allocated to stack - sp -2
                                    500 ;l                         Allocated to registers r2 r3 r4 
                                    501 ;r                         Allocated to registers r5 r6 r7 
                                    502 ;------------------------------------------------------------
                                    503 ;	../../core/lib/list.c:185: list_chop(list_t list)
                                    504 ;	-----------------------------------------
                                    505 ;	 function list_chop
                                    506 ;	-----------------------------------------
      000201                        507 _list_chop:
      000201 C0 82            [24]  508 	push	dpl
      000203 C0 83            [24]  509 	push	dph
      000205 C0 F0            [24]  510 	push	b
                                    511 ;	../../core/lib/list.c:189: if(*list == NULL) {
      000207 A8 81            [24]  512 	mov	r0,sp
      000209 18               [12]  513 	dec	r0
      00020A 18               [12]  514 	dec	r0
      00020B 86 82            [24]  515 	mov	dpl,@r0
      00020D 08               [12]  516 	inc	r0
      00020E 86 83            [24]  517 	mov	dph,@r0
      000210 08               [12]  518 	inc	r0
      000211 86 F0            [24]  519 	mov	b,@r0
      000213 12r00r00         [24]  520 	lcall	__gptrget
      000216 FA               [12]  521 	mov	r2,a
      000217 A3               [24]  522 	inc	dptr
      000218 12r00r00         [24]  523 	lcall	__gptrget
      00021B FB               [12]  524 	mov	r3,a
      00021C A3               [24]  525 	inc	dptr
      00021D 12r00r00         [24]  526 	lcall	__gptrget
      000220 FC               [12]  527 	mov	r4,a
      000221 EA               [12]  528 	mov	a,r2
      000222 4B               [12]  529 	orl	a,r3
                                    530 ;	../../core/lib/list.c:190: return NULL;
      000223 70 08            [24]  531 	jnz	00102$
      000225 90 00 00         [24]  532 	mov	dptr,#0x0000
      000228 F5 F0            [12]  533 	mov	b,a
      00022A 02r02rDF         [24]  534 	ljmp	00109$
      00022D                        535 00102$:
                                    536 ;	../../core/lib/list.c:192: if(((struct list *)*list)->next == NULL) {
      00022D 8A 05            [24]  537 	mov	ar5,r2
      00022F 8B 06            [24]  538 	mov	ar6,r3
      000231 8C 07            [24]  539 	mov	ar7,r4
      000233 8D 82            [24]  540 	mov	dpl,r5
      000235 8E 83            [24]  541 	mov	dph,r6
      000237 8F F0            [24]  542 	mov	b,r7
      000239 12r00r00         [24]  543 	lcall	__gptrget
      00023C FD               [12]  544 	mov	r5,a
      00023D A3               [24]  545 	inc	dptr
      00023E 12r00r00         [24]  546 	lcall	__gptrget
      000241 FE               [12]  547 	mov	r6,a
      000242 A3               [24]  548 	inc	dptr
      000243 12r00r00         [24]  549 	lcall	__gptrget
      000246 FF               [12]  550 	mov	r7,a
      000247 ED               [12]  551 	mov	a,r5
      000248 4E               [12]  552 	orl	a,r6
      000249 70 26            [24]  553 	jnz	00104$
                                    554 ;	../../core/lib/list.c:193: l = *list;
      00024B 8A 05            [24]  555 	mov	ar5,r2
      00024D 8B 06            [24]  556 	mov	ar6,r3
      00024F 8C 07            [24]  557 	mov	ar7,r4
                                    558 ;	../../core/lib/list.c:194: *list = NULL;
      000251 A8 81            [24]  559 	mov	r0,sp
      000253 18               [12]  560 	dec	r0
      000254 18               [12]  561 	dec	r0
      000255 86 82            [24]  562 	mov	dpl,@r0
      000257 08               [12]  563 	inc	r0
      000258 86 83            [24]  564 	mov	dph,@r0
      00025A 08               [12]  565 	inc	r0
      00025B 86 F0            [24]  566 	mov	b,@r0
      00025D E4               [12]  567 	clr	a
      00025E 12r00r00         [24]  568 	lcall	__gptrput
      000261 A3               [24]  569 	inc	dptr
      000262 12r00r00         [24]  570 	lcall	__gptrput
      000265 A3               [24]  571 	inc	dptr
      000266 12r00r00         [24]  572 	lcall	__gptrput
                                    573 ;	../../core/lib/list.c:195: return l;
      000269 8D 82            [24]  574 	mov	dpl,r5
      00026B 8E 83            [24]  575 	mov	dph,r6
      00026D 8F F0            [24]  576 	mov	b,r7
      00026F 80 6E            [24]  577 	sjmp	00109$
      000271                        578 00104$:
                                    579 ;	../../core/lib/list.c:198: for(l = *list; l->next->next != NULL; l = l->next);
      000271                        580 00107$:
      000271 8A 82            [24]  581 	mov	dpl,r2
      000273 8B 83            [24]  582 	mov	dph,r3
      000275 8C F0            [24]  583 	mov	b,r4
      000277 12r00r00         [24]  584 	lcall	__gptrget
      00027A FD               [12]  585 	mov	r5,a
      00027B A3               [24]  586 	inc	dptr
      00027C 12r00r00         [24]  587 	lcall	__gptrget
      00027F FE               [12]  588 	mov	r6,a
      000280 A3               [24]  589 	inc	dptr
      000281 12r00r00         [24]  590 	lcall	__gptrget
      000284 FF               [12]  591 	mov	r7,a
      000285 8D 82            [24]  592 	mov	dpl,r5
      000287 8E 83            [24]  593 	mov	dph,r6
      000289 8F F0            [24]  594 	mov	b,r7
      00028B 12r00r00         [24]  595 	lcall	__gptrget
      00028E FD               [12]  596 	mov	r5,a
      00028F A3               [24]  597 	inc	dptr
      000290 12r00r00         [24]  598 	lcall	__gptrget
      000293 FE               [12]  599 	mov	r6,a
      000294 A3               [24]  600 	inc	dptr
      000295 12r00r00         [24]  601 	lcall	__gptrget
      000298 FF               [12]  602 	mov	r7,a
      000299 ED               [12]  603 	mov	a,r5
      00029A 4E               [12]  604 	orl	a,r6
      00029B 60 16            [24]  605 	jz	00105$
      00029D 8A 82            [24]  606 	mov	dpl,r2
      00029F 8B 83            [24]  607 	mov	dph,r3
      0002A1 8C F0            [24]  608 	mov	b,r4
      0002A3 12r00r00         [24]  609 	lcall	__gptrget
      0002A6 FA               [12]  610 	mov	r2,a
      0002A7 A3               [24]  611 	inc	dptr
      0002A8 12r00r00         [24]  612 	lcall	__gptrget
      0002AB FB               [12]  613 	mov	r3,a
      0002AC A3               [24]  614 	inc	dptr
      0002AD 12r00r00         [24]  615 	lcall	__gptrget
      0002B0 FC               [12]  616 	mov	r4,a
      0002B1 80 BE            [24]  617 	sjmp	00107$
      0002B3                        618 00105$:
                                    619 ;	../../core/lib/list.c:200: r = l->next;
      0002B3 8A 82            [24]  620 	mov	dpl,r2
      0002B5 8B 83            [24]  621 	mov	dph,r3
      0002B7 8C F0            [24]  622 	mov	b,r4
      0002B9 12r00r00         [24]  623 	lcall	__gptrget
      0002BC FD               [12]  624 	mov	r5,a
      0002BD A3               [24]  625 	inc	dptr
      0002BE 12r00r00         [24]  626 	lcall	__gptrget
      0002C1 FE               [12]  627 	mov	r6,a
      0002C2 A3               [24]  628 	inc	dptr
      0002C3 12r00r00         [24]  629 	lcall	__gptrget
      0002C6 FF               [12]  630 	mov	r7,a
                                    631 ;	../../core/lib/list.c:201: l->next = NULL;
      0002C7 8A 82            [24]  632 	mov	dpl,r2
      0002C9 8B 83            [24]  633 	mov	dph,r3
      0002CB 8C F0            [24]  634 	mov	b,r4
      0002CD E4               [12]  635 	clr	a
      0002CE 12r00r00         [24]  636 	lcall	__gptrput
      0002D1 A3               [24]  637 	inc	dptr
      0002D2 12r00r00         [24]  638 	lcall	__gptrput
      0002D5 A3               [24]  639 	inc	dptr
      0002D6 12r00r00         [24]  640 	lcall	__gptrput
                                    641 ;	../../core/lib/list.c:203: return r;
      0002D9 8D 82            [24]  642 	mov	dpl,r5
      0002DB 8E 83            [24]  643 	mov	dph,r6
      0002DD 8F F0            [24]  644 	mov	b,r7
      0002DF                        645 00109$:
                                    646 ;	../../core/lib/list.c:204: }
      0002DF 15 81            [12]  647 	dec	sp
      0002E1 15 81            [12]  648 	dec	sp
      0002E3 15 81            [12]  649 	dec	sp
      0002E5 22               [24]  650 	ret
                                    651 ;------------------------------------------------------------
                                    652 ;Allocation info for local variables in function 'list_pop'
                                    653 ;------------------------------------------------------------
                                    654 ;list                      Allocated to registers r5 r6 r7 
                                    655 ;l                         Allocated to stack - sp -2
                                    656 ;------------------------------------------------------------
                                    657 ;	../../core/lib/list.c:217: list_pop(list_t list)
                                    658 ;	-----------------------------------------
                                    659 ;	 function list_pop
                                    660 ;	-----------------------------------------
      0002E6                        661 _list_pop:
      0002E6 05 81            [12]  662 	inc	sp
      0002E8 05 81            [12]  663 	inc	sp
      0002EA 05 81            [12]  664 	inc	sp
                                    665 ;	../../core/lib/list.c:220: l = *list;
      0002EC AD 82            [24]  666 	mov	r5,dpl
      0002EE AE 83            [24]  667 	mov	r6,dph
      0002F0 AF F0            [24]  668 	mov	r7,b
      0002F2 12r00r00         [24]  669 	lcall	__gptrget
      0002F5 FA               [12]  670 	mov	r2,a
      0002F6 A3               [24]  671 	inc	dptr
      0002F7 12r00r00         [24]  672 	lcall	__gptrget
      0002FA FB               [12]  673 	mov	r3,a
      0002FB A3               [24]  674 	inc	dptr
      0002FC 12r00r00         [24]  675 	lcall	__gptrget
      0002FF FC               [12]  676 	mov	r4,a
      000300 A8 81            [24]  677 	mov	r0,sp
      000302 18               [12]  678 	dec	r0
      000303 18               [12]  679 	dec	r0
      000304 A6 02            [24]  680 	mov	@r0,ar2
      000306 08               [12]  681 	inc	r0
      000307 A6 03            [24]  682 	mov	@r0,ar3
      000309 08               [12]  683 	inc	r0
      00030A A6 04            [24]  684 	mov	@r0,ar4
                                    685 ;	../../core/lib/list.c:221: if(*list != NULL) {
      00030C EA               [12]  686 	mov	a,r2
      00030D 4B               [12]  687 	orl	a,r3
      00030E 60 28            [24]  688 	jz	00102$
                                    689 ;	../../core/lib/list.c:222: *list = ((struct list *)*list)->next;
      000310 8A 82            [24]  690 	mov	dpl,r2
      000312 8B 83            [24]  691 	mov	dph,r3
      000314 8C F0            [24]  692 	mov	b,r4
      000316 12r00r00         [24]  693 	lcall	__gptrget
      000319 FA               [12]  694 	mov	r2,a
      00031A A3               [24]  695 	inc	dptr
      00031B 12r00r00         [24]  696 	lcall	__gptrget
      00031E FB               [12]  697 	mov	r3,a
      00031F A3               [24]  698 	inc	dptr
      000320 12r00r00         [24]  699 	lcall	__gptrget
      000323 FC               [12]  700 	mov	r4,a
      000324 8D 82            [24]  701 	mov	dpl,r5
      000326 8E 83            [24]  702 	mov	dph,r6
      000328 8F F0            [24]  703 	mov	b,r7
      00032A EA               [12]  704 	mov	a,r2
      00032B 12r00r00         [24]  705 	lcall	__gptrput
      00032E A3               [24]  706 	inc	dptr
      00032F EB               [12]  707 	mov	a,r3
      000330 12r00r00         [24]  708 	lcall	__gptrput
      000333 A3               [24]  709 	inc	dptr
      000334 EC               [12]  710 	mov	a,r4
      000335 12r00r00         [24]  711 	lcall	__gptrput
      000338                        712 00102$:
                                    713 ;	../../core/lib/list.c:225: return l;
      000338 A8 81            [24]  714 	mov	r0,sp
      00033A 18               [12]  715 	dec	r0
      00033B 18               [12]  716 	dec	r0
      00033C 86 05            [24]  717 	mov	ar5,@r0
      00033E 08               [12]  718 	inc	r0
      00033F 86 06            [24]  719 	mov	ar6,@r0
      000341 08               [12]  720 	inc	r0
      000342 86 07            [24]  721 	mov	ar7,@r0
      000344 8D 82            [24]  722 	mov	dpl,r5
      000346 8E 83            [24]  723 	mov	dph,r6
      000348 8F F0            [24]  724 	mov	b,r7
                                    725 ;	../../core/lib/list.c:226: }
      00034A 15 81            [12]  726 	dec	sp
      00034C 15 81            [12]  727 	dec	sp
      00034E 15 81            [12]  728 	dec	sp
      000350 22               [24]  729 	ret
                                    730 ;------------------------------------------------------------
                                    731 ;Allocation info for local variables in function 'list_remove'
                                    732 ;------------------------------------------------------------
                                    733 ;item                      Allocated to stack - sp -10
                                    734 ;list                      Allocated to stack - sp -5
                                    735 ;l                         Allocated to stack - sp -2
                                    736 ;r                         Allocated to registers r5 r6 r7 
                                    737 ;------------------------------------------------------------
                                    738 ;	../../core/lib/list.c:239: list_remove(list_t list, void *item)
                                    739 ;	-----------------------------------------
                                    740 ;	 function list_remove
                                    741 ;	-----------------------------------------
      000351                        742 _list_remove:
      000351 C0 82            [24]  743 	push	dpl
      000353 C0 83            [24]  744 	push	dph
      000355 C0 F0            [24]  745 	push	b
      000357 05 81            [12]  746 	inc	sp
      000359 05 81            [12]  747 	inc	sp
      00035B 05 81            [12]  748 	inc	sp
                                    749 ;	../../core/lib/list.c:243: if(*list == NULL) {
      00035D E5 81            [12]  750 	mov	a,sp
      00035F 24 FB            [12]  751 	add	a,#0xfb
      000361 F8               [12]  752 	mov	r0,a
      000362 86 82            [24]  753 	mov	dpl,@r0
      000364 08               [12]  754 	inc	r0
      000365 86 83            [24]  755 	mov	dph,@r0
      000367 08               [12]  756 	inc	r0
      000368 86 F0            [24]  757 	mov	b,@r0
      00036A 12r00r00         [24]  758 	lcall	__gptrget
      00036D FA               [12]  759 	mov	r2,a
      00036E A3               [24]  760 	inc	dptr
      00036F 12r00r00         [24]  761 	lcall	__gptrget
      000372 FB               [12]  762 	mov	r3,a
      000373 A3               [24]  763 	inc	dptr
      000374 12r00r00         [24]  764 	lcall	__gptrget
      000377 FC               [12]  765 	mov	r4,a
      000378 EA               [12]  766 	mov	a,r2
      000379 4B               [12]  767 	orl	a,r3
      00037A 70 03            [24]  768 	jnz	00102$
                                    769 ;	../../core/lib/list.c:244: return;
      00037C 02r04r8D         [24]  770 	ljmp	00112$
      00037F                        771 00102$:
                                    772 ;	../../core/lib/list.c:247: r = NULL;
      00037F 7D 00            [12]  773 	mov	r5,#0x00
      000381 7E 00            [12]  774 	mov	r6,#0x00
      000383 7F 00            [12]  775 	mov	r7,#0x00
                                    776 ;	../../core/lib/list.c:248: for(l = *list; l != NULL; l = l->next) {
      000385 A8 81            [24]  777 	mov	r0,sp
      000387 18               [12]  778 	dec	r0
      000388 18               [12]  779 	dec	r0
      000389 A6 02            [24]  780 	mov	@r0,ar2
      00038B 08               [12]  781 	inc	r0
      00038C A6 03            [24]  782 	mov	@r0,ar3
      00038E 08               [12]  783 	inc	r0
      00038F A6 04            [24]  784 	mov	@r0,ar4
      000391                        785 00110$:
      000391 A8 81            [24]  786 	mov	r0,sp
      000393 18               [12]  787 	dec	r0
      000394 18               [12]  788 	dec	r0
      000395 E6               [12]  789 	mov	a,@r0
      000396 08               [12]  790 	inc	r0
      000397 46               [12]  791 	orl	a,@r0
      000398 70 03            [24]  792 	jnz	00135$
      00039A 02r04r8D         [24]  793 	ljmp	00112$
      00039D                        794 00135$:
                                    795 ;	../../core/lib/list.c:249: if(l == item) {
      00039D C0 05            [24]  796 	push	ar5
      00039F C0 06            [24]  797 	push	ar6
      0003A1 C0 07            [24]  798 	push	ar7
      0003A3 E5 81            [12]  799 	mov	a,sp
      0003A5 24 F3            [12]  800 	add	a,#0xf3
      0003A7 F8               [12]  801 	mov	r0,a
      0003A8 86 05            [24]  802 	mov	ar5,@r0
      0003AA 08               [12]  803 	inc	r0
      0003AB 86 06            [24]  804 	mov	ar6,@r0
      0003AD 08               [12]  805 	inc	r0
      0003AE 86 07            [24]  806 	mov	ar7,@r0
      0003B0 E5 81            [12]  807 	mov	a,sp
      0003B2 24 FB            [12]  808 	add	a,#0xfb
      0003B4 F8               [12]  809 	mov	r0,a
      0003B5 C0 05            [24]  810 	push	ar5
      0003B7 C0 06            [24]  811 	push	ar6
      0003B9 C0 07            [24]  812 	push	ar7
      0003BB 86 82            [24]  813 	mov	dpl,@r0
      0003BD 08               [12]  814 	inc	r0
      0003BE 86 83            [24]  815 	mov	dph,@r0
      0003C0 08               [12]  816 	inc	r0
      0003C1 86 F0            [24]  817 	mov	b,@r0
      0003C3 12r00r00         [24]  818 	lcall	___gptr_cmp
      0003C6 15 81            [12]  819 	dec	sp
      0003C8 15 81            [12]  820 	dec	sp
      0003CA 15 81            [12]  821 	dec	sp
      0003CC 60 09            [24]  822 	jz	00137$
      0003CE D0 07            [24]  823 	pop	ar7
      0003D0 D0 06            [24]  824 	pop	ar6
      0003D2 D0 05            [24]  825 	pop	ar5
      0003D4 02r04r60         [24]  826 	ljmp	00107$
      0003D7                        827 00137$:
      0003D7 D0 07            [24]  828 	pop	ar7
      0003D9 D0 06            [24]  829 	pop	ar6
      0003DB D0 05            [24]  830 	pop	ar5
                                    831 ;	../../core/lib/list.c:250: if(r == NULL) {
      0003DD ED               [12]  832 	mov	a,r5
      0003DE 4E               [12]  833 	orl	a,r6
      0003DF 70 37            [24]  834 	jnz	00104$
                                    835 ;	../../core/lib/list.c:252: *list = l->next;
      0003E1 A8 81            [24]  836 	mov	r0,sp
      0003E3 18               [12]  837 	dec	r0
      0003E4 18               [12]  838 	dec	r0
      0003E5 86 82            [24]  839 	mov	dpl,@r0
      0003E7 08               [12]  840 	inc	r0
      0003E8 86 83            [24]  841 	mov	dph,@r0
      0003EA 08               [12]  842 	inc	r0
      0003EB 86 F0            [24]  843 	mov	b,@r0
      0003ED 12r00r00         [24]  844 	lcall	__gptrget
      0003F0 FA               [12]  845 	mov	r2,a
      0003F1 A3               [24]  846 	inc	dptr
      0003F2 12r00r00         [24]  847 	lcall	__gptrget
      0003F5 FB               [12]  848 	mov	r3,a
      0003F6 A3               [24]  849 	inc	dptr
      0003F7 12r00r00         [24]  850 	lcall	__gptrget
      0003FA FC               [12]  851 	mov	r4,a
      0003FB E5 81            [12]  852 	mov	a,sp
      0003FD 24 FB            [12]  853 	add	a,#0xfb
      0003FF F8               [12]  854 	mov	r0,a
      000400 86 82            [24]  855 	mov	dpl,@r0
      000402 08               [12]  856 	inc	r0
      000403 86 83            [24]  857 	mov	dph,@r0
      000405 08               [12]  858 	inc	r0
      000406 86 F0            [24]  859 	mov	b,@r0
      000408 EA               [12]  860 	mov	a,r2
      000409 12r00r00         [24]  861 	lcall	__gptrput
      00040C A3               [24]  862 	inc	dptr
      00040D EB               [12]  863 	mov	a,r3
      00040E 12r00r00         [24]  864 	lcall	__gptrput
      000411 A3               [24]  865 	inc	dptr
      000412 EC               [12]  866 	mov	a,r4
      000413 12r00r00         [24]  867 	lcall	__gptrput
      000416 80 2E            [24]  868 	sjmp	00105$
      000418                        869 00104$:
                                    870 ;	../../core/lib/list.c:255: r->next = l->next;
      000418 A8 81            [24]  871 	mov	r0,sp
      00041A 18               [12]  872 	dec	r0
      00041B 18               [12]  873 	dec	r0
      00041C 86 82            [24]  874 	mov	dpl,@r0
      00041E 08               [12]  875 	inc	r0
      00041F 86 83            [24]  876 	mov	dph,@r0
      000421 08               [12]  877 	inc	r0
      000422 86 F0            [24]  878 	mov	b,@r0
      000424 12r00r00         [24]  879 	lcall	__gptrget
      000427 FA               [12]  880 	mov	r2,a
      000428 A3               [24]  881 	inc	dptr
      000429 12r00r00         [24]  882 	lcall	__gptrget
      00042C FB               [12]  883 	mov	r3,a
      00042D A3               [24]  884 	inc	dptr
      00042E 12r00r00         [24]  885 	lcall	__gptrget
      000431 FC               [12]  886 	mov	r4,a
      000432 8D 82            [24]  887 	mov	dpl,r5
      000434 8E 83            [24]  888 	mov	dph,r6
      000436 8F F0            [24]  889 	mov	b,r7
      000438 EA               [12]  890 	mov	a,r2
      000439 12r00r00         [24]  891 	lcall	__gptrput
      00043C A3               [24]  892 	inc	dptr
      00043D EB               [12]  893 	mov	a,r3
      00043E 12r00r00         [24]  894 	lcall	__gptrput
      000441 A3               [24]  895 	inc	dptr
      000442 EC               [12]  896 	mov	a,r4
      000443 12r00r00         [24]  897 	lcall	__gptrput
      000446                        898 00105$:
                                    899 ;	../../core/lib/list.c:257: l->next = NULL;
      000446 A8 81            [24]  900 	mov	r0,sp
      000448 18               [12]  901 	dec	r0
      000449 18               [12]  902 	dec	r0
      00044A 86 82            [24]  903 	mov	dpl,@r0
      00044C 08               [12]  904 	inc	r0
      00044D 86 83            [24]  905 	mov	dph,@r0
      00044F 08               [12]  906 	inc	r0
      000450 86 F0            [24]  907 	mov	b,@r0
      000452 E4               [12]  908 	clr	a
      000453 12r00r00         [24]  909 	lcall	__gptrput
      000456 A3               [24]  910 	inc	dptr
      000457 12r00r00         [24]  911 	lcall	__gptrput
      00045A A3               [24]  912 	inc	dptr
      00045B 12r00r00         [24]  913 	lcall	__gptrput
                                    914 ;	../../core/lib/list.c:258: return;
      00045E 80 2D            [24]  915 	sjmp	00112$
      000460                        916 00107$:
                                    917 ;	../../core/lib/list.c:260: r = l;
      000460 A8 81            [24]  918 	mov	r0,sp
      000462 18               [12]  919 	dec	r0
      000463 18               [12]  920 	dec	r0
      000464 86 05            [24]  921 	mov	ar5,@r0
      000466 08               [12]  922 	inc	r0
      000467 86 06            [24]  923 	mov	ar6,@r0
      000469 08               [12]  924 	inc	r0
      00046A 86 07            [24]  925 	mov	ar7,@r0
                                    926 ;	../../core/lib/list.c:248: for(l = *list; l != NULL; l = l->next) {
      00046C A8 81            [24]  927 	mov	r0,sp
      00046E 18               [12]  928 	dec	r0
      00046F 18               [12]  929 	dec	r0
      000470 86 82            [24]  930 	mov	dpl,@r0
      000472 08               [12]  931 	inc	r0
      000473 86 83            [24]  932 	mov	dph,@r0
      000475 08               [12]  933 	inc	r0
      000476 86 F0            [24]  934 	mov	b,@r0
      000478 12r00r00         [24]  935 	lcall	__gptrget
      00047B 18               [12]  936 	dec	r0
      00047C 18               [12]  937 	dec	r0
      00047D F6               [12]  938 	mov	@r0,a
      00047E A3               [24]  939 	inc	dptr
      00047F 12r00r00         [24]  940 	lcall	__gptrget
      000482 08               [12]  941 	inc	r0
      000483 F6               [12]  942 	mov	@r0,a
      000484 A3               [24]  943 	inc	dptr
      000485 12r00r00         [24]  944 	lcall	__gptrget
      000488 08               [12]  945 	inc	r0
      000489 F6               [12]  946 	mov	@r0,a
      00048A 02r03r91         [24]  947 	ljmp	00110$
      00048D                        948 00112$:
                                    949 ;	../../core/lib/list.c:262: }
      00048D E5 81            [12]  950 	mov	a,sp
      00048F 24 FA            [12]  951 	add	a,#0xfa
      000491 F5 81            [12]  952 	mov	sp,a
      000493 22               [24]  953 	ret
                                    954 ;------------------------------------------------------------
                                    955 ;Allocation info for local variables in function 'list_length'
                                    956 ;------------------------------------------------------------
                                    957 ;list                      Allocated to registers r5 r6 r7 
                                    958 ;l                         Allocated to registers r5 r6 r7 
                                    959 ;n                         Allocated to registers r3 r4 
                                    960 ;------------------------------------------------------------
                                    961 ;	../../core/lib/list.c:274: list_length(list_t list)
                                    962 ;	-----------------------------------------
                                    963 ;	 function list_length
                                    964 ;	-----------------------------------------
      000494                        965 _list_length:
                                    966 ;	../../core/lib/list.c:279: for(l = *list; l != NULL; l = l->next) {
      000494 12r00r00         [24]  967 	lcall	__gptrget
      000497 FD               [12]  968 	mov	r5,a
      000498 A3               [24]  969 	inc	dptr
      000499 12r00r00         [24]  970 	lcall	__gptrget
      00049C FE               [12]  971 	mov	r6,a
      00049D A3               [24]  972 	inc	dptr
      00049E 12r00r00         [24]  973 	lcall	__gptrget
      0004A1 FF               [12]  974 	mov	r7,a
      0004A2 7B 00            [12]  975 	mov	r3,#0x00
      0004A4 7C 00            [12]  976 	mov	r4,#0x00
      0004A6                        977 00103$:
      0004A6 ED               [12]  978 	mov	a,r5
      0004A7 4E               [12]  979 	orl	a,r6
      0004A8 60 1B            [24]  980 	jz	00101$
                                    981 ;	../../core/lib/list.c:280: ++n;
      0004AA 0B               [12]  982 	inc	r3
      0004AB BB 00 01         [24]  983 	cjne	r3,#0x00,00117$
      0004AE 0C               [12]  984 	inc	r4
      0004AF                        985 00117$:
                                    986 ;	../../core/lib/list.c:279: for(l = *list; l != NULL; l = l->next) {
      0004AF 8D 82            [24]  987 	mov	dpl,r5
      0004B1 8E 83            [24]  988 	mov	dph,r6
      0004B3 8F F0            [24]  989 	mov	b,r7
      0004B5 12r00r00         [24]  990 	lcall	__gptrget
      0004B8 FD               [12]  991 	mov	r5,a
      0004B9 A3               [24]  992 	inc	dptr
      0004BA 12r00r00         [24]  993 	lcall	__gptrget
      0004BD FE               [12]  994 	mov	r6,a
      0004BE A3               [24]  995 	inc	dptr
      0004BF 12r00r00         [24]  996 	lcall	__gptrget
      0004C2 FF               [12]  997 	mov	r7,a
      0004C3 80 E1            [24]  998 	sjmp	00103$
      0004C5                        999 00101$:
                                   1000 ;	../../core/lib/list.c:283: return n;
      0004C5 8B 82            [24] 1001 	mov	dpl,r3
      0004C7 8C 83            [24] 1002 	mov	dph,r4
                                   1003 ;	../../core/lib/list.c:284: }
      0004C9 22               [24] 1004 	ret
                                   1005 ;------------------------------------------------------------
                                   1006 ;Allocation info for local variables in function 'list_insert'
                                   1007 ;------------------------------------------------------------
                                   1008 ;previtem                  Allocated to stack - sp -7
                                   1009 ;newitem                   Allocated to stack - sp -10
                                   1010 ;list                      Allocated to registers r5 r6 r7 
                                   1011 ;sloc0                     Allocated to stack - sp -2
                                   1012 ;------------------------------------------------------------
                                   1013 ;	../../core/lib/list.c:302: list_insert(list_t list, void *previtem, void *newitem)
                                   1014 ;	-----------------------------------------
                                   1015 ;	 function list_insert
                                   1016 ;	-----------------------------------------
      0004CA                       1017 _list_insert:
      0004CA 05 81            [12] 1018 	inc	sp
      0004CC 05 81            [12] 1019 	inc	sp
      0004CE 05 81            [12] 1020 	inc	sp
      0004D0 AD 82            [24] 1021 	mov	r5,dpl
      0004D2 AE 83            [24] 1022 	mov	r6,dph
      0004D4 AF F0            [24] 1023 	mov	r7,b
                                   1024 ;	../../core/lib/list.c:304: if(previtem == NULL) {
      0004D6 E5 81            [12] 1025 	mov	a,sp
      0004D8 24 F9            [12] 1026 	add	a,#0xf9
      0004DA F8               [12] 1027 	mov	r0,a
      0004DB E6               [12] 1028 	mov	a,@r0
      0004DC 08               [12] 1029 	inc	r0
      0004DD 46               [12] 1030 	orl	a,@r0
      0004DE 70 21            [24] 1031 	jnz	00102$
                                   1032 ;	../../core/lib/list.c:305: list_push(list, newitem);
      0004E0 E5 81            [12] 1033 	mov	a,sp
      0004E2 24 F6            [12] 1034 	add	a,#0xf6
      0004E4 F8               [12] 1035 	mov	r0,a
      0004E5 E6               [12] 1036 	mov	a,@r0
      0004E6 C0 E0            [24] 1037 	push	acc
      0004E8 08               [12] 1038 	inc	r0
      0004E9 E6               [12] 1039 	mov	a,@r0
      0004EA C0 E0            [24] 1040 	push	acc
      0004EC 08               [12] 1041 	inc	r0
      0004ED E6               [12] 1042 	mov	a,@r0
      0004EE C0 E0            [24] 1043 	push	acc
      0004F0 8D 82            [24] 1044 	mov	dpl,r5
      0004F2 8E 83            [24] 1045 	mov	dph,r6
      0004F4 8F F0            [24] 1046 	mov	b,r7
      0004F6 12r01r72         [24] 1047 	lcall	_list_push
      0004F9 15 81            [12] 1048 	dec	sp
      0004FB 15 81            [12] 1049 	dec	sp
      0004FD 15 81            [12] 1050 	dec	sp
      0004FF 80 6F            [24] 1051 	sjmp	00104$
      000501                       1052 00102$:
                                   1053 ;	../../core/lib/list.c:308: ((struct list *)newitem)->next = ((struct list *)previtem)->next;
      000501 E5 81            [12] 1054 	mov	a,sp
      000503 24 F6            [12] 1055 	add	a,#0xf6
      000505 F8               [12] 1056 	mov	r0,a
      000506 A9 81            [24] 1057 	mov	r1,sp
      000508 19               [12] 1058 	dec	r1
      000509 19               [12] 1059 	dec	r1
      00050A E6               [12] 1060 	mov	a,@r0
      00050B F7               [12] 1061 	mov	@r1,a
      00050C 08               [12] 1062 	inc	r0
      00050D 09               [12] 1063 	inc	r1
      00050E E6               [12] 1064 	mov	a,@r0
      00050F F7               [12] 1065 	mov	@r1,a
      000510 08               [12] 1066 	inc	r0
      000511 09               [12] 1067 	inc	r1
      000512 E6               [12] 1068 	mov	a,@r0
      000513 F7               [12] 1069 	mov	@r1,a
      000514 E5 81            [12] 1070 	mov	a,sp
      000516 24 F9            [12] 1071 	add	a,#0xf9
      000518 F8               [12] 1072 	mov	r0,a
      000519 86 02            [24] 1073 	mov	ar2,@r0
      00051B 08               [12] 1074 	inc	r0
      00051C 86 03            [24] 1075 	mov	ar3,@r0
      00051E 08               [12] 1076 	inc	r0
      00051F 86 04            [24] 1077 	mov	ar4,@r0
      000521 8A 82            [24] 1078 	mov	dpl,r2
      000523 8B 83            [24] 1079 	mov	dph,r3
      000525 8C F0            [24] 1080 	mov	b,r4
      000527 12r00r00         [24] 1081 	lcall	__gptrget
      00052A FD               [12] 1082 	mov	r5,a
      00052B A3               [24] 1083 	inc	dptr
      00052C 12r00r00         [24] 1084 	lcall	__gptrget
      00052F FE               [12] 1085 	mov	r6,a
      000530 A3               [24] 1086 	inc	dptr
      000531 12r00r00         [24] 1087 	lcall	__gptrget
      000534 FF               [12] 1088 	mov	r7,a
      000535 A8 81            [24] 1089 	mov	r0,sp
      000537 18               [12] 1090 	dec	r0
      000538 18               [12] 1091 	dec	r0
      000539 86 82            [24] 1092 	mov	dpl,@r0
      00053B 08               [12] 1093 	inc	r0
      00053C 86 83            [24] 1094 	mov	dph,@r0
      00053E 08               [12] 1095 	inc	r0
      00053F 86 F0            [24] 1096 	mov	b,@r0
      000541 ED               [12] 1097 	mov	a,r5
      000542 12r00r00         [24] 1098 	lcall	__gptrput
      000545 A3               [24] 1099 	inc	dptr
      000546 EE               [12] 1100 	mov	a,r6
      000547 12r00r00         [24] 1101 	lcall	__gptrput
      00054A A3               [24] 1102 	inc	dptr
      00054B EF               [12] 1103 	mov	a,r7
      00054C 12r00r00         [24] 1104 	lcall	__gptrput
                                   1105 ;	../../core/lib/list.c:309: ((struct list *)previtem)->next = newitem;
      00054F E5 81            [12] 1106 	mov	a,sp
      000551 24 F6            [12] 1107 	add	a,#0xf6
      000553 F8               [12] 1108 	mov	r0,a
      000554 86 05            [24] 1109 	mov	ar5,@r0
      000556 08               [12] 1110 	inc	r0
      000557 86 06            [24] 1111 	mov	ar6,@r0
      000559 08               [12] 1112 	inc	r0
      00055A 86 07            [24] 1113 	mov	ar7,@r0
      00055C 8A 82            [24] 1114 	mov	dpl,r2
      00055E 8B 83            [24] 1115 	mov	dph,r3
      000560 8C F0            [24] 1116 	mov	b,r4
      000562 ED               [12] 1117 	mov	a,r5
      000563 12r00r00         [24] 1118 	lcall	__gptrput
      000566 A3               [24] 1119 	inc	dptr
      000567 EE               [12] 1120 	mov	a,r6
      000568 12r00r00         [24] 1121 	lcall	__gptrput
      00056B A3               [24] 1122 	inc	dptr
      00056C EF               [12] 1123 	mov	a,r7
      00056D 12r00r00         [24] 1124 	lcall	__gptrput
      000570                       1125 00104$:
                                   1126 ;	../../core/lib/list.c:311: }
      000570 15 81            [12] 1127 	dec	sp
      000572 15 81            [12] 1128 	dec	sp
      000574 15 81            [12] 1129 	dec	sp
      000576 22               [24] 1130 	ret
                                   1131 ;------------------------------------------------------------
                                   1132 ;Allocation info for local variables in function 'list_item_next'
                                   1133 ;------------------------------------------------------------
                                   1134 ;item                      Allocated to registers r5 r6 r7 
                                   1135 ;------------------------------------------------------------
                                   1136 ;	../../core/lib/list.c:324: list_item_next(void *item)
                                   1137 ;	-----------------------------------------
                                   1138 ;	 function list_item_next
                                   1139 ;	-----------------------------------------
      000577                       1140 _list_item_next:
      000577 AD 82            [24] 1141 	mov	r5,dpl
      000579 AE 83            [24] 1142 	mov	r6,dph
      00057B AF F0            [24] 1143 	mov	r7,b
                                   1144 ;	../../core/lib/list.c:326: return item == NULL? NULL: ((struct list *)item)->next;
      00057D ED               [12] 1145 	mov	a,r5
      00057E 4E               [12] 1146 	orl	a,r6
      00057F 70 05            [24] 1147 	jnz	00103$
      000581 FA               [12] 1148 	mov	r2,a
      000582 FB               [12] 1149 	mov	r3,a
      000583 FC               [12] 1150 	mov	r4,a
      000584 80 14            [24] 1151 	sjmp	00104$
      000586                       1152 00103$:
      000586 8D 82            [24] 1153 	mov	dpl,r5
      000588 8E 83            [24] 1154 	mov	dph,r6
      00058A 8F F0            [24] 1155 	mov	b,r7
      00058C 12r00r00         [24] 1156 	lcall	__gptrget
      00058F FA               [12] 1157 	mov	r2,a
      000590 A3               [24] 1158 	inc	dptr
      000591 12r00r00         [24] 1159 	lcall	__gptrget
      000594 FB               [12] 1160 	mov	r3,a
      000595 A3               [24] 1161 	inc	dptr
      000596 12r00r00         [24] 1162 	lcall	__gptrget
      000599 FC               [12] 1163 	mov	r4,a
      00059A                       1164 00104$:
      00059A 8A 82            [24] 1165 	mov	dpl,r2
      00059C 8B 83            [24] 1166 	mov	dph,r3
      00059E 8C F0            [24] 1167 	mov	b,r4
                                   1168 ;	../../core/lib/list.c:327: }
      0005A0 22               [24] 1169 	ret
                                   1170 	.area CSEG    (CODE)
                                   1171 	.area CONST   (CODE)
                                   1172 	.area XINIT   (CODE)
                                   1173 	.area CABS    (ABS,CODE)
