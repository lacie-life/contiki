                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module chameleon_bitopt
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _chameleon_bitopt
                                     12 	.globl _set_bits
                                     13 	.globl _set_bits_in_byte
                                     14 	.globl _get_bits
                                     15 	.globl _get_bits_in_byte
                                     16 	.globl _channel_lookup
                                     17 	.globl _packetbuf_addr
                                     18 	.globl _packetbuf_set_addr
                                     19 	.globl _packetbuf_attr
                                     20 	.globl _packetbuf_set_attr
                                     21 	.globl _packetbuf_hdrreduce
                                     22 	.globl _packetbuf_hdralloc
                                     23 	.globl _packetbuf_hdrptr
                                     24 	.globl _packetbuf_dataptr
                                     25 	.globl _memset
                                     26 	.globl _ACTIVE
                                     27 	.globl _TX_BYTE
                                     28 	.globl _RX_BYTE
                                     29 	.globl _ERR
                                     30 	.globl _FE
                                     31 	.globl _SLAVE
                                     32 	.globl _RE
                                     33 	.globl _MODE
                                     34 	.globl _T3OVFIF
                                     35 	.globl _T3CH0IF
                                     36 	.globl _T3CH1IF
                                     37 	.globl _T4OVFIF
                                     38 	.globl _T4CH0IF
                                     39 	.globl _T4CH1IF
                                     40 	.globl _OVFIM
                                     41 	.globl _B_0
                                     42 	.globl _B_1
                                     43 	.globl _B_2
                                     44 	.globl _B_3
                                     45 	.globl _B_4
                                     46 	.globl _B_5
                                     47 	.globl _B_6
                                     48 	.globl _B_7
                                     49 	.globl _P2IF
                                     50 	.globl _UTX0IF
                                     51 	.globl _UTX1IF
                                     52 	.globl _P1IF
                                     53 	.globl _WDTIF
                                     54 	.globl _ACC_0
                                     55 	.globl _ACC_1
                                     56 	.globl _ACC_2
                                     57 	.globl _ACC_3
                                     58 	.globl _ACC_4
                                     59 	.globl _ACC_5
                                     60 	.globl _ACC_6
                                     61 	.globl _ACC_7
                                     62 	.globl _P
                                     63 	.globl _F1
                                     64 	.globl _OV
                                     65 	.globl _RS0
                                     66 	.globl _RS1
                                     67 	.globl _F0
                                     68 	.globl _AC
                                     69 	.globl _CY
                                     70 	.globl _DMAIF
                                     71 	.globl _T1IF
                                     72 	.globl _T2IF
                                     73 	.globl _T3IF
                                     74 	.globl _T4IF
                                     75 	.globl _P0IF
                                     76 	.globl _STIF
                                     77 	.globl _DMAIE
                                     78 	.globl _T1IE
                                     79 	.globl _T2IE
                                     80 	.globl _T3IE
                                     81 	.globl _T4IE
                                     82 	.globl _P0IE
                                     83 	.globl _RFERRIE
                                     84 	.globl _ADCIE
                                     85 	.globl _URX0IE
                                     86 	.globl _URX1IE
                                     87 	.globl _ENCIE
                                     88 	.globl _STIE
                                     89 	.globl _EA
                                     90 	.globl _P2_0
                                     91 	.globl _P2_1
                                     92 	.globl _P2_2
                                     93 	.globl _P2_3
                                     94 	.globl _P2_4
                                     95 	.globl _P2_5
                                     96 	.globl _P2_6
                                     97 	.globl _P2_7
                                     98 	.globl _ENCIF_0
                                     99 	.globl _ENCIF_1
                                    100 	.globl _P1_0
                                    101 	.globl _P1_1
                                    102 	.globl _P1_2
                                    103 	.globl _P1_3
                                    104 	.globl _P1_4
                                    105 	.globl _P1_5
                                    106 	.globl _P1_6
                                    107 	.globl _P1_7
                                    108 	.globl _IT0
                                    109 	.globl _RFERRIF
                                    110 	.globl _IT1
                                    111 	.globl _URX0IF
                                    112 	.globl _ADCIF
                                    113 	.globl _URX1IF
                                    114 	.globl _P0_0
                                    115 	.globl _P0_1
                                    116 	.globl _P0_2
                                    117 	.globl _P0_3
                                    118 	.globl _P0_4
                                    119 	.globl _P0_5
                                    120 	.globl _P0_6
                                    121 	.globl _P0_7
                                    122 	.globl _WDCTL
                                    123 	.globl _U1GCR
                                    124 	.globl _U1UCR
                                    125 	.globl _U1BAUD
                                    126 	.globl _U1DBUF
                                    127 	.globl _U1CSR
                                    128 	.globl _U0GCR
                                    129 	.globl _U0UCR
                                    130 	.globl _U0BAUD
                                    131 	.globl _U0DBUF
                                    132 	.globl _U0CSR
                                    133 	.globl _TIMIF
                                    134 	.globl _T4CC1
                                    135 	.globl _T4CCTL1
                                    136 	.globl _T4CC0
                                    137 	.globl _T4CCTL0
                                    138 	.globl _T4CTL
                                    139 	.globl _T4CNT
                                    140 	.globl _T3CC1
                                    141 	.globl _T3CCTL1
                                    142 	.globl _T3CC0
                                    143 	.globl _T3CCTL0
                                    144 	.globl _T3CTL
                                    145 	.globl _T3CNT
                                    146 	.globl _T2MSEL
                                    147 	.globl _T2IRQM
                                    148 	.globl _T2MOVF2
                                    149 	.globl _T2MOVF1
                                    150 	.globl _T2MOVF0
                                    151 	.globl _T2M1
                                    152 	.globl _T2M0
                                    153 	.globl _T2IRQF
                                    154 	.globl _T2EVTCFG
                                    155 	.globl _T2CTRL
                                    156 	.globl _T1STAT
                                    157 	.globl _T1CCTL2
                                    158 	.globl _T1CCTL1
                                    159 	.globl _T1CCTL0
                                    160 	.globl _T1CTL
                                    161 	.globl _T1CNTH
                                    162 	.globl _T1CNTL
                                    163 	.globl _T1CC2H
                                    164 	.globl _T1CC2L
                                    165 	.globl _T1CC1H
                                    166 	.globl _T1CC1L
                                    167 	.globl _T1CC0H
                                    168 	.globl _T1CC0L
                                    169 	.globl _CLKCONSTA
                                    170 	.globl _CLKCONCMD
                                    171 	.globl _SLEEPSTA
                                    172 	.globl _SLEEPCMD
                                    173 	.globl _STLOAD
                                    174 	.globl _ST2
                                    175 	.globl _ST1
                                    176 	.globl _ST0
                                    177 	.globl _RFERRF
                                    178 	.globl _RFIRQF0
                                    179 	.globl _RFST
                                    180 	.globl _RFD
                                    181 	.globl _RFIRQF1
                                    182 	.globl _PSBANK
                                    183 	.globl _FMAP
                                    184 	.globl _MEMCTR
                                    185 	.globl __XPAGE
                                    186 	.globl _MPAGE
                                    187 	.globl _PMUX
                                    188 	.globl _P2DIR
                                    189 	.globl _P1DIR
                                    190 	.globl _P0DIR
                                    191 	.globl _P2INP
                                    192 	.globl _P1INP
                                    193 	.globl _P2SEL
                                    194 	.globl _P1SEL
                                    195 	.globl _P0SEL
                                    196 	.globl _APCFG
                                    197 	.globl _PERCFG
                                    198 	.globl _P0INP
                                    199 	.globl _P2IEN
                                    200 	.globl _P1IEN
                                    201 	.globl _P0IEN
                                    202 	.globl _PICTL
                                    203 	.globl _P2IFG
                                    204 	.globl _P1IFG
                                    205 	.globl _P0IFG
                                    206 	.globl _DMAREQ
                                    207 	.globl _DMAARM
                                    208 	.globl _DMA0CFGH
                                    209 	.globl _DMA0CFGL
                                    210 	.globl _DMA1CFGH
                                    211 	.globl _DMA1CFGL
                                    212 	.globl _DMAIRQ
                                    213 	.globl _ENCCS
                                    214 	.globl _ENCDO
                                    215 	.globl _ENCDI
                                    216 	.globl _RNDH
                                    217 	.globl _RNDL
                                    218 	.globl _ADCH
                                    219 	.globl _ADCL
                                    220 	.globl _ADCCON3
                                    221 	.globl _ADCCON2
                                    222 	.globl _ADCCON1
                                    223 	.globl _B
                                    224 	.globl _IRCON2
                                    225 	.globl _ACC
                                    226 	.globl _PSW
                                    227 	.globl _IRCON
                                    228 	.globl _IP1
                                    229 	.globl _IEN1
                                    230 	.globl _IP0
                                    231 	.globl _IEN0
                                    232 	.globl _P2
                                    233 	.globl _S1CON
                                    234 	.globl _IEN2
                                    235 	.globl _S0CON
                                    236 	.globl _DPS
                                    237 	.globl _P1
                                    238 	.globl _TCON
                                    239 	.globl _PCON
                                    240 	.globl _DPH1
                                    241 	.globl _DPL1
                                    242 	.globl _DPH0
                                    243 	.globl _DPL0
                                    244 	.globl _SP
                                    245 	.globl _P0
                                    246 	.globl _X_IEEE_ADDR
                                    247 	.globl _X_INFOPAGE
                                    248 	.globl _X_P2DIR
                                    249 	.globl _X_P1DIR
                                    250 	.globl _X_P0DIR
                                    251 	.globl _X_U1GCR
                                    252 	.globl _X_U1UCR
                                    253 	.globl _X_U1BAUD
                                    254 	.globl _X_U1DBUF
                                    255 	.globl _X_U1CSR
                                    256 	.globl _X_P2INP
                                    257 	.globl _X_P1INP
                                    258 	.globl _X_P2SEL
                                    259 	.globl _X_P1SEL
                                    260 	.globl _X_P0SEL
                                    261 	.globl _X_APCFG
                                    262 	.globl _X_PERCFG
                                    263 	.globl _X_T4CC1
                                    264 	.globl _X_T4CCTL1
                                    265 	.globl _X_T4CC0
                                    266 	.globl _X_T4CCTL0
                                    267 	.globl _X_T4CTL
                                    268 	.globl _X_T4CNT
                                    269 	.globl _X_RFIRQF0
                                    270 	.globl _X_T1CCTL2
                                    271 	.globl _X_T1CCTL1
                                    272 	.globl _X_T1CCTL0
                                    273 	.globl _X_T1CTL
                                    274 	.globl _X_T1CNTH
                                    275 	.globl _X_T1CNTL
                                    276 	.globl _X_RFST
                                    277 	.globl _X_T1CC2H
                                    278 	.globl _X_T1CC2L
                                    279 	.globl _X_T1CC1H
                                    280 	.globl _X_T1CC1L
                                    281 	.globl _X_T1CC0H
                                    282 	.globl _X_T1CC0L
                                    283 	.globl _X_RFD
                                    284 	.globl _X_TIMIF
                                    285 	.globl _X_DMAREQ
                                    286 	.globl _X_DMAARM
                                    287 	.globl _X_DMA0CFGH
                                    288 	.globl _X_DMA0CFGL
                                    289 	.globl _X_DMA1CFGH
                                    290 	.globl _X_DMA1CFGL
                                    291 	.globl _X_DMAIRQ
                                    292 	.globl _X_T3CC1
                                    293 	.globl _X_T3CCTL1
                                    294 	.globl _X_T3CC0
                                    295 	.globl _X_T3CCTL0
                                    296 	.globl _X_T3CTL
                                    297 	.globl _X_T3CNT
                                    298 	.globl _X_WDCTL
                                    299 	.globl _X_MEMCTR
                                    300 	.globl _X_CLKCONCMD
                                    301 	.globl _X_U0GCR
                                    302 	.globl _X_U0UCR
                                    303 	.globl _X_T2MSEL
                                    304 	.globl _X_U0BAUD
                                    305 	.globl _X_U0DBUF
                                    306 	.globl _X_RFERRF
                                    307 	.globl _X_SLEEPCMD
                                    308 	.globl _X_RNDH
                                    309 	.globl _X_RNDL
                                    310 	.globl _X_ADCH
                                    311 	.globl _X_ADCL
                                    312 	.globl _X_ADCCON3
                                    313 	.globl _X_ADCCON2
                                    314 	.globl _X_ADCCON1
                                    315 	.globl _X_ENCCS
                                    316 	.globl _X_ENCDO
                                    317 	.globl _X_ENCDI
                                    318 	.globl _X_T1STAT
                                    319 	.globl _X_PMUX
                                    320 	.globl _X_STLOAD
                                    321 	.globl _X_P2IEN
                                    322 	.globl _X_P0IEN
                                    323 	.globl _X_T2IRQM
                                    324 	.globl _X_T2MOVF2
                                    325 	.globl _X_T2MOVF1
                                    326 	.globl _X_T2MOVF0
                                    327 	.globl _X_T2M1
                                    328 	.globl _X_T2M0
                                    329 	.globl _X_T2IRQF
                                    330 	.globl _X_P2
                                    331 	.globl _X_PSBANK
                                    332 	.globl _X_FMAP
                                    333 	.globl _X_CLKCONSTA
                                    334 	.globl _X_SLEEPSTA
                                    335 	.globl _X_T2EVTCFG
                                    336 	.globl _X_ST2
                                    337 	.globl _X_ST1
                                    338 	.globl _X_ST0
                                    339 	.globl _X_T2CTRL
                                    340 	.globl _X__XPAGE
                                    341 	.globl _X_MPAGE
                                    342 	.globl _X_RFIRQF1
                                    343 	.globl _X_P1
                                    344 	.globl _X_P0INP
                                    345 	.globl _X_P1IEN
                                    346 	.globl _X_PICTL
                                    347 	.globl _X_P2IFG
                                    348 	.globl _X_P1IFG
                                    349 	.globl _X_P0IFG
                                    350 	.globl _X_U0CSR
                                    351 	.globl _X_P0
                                    352 	.globl _USBF5
                                    353 	.globl _USBF4
                                    354 	.globl _USBF3
                                    355 	.globl _USBF2
                                    356 	.globl _USBF1
                                    357 	.globl _USBF0
                                    358 	.globl _USBCNTH
                                    359 	.globl _USBCNTL
                                    360 	.globl _USBCNT0
                                    361 	.globl _USBCSOH
                                    362 	.globl _USBCSOL
                                    363 	.globl _USBMAXO
                                    364 	.globl _USBCSIH
                                    365 	.globl _USBCSIL
                                    366 	.globl _USBCS0
                                    367 	.globl _USBMAXI
                                    368 	.globl _USBCTRL
                                    369 	.globl _USBINDEX
                                    370 	.globl _USBFRMH
                                    371 	.globl _USBFRML
                                    372 	.globl _USBCIE
                                    373 	.globl _USBOIE
                                    374 	.globl _USBIIE
                                    375 	.globl _USBCIF
                                    376 	.globl _USBOIF
                                    377 	.globl _USBIIF
                                    378 	.globl _USBPOW
                                    379 	.globl _USBADDR
                                    380 	.globl _CSPT
                                    381 	.globl _CSPZ
                                    382 	.globl _CSPY
                                    383 	.globl _CSPX
                                    384 	.globl _CSPSTAT
                                    385 	.globl _CSPCTRL
                                    386 	.globl _CSPPROG23
                                    387 	.globl _CSPPROG22
                                    388 	.globl _CSPPROG21
                                    389 	.globl _CSPPROG20
                                    390 	.globl _CSPPROG19
                                    391 	.globl _CSPPROG18
                                    392 	.globl _CSPPROG17
                                    393 	.globl _CSPPROG16
                                    394 	.globl _CSPPROG15
                                    395 	.globl _CSPPROG14
                                    396 	.globl _CSPPROG13
                                    397 	.globl _CSPPROG12
                                    398 	.globl _CSPPROG11
                                    399 	.globl _CSPPROG10
                                    400 	.globl _CSPPROG9
                                    401 	.globl _CSPPROG8
                                    402 	.globl _CSPPROG7
                                    403 	.globl _CSPPROG6
                                    404 	.globl _CSPPROG5
                                    405 	.globl _CSPPROG4
                                    406 	.globl _CSPPROG3
                                    407 	.globl _CSPPROG2
                                    408 	.globl _CSPPROG1
                                    409 	.globl _CSPPROG0
                                    410 	.globl _RFC_OBS_CTRL2
                                    411 	.globl _RFC_OBS_CTRL1
                                    412 	.globl _RFC_OBS_CTRL0
                                    413 	.globl _TXFILTCFG
                                    414 	.globl _PTEST1
                                    415 	.globl _PTEST0
                                    416 	.globl _ATEST
                                    417 	.globl _DACTEST2
                                    418 	.globl _DACTEST1
                                    419 	.globl _DACTEST0
                                    420 	.globl _MDMTEST1
                                    421 	.globl _MDMTEST0
                                    422 	.globl _ADCTEST2
                                    423 	.globl _ADCTEST1
                                    424 	.globl _ADCTEST0
                                    425 	.globl _AGCCTRL3
                                    426 	.globl _AGCCTRL2
                                    427 	.globl _AGCCTRL1
                                    428 	.globl _AGCCTRL0
                                    429 	.globl _FSCAL3
                                    430 	.globl _FSCAL2
                                    431 	.globl _FSCAL1
                                    432 	.globl _FSCAL0
                                    433 	.globl _FSCTRL
                                    434 	.globl _RXCTRL
                                    435 	.globl _FREQEST
                                    436 	.globl _MDMCTRL1
                                    437 	.globl _MDMCTRL0
                                    438 	.globl _RFRND
                                    439 	.globl _RFERRM
                                    440 	.globl _RFIRQM1
                                    441 	.globl _RFIRQM0
                                    442 	.globl _TXLAST_PTR
                                    443 	.globl _TXFIRST_PTR
                                    444 	.globl _RXP1_PTR
                                    445 	.globl _RXLAST_PTR
                                    446 	.globl _RXFIRST_PTR
                                    447 	.globl _TXFIFOCNT
                                    448 	.globl _RXFIFOCNT
                                    449 	.globl _RXFIRST
                                    450 	.globl _RSSISTAT
                                    451 	.globl _RSSI
                                    452 	.globl _CCACTRL1
                                    453 	.globl _CCACTRL0
                                    454 	.globl _FSMCTRL
                                    455 	.globl _FIFOPCTRL
                                    456 	.globl _FSMSTAT1
                                    457 	.globl _FSMSTAT0
                                    458 	.globl _TXCTRL
                                    459 	.globl _TXPOWER
                                    460 	.globl _FREQCTRL
                                    461 	.globl _FREQTUNE
                                    462 	.globl _RXMASKCLR
                                    463 	.globl _RXMASKSET
                                    464 	.globl _RXENABLE
                                    465 	.globl _FRMCTRL1
                                    466 	.globl _FRMCTRL0
                                    467 	.globl _SRCEXTEN2
                                    468 	.globl _SRCEXTEN1
                                    469 	.globl _SRCEXTEN0
                                    470 	.globl _SRCSHORTEN2
                                    471 	.globl _SRCSHORTEN1
                                    472 	.globl _SRCSHORTEN0
                                    473 	.globl _SRCMATCH
                                    474 	.globl _FRMFILT1
                                    475 	.globl _FRMFILT0
                                    476 	.globl _SHORT_ADDR1
                                    477 	.globl _SHORT_ADDR0
                                    478 	.globl _PAN_ID1
                                    479 	.globl _PAN_ID0
                                    480 	.globl _EXT_ADDR7
                                    481 	.globl _EXT_ADDR6
                                    482 	.globl _EXT_ADDR5
                                    483 	.globl _EXT_ADDR4
                                    484 	.globl _EXT_ADDR3
                                    485 	.globl _EXT_ADDR2
                                    486 	.globl _EXT_ADDR1
                                    487 	.globl _EXT_ADDR0
                                    488 	.globl _SRCSHORTPENDEN2
                                    489 	.globl _SRCSHORTPENDEN1
                                    490 	.globl _SRCSHORTPENDEN0
                                    491 	.globl _SRCEXTPENDEN2
                                    492 	.globl _SRCEXTPENDEN1
                                    493 	.globl _SRCEXTPENDEN0
                                    494 	.globl _SRCRESINDEX
                                    495 	.globl _SRCRESMASK2
                                    496 	.globl _SRCRESMASK1
                                    497 	.globl _SRCRESMASK0
                                    498 	.globl _SRC_ADDR_TABLE
                                    499 	.globl _TXFIFO
                                    500 	.globl _RXFIFO
                                    501 	.globl _RFCORE_RAM
                                    502 	.globl _CMPCTL
                                    503 	.globl _OPAMPS
                                    504 	.globl _OPAMPC
                                    505 	.globl _STCV2
                                    506 	.globl _STCV1
                                    507 	.globl _STCV0
                                    508 	.globl _STCS
                                    509 	.globl _STCC
                                    510 	.globl _T1CC4H
                                    511 	.globl _T1CC4L
                                    512 	.globl _T1CC3H
                                    513 	.globl _T1CC3L
                                    514 	.globl _XX_T1CC2H
                                    515 	.globl _XX_T1CC2L
                                    516 	.globl _XX_T1CC1H
                                    517 	.globl _XX_T1CC1L
                                    518 	.globl _XX_T1CC0H
                                    519 	.globl _XX_T1CC0L
                                    520 	.globl _T1CCTL4
                                    521 	.globl _T1CCTL3
                                    522 	.globl _XX_T1CCTL2
                                    523 	.globl _XX_T1CCTL1
                                    524 	.globl _XX_T1CCTL0
                                    525 	.globl _CLD
                                    526 	.globl _IRCTL
                                    527 	.globl _CHIPINFO1
                                    528 	.globl _CHIPINFO0
                                    529 	.globl _FWDATA
                                    530 	.globl _FADDRH
                                    531 	.globl _FADDRL
                                    532 	.globl _FCTL
                                    533 	.globl _IVCTRL
                                    534 	.globl _BATTMON
                                    535 	.globl _SRCRC
                                    536 	.globl _DBGDATA
                                    537 	.globl _TESTREG0
                                    538 	.globl _CHIPID
                                    539 	.globl _CHVER
                                    540 	.globl _OBSSEL5
                                    541 	.globl _OBSSEL4
                                    542 	.globl _OBSSEL3
                                    543 	.globl _OBSSEL2
                                    544 	.globl _OBSSEL1
                                    545 	.globl _OBSSEL0
                                    546 	.globl _I2CIO
                                    547 	.globl _I2CWC
                                    548 	.globl _I2CADDR
                                    549 	.globl _I2CDATA
                                    550 	.globl _I2CSTAT
                                    551 	.globl _I2CCFG
                                    552 	.globl _OPAMPMC
                                    553 	.globl _MONMUX
                                    554 ;--------------------------------------------------------
                                    555 ; special function registers
                                    556 ;--------------------------------------------------------
                                    557 	.area RSEG    (ABS,DATA)
      000000                        558 	.org 0x0000
                           000080   559 _P0	=	0x0080
                           000081   560 _SP	=	0x0081
                           000082   561 _DPL0	=	0x0082
                           000083   562 _DPH0	=	0x0083
                           000084   563 _DPL1	=	0x0084
                           000085   564 _DPH1	=	0x0085
                           000087   565 _PCON	=	0x0087
                           000088   566 _TCON	=	0x0088
                           000090   567 _P1	=	0x0090
                           000092   568 _DPS	=	0x0092
                           000098   569 _S0CON	=	0x0098
                           00009A   570 _IEN2	=	0x009a
                           00009B   571 _S1CON	=	0x009b
                           0000A0   572 _P2	=	0x00a0
                           0000A8   573 _IEN0	=	0x00a8
                           0000A9   574 _IP0	=	0x00a9
                           0000B8   575 _IEN1	=	0x00b8
                           0000B9   576 _IP1	=	0x00b9
                           0000C0   577 _IRCON	=	0x00c0
                           0000D0   578 _PSW	=	0x00d0
                           0000E0   579 _ACC	=	0x00e0
                           0000E8   580 _IRCON2	=	0x00e8
                           0000F0   581 _B	=	0x00f0
                           0000B4   582 _ADCCON1	=	0x00b4
                           0000B5   583 _ADCCON2	=	0x00b5
                           0000B6   584 _ADCCON3	=	0x00b6
                           0000BA   585 _ADCL	=	0x00ba
                           0000BB   586 _ADCH	=	0x00bb
                           0000BC   587 _RNDL	=	0x00bc
                           0000BD   588 _RNDH	=	0x00bd
                           0000B1   589 _ENCDI	=	0x00b1
                           0000B2   590 _ENCDO	=	0x00b2
                           0000B3   591 _ENCCS	=	0x00b3
                           0000D1   592 _DMAIRQ	=	0x00d1
                           0000D2   593 _DMA1CFGL	=	0x00d2
                           0000D3   594 _DMA1CFGH	=	0x00d3
                           0000D4   595 _DMA0CFGL	=	0x00d4
                           0000D5   596 _DMA0CFGH	=	0x00d5
                           0000D6   597 _DMAARM	=	0x00d6
                           0000D7   598 _DMAREQ	=	0x00d7
                           000089   599 _P0IFG	=	0x0089
                           00008A   600 _P1IFG	=	0x008a
                           00008B   601 _P2IFG	=	0x008b
                           00008C   602 _PICTL	=	0x008c
                           0000AB   603 _P0IEN	=	0x00ab
                           00008D   604 _P1IEN	=	0x008d
                           0000AC   605 _P2IEN	=	0x00ac
                           00008F   606 _P0INP	=	0x008f
                           0000F1   607 _PERCFG	=	0x00f1
                           0000F2   608 _APCFG	=	0x00f2
                           0000F3   609 _P0SEL	=	0x00f3
                           0000F4   610 _P1SEL	=	0x00f4
                           0000F5   611 _P2SEL	=	0x00f5
                           0000F6   612 _P1INP	=	0x00f6
                           0000F7   613 _P2INP	=	0x00f7
                           0000FD   614 _P0DIR	=	0x00fd
                           0000FE   615 _P1DIR	=	0x00fe
                           0000FF   616 _P2DIR	=	0x00ff
                           0000AE   617 _PMUX	=	0x00ae
                           000093   618 _MPAGE	=	0x0093
                           000093   619 __XPAGE	=	0x0093
                           0000C7   620 _MEMCTR	=	0x00c7
                           00009F   621 _FMAP	=	0x009f
                           00009F   622 _PSBANK	=	0x009f
                           000091   623 _RFIRQF1	=	0x0091
                           0000D9   624 _RFD	=	0x00d9
                           0000E1   625 _RFST	=	0x00e1
                           0000E9   626 _RFIRQF0	=	0x00e9
                           0000BF   627 _RFERRF	=	0x00bf
                           000095   628 _ST0	=	0x0095
                           000096   629 _ST1	=	0x0096
                           000097   630 _ST2	=	0x0097
                           0000AD   631 _STLOAD	=	0x00ad
                           0000BE   632 _SLEEPCMD	=	0x00be
                           00009D   633 _SLEEPSTA	=	0x009d
                           0000C6   634 _CLKCONCMD	=	0x00c6
                           00009E   635 _CLKCONSTA	=	0x009e
                           0000DA   636 _T1CC0L	=	0x00da
                           0000DB   637 _T1CC0H	=	0x00db
                           0000DC   638 _T1CC1L	=	0x00dc
                           0000DD   639 _T1CC1H	=	0x00dd
                           0000DE   640 _T1CC2L	=	0x00de
                           0000DF   641 _T1CC2H	=	0x00df
                           0000E2   642 _T1CNTL	=	0x00e2
                           0000E3   643 _T1CNTH	=	0x00e3
                           0000E4   644 _T1CTL	=	0x00e4
                           0000E5   645 _T1CCTL0	=	0x00e5
                           0000E6   646 _T1CCTL1	=	0x00e6
                           0000E7   647 _T1CCTL2	=	0x00e7
                           0000AF   648 _T1STAT	=	0x00af
                           000094   649 _T2CTRL	=	0x0094
                           00009C   650 _T2EVTCFG	=	0x009c
                           0000A1   651 _T2IRQF	=	0x00a1
                           0000A2   652 _T2M0	=	0x00a2
                           0000A3   653 _T2M1	=	0x00a3
                           0000A4   654 _T2MOVF0	=	0x00a4
                           0000A5   655 _T2MOVF1	=	0x00a5
                           0000A6   656 _T2MOVF2	=	0x00a6
                           0000A7   657 _T2IRQM	=	0x00a7
                           0000C3   658 _T2MSEL	=	0x00c3
                           0000CA   659 _T3CNT	=	0x00ca
                           0000CB   660 _T3CTL	=	0x00cb
                           0000CC   661 _T3CCTL0	=	0x00cc
                           0000CD   662 _T3CC0	=	0x00cd
                           0000CE   663 _T3CCTL1	=	0x00ce
                           0000CF   664 _T3CC1	=	0x00cf
                           0000EA   665 _T4CNT	=	0x00ea
                           0000EB   666 _T4CTL	=	0x00eb
                           0000EC   667 _T4CCTL0	=	0x00ec
                           0000ED   668 _T4CC0	=	0x00ed
                           0000EE   669 _T4CCTL1	=	0x00ee
                           0000EF   670 _T4CC1	=	0x00ef
                           0000D8   671 _TIMIF	=	0x00d8
                           000086   672 _U0CSR	=	0x0086
                           0000C1   673 _U0DBUF	=	0x00c1
                           0000C2   674 _U0BAUD	=	0x00c2
                           0000C4   675 _U0UCR	=	0x00c4
                           0000C5   676 _U0GCR	=	0x00c5
                           0000F8   677 _U1CSR	=	0x00f8
                           0000F9   678 _U1DBUF	=	0x00f9
                           0000FA   679 _U1BAUD	=	0x00fa
                           0000FB   680 _U1UCR	=	0x00fb
                           0000FC   681 _U1GCR	=	0x00fc
                           0000C9   682 _WDCTL	=	0x00c9
                                    683 ;--------------------------------------------------------
                                    684 ; special function bits
                                    685 ;--------------------------------------------------------
                                    686 	.area RSEG    (ABS,DATA)
      000000                        687 	.org 0x0000
                           000087   688 _P0_7	=	0x0087
                           000086   689 _P0_6	=	0x0086
                           000085   690 _P0_5	=	0x0085
                           000084   691 _P0_4	=	0x0084
                           000083   692 _P0_3	=	0x0083
                           000082   693 _P0_2	=	0x0082
                           000081   694 _P0_1	=	0x0081
                           000080   695 _P0_0	=	0x0080
                           00008F   696 _URX1IF	=	0x008f
                           00008D   697 _ADCIF	=	0x008d
                           00008B   698 _URX0IF	=	0x008b
                           00008A   699 _IT1	=	0x008a
                           000089   700 _RFERRIF	=	0x0089
                           000088   701 _IT0	=	0x0088
                           000097   702 _P1_7	=	0x0097
                           000096   703 _P1_6	=	0x0096
                           000095   704 _P1_5	=	0x0095
                           000094   705 _P1_4	=	0x0094
                           000093   706 _P1_3	=	0x0093
                           000092   707 _P1_2	=	0x0092
                           000091   708 _P1_1	=	0x0091
                           000090   709 _P1_0	=	0x0090
                           000099   710 _ENCIF_1	=	0x0099
                           000098   711 _ENCIF_0	=	0x0098
                           0000A7   712 _P2_7	=	0x00a7
                           0000A6   713 _P2_6	=	0x00a6
                           0000A5   714 _P2_5	=	0x00a5
                           0000A4   715 _P2_4	=	0x00a4
                           0000A3   716 _P2_3	=	0x00a3
                           0000A2   717 _P2_2	=	0x00a2
                           0000A1   718 _P2_1	=	0x00a1
                           0000A0   719 _P2_0	=	0x00a0
                           0000AF   720 _EA	=	0x00af
                           0000AD   721 _STIE	=	0x00ad
                           0000AC   722 _ENCIE	=	0x00ac
                           0000AB   723 _URX1IE	=	0x00ab
                           0000AA   724 _URX0IE	=	0x00aa
                           0000A9   725 _ADCIE	=	0x00a9
                           0000A8   726 _RFERRIE	=	0x00a8
                           0000BD   727 _P0IE	=	0x00bd
                           0000BC   728 _T4IE	=	0x00bc
                           0000BB   729 _T3IE	=	0x00bb
                           0000BA   730 _T2IE	=	0x00ba
                           0000B9   731 _T1IE	=	0x00b9
                           0000B8   732 _DMAIE	=	0x00b8
                           0000C7   733 _STIF	=	0x00c7
                           0000C5   734 _P0IF	=	0x00c5
                           0000C4   735 _T4IF	=	0x00c4
                           0000C3   736 _T3IF	=	0x00c3
                           0000C2   737 _T2IF	=	0x00c2
                           0000C1   738 _T1IF	=	0x00c1
                           0000C0   739 _DMAIF	=	0x00c0
                           0000D7   740 _CY	=	0x00d7
                           0000D6   741 _AC	=	0x00d6
                           0000D5   742 _F0	=	0x00d5
                           0000D4   743 _RS1	=	0x00d4
                           0000D3   744 _RS0	=	0x00d3
                           0000D2   745 _OV	=	0x00d2
                           0000D1   746 _F1	=	0x00d1
                           0000D0   747 _P	=	0x00d0
                           0000E7   748 _ACC_7	=	0x00e7
                           0000E6   749 _ACC_6	=	0x00e6
                           0000E5   750 _ACC_5	=	0x00e5
                           0000E4   751 _ACC_4	=	0x00e4
                           0000E3   752 _ACC_3	=	0x00e3
                           0000E2   753 _ACC_2	=	0x00e2
                           0000E1   754 _ACC_1	=	0x00e1
                           0000E0   755 _ACC_0	=	0x00e0
                           0000EC   756 _WDTIF	=	0x00ec
                           0000EB   757 _P1IF	=	0x00eb
                           0000EA   758 _UTX1IF	=	0x00ea
                           0000E9   759 _UTX0IF	=	0x00e9
                           0000E8   760 _P2IF	=	0x00e8
                           0000F7   761 _B_7	=	0x00f7
                           0000F6   762 _B_6	=	0x00f6
                           0000F5   763 _B_5	=	0x00f5
                           0000F4   764 _B_4	=	0x00f4
                           0000F3   765 _B_3	=	0x00f3
                           0000F2   766 _B_2	=	0x00f2
                           0000F1   767 _B_1	=	0x00f1
                           0000F0   768 _B_0	=	0x00f0
                           0000DE   769 _OVFIM	=	0x00de
                           0000DD   770 _T4CH1IF	=	0x00dd
                           0000DC   771 _T4CH0IF	=	0x00dc
                           0000DB   772 _T4OVFIF	=	0x00db
                           0000DA   773 _T3CH1IF	=	0x00da
                           0000D9   774 _T3CH0IF	=	0x00d9
                           0000D8   775 _T3OVFIF	=	0x00d8
                           0000FF   776 _MODE	=	0x00ff
                           0000FE   777 _RE	=	0x00fe
                           0000FD   778 _SLAVE	=	0x00fd
                           0000FC   779 _FE	=	0x00fc
                           0000FB   780 _ERR	=	0x00fb
                           0000FA   781 _RX_BYTE	=	0x00fa
                           0000F9   782 _TX_BYTE	=	0x00f9
                           0000F8   783 _ACTIVE	=	0x00f8
                                    784 ;--------------------------------------------------------
                                    785 ; overlayable register banks
                                    786 ;--------------------------------------------------------
                                    787 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        788 	.ds 8
                                    789 ;--------------------------------------------------------
                                    790 ; internal ram data
                                    791 ;--------------------------------------------------------
                                    792 	.area DSEG    (DATA)
                                    793 ;--------------------------------------------------------
                                    794 ; overlayable items in internal ram 
                                    795 ;--------------------------------------------------------
                                    796 ;--------------------------------------------------------
                                    797 ; indirectly addressable internal ram data
                                    798 ;--------------------------------------------------------
                                    799 	.area ISEG    (DATA)
                                    800 ;--------------------------------------------------------
                                    801 ; absolute internal ram data
                                    802 ;--------------------------------------------------------
                                    803 	.area IABS    (ABS,DATA)
                                    804 	.area IABS    (ABS,DATA)
                                    805 ;--------------------------------------------------------
                                    806 ; bit data
                                    807 ;--------------------------------------------------------
                                    808 	.area BSEG    (BIT)
                                    809 ;--------------------------------------------------------
                                    810 ; paged external ram data
                                    811 ;--------------------------------------------------------
                                    812 	.area PSEG    (PAG,XDATA)
                                    813 ;--------------------------------------------------------
                                    814 ; external ram data
                                    815 ;--------------------------------------------------------
                                    816 	.area XSEG    (XDATA)
                           0061A6   817 _MONMUX	=	0x61a6
                           0061A6   818 _OPAMPMC	=	0x61a6
                           006230   819 _I2CCFG	=	0x6230
                           006231   820 _I2CSTAT	=	0x6231
                           006232   821 _I2CDATA	=	0x6232
                           006233   822 _I2CADDR	=	0x6233
                           006234   823 _I2CWC	=	0x6234
                           006235   824 _I2CIO	=	0x6235
                           006243   825 _OBSSEL0	=	0x6243
                           006244   826 _OBSSEL1	=	0x6244
                           006245   827 _OBSSEL2	=	0x6245
                           006246   828 _OBSSEL3	=	0x6246
                           006247   829 _OBSSEL4	=	0x6247
                           006248   830 _OBSSEL5	=	0x6248
                           006249   831 _CHVER	=	0x6249
                           00624A   832 _CHIPID	=	0x624a
                           00624B   833 _TESTREG0	=	0x624b
                           006260   834 _DBGDATA	=	0x6260
                           006262   835 _SRCRC	=	0x6262
                           006264   836 _BATTMON	=	0x6264
                           006265   837 _IVCTRL	=	0x6265
                           006270   838 _FCTL	=	0x6270
                           006271   839 _FADDRL	=	0x6271
                           006272   840 _FADDRH	=	0x6272
                           006273   841 _FWDATA	=	0x6273
                           006276   842 _CHIPINFO0	=	0x6276
                           006277   843 _CHIPINFO1	=	0x6277
                           006281   844 _IRCTL	=	0x6281
                           006290   845 _CLD	=	0x6290
                           0062A0   846 _XX_T1CCTL0	=	0x62a0
                           0062A1   847 _XX_T1CCTL1	=	0x62a1
                           0062A2   848 _XX_T1CCTL2	=	0x62a2
                           0062A3   849 _T1CCTL3	=	0x62a3
                           0062A4   850 _T1CCTL4	=	0x62a4
                           0062A6   851 _XX_T1CC0L	=	0x62a6
                           0062A7   852 _XX_T1CC0H	=	0x62a7
                           0062A8   853 _XX_T1CC1L	=	0x62a8
                           0062A9   854 _XX_T1CC1H	=	0x62a9
                           0062AA   855 _XX_T1CC2L	=	0x62aa
                           0062AB   856 _XX_T1CC2H	=	0x62ab
                           0062AC   857 _T1CC3L	=	0x62ac
                           0062AD   858 _T1CC3H	=	0x62ad
                           0062AE   859 _T1CC4L	=	0x62ae
                           0062AF   860 _T1CC4H	=	0x62af
                           0062B0   861 _STCC	=	0x62b0
                           0062B1   862 _STCS	=	0x62b1
                           0062B2   863 _STCV0	=	0x62b2
                           0062B3   864 _STCV1	=	0x62b3
                           0062B4   865 _STCV2	=	0x62b4
                           0062C0   866 _OPAMPC	=	0x62c0
                           0062C1   867 _OPAMPS	=	0x62c1
                           0062D0   868 _CMPCTL	=	0x62d0
                           006000   869 _RFCORE_RAM	=	0x6000
                           006000   870 _RXFIFO	=	0x6000
                           006080   871 _TXFIFO	=	0x6080
                           006100   872 _SRC_ADDR_TABLE	=	0x6100
                           006160   873 _SRCRESMASK0	=	0x6160
                           006161   874 _SRCRESMASK1	=	0x6161
                           006162   875 _SRCRESMASK2	=	0x6162
                           006163   876 _SRCRESINDEX	=	0x6163
                           006164   877 _SRCEXTPENDEN0	=	0x6164
                           006165   878 _SRCEXTPENDEN1	=	0x6165
                           006166   879 _SRCEXTPENDEN2	=	0x6166
                           006167   880 _SRCSHORTPENDEN0	=	0x6167
                           006168   881 _SRCSHORTPENDEN1	=	0x6168
                           006169   882 _SRCSHORTPENDEN2	=	0x6169
                           00616A   883 _EXT_ADDR0	=	0x616a
                           00616B   884 _EXT_ADDR1	=	0x616b
                           00616C   885 _EXT_ADDR2	=	0x616c
                           00616D   886 _EXT_ADDR3	=	0x616d
                           00616E   887 _EXT_ADDR4	=	0x616e
                           00616F   888 _EXT_ADDR5	=	0x616f
                           006170   889 _EXT_ADDR6	=	0x6170
                           006171   890 _EXT_ADDR7	=	0x6171
                           006172   891 _PAN_ID0	=	0x6172
                           006173   892 _PAN_ID1	=	0x6173
                           006174   893 _SHORT_ADDR0	=	0x6174
                           006175   894 _SHORT_ADDR1	=	0x6175
                           006180   895 _FRMFILT0	=	0x6180
                           006181   896 _FRMFILT1	=	0x6181
                           006182   897 _SRCMATCH	=	0x6182
                           006183   898 _SRCSHORTEN0	=	0x6183
                           006184   899 _SRCSHORTEN1	=	0x6184
                           006185   900 _SRCSHORTEN2	=	0x6185
                           006186   901 _SRCEXTEN0	=	0x6186
                           006187   902 _SRCEXTEN1	=	0x6187
                           006188   903 _SRCEXTEN2	=	0x6188
                           006189   904 _FRMCTRL0	=	0x6189
                           00618A   905 _FRMCTRL1	=	0x618a
                           00618B   906 _RXENABLE	=	0x618b
                           00618C   907 _RXMASKSET	=	0x618c
                           00618D   908 _RXMASKCLR	=	0x618d
                           00618E   909 _FREQTUNE	=	0x618e
                           00618F   910 _FREQCTRL	=	0x618f
                           006190   911 _TXPOWER	=	0x6190
                           006191   912 _TXCTRL	=	0x6191
                           006192   913 _FSMSTAT0	=	0x6192
                           006193   914 _FSMSTAT1	=	0x6193
                           006194   915 _FIFOPCTRL	=	0x6194
                           006195   916 _FSMCTRL	=	0x6195
                           006196   917 _CCACTRL0	=	0x6196
                           006197   918 _CCACTRL1	=	0x6197
                           006198   919 _RSSI	=	0x6198
                           006199   920 _RSSISTAT	=	0x6199
                           00619A   921 _RXFIRST	=	0x619a
                           00619B   922 _RXFIFOCNT	=	0x619b
                           00619C   923 _TXFIFOCNT	=	0x619c
                           00619D   924 _RXFIRST_PTR	=	0x619d
                           00619E   925 _RXLAST_PTR	=	0x619e
                           00619F   926 _RXP1_PTR	=	0x619f
                           0061A1   927 _TXFIRST_PTR	=	0x61a1
                           0061A2   928 _TXLAST_PTR	=	0x61a2
                           0061A3   929 _RFIRQM0	=	0x61a3
                           0061A4   930 _RFIRQM1	=	0x61a4
                           0061A5   931 _RFERRM	=	0x61a5
                           0061A7   932 _RFRND	=	0x61a7
                           0061A8   933 _MDMCTRL0	=	0x61a8
                           0061A9   934 _MDMCTRL1	=	0x61a9
                           0061AA   935 _FREQEST	=	0x61aa
                           0061AB   936 _RXCTRL	=	0x61ab
                           0061AC   937 _FSCTRL	=	0x61ac
                           0061AD   938 _FSCAL0	=	0x61ad
                           0061AE   939 _FSCAL1	=	0x61ae
                           0061AF   940 _FSCAL2	=	0x61af
                           0061B0   941 _FSCAL3	=	0x61b0
                           0061B1   942 _AGCCTRL0	=	0x61b1
                           0061B2   943 _AGCCTRL1	=	0x61b2
                           0061B3   944 _AGCCTRL2	=	0x61b3
                           0061B4   945 _AGCCTRL3	=	0x61b4
                           0061B5   946 _ADCTEST0	=	0x61b5
                           0061B6   947 _ADCTEST1	=	0x61b6
                           0061B7   948 _ADCTEST2	=	0x61b7
                           0061B8   949 _MDMTEST0	=	0x61b8
                           0061B9   950 _MDMTEST1	=	0x61b9
                           0061BA   951 _DACTEST0	=	0x61ba
                           0061BB   952 _DACTEST1	=	0x61bb
                           0061BC   953 _DACTEST2	=	0x61bc
                           0061BD   954 _ATEST	=	0x61bd
                           0061BE   955 _PTEST0	=	0x61be
                           0061BF   956 _PTEST1	=	0x61bf
                           0061FA   957 _TXFILTCFG	=	0x61fa
                           0061EB   958 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   959 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   960 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   961 _CSPPROG0	=	0x61c0
                           0061C1   962 _CSPPROG1	=	0x61c1
                           0061C2   963 _CSPPROG2	=	0x61c2
                           0061C3   964 _CSPPROG3	=	0x61c3
                           0061C4   965 _CSPPROG4	=	0x61c4
                           0061C5   966 _CSPPROG5	=	0x61c5
                           0061C6   967 _CSPPROG6	=	0x61c6
                           0061C7   968 _CSPPROG7	=	0x61c7
                           0061C8   969 _CSPPROG8	=	0x61c8
                           0061C9   970 _CSPPROG9	=	0x61c9
                           0061CA   971 _CSPPROG10	=	0x61ca
                           0061CB   972 _CSPPROG11	=	0x61cb
                           0061CC   973 _CSPPROG12	=	0x61cc
                           0061CD   974 _CSPPROG13	=	0x61cd
                           0061CE   975 _CSPPROG14	=	0x61ce
                           0061CF   976 _CSPPROG15	=	0x61cf
                           0061D0   977 _CSPPROG16	=	0x61d0
                           0061D1   978 _CSPPROG17	=	0x61d1
                           0061D2   979 _CSPPROG18	=	0x61d2
                           0061D3   980 _CSPPROG19	=	0x61d3
                           0061D4   981 _CSPPROG20	=	0x61d4
                           0061D5   982 _CSPPROG21	=	0x61d5
                           0061D6   983 _CSPPROG22	=	0x61d6
                           0061D7   984 _CSPPROG23	=	0x61d7
                           0061E0   985 _CSPCTRL	=	0x61e0
                           0061E1   986 _CSPSTAT	=	0x61e1
                           0061E2   987 _CSPX	=	0x61e2
                           0061E3   988 _CSPY	=	0x61e3
                           0061E4   989 _CSPZ	=	0x61e4
                           0061E5   990 _CSPT	=	0x61e5
                           006200   991 _USBADDR	=	0x6200
                           006201   992 _USBPOW	=	0x6201
                           006202   993 _USBIIF	=	0x6202
                           006204   994 _USBOIF	=	0x6204
                           006206   995 _USBCIF	=	0x6206
                           006207   996 _USBIIE	=	0x6207
                           006209   997 _USBOIE	=	0x6209
                           00620B   998 _USBCIE	=	0x620b
                           00620C   999 _USBFRML	=	0x620c
                           00620D  1000 _USBFRMH	=	0x620d
                           00620E  1001 _USBINDEX	=	0x620e
                           00620F  1002 _USBCTRL	=	0x620f
                           006210  1003 _USBMAXI	=	0x6210
                           006211  1004 _USBCS0	=	0x6211
                           006211  1005 _USBCSIL	=	0x6211
                           006212  1006 _USBCSIH	=	0x6212
                           006213  1007 _USBMAXO	=	0x6213
                           006214  1008 _USBCSOL	=	0x6214
                           006215  1009 _USBCSOH	=	0x6215
                           006216  1010 _USBCNT0	=	0x6216
                           006216  1011 _USBCNTL	=	0x6216
                           006217  1012 _USBCNTH	=	0x6217
                           006220  1013 _USBF0	=	0x6220
                           006222  1014 _USBF1	=	0x6222
                           006224  1015 _USBF2	=	0x6224
                           006226  1016 _USBF3	=	0x6226
                           006228  1017 _USBF4	=	0x6228
                           00622A  1018 _USBF5	=	0x622a
                           007080  1019 _X_P0	=	0x7080
                           007086  1020 _X_U0CSR	=	0x7086
                           007089  1021 _X_P0IFG	=	0x7089
                           00708A  1022 _X_P1IFG	=	0x708a
                           00708B  1023 _X_P2IFG	=	0x708b
                           00708C  1024 _X_PICTL	=	0x708c
                           00708D  1025 _X_P1IEN	=	0x708d
                           00708F  1026 _X_P0INP	=	0x708f
                           007090  1027 _X_P1	=	0x7090
                           007091  1028 _X_RFIRQF1	=	0x7091
                           007093  1029 _X_MPAGE	=	0x7093
                           007093  1030 _X__XPAGE	=	0x7093
                           007094  1031 _X_T2CTRL	=	0x7094
                           007095  1032 _X_ST0	=	0x7095
                           007096  1033 _X_ST1	=	0x7096
                           007097  1034 _X_ST2	=	0x7097
                           00709C  1035 _X_T2EVTCFG	=	0x709c
                           00709D  1036 _X_SLEEPSTA	=	0x709d
                           00709E  1037 _X_CLKCONSTA	=	0x709e
                           00709F  1038 _X_FMAP	=	0x709f
                           00709F  1039 _X_PSBANK	=	0x709f
                           0070A0  1040 _X_P2	=	0x70a0
                           0070A1  1041 _X_T2IRQF	=	0x70a1
                           0070A2  1042 _X_T2M0	=	0x70a2
                           0070A3  1043 _X_T2M1	=	0x70a3
                           0070A4  1044 _X_T2MOVF0	=	0x70a4
                           0070A5  1045 _X_T2MOVF1	=	0x70a5
                           0070A6  1046 _X_T2MOVF2	=	0x70a6
                           0070A7  1047 _X_T2IRQM	=	0x70a7
                           0070AB  1048 _X_P0IEN	=	0x70ab
                           0070AC  1049 _X_P2IEN	=	0x70ac
                           0070AD  1050 _X_STLOAD	=	0x70ad
                           0070AE  1051 _X_PMUX	=	0x70ae
                           0070AF  1052 _X_T1STAT	=	0x70af
                           0070B1  1053 _X_ENCDI	=	0x70b1
                           0070B2  1054 _X_ENCDO	=	0x70b2
                           0070B3  1055 _X_ENCCS	=	0x70b3
                           0070B4  1056 _X_ADCCON1	=	0x70b4
                           0070B5  1057 _X_ADCCON2	=	0x70b5
                           0070B6  1058 _X_ADCCON3	=	0x70b6
                           0070BA  1059 _X_ADCL	=	0x70ba
                           0070BB  1060 _X_ADCH	=	0x70bb
                           0070BC  1061 _X_RNDL	=	0x70bc
                           0070BD  1062 _X_RNDH	=	0x70bd
                           0070BE  1063 _X_SLEEPCMD	=	0x70be
                           0070BF  1064 _X_RFERRF	=	0x70bf
                           0070C1  1065 _X_U0DBUF	=	0x70c1
                           0070C2  1066 _X_U0BAUD	=	0x70c2
                           0070C3  1067 _X_T2MSEL	=	0x70c3
                           0070C4  1068 _X_U0UCR	=	0x70c4
                           0070C5  1069 _X_U0GCR	=	0x70c5
                           0070C6  1070 _X_CLKCONCMD	=	0x70c6
                           0070C7  1071 _X_MEMCTR	=	0x70c7
                           0070C9  1072 _X_WDCTL	=	0x70c9
                           0070CA  1073 _X_T3CNT	=	0x70ca
                           0070CB  1074 _X_T3CTL	=	0x70cb
                           0070CC  1075 _X_T3CCTL0	=	0x70cc
                           0070CD  1076 _X_T3CC0	=	0x70cd
                           0070CE  1077 _X_T3CCTL1	=	0x70ce
                           0070CF  1078 _X_T3CC1	=	0x70cf
                           0070D1  1079 _X_DMAIRQ	=	0x70d1
                           0070D2  1080 _X_DMA1CFGL	=	0x70d2
                           0070D3  1081 _X_DMA1CFGH	=	0x70d3
                           0070D4  1082 _X_DMA0CFGL	=	0x70d4
                           0070D5  1083 _X_DMA0CFGH	=	0x70d5
                           0070D6  1084 _X_DMAARM	=	0x70d6
                           0070D7  1085 _X_DMAREQ	=	0x70d7
                           0070D8  1086 _X_TIMIF	=	0x70d8
                           0070D9  1087 _X_RFD	=	0x70d9
                           0070DA  1088 _X_T1CC0L	=	0x70da
                           0070DB  1089 _X_T1CC0H	=	0x70db
                           0070DC  1090 _X_T1CC1L	=	0x70dc
                           0070DD  1091 _X_T1CC1H	=	0x70dd
                           0070DE  1092 _X_T1CC2L	=	0x70de
                           0070DF  1093 _X_T1CC2H	=	0x70df
                           0070E1  1094 _X_RFST	=	0x70e1
                           0070E2  1095 _X_T1CNTL	=	0x70e2
                           0070E3  1096 _X_T1CNTH	=	0x70e3
                           0070E4  1097 _X_T1CTL	=	0x70e4
                           0070E5  1098 _X_T1CCTL0	=	0x70e5
                           0070E6  1099 _X_T1CCTL1	=	0x70e6
                           0070E7  1100 _X_T1CCTL2	=	0x70e7
                           0070E9  1101 _X_RFIRQF0	=	0x70e9
                           0070EA  1102 _X_T4CNT	=	0x70ea
                           0070EB  1103 _X_T4CTL	=	0x70eb
                           0070EC  1104 _X_T4CCTL0	=	0x70ec
                           0070ED  1105 _X_T4CC0	=	0x70ed
                           0070EE  1106 _X_T4CCTL1	=	0x70ee
                           0070EF  1107 _X_T4CC1	=	0x70ef
                           0070F1  1108 _X_PERCFG	=	0x70f1
                           0070F2  1109 _X_APCFG	=	0x70f2
                           0070F3  1110 _X_P0SEL	=	0x70f3
                           0070F4  1111 _X_P1SEL	=	0x70f4
                           0070F5  1112 _X_P2SEL	=	0x70f5
                           0070F6  1113 _X_P1INP	=	0x70f6
                           0070F7  1114 _X_P2INP	=	0x70f7
                           0070F8  1115 _X_U1CSR	=	0x70f8
                           0070F9  1116 _X_U1DBUF	=	0x70f9
                           0070FA  1117 _X_U1BAUD	=	0x70fa
                           0070FB  1118 _X_U1UCR	=	0x70fb
                           0070FC  1119 _X_U1GCR	=	0x70fc
                           0070FD  1120 _X_P0DIR	=	0x70fd
                           0070FE  1121 _X_P1DIR	=	0x70fe
                           0070FF  1122 _X_P2DIR	=	0x70ff
                           007800  1123 _X_INFOPAGE	=	0x7800
                           00780C  1124 _X_IEEE_ADDR	=	0x780c
                                   1125 ;--------------------------------------------------------
                                   1126 ; absolute external ram data
                                   1127 ;--------------------------------------------------------
                                   1128 	.area XABS    (ABS,XDATA)
                                   1129 ;--------------------------------------------------------
                                   1130 ; external initialized ram data
                                   1131 ;--------------------------------------------------------
                                   1132 	.area XISEG   (XDATA)
                                   1133 	.area HOME    (CODE)
                                   1134 	.area GSINIT0 (CODE)
                                   1135 	.area GSINIT1 (CODE)
                                   1136 	.area GSINIT2 (CODE)
                                   1137 	.area GSINIT3 (CODE)
                                   1138 	.area GSINIT4 (CODE)
                                   1139 	.area GSINIT5 (CODE)
                                   1140 	.area GSINIT  (CODE)
                                   1141 	.area GSFINAL (CODE)
                                   1142 	.area CSEG    (CODE)
                                   1143 ;--------------------------------------------------------
                                   1144 ; global & static initialisations
                                   1145 ;--------------------------------------------------------
                                   1146 	.area HOME    (CODE)
                                   1147 	.area GSINIT  (CODE)
                                   1148 	.area GSFINAL (CODE)
                                   1149 	.area GSINIT  (CODE)
                                   1150 ;--------------------------------------------------------
                                   1151 ; Home
                                   1152 ;--------------------------------------------------------
                                   1153 	.area HOME    (CODE)
                                   1154 	.area HOME    (CODE)
                                   1155 ;--------------------------------------------------------
                                   1156 ; code
                                   1157 ;--------------------------------------------------------
                                   1158 	.area CSEG    (CODE)
                                   1159 ;------------------------------------------------------------
                                   1160 ;Allocation info for local variables in function 'get_bits_in_byte'
                                   1161 ;------------------------------------------------------------
                                   1162 ;bitpos                    Allocated to stack - sp -3
                                   1163 ;vallen                    Allocated to stack - sp -5
                                   1164 ;from                      Allocated to registers r5 r6 r7 
                                   1165 ;shifted_val               Allocated to registers r4 r3 
                                   1166 ;------------------------------------------------------------
                                   1167 ;	../../core/net/rime/chameleon-bitopt.c:73: get_bits_in_byte(uint8_t *from, uint16_t bitpos, uint16_t vallen)
                                   1168 ;	-----------------------------------------
                                   1169 ;	 function get_bits_in_byte
                                   1170 ;	-----------------------------------------
      000000                       1171 _get_bits_in_byte:
                           000007  1172 	ar7 = 0x07
                           000006  1173 	ar6 = 0x06
                           000005  1174 	ar5 = 0x05
                           000004  1175 	ar4 = 0x04
                           000003  1176 	ar3 = 0x03
                           000002  1177 	ar2 = 0x02
                           000001  1178 	ar1 = 0x01
                           000000  1179 	ar0 = 0x00
                                   1180 ;	../../core/net/rime/chameleon-bitopt.c:77: shifted_val = (from[0] << 8) | from[1];
      000000 AD 82            [24] 1181 	mov	r5,dpl
      000002 AE 83            [24] 1182 	mov	r6,dph
      000004 AF F0            [24] 1183 	mov	r7,b
      000006 12r00r00         [24] 1184 	lcall	__gptrget
      000009 FB               [12] 1185 	mov	r3,a
      00000A 7C 00            [12] 1186 	mov	r4,#0x00
      00000C 0D               [12] 1187 	inc	r5
      00000D BD 00 01         [24] 1188 	cjne	r5,#0x00,00103$
      000010 0E               [12] 1189 	inc	r6
      000011                       1190 00103$:
      000011 8D 82            [24] 1191 	mov	dpl,r5
      000013 8E 83            [24] 1192 	mov	dph,r6
      000015 8F F0            [24] 1193 	mov	b,r7
      000017 12r00r00         [24] 1194 	lcall	__gptrget
      00001A 7F 00            [12] 1195 	mov	r7,#0x00
      00001C 42 04            [12] 1196 	orl	ar4,a
      00001E EF               [12] 1197 	mov	a,r7
      00001F 42 03            [12] 1198 	orl	ar3,a
                                   1199 ;	../../core/net/rime/chameleon-bitopt.c:85: return (((shifted_val << bitpos) >> 8) & bitmask[vallen]) >> (8 - vallen);
      000021 E5 81            [12] 1200 	mov	a,sp
      000023 24 FD            [12] 1201 	add	a,#0xfd
      000025 F8               [12] 1202 	mov	r0,a
      000026 86 F0            [24] 1203 	mov	b,@r0
      000028 05 F0            [12] 1204 	inc	b
      00002A 80 06            [24] 1205 	sjmp	00105$
      00002C                       1206 00104$:
      00002C EC               [12] 1207 	mov	a,r4
      00002D 2C               [12] 1208 	add	a,r4
      00002E FC               [12] 1209 	mov	r4,a
      00002F EB               [12] 1210 	mov	a,r3
      000030 33               [12] 1211 	rlc	a
      000031 FB               [12] 1212 	mov	r3,a
      000032                       1213 00105$:
      000032 D5 F0 F7         [24] 1214 	djnz	b,00104$
      000035 8B 04            [24] 1215 	mov	ar4,r3
      000037 7B 00            [12] 1216 	mov	r3,#0x00
      000039 E5 81            [12] 1217 	mov	a,sp
      00003B 24 FB            [12] 1218 	add	a,#0xfb
      00003D F8               [12] 1219 	mov	r0,a
      00003E E6               [12] 1220 	mov	a,@r0
      00003F 24r00            [12] 1221 	add	a,#_bitmask
      000041 F5 82            [12] 1222 	mov	dpl,a
      000043 08               [12] 1223 	inc	r0
      000044 E6               [12] 1224 	mov	a,@r0
      000045 34s00            [12] 1225 	addc	a,#(_bitmask >> 8)
      000047 F5 83            [12] 1226 	mov	dph,a
      000049 E4               [12] 1227 	clr	a
      00004A 93               [24] 1228 	movc	a,@a+dptr
      00004B 7E 00            [12] 1229 	mov	r6,#0x00
      00004D 52 04            [12] 1230 	anl	ar4,a
      00004F EE               [12] 1231 	mov	a,r6
      000050 52 03            [12] 1232 	anl	ar3,a
      000052 E5 81            [12] 1233 	mov	a,sp
      000054 24 FB            [12] 1234 	add	a,#0xfb
      000056 F8               [12] 1235 	mov	r0,a
      000057 86 07            [24] 1236 	mov	ar7,@r0
      000059 74 08            [12] 1237 	mov	a,#0x08
      00005B C3               [12] 1238 	clr	c
      00005C 9F               [12] 1239 	subb	a,r7
      00005D FF               [12] 1240 	mov	r7,a
      00005E 8F F0            [24] 1241 	mov	b,r7
      000060 05 F0            [12] 1242 	inc	b
      000062 80 07            [24] 1243 	sjmp	00107$
      000064                       1244 00106$:
      000064 C3               [12] 1245 	clr	c
      000065 EB               [12] 1246 	mov	a,r3
      000066 13               [12] 1247 	rrc	a
      000067 FB               [12] 1248 	mov	r3,a
      000068 EC               [12] 1249 	mov	a,r4
      000069 13               [12] 1250 	rrc	a
      00006A FC               [12] 1251 	mov	r4,a
      00006B                       1252 00107$:
      00006B D5 F0 F6         [24] 1253 	djnz	b,00106$
      00006E 8C 82            [24] 1254 	mov	dpl,r4
                                   1255 ;	../../core/net/rime/chameleon-bitopt.c:86: }
      000070 22               [24] 1256 	ret
                                   1257 ;------------------------------------------------------------
                                   1258 ;Allocation info for local variables in function 'get_bits'
                                   1259 ;------------------------------------------------------------
                                   1260 ;from                      Allocated to stack - sp -16
                                   1261 ;bitpos                    Allocated to stack - sp -18
                                   1262 ;vallen                    Allocated to stack - sp -20
                                   1263 ;to                        Allocated to stack - sp -11
                                   1264 ;i                         Allocated to stack - sp -3
                                   1265 ;bits                      Allocated to stack - sp -1
                                   1266 ;sloc0                     Allocated to stack - sp -8
                                   1267 ;sloc1                     Allocated to stack - sp -6
                                   1268 ;------------------------------------------------------------
                                   1269 ;	../../core/net/rime/chameleon-bitopt.c:89: get_bits(uint8_t *to, uint8_t *from, uint16_t bitpos, uint16_t vallen)
                                   1270 ;	-----------------------------------------
                                   1271 ;	 function get_bits
                                   1272 ;	-----------------------------------------
      000071                       1273 _get_bits:
      000071 C0 82            [24] 1274 	push	dpl
      000073 C0 83            [24] 1275 	push	dph
      000075 C0 F0            [24] 1276 	push	b
      000077 E5 81            [12] 1277 	mov	a,sp
      000079 24 09            [12] 1278 	add	a,#0x09
                                   1279 ;	../../core/net/rime/chameleon-bitopt.c:94: if(vallen < 8) {
      00007B F5 81            [12] 1280 	mov	sp,a
      00007D 24 EC            [12] 1281 	add	a,#0xec
      00007F F8               [12] 1282 	mov	r0,a
      000080 86 03            [24] 1283 	mov	ar3,@r0
      000082 08               [12] 1284 	inc	r0
      000083 86 04            [24] 1285 	mov	ar4,@r0
      000085 C3               [12] 1286 	clr	c
      000086 EB               [12] 1287 	mov	a,r3
      000087 94 08            [12] 1288 	subb	a,#0x08
      000089 EC               [12] 1289 	mov	a,r4
      00008A 94 00            [12] 1290 	subb	a,#0x00
      00008C 50 42            [24] 1291 	jnc	00111$
                                   1292 ;	../../core/net/rime/chameleon-bitopt.c:95: *to = get_bits_in_byte(from, bitpos, vallen);
      00008E E5 81            [12] 1293 	mov	a,sp
      000090 24 EC            [12] 1294 	add	a,#0xec
      000092 F8               [12] 1295 	mov	r0,a
      000093 E6               [12] 1296 	mov	a,@r0
      000094 C0 E0            [24] 1297 	push	acc
      000096 08               [12] 1298 	inc	r0
      000097 E6               [12] 1299 	mov	a,@r0
      000098 C0 E0            [24] 1300 	push	acc
      00009A E5 81            [12] 1301 	mov	a,sp
      00009C 24 EC            [12] 1302 	add	a,#0xec
      00009E F8               [12] 1303 	mov	r0,a
      00009F E6               [12] 1304 	mov	a,@r0
      0000A0 C0 E0            [24] 1305 	push	acc
      0000A2 08               [12] 1306 	inc	r0
      0000A3 E6               [12] 1307 	mov	a,@r0
      0000A4 C0 E0            [24] 1308 	push	acc
      0000A6 E5 81            [12] 1309 	mov	a,sp
      0000A8 24 EC            [12] 1310 	add	a,#0xec
      0000AA F8               [12] 1311 	mov	r0,a
      0000AB 86 82            [24] 1312 	mov	dpl,@r0
      0000AD 08               [12] 1313 	inc	r0
      0000AE 86 83            [24] 1314 	mov	dph,@r0
      0000B0 08               [12] 1315 	inc	r0
      0000B1 86 F0            [24] 1316 	mov	b,@r0
      0000B3 12r00r00         [24] 1317 	lcall	_get_bits_in_byte
      0000B6 AA 82            [24] 1318 	mov	r2,dpl
      0000B8 E5 81            [12] 1319 	mov	a,sp
      0000BA 24 FC            [12] 1320 	add	a,#0xfc
      0000BC F5 81            [12] 1321 	mov	sp,a
      0000BE 24 F5            [12] 1322 	add	a,#0xf5
      0000C0 F8               [12] 1323 	mov	r0,a
      0000C1 86 82            [24] 1324 	mov	dpl,@r0
      0000C3 08               [12] 1325 	inc	r0
      0000C4 86 83            [24] 1326 	mov	dph,@r0
      0000C6 08               [12] 1327 	inc	r0
      0000C7 86 F0            [24] 1328 	mov	b,@r0
      0000C9 EA               [12] 1329 	mov	a,r2
      0000CA 12r00r00         [24] 1330 	lcall	__gptrput
      0000CD 02r03r32         [24] 1331 	ljmp	00119$
      0000D0                       1332 00111$:
                                   1333 ;	../../core/net/rime/chameleon-bitopt.c:97: if(bitpos == 0) {
      0000D0 E5 81            [12] 1334 	mov	a,sp
      0000D2 24 EE            [12] 1335 	add	a,#0xee
      0000D4 F8               [12] 1336 	mov	r0,a
      0000D5 E6               [12] 1337 	mov	a,@r0
      0000D6 08               [12] 1338 	inc	r0
      0000D7 46               [12] 1339 	orl	a,@r0
      0000D8 60 03            [24] 1340 	jz	00164$
      0000DA 02r01rE9         [24] 1341 	ljmp	00127$
      0000DD                       1342 00164$:
                                   1343 ;	../../core/net/rime/chameleon-bitopt.c:98: for(i = 0; i < vallen / 8; ++i) {
      0000DD E5 81            [12] 1344 	mov	a,sp
      0000DF 24 F8            [12] 1345 	add	a,#0xf8
      0000E1 F8               [12] 1346 	mov	r0,a
      0000E2 A6 03            [24] 1347 	mov	@r0,ar3
      0000E4 EC               [12] 1348 	mov	a,r4
      0000E5 C4               [12] 1349 	swap	a
      0000E6 23               [12] 1350 	rl	a
      0000E7 C6               [12] 1351 	xch	a,@r0
      0000E8 C4               [12] 1352 	swap	a
      0000E9 23               [12] 1353 	rl	a
      0000EA 54 1F            [12] 1354 	anl	a,#0x1f
      0000EC 66               [12] 1355 	xrl	a,@r0
      0000ED C6               [12] 1356 	xch	a,@r0
      0000EE 54 1F            [12] 1357 	anl	a,#0x1f
      0000F0 C6               [12] 1358 	xch	a,@r0
      0000F1 66               [12] 1359 	xrl	a,@r0
      0000F2 C6               [12] 1360 	xch	a,@r0
      0000F3 08               [12] 1361 	inc	r0
      0000F4 F6               [12] 1362 	mov	@r0,a
      0000F5 E5 81            [12] 1363 	mov	a,sp
      0000F7 24 FD            [12] 1364 	add	a,#0xfd
      0000F9 F8               [12] 1365 	mov	r0,a
      0000FA E4               [12] 1366 	clr	a
      0000FB F6               [12] 1367 	mov	@r0,a
      0000FC 08               [12] 1368 	inc	r0
      0000FD F6               [12] 1369 	mov	@r0,a
      0000FE                       1370 00114$:
      0000FE E5 81            [12] 1371 	mov	a,sp
      000100 24 FD            [12] 1372 	add	a,#0xfd
      000102 F8               [12] 1373 	mov	r0,a
      000103 86 05            [24] 1374 	mov	ar5,@r0
      000105 08               [12] 1375 	inc	r0
      000106 86 06            [24] 1376 	mov	ar6,@r0
      000108 E5 81            [12] 1377 	mov	a,sp
      00010A 24 F8            [12] 1378 	add	a,#0xf8
      00010C F8               [12] 1379 	mov	r0,a
      00010D C3               [12] 1380 	clr	c
      00010E ED               [12] 1381 	mov	a,r5
      00010F 96               [12] 1382 	subb	a,@r0
      000110 EE               [12] 1383 	mov	a,r6
      000111 08               [12] 1384 	inc	r0
      000112 96               [12] 1385 	subb	a,@r0
      000113 50 52            [24] 1386 	jnc	00101$
                                   1387 ;	../../core/net/rime/chameleon-bitopt.c:101: to[i] = from[i];
      000115 C0 03            [24] 1388 	push	ar3
      000117 C0 04            [24] 1389 	push	ar4
      000119 E5 81            [12] 1390 	mov	a,sp
      00011B 24 F3            [12] 1391 	add	a,#0xf3
      00011D F8               [12] 1392 	mov	r0,a
      00011E E5 81            [12] 1393 	mov	a,sp
      000120 24 FB            [12] 1394 	add	a,#0xfb
      000122 F9               [12] 1395 	mov	r1,a
      000123 E7               [12] 1396 	mov	a,@r1
      000124 26               [12] 1397 	add	a,@r0
      000125 FC               [12] 1398 	mov	r4,a
      000126 09               [12] 1399 	inc	r1
      000127 E7               [12] 1400 	mov	a,@r1
      000128 08               [12] 1401 	inc	r0
      000129 36               [12] 1402 	addc	a,@r0
      00012A FD               [12] 1403 	mov	r5,a
      00012B 08               [12] 1404 	inc	r0
      00012C 86 06            [24] 1405 	mov	ar6,@r0
      00012E E5 81            [12] 1406 	mov	a,sp
      000130 24 EE            [12] 1407 	add	a,#0xee
      000132 F8               [12] 1408 	mov	r0,a
      000133 E5 81            [12] 1409 	mov	a,sp
      000135 24 FB            [12] 1410 	add	a,#0xfb
      000137 F9               [12] 1411 	mov	r1,a
      000138 E7               [12] 1412 	mov	a,@r1
      000139 26               [12] 1413 	add	a,@r0
      00013A FA               [12] 1414 	mov	r2,a
      00013B 09               [12] 1415 	inc	r1
      00013C E7               [12] 1416 	mov	a,@r1
      00013D 08               [12] 1417 	inc	r0
      00013E 36               [12] 1418 	addc	a,@r0
      00013F FB               [12] 1419 	mov	r3,a
      000140 08               [12] 1420 	inc	r0
      000141 86 07            [24] 1421 	mov	ar7,@r0
      000143 8A 82            [24] 1422 	mov	dpl,r2
      000145 8B 83            [24] 1423 	mov	dph,r3
      000147 8F F0            [24] 1424 	mov	b,r7
      000149 12r00r00         [24] 1425 	lcall	__gptrget
      00014C FA               [12] 1426 	mov	r2,a
      00014D 8C 82            [24] 1427 	mov	dpl,r4
      00014F 8D 83            [24] 1428 	mov	dph,r5
      000151 8E F0            [24] 1429 	mov	b,r6
      000153 12r00r00         [24] 1430 	lcall	__gptrput
                                   1431 ;	../../core/net/rime/chameleon-bitopt.c:98: for(i = 0; i < vallen / 8; ++i) {
      000156 E5 81            [12] 1432 	mov	a,sp
      000158 24 FB            [12] 1433 	add	a,#0xfb
      00015A F8               [12] 1434 	mov	r0,a
      00015B 06               [12] 1435 	inc	@r0
      00015C B6 00 02         [24] 1436 	cjne	@r0,#0x00,00166$
      00015F 08               [12] 1437 	inc	r0
      000160 06               [12] 1438 	inc	@r0
      000161                       1439 00166$:
      000161 D0 04            [24] 1440 	pop	ar4
      000163 D0 03            [24] 1441 	pop	ar3
      000165 80 97            [24] 1442 	sjmp	00114$
      000167                       1443 00101$:
                                   1444 ;	../../core/net/rime/chameleon-bitopt.c:103: bits = vallen & 7;
      000167 74 07            [12] 1445 	mov	a,#0x07
      000169 5B               [12] 1446 	anl	a,r3
      00016A FE               [12] 1447 	mov	r6,a
      00016B 7F 00            [12] 1448 	mov	r7,#0x00
      00016D E5 81            [12] 1449 	mov	a,sp
      00016F 24 F8            [12] 1450 	add	a,#0xf8
      000171 F8               [12] 1451 	mov	r0,a
      000172 A6 06            [24] 1452 	mov	@r0,ar6
      000174 08               [12] 1453 	inc	r0
      000175 A6 07            [24] 1454 	mov	@r0,ar7
                                   1455 ;	../../core/net/rime/chameleon-bitopt.c:104: if(bits) {
      000177 E5 81            [12] 1456 	mov	a,sp
      000179 24 F8            [12] 1457 	add	a,#0xf8
      00017B F8               [12] 1458 	mov	r0,a
      00017C E6               [12] 1459 	mov	a,@r0
      00017D 08               [12] 1460 	inc	r0
      00017E 46               [12] 1461 	orl	a,@r0
      00017F 70 03            [24] 1462 	jnz	00167$
      000181 02r03r32         [24] 1463 	ljmp	00119$
      000184                       1464 00167$:
                                   1465 ;	../../core/net/rime/chameleon-bitopt.c:105: to[i] = get_bits_in_byte(&from[i], 0, bits);
      000184 E5 81            [12] 1466 	mov	a,sp
      000186 24 F5            [12] 1467 	add	a,#0xf5
      000188 F8               [12] 1468 	mov	r0,a
      000189 E5 81            [12] 1469 	mov	a,sp
      00018B 24 FD            [12] 1470 	add	a,#0xfd
      00018D F9               [12] 1471 	mov	r1,a
      00018E E7               [12] 1472 	mov	a,@r1
      00018F 26               [12] 1473 	add	a,@r0
      000190 FC               [12] 1474 	mov	r4,a
      000191 09               [12] 1475 	inc	r1
      000192 E7               [12] 1476 	mov	a,@r1
      000193 08               [12] 1477 	inc	r0
      000194 36               [12] 1478 	addc	a,@r0
      000195 FB               [12] 1479 	mov	r3,a
      000196 08               [12] 1480 	inc	r0
      000197 86 02            [24] 1481 	mov	ar2,@r0
      000199 E5 81            [12] 1482 	mov	a,sp
      00019B 24 F0            [12] 1483 	add	a,#0xf0
      00019D F8               [12] 1484 	mov	r0,a
      00019E E5 81            [12] 1485 	mov	a,sp
      0001A0 24 FD            [12] 1486 	add	a,#0xfd
      0001A2 F9               [12] 1487 	mov	r1,a
      0001A3 E7               [12] 1488 	mov	a,@r1
      0001A4 26               [12] 1489 	add	a,@r0
      0001A5 FD               [12] 1490 	mov	r5,a
      0001A6 09               [12] 1491 	inc	r1
      0001A7 E7               [12] 1492 	mov	a,@r1
      0001A8 08               [12] 1493 	inc	r0
      0001A9 36               [12] 1494 	addc	a,@r0
      0001AA FE               [12] 1495 	mov	r6,a
      0001AB 08               [12] 1496 	inc	r0
      0001AC 86 07            [24] 1497 	mov	ar7,@r0
      0001AE C0 04            [24] 1498 	push	ar4
      0001B0 C0 03            [24] 1499 	push	ar3
      0001B2 C0 02            [24] 1500 	push	ar2
      0001B4 E5 81            [12] 1501 	mov	a,sp
      0001B6 24 F5            [12] 1502 	add	a,#0xf5
      0001B8 F8               [12] 1503 	mov	r0,a
      0001B9 E6               [12] 1504 	mov	a,@r0
      0001BA C0 E0            [24] 1505 	push	acc
      0001BC 08               [12] 1506 	inc	r0
      0001BD E6               [12] 1507 	mov	a,@r0
      0001BE C0 E0            [24] 1508 	push	acc
      0001C0 E4               [12] 1509 	clr	a
      0001C1 C0 E0            [24] 1510 	push	acc
      0001C3 C0 E0            [24] 1511 	push	acc
      0001C5 8D 82            [24] 1512 	mov	dpl,r5
      0001C7 8E 83            [24] 1513 	mov	dph,r6
      0001C9 8F F0            [24] 1514 	mov	b,r7
      0001CB 12r00r00         [24] 1515 	lcall	_get_bits_in_byte
      0001CE AF 82            [24] 1516 	mov	r7,dpl
      0001D0 E5 81            [12] 1517 	mov	a,sp
      0001D2 24 FC            [12] 1518 	add	a,#0xfc
      0001D4 F5 81            [12] 1519 	mov	sp,a
      0001D6 D0 02            [24] 1520 	pop	ar2
      0001D8 D0 03            [24] 1521 	pop	ar3
      0001DA D0 04            [24] 1522 	pop	ar4
      0001DC 8C 82            [24] 1523 	mov	dpl,r4
      0001DE 8B 83            [24] 1524 	mov	dph,r3
      0001E0 8A F0            [24] 1525 	mov	b,r2
      0001E2 EF               [12] 1526 	mov	a,r7
      0001E3 12r00r00         [24] 1527 	lcall	__gptrput
      0001E6 02r03r32         [24] 1528 	ljmp	00119$
                                   1529 ;	../../core/net/rime/chameleon-bitopt.c:108: for(i = 0; i < vallen / 8; ++i) {
      0001E9                       1530 00127$:
      0001E9 8B 06            [24] 1531 	mov	ar6,r3
      0001EB EC               [12] 1532 	mov	a,r4
      0001EC C4               [12] 1533 	swap	a
      0001ED 23               [12] 1534 	rl	a
      0001EE CE               [12] 1535 	xch	a,r6
      0001EF C4               [12] 1536 	swap	a
      0001F0 23               [12] 1537 	rl	a
      0001F1 54 1F            [12] 1538 	anl	a,#0x1f
      0001F3 6E               [12] 1539 	xrl	a,r6
      0001F4 CE               [12] 1540 	xch	a,r6
      0001F5 54 1F            [12] 1541 	anl	a,#0x1f
      0001F7 CE               [12] 1542 	xch	a,r6
      0001F8 6E               [12] 1543 	xrl	a,r6
      0001F9 CE               [12] 1544 	xch	a,r6
      0001FA FF               [12] 1545 	mov	r7,a
      0001FB E5 81            [12] 1546 	mov	a,sp
      0001FD 24 FD            [12] 1547 	add	a,#0xfd
      0001FF F8               [12] 1548 	mov	r0,a
      000200 E4               [12] 1549 	clr	a
      000201 F6               [12] 1550 	mov	@r0,a
      000202 08               [12] 1551 	inc	r0
      000203 F6               [12] 1552 	mov	@r0,a
      000204                       1553 00117$:
      000204 C0 03            [24] 1554 	push	ar3
      000206 C0 04            [24] 1555 	push	ar4
      000208 E5 81            [12] 1556 	mov	a,sp
      00020A 24 FB            [12] 1557 	add	a,#0xfb
      00020C F8               [12] 1558 	mov	r0,a
      00020D 86 03            [24] 1559 	mov	ar3,@r0
      00020F 08               [12] 1560 	inc	r0
      000210 86 04            [24] 1561 	mov	ar4,@r0
      000212 C3               [12] 1562 	clr	c
      000213 EB               [12] 1563 	mov	a,r3
      000214 9E               [12] 1564 	subb	a,r6
      000215 EC               [12] 1565 	mov	a,r4
      000216 9F               [12] 1566 	subb	a,r7
      000217 D0 04            [24] 1567 	pop	ar4
      000219 D0 03            [24] 1568 	pop	ar3
      00021B 40 03            [24] 1569 	jc	00168$
      00021D 02r02rB4         [24] 1570 	ljmp	00104$
      000220                       1571 00168$:
                                   1572 ;	../../core/net/rime/chameleon-bitopt.c:111: to[i] = get_bits_in_byte(&from[i], bitpos, 8);
      000220 C0 06            [24] 1573 	push	ar6
      000222 C0 07            [24] 1574 	push	ar7
      000224 E5 81            [12] 1575 	mov	a,sp
      000226 24 F3            [12] 1576 	add	a,#0xf3
      000228 F8               [12] 1577 	mov	r0,a
      000229 E5 81            [12] 1578 	mov	a,sp
      00022B 24 FB            [12] 1579 	add	a,#0xfb
      00022D F9               [12] 1580 	mov	r1,a
      00022E E7               [12] 1581 	mov	a,@r1
      00022F 26               [12] 1582 	add	a,@r0
      000230 C0 E0            [24] 1583 	push	acc
      000232 09               [12] 1584 	inc	r1
      000233 E7               [12] 1585 	mov	a,@r1
      000234 08               [12] 1586 	inc	r0
      000235 36               [12] 1587 	addc	a,@r0
      000236 C0 E0            [24] 1588 	push	acc
      000238 08               [12] 1589 	inc	r0
      000239 E6               [12] 1590 	mov	a,@r0
      00023A C0 E0            [24] 1591 	push	acc
      00023C E5 81            [12] 1592 	mov	a,sp
      00023E 24 F7            [12] 1593 	add	a,#0xf7
      000240 F8               [12] 1594 	mov	r0,a
      000241 D0 E0            [24] 1595 	pop	acc
      000243 F6               [12] 1596 	mov	@r0,a
      000244 18               [12] 1597 	dec	r0
      000245 D0 E0            [24] 1598 	pop	acc
      000247 F6               [12] 1599 	mov	@r0,a
      000248 18               [12] 1600 	dec	r0
      000249 D0 E0            [24] 1601 	pop	acc
      00024B F6               [12] 1602 	mov	@r0,a
      00024C E5 81            [12] 1603 	mov	a,sp
      00024E 24 EE            [12] 1604 	add	a,#0xee
      000250 F8               [12] 1605 	mov	r0,a
      000251 E5 81            [12] 1606 	mov	a,sp
      000253 24 FB            [12] 1607 	add	a,#0xfb
      000255 F9               [12] 1608 	mov	r1,a
      000256 E7               [12] 1609 	mov	a,@r1
      000257 26               [12] 1610 	add	a,@r0
      000258 FA               [12] 1611 	mov	r2,a
      000259 09               [12] 1612 	inc	r1
      00025A E7               [12] 1613 	mov	a,@r1
      00025B 08               [12] 1614 	inc	r0
      00025C 36               [12] 1615 	addc	a,@r0
      00025D FE               [12] 1616 	mov	r6,a
      00025E 08               [12] 1617 	inc	r0
      00025F 86 07            [24] 1618 	mov	ar7,@r0
      000261 C0 06            [24] 1619 	push	ar6
      000263 C0 04            [24] 1620 	push	ar4
      000265 C0 03            [24] 1621 	push	ar3
      000267 74 08            [12] 1622 	mov	a,#0x08
      000269 C0 E0            [24] 1623 	push	acc
      00026B E4               [12] 1624 	clr	a
      00026C C0 E0            [24] 1625 	push	acc
      00026E E5 81            [12] 1626 	mov	a,sp
      000270 24 E7            [12] 1627 	add	a,#0xe7
      000272 F8               [12] 1628 	mov	r0,a
      000273 E6               [12] 1629 	mov	a,@r0
      000274 C0 E0            [24] 1630 	push	acc
      000276 08               [12] 1631 	inc	r0
      000277 E6               [12] 1632 	mov	a,@r0
      000278 C0 E0            [24] 1633 	push	acc
      00027A 8A 82            [24] 1634 	mov	dpl,r2
      00027C 8E 83            [24] 1635 	mov	dph,r6
      00027E 8F F0            [24] 1636 	mov	b,r7
      000280 12r00r00         [24] 1637 	lcall	_get_bits_in_byte
      000283 AF 82            [24] 1638 	mov	r7,dpl
      000285 E5 81            [12] 1639 	mov	a,sp
      000287 24 FC            [12] 1640 	add	a,#0xfc
      000289 F5 81            [12] 1641 	mov	sp,a
      00028B D0 03            [24] 1642 	pop	ar3
      00028D D0 04            [24] 1643 	pop	ar4
      00028F D0 06            [24] 1644 	pop	ar6
      000291 E5 81            [12] 1645 	mov	a,sp
      000293 24 F8            [12] 1646 	add	a,#0xf8
      000295 F8               [12] 1647 	mov	r0,a
      000296 86 82            [24] 1648 	mov	dpl,@r0
      000298 08               [12] 1649 	inc	r0
      000299 86 83            [24] 1650 	mov	dph,@r0
      00029B 08               [12] 1651 	inc	r0
      00029C 86 F0            [24] 1652 	mov	b,@r0
      00029E EF               [12] 1653 	mov	a,r7
      00029F 12r00r00         [24] 1654 	lcall	__gptrput
                                   1655 ;	../../core/net/rime/chameleon-bitopt.c:108: for(i = 0; i < vallen / 8; ++i) {
      0002A2 E5 81            [12] 1656 	mov	a,sp
      0002A4 24 FB            [12] 1657 	add	a,#0xfb
      0002A6 F8               [12] 1658 	mov	r0,a
      0002A7 06               [12] 1659 	inc	@r0
      0002A8 B6 00 02         [24] 1660 	cjne	@r0,#0x00,00169$
      0002AB 08               [12] 1661 	inc	r0
      0002AC 06               [12] 1662 	inc	@r0
      0002AD                       1663 00169$:
      0002AD D0 07            [24] 1664 	pop	ar7
      0002AF D0 06            [24] 1665 	pop	ar6
      0002B1 02r02r04         [24] 1666 	ljmp	00117$
      0002B4                       1667 00104$:
                                   1668 ;	../../core/net/rime/chameleon-bitopt.c:113: bits = vallen & 7;
      0002B4 53 03 07         [24] 1669 	anl	ar3,#0x07
      0002B7 7C 00            [12] 1670 	mov	r4,#0x00
      0002B9 A8 81            [24] 1671 	mov	r0,sp
      0002BB 18               [12] 1672 	dec	r0
      0002BC A6 03            [24] 1673 	mov	@r0,ar3
      0002BE 08               [12] 1674 	inc	r0
      0002BF A6 04            [24] 1675 	mov	@r0,ar4
                                   1676 ;	../../core/net/rime/chameleon-bitopt.c:114: if(bits) {
      0002C1 A8 81            [24] 1677 	mov	r0,sp
      0002C3 18               [12] 1678 	dec	r0
      0002C4 E6               [12] 1679 	mov	a,@r0
      0002C5 08               [12] 1680 	inc	r0
      0002C6 46               [12] 1681 	orl	a,@r0
      0002C7 60 69            [24] 1682 	jz	00119$
                                   1683 ;	../../core/net/rime/chameleon-bitopt.c:115: to[i] = get_bits_in_byte(&from[i], bitpos, bits);
      0002C9 E5 81            [12] 1684 	mov	a,sp
      0002CB 24 F5            [12] 1685 	add	a,#0xf5
      0002CD F8               [12] 1686 	mov	r0,a
      0002CE E5 81            [12] 1687 	mov	a,sp
      0002D0 24 FD            [12] 1688 	add	a,#0xfd
      0002D2 F9               [12] 1689 	mov	r1,a
      0002D3 E7               [12] 1690 	mov	a,@r1
      0002D4 26               [12] 1691 	add	a,@r0
      0002D5 FD               [12] 1692 	mov	r5,a
      0002D6 09               [12] 1693 	inc	r1
      0002D7 E7               [12] 1694 	mov	a,@r1
      0002D8 08               [12] 1695 	inc	r0
      0002D9 36               [12] 1696 	addc	a,@r0
      0002DA FE               [12] 1697 	mov	r6,a
      0002DB 08               [12] 1698 	inc	r0
      0002DC 86 07            [24] 1699 	mov	ar7,@r0
      0002DE E5 81            [12] 1700 	mov	a,sp
      0002E0 24 F0            [12] 1701 	add	a,#0xf0
      0002E2 F8               [12] 1702 	mov	r0,a
      0002E3 E5 81            [12] 1703 	mov	a,sp
      0002E5 24 FD            [12] 1704 	add	a,#0xfd
      0002E7 F9               [12] 1705 	mov	r1,a
      0002E8 E7               [12] 1706 	mov	a,@r1
      0002E9 26               [12] 1707 	add	a,@r0
      0002EA FA               [12] 1708 	mov	r2,a
      0002EB 09               [12] 1709 	inc	r1
      0002EC E7               [12] 1710 	mov	a,@r1
      0002ED 08               [12] 1711 	inc	r0
      0002EE 36               [12] 1712 	addc	a,@r0
      0002EF FB               [12] 1713 	mov	r3,a
      0002F0 08               [12] 1714 	inc	r0
      0002F1 86 04            [24] 1715 	mov	ar4,@r0
      0002F3 C0 07            [24] 1716 	push	ar7
      0002F5 C0 06            [24] 1717 	push	ar6
      0002F7 C0 05            [24] 1718 	push	ar5
      0002F9 E5 81            [12] 1719 	mov	a,sp
      0002FB 24 FC            [12] 1720 	add	a,#0xfc
      0002FD F8               [12] 1721 	mov	r0,a
      0002FE E6               [12] 1722 	mov	a,@r0
      0002FF C0 E0            [24] 1723 	push	acc
      000301 08               [12] 1724 	inc	r0
      000302 E6               [12] 1725 	mov	a,@r0
      000303 C0 E0            [24] 1726 	push	acc
      000305 E5 81            [12] 1727 	mov	a,sp
      000307 24 E9            [12] 1728 	add	a,#0xe9
      000309 F8               [12] 1729 	mov	r0,a
      00030A E6               [12] 1730 	mov	a,@r0
      00030B C0 E0            [24] 1731 	push	acc
      00030D 08               [12] 1732 	inc	r0
      00030E E6               [12] 1733 	mov	a,@r0
      00030F C0 E0            [24] 1734 	push	acc
      000311 8A 82            [24] 1735 	mov	dpl,r2
      000313 8B 83            [24] 1736 	mov	dph,r3
      000315 8C F0            [24] 1737 	mov	b,r4
      000317 12r00r00         [24] 1738 	lcall	_get_bits_in_byte
      00031A AC 82            [24] 1739 	mov	r4,dpl
      00031C E5 81            [12] 1740 	mov	a,sp
      00031E 24 FC            [12] 1741 	add	a,#0xfc
      000320 F5 81            [12] 1742 	mov	sp,a
      000322 D0 05            [24] 1743 	pop	ar5
      000324 D0 06            [24] 1744 	pop	ar6
      000326 D0 07            [24] 1745 	pop	ar7
      000328 8D 82            [24] 1746 	mov	dpl,r5
      00032A 8E 83            [24] 1747 	mov	dph,r6
      00032C 8F F0            [24] 1748 	mov	b,r7
      00032E EC               [12] 1749 	mov	a,r4
      00032F 12r00r00         [24] 1750 	lcall	__gptrput
      000332                       1751 00119$:
                                   1752 ;	../../core/net/rime/chameleon-bitopt.c:119: }
      000332 E5 81            [12] 1753 	mov	a,sp
      000334 24 F4            [12] 1754 	add	a,#0xf4
      000336 F5 81            [12] 1755 	mov	sp,a
      000338 22               [24] 1756 	ret
                                   1757 ;------------------------------------------------------------
                                   1758 ;Allocation info for local variables in function 'header_size'
                                   1759 ;------------------------------------------------------------
                                   1760 ;a                         Allocated to registers 
                                   1761 ;size                      Allocated to stack - sp -1
                                   1762 ;len                       Allocated to registers r2 r4 
                                   1763 ;------------------------------------------------------------
                                   1764 ;	../../core/net/rime/chameleon-bitopt.c:122: header_size(const struct packetbuf_attrlist *a)
                                   1765 ;	-----------------------------------------
                                   1766 ;	 function header_size
                                   1767 ;	-----------------------------------------
      000339                       1768 _header_size:
      000339 05 81            [12] 1769 	inc	sp
      00033B 05 81            [12] 1770 	inc	sp
      00033D AD 82            [24] 1771 	mov	r5,dpl
      00033F AE 83            [24] 1772 	mov	r6,dph
      000341 AF F0            [24] 1773 	mov	r7,b
                                   1774 ;	../../core/net/rime/chameleon-bitopt.c:129: size = 0;
      000343 A8 81            [24] 1775 	mov	r0,sp
      000345 18               [12] 1776 	dec	r0
      000346 E4               [12] 1777 	clr	a
      000347 F6               [12] 1778 	mov	@r0,a
      000348 08               [12] 1779 	inc	r0
      000349 F6               [12] 1780 	mov	@r0,a
      00034A                       1781 00103$:
                                   1782 ;	../../core/net/rime/chameleon-bitopt.c:130: for(; a->type != PACKETBUF_ATTR_NONE; ++a) {
      00034A 8D 82            [24] 1783 	mov	dpl,r5
      00034C 8E 83            [24] 1784 	mov	dph,r6
      00034E 8F F0            [24] 1785 	mov	b,r7
      000350 12r00r00         [24] 1786 	lcall	__gptrget
      000353 60 28            [24] 1787 	jz	00101$
                                   1788 ;	../../core/net/rime/chameleon-bitopt.c:140: len = a->len;
      000355 74 01            [12] 1789 	mov	a,#0x01
      000357 2D               [12] 1790 	add	a,r5
      000358 FA               [12] 1791 	mov	r2,a
      000359 E4               [12] 1792 	clr	a
      00035A 3E               [12] 1793 	addc	a,r6
      00035B FB               [12] 1794 	mov	r3,a
      00035C 8F 04            [24] 1795 	mov	ar4,r7
      00035E 8A 82            [24] 1796 	mov	dpl,r2
      000360 8B 83            [24] 1797 	mov	dph,r3
      000362 8C F0            [24] 1798 	mov	b,r4
      000364 12r00r00         [24] 1799 	lcall	__gptrget
      000367 FA               [12] 1800 	mov	r2,a
      000368 7C 00            [12] 1801 	mov	r4,#0x00
                                   1802 ;	../../core/net/rime/chameleon-bitopt.c:144: size += len;
      00036A A8 81            [24] 1803 	mov	r0,sp
      00036C 18               [12] 1804 	dec	r0
      00036D EA               [12] 1805 	mov	a,r2
      00036E 26               [12] 1806 	add	a,@r0
      00036F F6               [12] 1807 	mov	@r0,a
      000370 EC               [12] 1808 	mov	a,r4
      000371 08               [12] 1809 	inc	r0
      000372 36               [12] 1810 	addc	a,@r0
      000373 F6               [12] 1811 	mov	@r0,a
                                   1812 ;	../../core/net/rime/chameleon-bitopt.c:130: for(; a->type != PACKETBUF_ATTR_NONE; ++a) {
      000374 74 02            [12] 1813 	mov	a,#0x02
      000376 2D               [12] 1814 	add	a,r5
      000377 FD               [12] 1815 	mov	r5,a
      000378 E4               [12] 1816 	clr	a
      000379 3E               [12] 1817 	addc	a,r6
      00037A FE               [12] 1818 	mov	r6,a
      00037B 80 CD            [24] 1819 	sjmp	00103$
      00037D                       1820 00101$:
                                   1821 ;	../../core/net/rime/chameleon-bitopt.c:146: return size;
      00037D A8 81            [24] 1822 	mov	r0,sp
      00037F 18               [12] 1823 	dec	r0
      000380 86 82            [24] 1824 	mov	dpl,@r0
      000382 08               [12] 1825 	inc	r0
      000383 86 83            [24] 1826 	mov	dph,@r0
                                   1827 ;	../../core/net/rime/chameleon-bitopt.c:147: }
      000385 15 81            [12] 1828 	dec	sp
      000387 15 81            [12] 1829 	dec	sp
      000389 22               [24] 1830 	ret
                                   1831 ;------------------------------------------------------------
                                   1832 ;Allocation info for local variables in function 'set_bits_in_byte'
                                   1833 ;------------------------------------------------------------
                                   1834 ;bitpos                    Allocated to stack - sp -6
                                   1835 ;val                       Allocated to stack - sp -7
                                   1836 ;vallen                    Allocated to stack - sp -9
                                   1837 ;target                    Allocated to stack - sp -2
                                   1838 ;shifted_val               Allocated to registers r3 r4 
                                   1839 ;------------------------------------------------------------
                                   1840 ;	../../core/net/rime/chameleon-bitopt.c:150: set_bits_in_byte(uint8_t *target, int bitpos, uint8_t val, int vallen)
                                   1841 ;	-----------------------------------------
                                   1842 ;	 function set_bits_in_byte
                                   1843 ;	-----------------------------------------
      00038A                       1844 _set_bits_in_byte:
      00038A C0 82            [24] 1845 	push	dpl
      00038C C0 83            [24] 1846 	push	dph
      00038E C0 F0            [24] 1847 	push	b
                                   1848 ;	../../core/net/rime/chameleon-bitopt.c:153: shifted_val = val << (8 - bitpos + 8 - vallen);
      000390 E5 81            [12] 1849 	mov	a,sp
      000392 24 F9            [12] 1850 	add	a,#0xf9
      000394 F8               [12] 1851 	mov	r0,a
      000395 86 03            [24] 1852 	mov	ar3,@r0
      000397 7C 00            [12] 1853 	mov	r4,#0x00
      000399 E5 81            [12] 1854 	mov	a,sp
      00039B 24 FA            [12] 1855 	add	a,#0xfa
      00039D F8               [12] 1856 	mov	r0,a
      00039E 86 02            [24] 1857 	mov	ar2,@r0
      0003A0 74 10            [12] 1858 	mov	a,#0x10
      0003A2 C3               [12] 1859 	clr	c
      0003A3 9A               [12] 1860 	subb	a,r2
      0003A4 FA               [12] 1861 	mov	r2,a
      0003A5 E5 81            [12] 1862 	mov	a,sp
      0003A7 24 F7            [12] 1863 	add	a,#0xf7
      0003A9 F8               [12] 1864 	mov	r0,a
      0003AA 86 07            [24] 1865 	mov	ar7,@r0
      0003AC EA               [12] 1866 	mov	a,r2
      0003AD C3               [12] 1867 	clr	c
      0003AE 9F               [12] 1868 	subb	a,r7
      0003AF FA               [12] 1869 	mov	r2,a
      0003B0 8A F0            [24] 1870 	mov	b,r2
      0003B2 05 F0            [12] 1871 	inc	b
      0003B4 80 06            [24] 1872 	sjmp	00104$
      0003B6                       1873 00103$:
      0003B6 EB               [12] 1874 	mov	a,r3
      0003B7 2B               [12] 1875 	add	a,r3
      0003B8 FB               [12] 1876 	mov	r3,a
      0003B9 EC               [12] 1877 	mov	a,r4
      0003BA 33               [12] 1878 	rlc	a
      0003BB FC               [12] 1879 	mov	r4,a
      0003BC                       1880 00104$:
      0003BC D5 F0 F7         [24] 1881 	djnz	b,00103$
                                   1882 ;	../../core/net/rime/chameleon-bitopt.c:156: target[0] |= shifted_val >> 8;
      0003BF A8 81            [24] 1883 	mov	r0,sp
      0003C1 18               [12] 1884 	dec	r0
      0003C2 18               [12] 1885 	dec	r0
      0003C3 86 82            [24] 1886 	mov	dpl,@r0
      0003C5 08               [12] 1887 	inc	r0
      0003C6 86 83            [24] 1888 	mov	dph,@r0
      0003C8 08               [12] 1889 	inc	r0
      0003C9 86 F0            [24] 1890 	mov	b,@r0
      0003CB 12r00r00         [24] 1891 	lcall	__gptrget
      0003CE FF               [12] 1892 	mov	r7,a
      0003CF 8C 06            [24] 1893 	mov	ar6,r4
      0003D1 EE               [12] 1894 	mov	a,r6
      0003D2 42 07            [12] 1895 	orl	ar7,a
      0003D4 A8 81            [24] 1896 	mov	r0,sp
      0003D6 18               [12] 1897 	dec	r0
      0003D7 18               [12] 1898 	dec	r0
      0003D8 86 82            [24] 1899 	mov	dpl,@r0
      0003DA 08               [12] 1900 	inc	r0
      0003DB 86 83            [24] 1901 	mov	dph,@r0
      0003DD 08               [12] 1902 	inc	r0
      0003DE 86 F0            [24] 1903 	mov	b,@r0
      0003E0 EF               [12] 1904 	mov	a,r7
      0003E1 12r00r00         [24] 1905 	lcall	__gptrput
                                   1906 ;	../../core/net/rime/chameleon-bitopt.c:157: target[1] |= shifted_val & 0xff;
      0003E4 A8 81            [24] 1907 	mov	r0,sp
      0003E6 18               [12] 1908 	dec	r0
      0003E7 18               [12] 1909 	dec	r0
      0003E8 74 01            [12] 1910 	mov	a,#0x01
      0003EA 26               [12] 1911 	add	a,@r0
      0003EB FD               [12] 1912 	mov	r5,a
      0003EC E4               [12] 1913 	clr	a
      0003ED 08               [12] 1914 	inc	r0
      0003EE 36               [12] 1915 	addc	a,@r0
      0003EF FE               [12] 1916 	mov	r6,a
      0003F0 08               [12] 1917 	inc	r0
      0003F1 86 07            [24] 1918 	mov	ar7,@r0
      0003F3 8D 82            [24] 1919 	mov	dpl,r5
      0003F5 8E 83            [24] 1920 	mov	dph,r6
      0003F7 8F F0            [24] 1921 	mov	b,r7
      0003F9 12r00r00         [24] 1922 	lcall	__gptrget
      0003FC FA               [12] 1923 	mov	r2,a
      0003FD EB               [12] 1924 	mov	a,r3
      0003FE 42 02            [12] 1925 	orl	ar2,a
      000400 8D 82            [24] 1926 	mov	dpl,r5
      000402 8E 83            [24] 1927 	mov	dph,r6
      000404 8F F0            [24] 1928 	mov	b,r7
      000406 EA               [12] 1929 	mov	a,r2
      000407 12r00r00         [24] 1930 	lcall	__gptrput
                                   1931 ;	../../core/net/rime/chameleon-bitopt.c:158: }
      00040A 15 81            [12] 1932 	dec	sp
      00040C 15 81            [12] 1933 	dec	sp
      00040E 15 81            [12] 1934 	dec	sp
      000410 22               [24] 1935 	ret
                                   1936 ;------------------------------------------------------------
                                   1937 ;Allocation info for local variables in function 'set_bits'
                                   1938 ;------------------------------------------------------------
                                   1939 ;bitpos                    Allocated to stack - sp -15
                                   1940 ;val                       Allocated to stack - sp -18
                                   1941 ;vallen                    Allocated to stack - sp -20
                                   1942 ;ptr                       Allocated to stack - sp -11
                                   1943 ;i                         Allocated to stack - sp -3
                                   1944 ;bits                      Allocated to stack - sp -1
                                   1945 ;sloc0                     Allocated to stack - sp -8
                                   1946 ;sloc1                     Allocated to stack - sp -6
                                   1947 ;------------------------------------------------------------
                                   1948 ;	../../core/net/rime/chameleon-bitopt.c:161: set_bits(uint8_t *ptr, int bitpos, uint8_t *val, uint16_t vallen)
                                   1949 ;	-----------------------------------------
                                   1950 ;	 function set_bits
                                   1951 ;	-----------------------------------------
      000411                       1952 _set_bits:
      000411 C0 82            [24] 1953 	push	dpl
      000413 C0 83            [24] 1954 	push	dph
      000415 C0 F0            [24] 1955 	push	b
      000417 E5 81            [12] 1956 	mov	a,sp
      000419 24 09            [12] 1957 	add	a,#0x09
                                   1958 ;	../../core/net/rime/chameleon-bitopt.c:168: if(vallen < 8) {
      00041B F5 81            [12] 1959 	mov	sp,a
      00041D 24 EC            [12] 1960 	add	a,#0xec
      00041F F8               [12] 1961 	mov	r0,a
      000420 86 03            [24] 1962 	mov	ar3,@r0
      000422 08               [12] 1963 	inc	r0
      000423 86 04            [24] 1964 	mov	ar4,@r0
      000425 C3               [12] 1965 	clr	c
      000426 EB               [12] 1966 	mov	a,r3
      000427 94 08            [12] 1967 	subb	a,#0x08
      000429 EC               [12] 1968 	mov	a,r4
      00042A 94 00            [12] 1969 	subb	a,#0x00
      00042C 50 4C            [24] 1970 	jnc	00111$
                                   1971 ;	../../core/net/rime/chameleon-bitopt.c:169: set_bits_in_byte(ptr, bitpos, *val /*>> (8 - vallen)*/, vallen);
      00042E E5 81            [12] 1972 	mov	a,sp
      000430 24 EC            [12] 1973 	add	a,#0xec
      000432 F8               [12] 1974 	mov	r0,a
      000433 86 04            [24] 1975 	mov	ar4,@r0
      000435 08               [12] 1976 	inc	r0
      000436 86 03            [24] 1977 	mov	ar3,@r0
      000438 E5 81            [12] 1978 	mov	a,sp
      00043A 24 EE            [12] 1979 	add	a,#0xee
      00043C F8               [12] 1980 	mov	r0,a
      00043D 86 05            [24] 1981 	mov	ar5,@r0
      00043F 08               [12] 1982 	inc	r0
      000440 86 06            [24] 1983 	mov	ar6,@r0
      000442 08               [12] 1984 	inc	r0
      000443 86 07            [24] 1985 	mov	ar7,@r0
      000445 8D 82            [24] 1986 	mov	dpl,r5
      000447 8E 83            [24] 1987 	mov	dph,r6
      000449 8F F0            [24] 1988 	mov	b,r7
      00044B 12r00r00         [24] 1989 	lcall	__gptrget
      00044E FD               [12] 1990 	mov	r5,a
      00044F C0 04            [24] 1991 	push	ar4
      000451 C0 03            [24] 1992 	push	ar3
      000453 C0 05            [24] 1993 	push	ar5
      000455 E5 81            [12] 1994 	mov	a,sp
      000457 24 EE            [12] 1995 	add	a,#0xee
      000459 F8               [12] 1996 	mov	r0,a
      00045A E6               [12] 1997 	mov	a,@r0
      00045B C0 E0            [24] 1998 	push	acc
      00045D 08               [12] 1999 	inc	r0
      00045E E6               [12] 2000 	mov	a,@r0
      00045F C0 E0            [24] 2001 	push	acc
      000461 E5 81            [12] 2002 	mov	a,sp
      000463 24 F0            [12] 2003 	add	a,#0xf0
      000465 F8               [12] 2004 	mov	r0,a
      000466 86 82            [24] 2005 	mov	dpl,@r0
      000468 08               [12] 2006 	inc	r0
      000469 86 83            [24] 2007 	mov	dph,@r0
      00046B 08               [12] 2008 	inc	r0
      00046C 86 F0            [24] 2009 	mov	b,@r0
      00046E 12r03r8A         [24] 2010 	lcall	_set_bits_in_byte
      000471 E5 81            [12] 2011 	mov	a,sp
      000473 24 FB            [12] 2012 	add	a,#0xfb
      000475 F5 81            [12] 2013 	mov	sp,a
      000477 02r06rF7         [24] 2014 	ljmp	00119$
      00047A                       2015 00111$:
                                   2016 ;	../../core/net/rime/chameleon-bitopt.c:171: if(bitpos == 0) {
      00047A E5 81            [12] 2017 	mov	a,sp
      00047C 24 F1            [12] 2018 	add	a,#0xf1
      00047E F8               [12] 2019 	mov	r0,a
      00047F E6               [12] 2020 	mov	a,@r0
      000480 08               [12] 2021 	inc	r0
      000481 46               [12] 2022 	orl	a,@r0
      000482 60 03            [24] 2023 	jz	00164$
      000484 02r05rB9         [24] 2024 	ljmp	00127$
      000487                       2025 00164$:
                                   2026 ;	../../core/net/rime/chameleon-bitopt.c:172: for(i = 0; i < vallen / 8; ++i) {
      000487 8B 06            [24] 2027 	mov	ar6,r3
      000489 EC               [12] 2028 	mov	a,r4
      00048A C4               [12] 2029 	swap	a
      00048B 23               [12] 2030 	rl	a
      00048C CE               [12] 2031 	xch	a,r6
      00048D C4               [12] 2032 	swap	a
      00048E 23               [12] 2033 	rl	a
      00048F 54 1F            [12] 2034 	anl	a,#0x1f
      000491 6E               [12] 2035 	xrl	a,r6
      000492 CE               [12] 2036 	xch	a,r6
      000493 54 1F            [12] 2037 	anl	a,#0x1f
      000495 CE               [12] 2038 	xch	a,r6
      000496 6E               [12] 2039 	xrl	a,r6
      000497 CE               [12] 2040 	xch	a,r6
      000498 FF               [12] 2041 	mov	r7,a
      000499 E5 81            [12] 2042 	mov	a,sp
      00049B 24 FD            [12] 2043 	add	a,#0xfd
      00049D F8               [12] 2044 	mov	r0,a
      00049E E4               [12] 2045 	clr	a
      00049F F6               [12] 2046 	mov	@r0,a
      0004A0 08               [12] 2047 	inc	r0
      0004A1 F6               [12] 2048 	mov	@r0,a
      0004A2                       2049 00114$:
      0004A2 C0 03            [24] 2050 	push	ar3
      0004A4 C0 04            [24] 2051 	push	ar4
      0004A6 E5 81            [12] 2052 	mov	a,sp
      0004A8 24 FB            [12] 2053 	add	a,#0xfb
      0004AA F8               [12] 2054 	mov	r0,a
      0004AB 86 03            [24] 2055 	mov	ar3,@r0
      0004AD 08               [12] 2056 	inc	r0
      0004AE 86 04            [24] 2057 	mov	ar4,@r0
      0004B0 C3               [12] 2058 	clr	c
      0004B1 EB               [12] 2059 	mov	a,r3
      0004B2 9E               [12] 2060 	subb	a,r6
      0004B3 EC               [12] 2061 	mov	a,r4
      0004B4 9F               [12] 2062 	subb	a,r7
      0004B5 D0 04            [24] 2063 	pop	ar4
      0004B7 D0 03            [24] 2064 	pop	ar3
      0004B9 50 6E            [24] 2065 	jnc	00101$
                                   2066 ;	../../core/net/rime/chameleon-bitopt.c:175: ptr[i] = val[i];
      0004BB C0 06            [24] 2067 	push	ar6
      0004BD C0 07            [24] 2068 	push	ar7
      0004BF E5 81            [12] 2069 	mov	a,sp
      0004C1 24 F3            [12] 2070 	add	a,#0xf3
      0004C3 F8               [12] 2071 	mov	r0,a
      0004C4 E5 81            [12] 2072 	mov	a,sp
      0004C6 24 FB            [12] 2073 	add	a,#0xfb
      0004C8 F9               [12] 2074 	mov	r1,a
      0004C9 E7               [12] 2075 	mov	a,@r1
      0004CA 26               [12] 2076 	add	a,@r0
      0004CB C0 E0            [24] 2077 	push	acc
      0004CD 09               [12] 2078 	inc	r1
      0004CE E7               [12] 2079 	mov	a,@r1
      0004CF 08               [12] 2080 	inc	r0
      0004D0 36               [12] 2081 	addc	a,@r0
      0004D1 C0 E0            [24] 2082 	push	acc
      0004D3 08               [12] 2083 	inc	r0
      0004D4 E6               [12] 2084 	mov	a,@r0
      0004D5 C0 E0            [24] 2085 	push	acc
      0004D7 E5 81            [12] 2086 	mov	a,sp
      0004D9 24 F7            [12] 2087 	add	a,#0xf7
      0004DB F8               [12] 2088 	mov	r0,a
      0004DC D0 E0            [24] 2089 	pop	acc
      0004DE F6               [12] 2090 	mov	@r0,a
      0004DF 18               [12] 2091 	dec	r0
      0004E0 D0 E0            [24] 2092 	pop	acc
      0004E2 F6               [12] 2093 	mov	@r0,a
      0004E3 18               [12] 2094 	dec	r0
      0004E4 D0 E0            [24] 2095 	pop	acc
      0004E6 F6               [12] 2096 	mov	@r0,a
      0004E7 E5 81            [12] 2097 	mov	a,sp
      0004E9 24 EC            [12] 2098 	add	a,#0xec
      0004EB F8               [12] 2099 	mov	r0,a
      0004EC E5 81            [12] 2100 	mov	a,sp
      0004EE 24 FB            [12] 2101 	add	a,#0xfb
      0004F0 F9               [12] 2102 	mov	r1,a
      0004F1 E7               [12] 2103 	mov	a,@r1
      0004F2 26               [12] 2104 	add	a,@r0
      0004F3 FA               [12] 2105 	mov	r2,a
      0004F4 09               [12] 2106 	inc	r1
      0004F5 E7               [12] 2107 	mov	a,@r1
      0004F6 08               [12] 2108 	inc	r0
      0004F7 36               [12] 2109 	addc	a,@r0
      0004F8 FE               [12] 2110 	mov	r6,a
      0004F9 08               [12] 2111 	inc	r0
      0004FA 86 07            [24] 2112 	mov	ar7,@r0
      0004FC 8A 82            [24] 2113 	mov	dpl,r2
      0004FE 8E 83            [24] 2114 	mov	dph,r6
      000500 8F F0            [24] 2115 	mov	b,r7
      000502 12r00r00         [24] 2116 	lcall	__gptrget
      000505 FA               [12] 2117 	mov	r2,a
      000506 E5 81            [12] 2118 	mov	a,sp
      000508 24 F8            [12] 2119 	add	a,#0xf8
      00050A F8               [12] 2120 	mov	r0,a
      00050B 86 82            [24] 2121 	mov	dpl,@r0
      00050D 08               [12] 2122 	inc	r0
      00050E 86 83            [24] 2123 	mov	dph,@r0
      000510 08               [12] 2124 	inc	r0
      000511 86 F0            [24] 2125 	mov	b,@r0
      000513 EA               [12] 2126 	mov	a,r2
      000514 12r00r00         [24] 2127 	lcall	__gptrput
                                   2128 ;	../../core/net/rime/chameleon-bitopt.c:172: for(i = 0; i < vallen / 8; ++i) {
      000517 E5 81            [12] 2129 	mov	a,sp
      000519 24 FB            [12] 2130 	add	a,#0xfb
      00051B F8               [12] 2131 	mov	r0,a
      00051C 06               [12] 2132 	inc	@r0
      00051D B6 00 02         [24] 2133 	cjne	@r0,#0x00,00166$
      000520 08               [12] 2134 	inc	r0
      000521 06               [12] 2135 	inc	@r0
      000522                       2136 00166$:
      000522 D0 07            [24] 2137 	pop	ar7
      000524 D0 06            [24] 2138 	pop	ar6
      000526 02r04rA2         [24] 2139 	ljmp	00114$
      000529                       2140 00101$:
                                   2141 ;	../../core/net/rime/chameleon-bitopt.c:177: bits = vallen & 7;
      000529 74 07            [12] 2142 	mov	a,#0x07
      00052B 5B               [12] 2143 	anl	a,r3
      00052C FE               [12] 2144 	mov	r6,a
      00052D 7F 00            [12] 2145 	mov	r7,#0x00
      00052F E5 81            [12] 2146 	mov	a,sp
      000531 24 F8            [12] 2147 	add	a,#0xf8
      000533 F8               [12] 2148 	mov	r0,a
      000534 A6 06            [24] 2149 	mov	@r0,ar6
      000536 08               [12] 2150 	inc	r0
      000537 A6 07            [24] 2151 	mov	@r0,ar7
                                   2152 ;	../../core/net/rime/chameleon-bitopt.c:178: if(bits) {
      000539 E5 81            [12] 2153 	mov	a,sp
      00053B 24 F8            [12] 2154 	add	a,#0xf8
      00053D F8               [12] 2155 	mov	r0,a
      00053E E6               [12] 2156 	mov	a,@r0
      00053F 08               [12] 2157 	inc	r0
      000540 46               [12] 2158 	orl	a,@r0
      000541 70 03            [24] 2159 	jnz	00167$
      000543 02r06rF7         [24] 2160 	ljmp	00119$
      000546                       2161 00167$:
                                   2162 ;	../../core/net/rime/chameleon-bitopt.c:179: set_bits_in_byte(&ptr[i], 0, val[i] >> (8 - bits), bits);
      000546 E5 81            [12] 2163 	mov	a,sp
      000548 24 F8            [12] 2164 	add	a,#0xf8
      00054A F8               [12] 2165 	mov	r0,a
      00054B 86 04            [24] 2166 	mov	ar4,@r0
      00054D 08               [12] 2167 	inc	r0
      00054E 86 03            [24] 2168 	mov	ar3,@r0
      000550 E5 81            [12] 2169 	mov	a,sp
      000552 24 EE            [12] 2170 	add	a,#0xee
      000554 F8               [12] 2171 	mov	r0,a
      000555 E5 81            [12] 2172 	mov	a,sp
      000557 24 FD            [12] 2173 	add	a,#0xfd
      000559 F9               [12] 2174 	mov	r1,a
      00055A E7               [12] 2175 	mov	a,@r1
      00055B 26               [12] 2176 	add	a,@r0
      00055C FA               [12] 2177 	mov	r2,a
      00055D 09               [12] 2178 	inc	r1
      00055E E7               [12] 2179 	mov	a,@r1
      00055F 08               [12] 2180 	inc	r0
      000560 36               [12] 2181 	addc	a,@r0
      000561 FD               [12] 2182 	mov	r5,a
      000562 08               [12] 2183 	inc	r0
      000563 86 07            [24] 2184 	mov	ar7,@r0
      000565 8A 82            [24] 2185 	mov	dpl,r2
      000567 8D 83            [24] 2186 	mov	dph,r5
      000569 8F F0            [24] 2187 	mov	b,r7
      00056B 12r00r00         [24] 2188 	lcall	__gptrget
      00056E FA               [12] 2189 	mov	r2,a
      00056F E5 81            [12] 2190 	mov	a,sp
      000571 24 F8            [12] 2191 	add	a,#0xf8
      000573 F8               [12] 2192 	mov	r0,a
      000574 86 06            [24] 2193 	mov	ar6,@r0
      000576 74 08            [12] 2194 	mov	a,#0x08
      000578 C3               [12] 2195 	clr	c
      000579 9E               [12] 2196 	subb	a,r6
      00057A F5 F0            [12] 2197 	mov	b,a
      00057C 05 F0            [12] 2198 	inc	b
      00057E EA               [12] 2199 	mov	a,r2
      00057F 80 02            [24] 2200 	sjmp	00169$
      000581                       2201 00168$:
      000581 C3               [12] 2202 	clr	c
      000582 13               [12] 2203 	rrc	a
      000583                       2204 00169$:
      000583 D5 F0 FB         [24] 2205 	djnz	b,00168$
      000586 FA               [12] 2206 	mov	r2,a
      000587 E5 81            [12] 2207 	mov	a,sp
      000589 24 F5            [12] 2208 	add	a,#0xf5
      00058B F8               [12] 2209 	mov	r0,a
      00058C E5 81            [12] 2210 	mov	a,sp
      00058E 24 FD            [12] 2211 	add	a,#0xfd
      000590 F9               [12] 2212 	mov	r1,a
      000591 E7               [12] 2213 	mov	a,@r1
      000592 26               [12] 2214 	add	a,@r0
      000593 FD               [12] 2215 	mov	r5,a
      000594 09               [12] 2216 	inc	r1
      000595 E7               [12] 2217 	mov	a,@r1
      000596 08               [12] 2218 	inc	r0
      000597 36               [12] 2219 	addc	a,@r0
      000598 FE               [12] 2220 	mov	r6,a
      000599 08               [12] 2221 	inc	r0
      00059A 86 07            [24] 2222 	mov	ar7,@r0
      00059C C0 04            [24] 2223 	push	ar4
      00059E C0 03            [24] 2224 	push	ar3
      0005A0 C0 02            [24] 2225 	push	ar2
      0005A2 E4               [12] 2226 	clr	a
      0005A3 C0 E0            [24] 2227 	push	acc
      0005A5 C0 E0            [24] 2228 	push	acc
      0005A7 8D 82            [24] 2229 	mov	dpl,r5
      0005A9 8E 83            [24] 2230 	mov	dph,r6
      0005AB 8F F0            [24] 2231 	mov	b,r7
      0005AD 12r03r8A         [24] 2232 	lcall	_set_bits_in_byte
      0005B0 E5 81            [12] 2233 	mov	a,sp
      0005B2 24 FB            [12] 2234 	add	a,#0xfb
      0005B4 F5 81            [12] 2235 	mov	sp,a
      0005B6 02r06rF7         [24] 2236 	ljmp	00119$
                                   2237 ;	../../core/net/rime/chameleon-bitopt.c:182: for(i = 0; i < vallen / 8; ++i) {
      0005B9                       2238 00127$:
      0005B9 8B 06            [24] 2239 	mov	ar6,r3
      0005BB EC               [12] 2240 	mov	a,r4
      0005BC C4               [12] 2241 	swap	a
      0005BD 23               [12] 2242 	rl	a
      0005BE CE               [12] 2243 	xch	a,r6
      0005BF C4               [12] 2244 	swap	a
      0005C0 23               [12] 2245 	rl	a
      0005C1 54 1F            [12] 2246 	anl	a,#0x1f
      0005C3 6E               [12] 2247 	xrl	a,r6
      0005C4 CE               [12] 2248 	xch	a,r6
      0005C5 54 1F            [12] 2249 	anl	a,#0x1f
      0005C7 CE               [12] 2250 	xch	a,r6
      0005C8 6E               [12] 2251 	xrl	a,r6
      0005C9 CE               [12] 2252 	xch	a,r6
      0005CA FF               [12] 2253 	mov	r7,a
      0005CB E5 81            [12] 2254 	mov	a,sp
      0005CD 24 FD            [12] 2255 	add	a,#0xfd
      0005CF F8               [12] 2256 	mov	r0,a
      0005D0 E4               [12] 2257 	clr	a
      0005D1 F6               [12] 2258 	mov	@r0,a
      0005D2 08               [12] 2259 	inc	r0
      0005D3 F6               [12] 2260 	mov	@r0,a
      0005D4                       2261 00117$:
      0005D4 C0 03            [24] 2262 	push	ar3
      0005D6 C0 04            [24] 2263 	push	ar4
      0005D8 E5 81            [12] 2264 	mov	a,sp
      0005DA 24 FB            [12] 2265 	add	a,#0xfb
      0005DC F8               [12] 2266 	mov	r0,a
      0005DD 86 03            [24] 2267 	mov	ar3,@r0
      0005DF 08               [12] 2268 	inc	r0
      0005E0 86 04            [24] 2269 	mov	ar4,@r0
      0005E2 C3               [12] 2270 	clr	c
      0005E3 EB               [12] 2271 	mov	a,r3
      0005E4 9E               [12] 2272 	subb	a,r6
      0005E5 EC               [12] 2273 	mov	a,r4
      0005E6 9F               [12] 2274 	subb	a,r7
      0005E7 D0 04            [24] 2275 	pop	ar4
      0005E9 D0 03            [24] 2276 	pop	ar3
      0005EB 40 03            [24] 2277 	jc	00170$
      0005ED 02r06r6E         [24] 2278 	ljmp	00104$
      0005F0                       2279 00170$:
                                   2280 ;	../../core/net/rime/chameleon-bitopt.c:185: set_bits_in_byte(&ptr[i], bitpos, val[i], 8);
      0005F0 C0 06            [24] 2281 	push	ar6
      0005F2 C0 07            [24] 2282 	push	ar7
      0005F4 E5 81            [12] 2283 	mov	a,sp
      0005F6 24 EC            [12] 2284 	add	a,#0xec
      0005F8 F8               [12] 2285 	mov	r0,a
      0005F9 E5 81            [12] 2286 	mov	a,sp
      0005FB 24 FB            [12] 2287 	add	a,#0xfb
      0005FD F9               [12] 2288 	mov	r1,a
      0005FE E7               [12] 2289 	mov	a,@r1
      0005FF 26               [12] 2290 	add	a,@r0
      000600 FD               [12] 2291 	mov	r5,a
      000601 09               [12] 2292 	inc	r1
      000602 E7               [12] 2293 	mov	a,@r1
      000603 08               [12] 2294 	inc	r0
      000604 36               [12] 2295 	addc	a,@r0
      000605 FE               [12] 2296 	mov	r6,a
      000606 08               [12] 2297 	inc	r0
      000607 86 07            [24] 2298 	mov	ar7,@r0
      000609 8D 82            [24] 2299 	mov	dpl,r5
      00060B 8E 83            [24] 2300 	mov	dph,r6
      00060D 8F F0            [24] 2301 	mov	b,r7
      00060F 12r00r00         [24] 2302 	lcall	__gptrget
      000612 FD               [12] 2303 	mov	r5,a
      000613 E5 81            [12] 2304 	mov	a,sp
      000615 24 F3            [12] 2305 	add	a,#0xf3
      000617 F8               [12] 2306 	mov	r0,a
      000618 E5 81            [12] 2307 	mov	a,sp
      00061A 24 FB            [12] 2308 	add	a,#0xfb
      00061C F9               [12] 2309 	mov	r1,a
      00061D E7               [12] 2310 	mov	a,@r1
      00061E 26               [12] 2311 	add	a,@r0
      00061F FA               [12] 2312 	mov	r2,a
      000620 09               [12] 2313 	inc	r1
      000621 E7               [12] 2314 	mov	a,@r1
      000622 08               [12] 2315 	inc	r0
      000623 36               [12] 2316 	addc	a,@r0
      000624 FE               [12] 2317 	mov	r6,a
      000625 08               [12] 2318 	inc	r0
      000626 86 07            [24] 2319 	mov	ar7,@r0
      000628 C0 07            [24] 2320 	push	ar7
      00062A C0 06            [24] 2321 	push	ar6
      00062C C0 04            [24] 2322 	push	ar4
      00062E C0 03            [24] 2323 	push	ar3
      000630 74 08            [12] 2324 	mov	a,#0x08
      000632 C0 E0            [24] 2325 	push	acc
      000634 E4               [12] 2326 	clr	a
      000635 C0 E0            [24] 2327 	push	acc
      000637 C0 05            [24] 2328 	push	ar5
      000639 E5 81            [12] 2329 	mov	a,sp
      00063B 24 E8            [12] 2330 	add	a,#0xe8
      00063D F8               [12] 2331 	mov	r0,a
      00063E E6               [12] 2332 	mov	a,@r0
      00063F C0 E0            [24] 2333 	push	acc
      000641 08               [12] 2334 	inc	r0
      000642 E6               [12] 2335 	mov	a,@r0
      000643 C0 E0            [24] 2336 	push	acc
      000645 8A 82            [24] 2337 	mov	dpl,r2
      000647 8E 83            [24] 2338 	mov	dph,r6
      000649 8F F0            [24] 2339 	mov	b,r7
      00064B 12r03r8A         [24] 2340 	lcall	_set_bits_in_byte
      00064E E5 81            [12] 2341 	mov	a,sp
      000650 24 FB            [12] 2342 	add	a,#0xfb
      000652 F5 81            [12] 2343 	mov	sp,a
      000654 D0 03            [24] 2344 	pop	ar3
      000656 D0 04            [24] 2345 	pop	ar4
      000658 D0 06            [24] 2346 	pop	ar6
      00065A D0 07            [24] 2347 	pop	ar7
                                   2348 ;	../../core/net/rime/chameleon-bitopt.c:182: for(i = 0; i < vallen / 8; ++i) {
      00065C E5 81            [12] 2349 	mov	a,sp
      00065E 24 FB            [12] 2350 	add	a,#0xfb
      000660 F8               [12] 2351 	mov	r0,a
      000661 06               [12] 2352 	inc	@r0
      000662 B6 00 02         [24] 2353 	cjne	@r0,#0x00,00171$
      000665 08               [12] 2354 	inc	r0
      000666 06               [12] 2355 	inc	@r0
      000667                       2356 00171$:
      000667 D0 07            [24] 2357 	pop	ar7
      000669 D0 06            [24] 2358 	pop	ar6
      00066B 02r05rD4         [24] 2359 	ljmp	00117$
      00066E                       2360 00104$:
                                   2361 ;	../../core/net/rime/chameleon-bitopt.c:187: bits = vallen & 7;
      00066E 53 03 07         [24] 2362 	anl	ar3,#0x07
      000671 7C 00            [12] 2363 	mov	r4,#0x00
      000673 A8 81            [24] 2364 	mov	r0,sp
      000675 18               [12] 2365 	dec	r0
      000676 A6 03            [24] 2366 	mov	@r0,ar3
      000678 08               [12] 2367 	inc	r0
      000679 A6 04            [24] 2368 	mov	@r0,ar4
                                   2369 ;	../../core/net/rime/chameleon-bitopt.c:188: if(bits) {
      00067B A8 81            [24] 2370 	mov	r0,sp
      00067D 18               [12] 2371 	dec	r0
      00067E E6               [12] 2372 	mov	a,@r0
      00067F 08               [12] 2373 	inc	r0
      000680 46               [12] 2374 	orl	a,@r0
      000681 60 74            [24] 2375 	jz	00119$
                                   2376 ;	../../core/net/rime/chameleon-bitopt.c:189: set_bits_in_byte(&ptr[i], 0, val[i] >> (8 - bits + bitpos), bits);
      000683 A8 81            [24] 2377 	mov	r0,sp
      000685 18               [12] 2378 	dec	r0
      000686 86 06            [24] 2379 	mov	ar6,@r0
      000688 08               [12] 2380 	inc	r0
      000689 86 07            [24] 2381 	mov	ar7,@r0
      00068B E5 81            [12] 2382 	mov	a,sp
      00068D 24 EE            [12] 2383 	add	a,#0xee
      00068F F8               [12] 2384 	mov	r0,a
      000690 E5 81            [12] 2385 	mov	a,sp
      000692 24 FD            [12] 2386 	add	a,#0xfd
      000694 F9               [12] 2387 	mov	r1,a
      000695 E7               [12] 2388 	mov	a,@r1
      000696 26               [12] 2389 	add	a,@r0
      000697 FA               [12] 2390 	mov	r2,a
      000698 09               [12] 2391 	inc	r1
      000699 E7               [12] 2392 	mov	a,@r1
      00069A 08               [12] 2393 	inc	r0
      00069B 36               [12] 2394 	addc	a,@r0
      00069C FC               [12] 2395 	mov	r4,a
      00069D 08               [12] 2396 	inc	r0
      00069E 86 05            [24] 2397 	mov	ar5,@r0
      0006A0 8A 82            [24] 2398 	mov	dpl,r2
      0006A2 8C 83            [24] 2399 	mov	dph,r4
      0006A4 8D F0            [24] 2400 	mov	b,r5
      0006A6 12r00r00         [24] 2401 	lcall	__gptrget
      0006A9 FA               [12] 2402 	mov	r2,a
      0006AA A8 81            [24] 2403 	mov	r0,sp
      0006AC 18               [12] 2404 	dec	r0
      0006AD 86 03            [24] 2405 	mov	ar3,@r0
      0006AF 74 08            [12] 2406 	mov	a,#0x08
      0006B1 C3               [12] 2407 	clr	c
      0006B2 9B               [12] 2408 	subb	a,r3
      0006B3 FB               [12] 2409 	mov	r3,a
      0006B4 E5 81            [12] 2410 	mov	a,sp
      0006B6 24 F1            [12] 2411 	add	a,#0xf1
      0006B8 F8               [12] 2412 	mov	r0,a
      0006B9 E6               [12] 2413 	mov	a,@r0
      0006BA 2B               [12] 2414 	add	a,r3
      0006BB F5 F0            [12] 2415 	mov	b,a
      0006BD 05 F0            [12] 2416 	inc	b
      0006BF EA               [12] 2417 	mov	a,r2
      0006C0 80 02            [24] 2418 	sjmp	00174$
      0006C2                       2419 00173$:
      0006C2 C3               [12] 2420 	clr	c
      0006C3 13               [12] 2421 	rrc	a
      0006C4                       2422 00174$:
      0006C4 D5 F0 FB         [24] 2423 	djnz	b,00173$
      0006C7 FA               [12] 2424 	mov	r2,a
      0006C8 E5 81            [12] 2425 	mov	a,sp
      0006CA 24 F5            [12] 2426 	add	a,#0xf5
      0006CC F8               [12] 2427 	mov	r0,a
      0006CD E5 81            [12] 2428 	mov	a,sp
      0006CF 24 FD            [12] 2429 	add	a,#0xfd
      0006D1 F9               [12] 2430 	mov	r1,a
      0006D2 E7               [12] 2431 	mov	a,@r1
      0006D3 26               [12] 2432 	add	a,@r0
      0006D4 FB               [12] 2433 	mov	r3,a
      0006D5 09               [12] 2434 	inc	r1
      0006D6 E7               [12] 2435 	mov	a,@r1
      0006D7 08               [12] 2436 	inc	r0
      0006D8 36               [12] 2437 	addc	a,@r0
      0006D9 FC               [12] 2438 	mov	r4,a
      0006DA 08               [12] 2439 	inc	r0
      0006DB 86 05            [24] 2440 	mov	ar5,@r0
      0006DD C0 06            [24] 2441 	push	ar6
      0006DF C0 07            [24] 2442 	push	ar7
      0006E1 C0 02            [24] 2443 	push	ar2
      0006E3 E4               [12] 2444 	clr	a
      0006E4 C0 E0            [24] 2445 	push	acc
      0006E6 C0 E0            [24] 2446 	push	acc
      0006E8 8B 82            [24] 2447 	mov	dpl,r3
      0006EA 8C 83            [24] 2448 	mov	dph,r4
      0006EC 8D F0            [24] 2449 	mov	b,r5
      0006EE 12r03r8A         [24] 2450 	lcall	_set_bits_in_byte
      0006F1 E5 81            [12] 2451 	mov	a,sp
      0006F3 24 FB            [12] 2452 	add	a,#0xfb
      0006F5 F5 81            [12] 2453 	mov	sp,a
      0006F7                       2454 00119$:
                                   2455 ;	../../core/net/rime/chameleon-bitopt.c:193: }
      0006F7 E5 81            [12] 2456 	mov	a,sp
      0006F9 24 F4            [12] 2457 	add	a,#0xf4
      0006FB F5 81            [12] 2458 	mov	sp,a
      0006FD 22               [24] 2459 	ret
                                   2460 ;------------------------------------------------------------
                                   2461 ;Allocation info for local variables in function 'pack_header'
                                   2462 ;------------------------------------------------------------
                                   2463 ;c                         Allocated to stack - sp -22
                                   2464 ;a                         Allocated to registers 
                                   2465 ;hdrbytesize               Allocated to registers r3 r4 
                                   2466 ;byteptr                   Allocated to stack - sp -13
                                   2467 ;bitptr                    Allocated to stack - sp -11
                                   2468 ;len                       Allocated to stack - sp -9
                                   2469 ;hdrptr                    Allocated to stack - sp -7
                                   2470 ;hdr                       Allocated to stack - sp -4
                                   2471 ;val                       Allocated to stack - sp -1
                                   2472 ;sloc0                     Allocated to stack - sp -19
                                   2473 ;sloc1                     Allocated to stack - sp -17
                                   2474 ;sloc2                     Allocated to stack - sp -15
                                   2475 ;------------------------------------------------------------
                                   2476 ;	../../core/net/rime/chameleon-bitopt.c:234: pack_header(struct channel *c)
                                   2477 ;	-----------------------------------------
                                   2478 ;	 function pack_header
                                   2479 ;	-----------------------------------------
      0006FE                       2480 _pack_header:
      0006FE C0 82            [24] 2481 	push	dpl
      000700 C0 83            [24] 2482 	push	dph
      000702 C0 F0            [24] 2483 	push	b
      000704 E5 81            [12] 2484 	mov	a,sp
      000706 24 14            [12] 2485 	add	a,#0x14
                                   2486 ;	../../core/net/rime/chameleon-bitopt.c:245: hdrbytesize = c->hdrsize / 8 + ((c->hdrsize & 7) == 0? 0: 1);
      000708 F5 81            [12] 2487 	mov	sp,a
      00070A 24 EA            [12] 2488 	add	a,#0xea
      00070C F8               [12] 2489 	mov	r0,a
      00070D 74 08            [12] 2490 	mov	a,#0x08
      00070F 26               [12] 2491 	add	a,@r0
      000710 FA               [12] 2492 	mov	r2,a
      000711 E4               [12] 2493 	clr	a
      000712 08               [12] 2494 	inc	r0
      000713 36               [12] 2495 	addc	a,@r0
      000714 FB               [12] 2496 	mov	r3,a
      000715 08               [12] 2497 	inc	r0
      000716 86 04            [24] 2498 	mov	ar4,@r0
      000718 8A 82            [24] 2499 	mov	dpl,r2
      00071A 8B 83            [24] 2500 	mov	dph,r3
      00071C 8C F0            [24] 2501 	mov	b,r4
      00071E 12r00r00         [24] 2502 	lcall	__gptrget
      000721 FA               [12] 2503 	mov	r2,a
      000722 7C 00            [12] 2504 	mov	r4,#0x00
      000724 C0 04            [24] 2505 	push	ar4
      000726 C0 02            [24] 2506 	push	ar2
      000728 74 08            [12] 2507 	mov	a,#0x08
      00072A C0 E0            [24] 2508 	push	acc
      00072C E4               [12] 2509 	clr	a
      00072D C0 E0            [24] 2510 	push	acc
      00072F 8A 82            [24] 2511 	mov	dpl,r2
      000731 8C 83            [24] 2512 	mov	dph,r4
      000733 12r00r00         [24] 2513 	lcall	__divsint
      000736 AF 82            [24] 2514 	mov	r7,dpl
      000738 AE 83            [24] 2515 	mov	r6,dph
      00073A 15 81            [12] 2516 	dec	sp
      00073C 15 81            [12] 2517 	dec	sp
      00073E D0 02            [24] 2518 	pop	ar2
      000740 D0 04            [24] 2519 	pop	ar4
      000742 53 02 07         [24] 2520 	anl	ar2,#0x07
      000745 7C 00            [12] 2521 	mov	r4,#0x00
      000747 EA               [12] 2522 	mov	a,r2
      000748 4C               [12] 2523 	orl	a,r4
      000749 70 04            [24] 2524 	jnz	00112$
      00074B FB               [12] 2525 	mov	r3,a
      00074C FC               [12] 2526 	mov	r4,a
      00074D 80 04            [24] 2527 	sjmp	00113$
      00074F                       2528 00112$:
      00074F 7B 01            [12] 2529 	mov	r3,#0x01
      000751 7C 00            [12] 2530 	mov	r4,#0x00
      000753                       2531 00113$:
      000753 EB               [12] 2532 	mov	a,r3
      000754 2F               [12] 2533 	add	a,r7
      000755 FB               [12] 2534 	mov	r3,a
      000756 EC               [12] 2535 	mov	a,r4
      000757 3E               [12] 2536 	addc	a,r6
      000758 FC               [12] 2537 	mov	r4,a
                                   2538 ;	../../core/net/rime/chameleon-bitopt.c:246: if(packetbuf_hdralloc(hdrbytesize + sizeof(struct bitopt_hdr)) == 0) {
      000759 E5 81            [12] 2539 	mov	a,sp
      00075B 24 ED            [12] 2540 	add	a,#0xed
      00075D F8               [12] 2541 	mov	r0,a
      00075E A6 03            [24] 2542 	mov	@r0,ar3
      000760 08               [12] 2543 	inc	r0
      000761 A6 04            [24] 2544 	mov	@r0,ar4
      000763 E5 81            [12] 2545 	mov	a,sp
      000765 24 ED            [12] 2546 	add	a,#0xed
      000767 F8               [12] 2547 	mov	r0,a
      000768 74 02            [12] 2548 	mov	a,#0x02
      00076A 26               [12] 2549 	add	a,@r0
      00076B FA               [12] 2550 	mov	r2,a
      00076C E4               [12] 2551 	clr	a
      00076D 08               [12] 2552 	inc	r0
      00076E 36               [12] 2553 	addc	a,@r0
      00076F FF               [12] 2554 	mov	r7,a
      000770 8A 82            [24] 2555 	mov	dpl,r2
      000772 8F 83            [24] 2556 	mov	dph,r7
      000774 12r00r00         [24] 2557 	lcall	_packetbuf_hdralloc
      000777 E5 82            [12] 2558 	mov	a,dpl
      000779 85 83 F0         [24] 2559 	mov	b,dph
      00077C 45 F0            [12] 2560 	orl	a,b
      00077E 70 06            [24] 2561 	jnz	00102$
                                   2562 ;	../../core/net/rime/chameleon-bitopt.c:248: return 0;
      000780 90 00 00         [24] 2563 	mov	dptr,#0x0000
      000783 02r0Ar09         [24] 2564 	ljmp	00110$
      000786                       2565 00102$:
                                   2566 ;	../../core/net/rime/chameleon-bitopt.c:250: hdr = (struct bitopt_hdr *)packetbuf_hdrptr();
      000786 12r00r00         [24] 2567 	lcall	_packetbuf_hdrptr
      000789 AA 82            [24] 2568 	mov	r2,dpl
      00078B AE 83            [24] 2569 	mov	r6,dph
      00078D AF F0            [24] 2570 	mov	r7,b
      00078F E5 81            [12] 2571 	mov	a,sp
      000791 24 FC            [12] 2572 	add	a,#0xfc
      000793 F8               [12] 2573 	mov	r0,a
      000794 A6 02            [24] 2574 	mov	@r0,ar2
      000796 08               [12] 2575 	inc	r0
      000797 A6 06            [24] 2576 	mov	@r0,ar6
      000799 08               [12] 2577 	inc	r0
      00079A A6 07            [24] 2578 	mov	@r0,ar7
                                   2579 ;	../../core/net/rime/chameleon-bitopt.c:251: hdr->channel[0] = c->channelno & 0xff;
      00079C E5 81            [12] 2580 	mov	a,sp
      00079E 24 EA            [12] 2581 	add	a,#0xea
      0007A0 F8               [12] 2582 	mov	r0,a
      0007A1 74 03            [12] 2583 	mov	a,#0x03
      0007A3 26               [12] 2584 	add	a,@r0
      0007A4 FD               [12] 2585 	mov	r5,a
      0007A5 E4               [12] 2586 	clr	a
      0007A6 08               [12] 2587 	inc	r0
      0007A7 36               [12] 2588 	addc	a,@r0
      0007A8 FE               [12] 2589 	mov	r6,a
      0007A9 08               [12] 2590 	inc	r0
      0007AA 86 07            [24] 2591 	mov	ar7,@r0
      0007AC 8D 82            [24] 2592 	mov	dpl,r5
      0007AE 8E 83            [24] 2593 	mov	dph,r6
      0007B0 8F F0            [24] 2594 	mov	b,r7
      0007B2 12r00r00         [24] 2595 	lcall	__gptrget
      0007B5 FA               [12] 2596 	mov	r2,a
      0007B6 E5 81            [12] 2597 	mov	a,sp
      0007B8 24 FC            [12] 2598 	add	a,#0xfc
      0007BA F8               [12] 2599 	mov	r0,a
      0007BB 86 82            [24] 2600 	mov	dpl,@r0
      0007BD 08               [12] 2601 	inc	r0
      0007BE 86 83            [24] 2602 	mov	dph,@r0
      0007C0 08               [12] 2603 	inc	r0
      0007C1 86 F0            [24] 2604 	mov	b,@r0
      0007C3 EA               [12] 2605 	mov	a,r2
      0007C4 12r00r00         [24] 2606 	lcall	__gptrput
                                   2607 ;	../../core/net/rime/chameleon-bitopt.c:252: hdr->channel[1] = (c->channelno >> 8) & 0xff;
      0007C7 E5 81            [12] 2608 	mov	a,sp
      0007C9 24 FC            [12] 2609 	add	a,#0xfc
      0007CB F8               [12] 2610 	mov	r0,a
      0007CC 74 01            [12] 2611 	mov	a,#0x01
      0007CE 26               [12] 2612 	add	a,@r0
      0007CF FA               [12] 2613 	mov	r2,a
      0007D0 E4               [12] 2614 	clr	a
      0007D1 08               [12] 2615 	inc	r0
      0007D2 36               [12] 2616 	addc	a,@r0
      0007D3 FB               [12] 2617 	mov	r3,a
      0007D4 08               [12] 2618 	inc	r0
      0007D5 86 04            [24] 2619 	mov	ar4,@r0
      0007D7 8D 82            [24] 2620 	mov	dpl,r5
      0007D9 8E 83            [24] 2621 	mov	dph,r6
      0007DB 8F F0            [24] 2622 	mov	b,r7
      0007DD 12r00r00         [24] 2623 	lcall	__gptrget
      0007E0 A3               [24] 2624 	inc	dptr
      0007E1 12r00r00         [24] 2625 	lcall	__gptrget
      0007E4 8A 82            [24] 2626 	mov	dpl,r2
      0007E6 8B 83            [24] 2627 	mov	dph,r3
      0007E8 8C F0            [24] 2628 	mov	b,r4
      0007EA 12r00r00         [24] 2629 	lcall	__gptrput
                                   2630 ;	../../core/net/rime/chameleon-bitopt.c:254: hdrptr = ((uint8_t *)packetbuf_hdrptr()) + sizeof(struct bitopt_hdr);
      0007ED 12r00r00         [24] 2631 	lcall	_packetbuf_hdrptr
      0007F0 AD 82            [24] 2632 	mov	r5,dpl
      0007F2 AE 83            [24] 2633 	mov	r6,dph
      0007F4 AF F0            [24] 2634 	mov	r7,b
      0007F6 E5 81            [12] 2635 	mov	a,sp
      0007F8 24 F9            [12] 2636 	add	a,#0xf9
      0007FA F8               [12] 2637 	mov	r0,a
      0007FB 74 02            [12] 2638 	mov	a,#0x02
      0007FD 2D               [12] 2639 	add	a,r5
      0007FE F6               [12] 2640 	mov	@r0,a
      0007FF E4               [12] 2641 	clr	a
      000800 3E               [12] 2642 	addc	a,r6
      000801 08               [12] 2643 	inc	r0
      000802 F6               [12] 2644 	mov	@r0,a
      000803 08               [12] 2645 	inc	r0
      000804 A6 07            [24] 2646 	mov	@r0,ar7
                                   2647 ;	../../core/net/rime/chameleon-bitopt.c:255: memset(hdrptr, 0, hdrbytesize);
      000806 E5 81            [12] 2648 	mov	a,sp
      000808 24 F9            [12] 2649 	add	a,#0xf9
      00080A F8               [12] 2650 	mov	r0,a
      00080B 86 02            [24] 2651 	mov	ar2,@r0
      00080D 08               [12] 2652 	inc	r0
      00080E 86 03            [24] 2653 	mov	ar3,@r0
      000810 08               [12] 2654 	inc	r0
      000811 86 04            [24] 2655 	mov	ar4,@r0
      000813 E5 81            [12] 2656 	mov	a,sp
      000815 24 ED            [12] 2657 	add	a,#0xed
      000817 F8               [12] 2658 	mov	r0,a
      000818 E6               [12] 2659 	mov	a,@r0
      000819 C0 E0            [24] 2660 	push	acc
      00081B 08               [12] 2661 	inc	r0
      00081C E6               [12] 2662 	mov	a,@r0
      00081D C0 E0            [24] 2663 	push	acc
      00081F E4               [12] 2664 	clr	a
      000820 C0 E0            [24] 2665 	push	acc
      000822 8A 82            [24] 2666 	mov	dpl,r2
      000824 8B 83            [24] 2667 	mov	dph,r3
      000826 8C F0            [24] 2668 	mov	b,r4
      000828 12r00r00         [24] 2669 	lcall	_memset
      00082B 15 81            [12] 2670 	dec	sp
      00082D 15 81            [12] 2671 	dec	sp
      00082F 15 81            [12] 2672 	dec	sp
                                   2673 ;	../../core/net/rime/chameleon-bitopt.c:257: byteptr = bitptr = 0;
      000831 E5 81            [12] 2674 	mov	a,sp
      000833 24 F5            [12] 2675 	add	a,#0xf5
      000835 F8               [12] 2676 	mov	r0,a
      000836 E4               [12] 2677 	clr	a
      000837 F6               [12] 2678 	mov	@r0,a
      000838 08               [12] 2679 	inc	r0
      000839 F6               [12] 2680 	mov	@r0,a
                                   2681 ;	../../core/net/rime/chameleon-bitopt.c:259: for(a = c->attrlist; a->type != PACKETBUF_ATTR_NONE; ++a) {
      00083A E5 81            [12] 2682 	mov	a,sp
      00083C 24 EA            [12] 2683 	add	a,#0xea
      00083E F8               [12] 2684 	mov	r0,a
      00083F 74 05            [12] 2685 	mov	a,#0x05
      000841 26               [12] 2686 	add	a,@r0
      000842 FA               [12] 2687 	mov	r2,a
      000843 E4               [12] 2688 	clr	a
      000844 08               [12] 2689 	inc	r0
      000845 36               [12] 2690 	addc	a,@r0
      000846 FB               [12] 2691 	mov	r3,a
      000847 08               [12] 2692 	inc	r0
      000848 86 04            [24] 2693 	mov	ar4,@r0
      00084A 8A 82            [24] 2694 	mov	dpl,r2
      00084C 8B 83            [24] 2695 	mov	dph,r3
      00084E 8C F0            [24] 2696 	mov	b,r4
      000850 12r00r00         [24] 2697 	lcall	__gptrget
      000853 FA               [12] 2698 	mov	r2,a
      000854 A3               [24] 2699 	inc	dptr
      000855 12r00r00         [24] 2700 	lcall	__gptrget
      000858 FB               [12] 2701 	mov	r3,a
      000859 A3               [24] 2702 	inc	dptr
      00085A 12r00r00         [24] 2703 	lcall	__gptrget
      00085D FC               [12] 2704 	mov	r4,a
      00085E                       2705 00108$:
      00085E 8A 82            [24] 2706 	mov	dpl,r2
      000860 8B 83            [24] 2707 	mov	dph,r3
      000862 8C F0            [24] 2708 	mov	b,r4
      000864 E5 81            [12] 2709 	mov	a,sp
      000866 24 ED            [12] 2710 	add	a,#0xed
      000868 F8               [12] 2711 	mov	r0,a
      000869 12r00r00         [24] 2712 	lcall	__gptrget
      00086C F6               [12] 2713 	mov	@r0,a
      00086D E5 81            [12] 2714 	mov	a,sp
      00086F 24 ED            [12] 2715 	add	a,#0xed
      000871 F8               [12] 2716 	mov	r0,a
      000872 E6               [12] 2717 	mov	a,@r0
      000873 70 03            [24] 2718 	jnz	00137$
      000875 02r0Ar06         [24] 2719 	ljmp	00106$
      000878                       2720 00137$:
                                   2721 ;	../../core/net/rime/chameleon-bitopt.c:272: len = a->len;
      000878 74 01            [12] 2722 	mov	a,#0x01
      00087A 2A               [12] 2723 	add	a,r2
      00087B FD               [12] 2724 	mov	r5,a
      00087C E4               [12] 2725 	clr	a
      00087D 3B               [12] 2726 	addc	a,r3
      00087E FE               [12] 2727 	mov	r6,a
      00087F 8C 07            [24] 2728 	mov	ar7,r4
      000881 8D 82            [24] 2729 	mov	dpl,r5
      000883 8E 83            [24] 2730 	mov	dph,r6
      000885 8F F0            [24] 2731 	mov	b,r7
      000887 12r00r00         [24] 2732 	lcall	__gptrget
      00088A FD               [12] 2733 	mov	r5,a
      00088B E5 81            [12] 2734 	mov	a,sp
      00088D 24 F7            [12] 2735 	add	a,#0xf7
      00088F F8               [12] 2736 	mov	r0,a
      000890 A6 05            [24] 2737 	mov	@r0,ar5
      000892 08               [12] 2738 	inc	r0
      000893 76 00            [12] 2739 	mov	@r0,#0x00
                                   2740 ;	../../core/net/rime/chameleon-bitopt.c:273: byteptr = bitptr / 8;
      000895 E5 81            [12] 2741 	mov	a,sp
      000897 24 F5            [12] 2742 	add	a,#0xf5
      000899 F8               [12] 2743 	mov	r0,a
      00089A E5 81            [12] 2744 	mov	a,sp
      00089C 24 EF            [12] 2745 	add	a,#0xef
      00089E F9               [12] 2746 	mov	r1,a
      00089F E6               [12] 2747 	mov	a,@r0
      0008A0 F7               [12] 2748 	mov	@r1,a
      0008A1 08               [12] 2749 	inc	r0
      0008A2 09               [12] 2750 	inc	r1
      0008A3 E6               [12] 2751 	mov	a,@r0
      0008A4 F7               [12] 2752 	mov	@r1,a
      0008A5 E5 81            [12] 2753 	mov	a,sp
      0008A7 24 EF            [12] 2754 	add	a,#0xef
      0008A9 F8               [12] 2755 	mov	r0,a
      0008AA 86 06            [24] 2756 	mov	ar6,@r0
      0008AC 08               [12] 2757 	inc	r0
      0008AD E6               [12] 2758 	mov	a,@r0
      0008AE C4               [12] 2759 	swap	a
      0008AF 23               [12] 2760 	rl	a
      0008B0 CE               [12] 2761 	xch	a,r6
      0008B1 C4               [12] 2762 	swap	a
      0008B2 23               [12] 2763 	rl	a
      0008B3 54 1F            [12] 2764 	anl	a,#0x1f
      0008B5 6E               [12] 2765 	xrl	a,r6
      0008B6 CE               [12] 2766 	xch	a,r6
      0008B7 54 1F            [12] 2767 	anl	a,#0x1f
      0008B9 CE               [12] 2768 	xch	a,r6
      0008BA 6E               [12] 2769 	xrl	a,r6
      0008BB CE               [12] 2770 	xch	a,r6
      0008BC FF               [12] 2771 	mov	r7,a
      0008BD E5 81            [12] 2772 	mov	a,sp
      0008BF 24 F3            [12] 2773 	add	a,#0xf3
      0008C1 F8               [12] 2774 	mov	r0,a
      0008C2 A6 06            [24] 2775 	mov	@r0,ar6
      0008C4 08               [12] 2776 	inc	r0
      0008C5 A6 07            [24] 2777 	mov	@r0,ar7
                                   2778 ;	../../core/net/rime/chameleon-bitopt.c:274: if(PACKETBUF_IS_ADDR(a->type)) {
      0008C7 E5 81            [12] 2779 	mov	a,sp
      0008C9 24 ED            [12] 2780 	add	a,#0xed
      0008CB F8               [12] 2781 	mov	r0,a
      0008CC B6 18 00         [24] 2782 	cjne	@r0,#0x18,00138$
      0008CF                       2783 00138$:
      0008CF 50 03            [24] 2784 	jnc	00139$
      0008D1 02r09r52         [24] 2785 	ljmp	00104$
      0008D4                       2786 00139$:
                                   2787 ;	../../core/net/rime/chameleon-bitopt.c:276: (uint8_t *)packetbuf_addr(a->type), len);
      0008D4 C0 02            [24] 2788 	push	ar2
      0008D6 C0 03            [24] 2789 	push	ar3
      0008D8 C0 04            [24] 2790 	push	ar4
      0008DA E5 81            [12] 2791 	mov	a,sp
      0008DC 24 EA            [12] 2792 	add	a,#0xea
      0008DE F8               [12] 2793 	mov	r0,a
      0008DF 86 82            [24] 2794 	mov	dpl,@r0
      0008E1 12r00r00         [24] 2795 	lcall	_packetbuf_addr
      0008E4 AA 82            [24] 2796 	mov	r2,dpl
      0008E6 AB 83            [24] 2797 	mov	r3,dph
      0008E8 AC F0            [24] 2798 	mov	r4,b
                                   2799 ;	../../core/net/rime/chameleon-bitopt.c:275: set_bits(&hdrptr[byteptr], bitptr & 7,
      0008EA E5 81            [12] 2800 	mov	a,sp
      0008EC 24 EC            [12] 2801 	add	a,#0xec
      0008EE F8               [12] 2802 	mov	r0,a
      0008EF E5 81            [12] 2803 	mov	a,sp
      0008F1 24 EE            [12] 2804 	add	a,#0xee
      0008F3 F9               [12] 2805 	mov	r1,a
      0008F4 74 07            [12] 2806 	mov	a,#0x07
      0008F6 56               [12] 2807 	anl	a,@r0
      0008F7 F7               [12] 2808 	mov	@r1,a
      0008F8 09               [12] 2809 	inc	r1
      0008F9 77 00            [12] 2810 	mov	@r1,#0x00
      0008FB E5 81            [12] 2811 	mov	a,sp
      0008FD 24 F6            [12] 2812 	add	a,#0xf6
      0008FF F8               [12] 2813 	mov	r0,a
      000900 E5 81            [12] 2814 	mov	a,sp
      000902 24 F0            [12] 2815 	add	a,#0xf0
      000904 F9               [12] 2816 	mov	r1,a
      000905 E7               [12] 2817 	mov	a,@r1
      000906 26               [12] 2818 	add	a,@r0
      000907 FD               [12] 2819 	mov	r5,a
      000908 09               [12] 2820 	inc	r1
      000909 E7               [12] 2821 	mov	a,@r1
      00090A 08               [12] 2822 	inc	r0
      00090B 36               [12] 2823 	addc	a,@r0
      00090C FE               [12] 2824 	mov	r6,a
      00090D 08               [12] 2825 	inc	r0
      00090E 86 07            [24] 2826 	mov	ar7,@r0
      000910 C0 04            [24] 2827 	push	ar4
      000912 C0 03            [24] 2828 	push	ar3
      000914 C0 02            [24] 2829 	push	ar2
      000916 E5 81            [12] 2830 	mov	a,sp
      000918 24 F1            [12] 2831 	add	a,#0xf1
      00091A F8               [12] 2832 	mov	r0,a
      00091B E6               [12] 2833 	mov	a,@r0
      00091C C0 E0            [24] 2834 	push	acc
      00091E 08               [12] 2835 	inc	r0
      00091F E6               [12] 2836 	mov	a,@r0
      000920 C0 E0            [24] 2837 	push	acc
      000922 C0 02            [24] 2838 	push	ar2
      000924 C0 03            [24] 2839 	push	ar3
      000926 C0 04            [24] 2840 	push	ar4
      000928 E5 81            [12] 2841 	mov	a,sp
      00092A 24 E6            [12] 2842 	add	a,#0xe6
      00092C F8               [12] 2843 	mov	r0,a
      00092D E6               [12] 2844 	mov	a,@r0
      00092E C0 E0            [24] 2845 	push	acc
      000930 08               [12] 2846 	inc	r0
      000931 E6               [12] 2847 	mov	a,@r0
      000932 C0 E0            [24] 2848 	push	acc
      000934 8D 82            [24] 2849 	mov	dpl,r5
      000936 8E 83            [24] 2850 	mov	dph,r6
      000938 8F F0            [24] 2851 	mov	b,r7
      00093A 12r04r11         [24] 2852 	lcall	_set_bits
      00093D E5 81            [12] 2853 	mov	a,sp
      00093F 24 F9            [12] 2854 	add	a,#0xf9
      000941 F5 81            [12] 2855 	mov	sp,a
      000943 D0 02            [24] 2856 	pop	ar2
      000945 D0 03            [24] 2857 	pop	ar3
      000947 D0 04            [24] 2858 	pop	ar4
      000949 D0 04            [24] 2859 	pop	ar4
      00094B D0 03            [24] 2860 	pop	ar3
      00094D D0 02            [24] 2861 	pop	ar2
      00094F 02r09rEA         [24] 2862 	ljmp	00105$
      000952                       2863 00104$:
                                   2864 ;	../../core/net/rime/chameleon-bitopt.c:283: val = packetbuf_attr(a->type);
      000952 C0 02            [24] 2865 	push	ar2
      000954 C0 03            [24] 2866 	push	ar3
      000956 C0 04            [24] 2867 	push	ar4
      000958 E5 81            [12] 2868 	mov	a,sp
      00095A 24 EA            [12] 2869 	add	a,#0xea
      00095C F8               [12] 2870 	mov	r0,a
      00095D 86 82            [24] 2871 	mov	dpl,@r0
      00095F C0 04            [24] 2872 	push	ar4
      000961 C0 03            [24] 2873 	push	ar3
      000963 C0 02            [24] 2874 	push	ar2
      000965 12r00r00         [24] 2875 	lcall	_packetbuf_attr
      000968 AE 82            [24] 2876 	mov	r6,dpl
      00096A AF 83            [24] 2877 	mov	r7,dph
      00096C D0 02            [24] 2878 	pop	ar2
      00096E D0 03            [24] 2879 	pop	ar3
      000970 D0 04            [24] 2880 	pop	ar4
      000972 E5 81            [12] 2881 	mov	a,sp
      000974 24 FC            [12] 2882 	add	a,#0xfc
      000976 F8               [12] 2883 	mov	r0,a
      000977 A6 06            [24] 2884 	mov	@r0,ar6
      000979 08               [12] 2885 	inc	r0
      00097A A6 07            [24] 2886 	mov	@r0,ar7
                                   2887 ;	../../core/net/rime/chameleon-bitopt.c:285: (uint8_t *)&val, len);
      00097C E5 81            [12] 2888 	mov	a,sp
      00097E 24 FC            [12] 2889 	add	a,#0xfc
      000980 FF               [12] 2890 	mov	r7,a
      000981 7E 00            [12] 2891 	mov	r6,#0x00
      000983 7D 40            [12] 2892 	mov	r5,#0x40
                                   2893 ;	../../core/net/rime/chameleon-bitopt.c:284: set_bits(&hdrptr[byteptr], bitptr & 7,
      000985 E5 81            [12] 2894 	mov	a,sp
      000987 24 EC            [12] 2895 	add	a,#0xec
      000989 F8               [12] 2896 	mov	r0,a
      00098A E5 81            [12] 2897 	mov	a,sp
      00098C 24 EE            [12] 2898 	add	a,#0xee
      00098E F9               [12] 2899 	mov	r1,a
      00098F 74 07            [12] 2900 	mov	a,#0x07
      000991 56               [12] 2901 	anl	a,@r0
      000992 F7               [12] 2902 	mov	@r1,a
      000993 09               [12] 2903 	inc	r1
      000994 77 00            [12] 2904 	mov	@r1,#0x00
      000996 E5 81            [12] 2905 	mov	a,sp
      000998 24 F6            [12] 2906 	add	a,#0xf6
      00099A F8               [12] 2907 	mov	r0,a
      00099B E5 81            [12] 2908 	mov	a,sp
      00099D 24 F0            [12] 2909 	add	a,#0xf0
      00099F F9               [12] 2910 	mov	r1,a
      0009A0 E7               [12] 2911 	mov	a,@r1
      0009A1 26               [12] 2912 	add	a,@r0
      0009A2 FA               [12] 2913 	mov	r2,a
      0009A3 09               [12] 2914 	inc	r1
      0009A4 E7               [12] 2915 	mov	a,@r1
      0009A5 08               [12] 2916 	inc	r0
      0009A6 36               [12] 2917 	addc	a,@r0
      0009A7 FB               [12] 2918 	mov	r3,a
      0009A8 08               [12] 2919 	inc	r0
      0009A9 86 04            [24] 2920 	mov	ar4,@r0
      0009AB C0 04            [24] 2921 	push	ar4
      0009AD C0 03            [24] 2922 	push	ar3
      0009AF C0 02            [24] 2923 	push	ar2
      0009B1 E5 81            [12] 2924 	mov	a,sp
      0009B3 24 F1            [12] 2925 	add	a,#0xf1
      0009B5 F8               [12] 2926 	mov	r0,a
      0009B6 E6               [12] 2927 	mov	a,@r0
      0009B7 C0 E0            [24] 2928 	push	acc
      0009B9 08               [12] 2929 	inc	r0
      0009BA E6               [12] 2930 	mov	a,@r0
      0009BB C0 E0            [24] 2931 	push	acc
      0009BD C0 07            [24] 2932 	push	ar7
      0009BF C0 06            [24] 2933 	push	ar6
      0009C1 C0 05            [24] 2934 	push	ar5
      0009C3 E5 81            [12] 2935 	mov	a,sp
      0009C5 24 E6            [12] 2936 	add	a,#0xe6
      0009C7 F8               [12] 2937 	mov	r0,a
      0009C8 E6               [12] 2938 	mov	a,@r0
      0009C9 C0 E0            [24] 2939 	push	acc
      0009CB 08               [12] 2940 	inc	r0
      0009CC E6               [12] 2941 	mov	a,@r0
      0009CD C0 E0            [24] 2942 	push	acc
      0009CF 8A 82            [24] 2943 	mov	dpl,r2
      0009D1 8B 83            [24] 2944 	mov	dph,r3
      0009D3 8C F0            [24] 2945 	mov	b,r4
      0009D5 12r04r11         [24] 2946 	lcall	_set_bits
      0009D8 E5 81            [12] 2947 	mov	a,sp
      0009DA 24 F9            [12] 2948 	add	a,#0xf9
      0009DC F5 81            [12] 2949 	mov	sp,a
      0009DE D0 02            [24] 2950 	pop	ar2
      0009E0 D0 03            [24] 2951 	pop	ar3
      0009E2 D0 04            [24] 2952 	pop	ar4
                                   2953 ;	../../core/net/rime/chameleon-bitopt.c:295: return 1; /* Send out packet */
      0009E4 D0 04            [24] 2954 	pop	ar4
      0009E6 D0 03            [24] 2955 	pop	ar3
      0009E8 D0 02            [24] 2956 	pop	ar2
                                   2957 ;	../../core/net/rime/chameleon-bitopt.c:284: set_bits(&hdrptr[byteptr], bitptr & 7,
      0009EA                       2958 00105$:
                                   2959 ;	../../core/net/rime/chameleon-bitopt.c:291: bitptr += len;
      0009EA E5 81            [12] 2960 	mov	a,sp
      0009EC 24 F5            [12] 2961 	add	a,#0xf5
      0009EE F8               [12] 2962 	mov	r0,a
      0009EF E5 81            [12] 2963 	mov	a,sp
      0009F1 24 F7            [12] 2964 	add	a,#0xf7
      0009F3 F9               [12] 2965 	mov	r1,a
      0009F4 E7               [12] 2966 	mov	a,@r1
      0009F5 26               [12] 2967 	add	a,@r0
      0009F6 F6               [12] 2968 	mov	@r0,a
      0009F7 09               [12] 2969 	inc	r1
      0009F8 E7               [12] 2970 	mov	a,@r1
      0009F9 08               [12] 2971 	inc	r0
      0009FA 36               [12] 2972 	addc	a,@r0
      0009FB F6               [12] 2973 	mov	@r0,a
                                   2974 ;	../../core/net/rime/chameleon-bitopt.c:259: for(a = c->attrlist; a->type != PACKETBUF_ATTR_NONE; ++a) {
      0009FC 74 02            [12] 2975 	mov	a,#0x02
      0009FE 2A               [12] 2976 	add	a,r2
      0009FF FA               [12] 2977 	mov	r2,a
      000A00 E4               [12] 2978 	clr	a
      000A01 3B               [12] 2979 	addc	a,r3
      000A02 FB               [12] 2980 	mov	r3,a
      000A03 02r08r5E         [24] 2981 	ljmp	00108$
      000A06                       2982 00106$:
                                   2983 ;	../../core/net/rime/chameleon-bitopt.c:295: return 1; /* Send out packet */
      000A06 90 00 01         [24] 2984 	mov	dptr,#0x0001
      000A09                       2985 00110$:
                                   2986 ;	../../core/net/rime/chameleon-bitopt.c:296: }
      000A09 E5 81            [12] 2987 	mov	a,sp
      000A0B 24 E9            [12] 2988 	add	a,#0xe9
      000A0D F5 81            [12] 2989 	mov	sp,a
      000A0F 22               [24] 2990 	ret
                                   2991 ;------------------------------------------------------------
                                   2992 ;Allocation info for local variables in function 'unpack_header'
                                   2993 ;------------------------------------------------------------
                                   2994 ;a                         Allocated to registers 
                                   2995 ;byteptr                   Allocated to stack - sp -11
                                   2996 ;bitptr                    Allocated to registers r6 r7 
                                   2997 ;len                       Allocated to stack - sp -9
                                   2998 ;hdrbytesize               Allocated to registers r6 r7 
                                   2999 ;hdrptr                    Allocated to stack - sp -7
                                   3000 ;hdr                       Allocated to registers r5 r6 r7 
                                   3001 ;c                         Allocated to stack - sp -4
                                   3002 ;addr                      Allocated to stack - sp -1
                                   3003 ;val                       Allocated to stack - sp -1
                                   3004 ;sloc0                     Allocated to stack - sp -21
                                   3005 ;sloc1                     Allocated to stack - sp -19
                                   3006 ;sloc2                     Allocated to stack - sp -16
                                   3007 ;sloc3                     Allocated to stack - sp -15
                                   3008 ;sloc4                     Allocated to stack - sp -13
                                   3009 ;------------------------------------------------------------
                                   3010 ;	../../core/net/rime/chameleon-bitopt.c:299: unpack_header(void)
                                   3011 ;	-----------------------------------------
                                   3012 ;	 function unpack_header
                                   3013 ;	-----------------------------------------
      000A10                       3014 _unpack_header:
      000A10 E5 81            [12] 3015 	mov	a,sp
      000A12 24 16            [12] 3016 	add	a,#0x16
      000A14 F5 81            [12] 3017 	mov	sp,a
                                   3018 ;	../../core/net/rime/chameleon-bitopt.c:311: hdr = (struct bitopt_hdr *)packetbuf_dataptr();
      000A16 12r00r00         [24] 3019 	lcall	_packetbuf_dataptr
      000A19 AD 82            [24] 3020 	mov	r5,dpl
      000A1B AE 83            [24] 3021 	mov	r6,dph
      000A1D AF F0            [24] 3022 	mov	r7,b
                                   3023 ;	../../core/net/rime/chameleon-bitopt.c:312: if(packetbuf_hdrreduce(sizeof(struct bitopt_hdr)) == 0) {
      000A1F 90 00 02         [24] 3024 	mov	dptr,#0x0002
      000A22 C0 07            [24] 3025 	push	ar7
      000A24 C0 06            [24] 3026 	push	ar6
      000A26 C0 05            [24] 3027 	push	ar5
      000A28 12r00r00         [24] 3028 	lcall	_packetbuf_hdrreduce
      000A2B E5 82            [12] 3029 	mov	a,dpl
      000A2D 85 83 F0         [24] 3030 	mov	b,dph
      000A30 D0 05            [24] 3031 	pop	ar5
      000A32 D0 06            [24] 3032 	pop	ar6
      000A34 D0 07            [24] 3033 	pop	ar7
      000A36 45 F0            [12] 3034 	orl	a,b
                                   3035 ;	../../core/net/rime/chameleon-bitopt.c:314: return NULL;
      000A38 70 08            [24] 3036 	jnz	00102$
      000A3A 90 00 00         [24] 3037 	mov	dptr,#0x0000
      000A3D F5 F0            [12] 3038 	mov	b,a
      000A3F 02r0Dr3C         [24] 3039 	ljmp	00114$
      000A42                       3040 00102$:
                                   3041 ;	../../core/net/rime/chameleon-bitopt.c:316: c = channel_lookup((hdr->channel[1] << 8) + hdr->channel[0]);
      000A42 74 01            [12] 3042 	mov	a,#0x01
      000A44 2D               [12] 3043 	add	a,r5
      000A45 FA               [12] 3044 	mov	r2,a
      000A46 E4               [12] 3045 	clr	a
      000A47 3E               [12] 3046 	addc	a,r6
      000A48 FB               [12] 3047 	mov	r3,a
      000A49 8F 04            [24] 3048 	mov	ar4,r7
      000A4B 8A 82            [24] 3049 	mov	dpl,r2
      000A4D 8B 83            [24] 3050 	mov	dph,r3
      000A4F 8C F0            [24] 3051 	mov	b,r4
      000A51 12r00r00         [24] 3052 	lcall	__gptrget
      000A54 FC               [12] 3053 	mov	r4,a
      000A55 7A 00            [12] 3054 	mov	r2,#0x00
      000A57 8D 82            [24] 3055 	mov	dpl,r5
      000A59 8E 83            [24] 3056 	mov	dph,r6
      000A5B 8F F0            [24] 3057 	mov	b,r7
      000A5D 12r00r00         [24] 3058 	lcall	__gptrget
      000A60 7F 00            [12] 3059 	mov	r7,#0x00
      000A62 2A               [12] 3060 	add	a,r2
      000A63 FA               [12] 3061 	mov	r2,a
      000A64 EF               [12] 3062 	mov	a,r7
      000A65 3C               [12] 3063 	addc	a,r4
      000A66 FC               [12] 3064 	mov	r4,a
      000A67 8A 82            [24] 3065 	mov	dpl,r2
      000A69 8C 83            [24] 3066 	mov	dph,r4
      000A6B 12r00r00         [24] 3067 	lcall	_channel_lookup
      000A6E AD 82            [24] 3068 	mov	r5,dpl
      000A70 AE 83            [24] 3069 	mov	r6,dph
      000A72 AF F0            [24] 3070 	mov	r7,b
      000A74 E5 81            [12] 3071 	mov	a,sp
      000A76 24 FC            [12] 3072 	add	a,#0xfc
      000A78 F8               [12] 3073 	mov	r0,a
      000A79 A6 05            [24] 3074 	mov	@r0,ar5
      000A7B 08               [12] 3075 	inc	r0
      000A7C A6 06            [24] 3076 	mov	@r0,ar6
      000A7E 08               [12] 3077 	inc	r0
      000A7F A6 07            [24] 3078 	mov	@r0,ar7
                                   3079 ;	../../core/net/rime/chameleon-bitopt.c:317: if(c == NULL) {
      000A81 E5 81            [12] 3080 	mov	a,sp
      000A83 24 FC            [12] 3081 	add	a,#0xfc
      000A85 F8               [12] 3082 	mov	r0,a
      000A86 E6               [12] 3083 	mov	a,@r0
      000A87 08               [12] 3084 	inc	r0
      000A88 46               [12] 3085 	orl	a,@r0
                                   3086 ;	../../core/net/rime/chameleon-bitopt.c:320: return NULL;
      000A89 70 08            [24] 3087 	jnz	00104$
      000A8B 90 00 00         [24] 3088 	mov	dptr,#0x0000
      000A8E F5 F0            [12] 3089 	mov	b,a
      000A90 02r0Dr3C         [24] 3090 	ljmp	00114$
      000A93                       3091 00104$:
                                   3092 ;	../../core/net/rime/chameleon-bitopt.c:323: hdrptr = packetbuf_dataptr();
      000A93 12r00r00         [24] 3093 	lcall	_packetbuf_dataptr
      000A96 AA 82            [24] 3094 	mov	r2,dpl
      000A98 AB 83            [24] 3095 	mov	r3,dph
      000A9A AC F0            [24] 3096 	mov	r4,b
      000A9C E5 81            [12] 3097 	mov	a,sp
      000A9E 24 F9            [12] 3098 	add	a,#0xf9
      000AA0 F8               [12] 3099 	mov	r0,a
      000AA1 A6 02            [24] 3100 	mov	@r0,ar2
      000AA3 08               [12] 3101 	inc	r0
      000AA4 A6 03            [24] 3102 	mov	@r0,ar3
      000AA6 08               [12] 3103 	inc	r0
      000AA7 A6 04            [24] 3104 	mov	@r0,ar4
                                   3105 ;	../../core/net/rime/chameleon-bitopt.c:324: hdrbytesize = c->hdrsize / 8 + ((c->hdrsize & 7) == 0? 0: 1);
      000AA9 E5 81            [12] 3106 	mov	a,sp
      000AAB 24 FC            [12] 3107 	add	a,#0xfc
      000AAD F8               [12] 3108 	mov	r0,a
      000AAE 74 08            [12] 3109 	mov	a,#0x08
      000AB0 26               [12] 3110 	add	a,@r0
      000AB1 FD               [12] 3111 	mov	r5,a
      000AB2 E4               [12] 3112 	clr	a
      000AB3 08               [12] 3113 	inc	r0
      000AB4 36               [12] 3114 	addc	a,@r0
      000AB5 FE               [12] 3115 	mov	r6,a
      000AB6 08               [12] 3116 	inc	r0
      000AB7 86 07            [24] 3117 	mov	ar7,@r0
      000AB9 8D 82            [24] 3118 	mov	dpl,r5
      000ABB 8E 83            [24] 3119 	mov	dph,r6
      000ABD 8F F0            [24] 3120 	mov	b,r7
      000ABF 12r00r00         [24] 3121 	lcall	__gptrget
      000AC2 FD               [12] 3122 	mov	r5,a
      000AC3 7F 00            [12] 3123 	mov	r7,#0x00
      000AC5 C0 07            [24] 3124 	push	ar7
      000AC7 C0 05            [24] 3125 	push	ar5
      000AC9 74 08            [12] 3126 	mov	a,#0x08
      000ACB C0 E0            [24] 3127 	push	acc
      000ACD E4               [12] 3128 	clr	a
      000ACE C0 E0            [24] 3129 	push	acc
      000AD0 8D 82            [24] 3130 	mov	dpl,r5
      000AD2 8F 83            [24] 3131 	mov	dph,r7
      000AD4 12r00r00         [24] 3132 	lcall	__divsint
      000AD7 AC 82            [24] 3133 	mov	r4,dpl
      000AD9 AB 83            [24] 3134 	mov	r3,dph
      000ADB 15 81            [12] 3135 	dec	sp
      000ADD 15 81            [12] 3136 	dec	sp
      000ADF D0 05            [24] 3137 	pop	ar5
      000AE1 D0 07            [24] 3138 	pop	ar7
      000AE3 53 05 07         [24] 3139 	anl	ar5,#0x07
      000AE6 7F 00            [12] 3140 	mov	r7,#0x00
      000AE8 ED               [12] 3141 	mov	a,r5
      000AE9 4F               [12] 3142 	orl	a,r7
      000AEA 70 04            [24] 3143 	jnz	00116$
      000AEC FE               [12] 3144 	mov	r6,a
      000AED FF               [12] 3145 	mov	r7,a
      000AEE 80 04            [24] 3146 	sjmp	00117$
      000AF0                       3147 00116$:
      000AF0 7E 01            [12] 3148 	mov	r6,#0x01
      000AF2 7F 00            [12] 3149 	mov	r7,#0x00
      000AF4                       3150 00117$:
      000AF4 EE               [12] 3151 	mov	a,r6
      000AF5 2C               [12] 3152 	add	a,r4
      000AF6 FE               [12] 3153 	mov	r6,a
      000AF7 EF               [12] 3154 	mov	a,r7
      000AF8 3B               [12] 3155 	addc	a,r3
      000AF9 FF               [12] 3156 	mov	r7,a
                                   3157 ;	../../core/net/rime/chameleon-bitopt.c:325: if(packetbuf_hdrreduce(hdrbytesize) == 0) {
      000AFA 8E 82            [24] 3158 	mov	dpl,r6
      000AFC 8F 83            [24] 3159 	mov	dph,r7
      000AFE 12r00r00         [24] 3160 	lcall	_packetbuf_hdrreduce
      000B01 E5 82            [12] 3161 	mov	a,dpl
      000B03 85 83 F0         [24] 3162 	mov	b,dph
      000B06 45 F0            [12] 3163 	orl	a,b
                                   3164 ;	../../core/net/rime/chameleon-bitopt.c:327: return NULL;
      000B08 70 08            [24] 3165 	jnz	00106$
      000B0A 90 00 00         [24] 3166 	mov	dptr,#0x0000
      000B0D F5 F0            [12] 3167 	mov	b,a
      000B0F 02r0Dr3C         [24] 3168 	ljmp	00114$
      000B12                       3169 00106$:
                                   3170 ;	../../core/net/rime/chameleon-bitopt.c:329: byteptr = bitptr = 0;
                                   3171 ;	../../core/net/rime/chameleon-bitopt.c:330: for(a = c->attrlist; a->type != PACKETBUF_ATTR_NONE; ++a) {
      000B12 E4               [12] 3172 	clr	a
      000B13 FE               [12] 3173 	mov	r6,a
      000B14 FF               [12] 3174 	mov	r7,a
      000B15 E5 81            [12] 3175 	mov	a,sp
      000B17 24 FC            [12] 3176 	add	a,#0xfc
      000B19 F8               [12] 3177 	mov	r0,a
      000B1A 74 05            [12] 3178 	mov	a,#0x05
      000B1C 26               [12] 3179 	add	a,@r0
      000B1D FB               [12] 3180 	mov	r3,a
      000B1E E4               [12] 3181 	clr	a
      000B1F 08               [12] 3182 	inc	r0
      000B20 36               [12] 3183 	addc	a,@r0
      000B21 FC               [12] 3184 	mov	r4,a
      000B22 08               [12] 3185 	inc	r0
      000B23 86 05            [24] 3186 	mov	ar5,@r0
      000B25 8B 82            [24] 3187 	mov	dpl,r3
      000B27 8C 83            [24] 3188 	mov	dph,r4
      000B29 8D F0            [24] 3189 	mov	b,r5
      000B2B E5 81            [12] 3190 	mov	a,sp
      000B2D 24 ED            [12] 3191 	add	a,#0xed
      000B2F F8               [12] 3192 	mov	r0,a
      000B30 12r00r00         [24] 3193 	lcall	__gptrget
      000B33 F6               [12] 3194 	mov	@r0,a
      000B34 A3               [24] 3195 	inc	dptr
      000B35 12r00r00         [24] 3196 	lcall	__gptrget
      000B38 08               [12] 3197 	inc	r0
      000B39 F6               [12] 3198 	mov	@r0,a
      000B3A A3               [24] 3199 	inc	dptr
      000B3B 12r00r00         [24] 3200 	lcall	__gptrget
      000B3E 08               [12] 3201 	inc	r0
      000B3F F6               [12] 3202 	mov	@r0,a
      000B40 E5 81            [12] 3203 	mov	a,sp
      000B42 24 EB            [12] 3204 	add	a,#0xeb
      000B44 F8               [12] 3205 	mov	r0,a
      000B45 A6 81            [24] 3206 	mov	@r0,sp
      000B47 16               [12] 3207 	dec	@r0
      000B48 E5 81            [12] 3208 	mov	a,sp
      000B4A 24 EB            [12] 3209 	add	a,#0xeb
      000B4C F8               [12] 3210 	mov	r0,a
      000B4D E5 81            [12] 3211 	mov	a,sp
      000B4F 24 F0            [12] 3212 	add	a,#0xf0
      000B51 F9               [12] 3213 	mov	r1,a
      000B52 E6               [12] 3214 	mov	a,@r0
      000B53 F7               [12] 3215 	mov	@r1,a
                                   3216 ;	../../core/net/rime/chameleon-bitopt.c:363: return c;
                                   3217 ;	../../core/net/rime/chameleon-bitopt.c:330: for(a = c->attrlist; a->type != PACKETBUF_ATTR_NONE; ++a) {
      000B54                       3218 00112$:
      000B54 E5 81            [12] 3219 	mov	a,sp
      000B56 24 ED            [12] 3220 	add	a,#0xed
      000B58 F8               [12] 3221 	mov	r0,a
      000B59 86 82            [24] 3222 	mov	dpl,@r0
      000B5B 08               [12] 3223 	inc	r0
      000B5C 86 83            [24] 3224 	mov	dph,@r0
      000B5E 08               [12] 3225 	inc	r0
      000B5F 86 F0            [24] 3226 	mov	b,@r0
      000B61 12r00r00         [24] 3227 	lcall	__gptrget
      000B64 FD               [12] 3228 	mov	r5,a
      000B65 70 03            [24] 3229 	jnz	00151$
      000B67 02r0Dr2F         [24] 3230 	ljmp	00110$
      000B6A                       3231 00151$:
                                   3232 ;	../../core/net/rime/chameleon-bitopt.c:342: len = a->len;
      000B6A E5 81            [12] 3233 	mov	a,sp
      000B6C 24 ED            [12] 3234 	add	a,#0xed
      000B6E F8               [12] 3235 	mov	r0,a
      000B6F 74 01            [12] 3236 	mov	a,#0x01
      000B71 26               [12] 3237 	add	a,@r0
      000B72 FA               [12] 3238 	mov	r2,a
      000B73 E4               [12] 3239 	clr	a
      000B74 08               [12] 3240 	inc	r0
      000B75 36               [12] 3241 	addc	a,@r0
      000B76 FB               [12] 3242 	mov	r3,a
      000B77 08               [12] 3243 	inc	r0
      000B78 86 04            [24] 3244 	mov	ar4,@r0
      000B7A 8A 82            [24] 3245 	mov	dpl,r2
      000B7C 8B 83            [24] 3246 	mov	dph,r3
      000B7E 8C F0            [24] 3247 	mov	b,r4
      000B80 12r00r00         [24] 3248 	lcall	__gptrget
      000B83 FA               [12] 3249 	mov	r2,a
      000B84 E5 81            [12] 3250 	mov	a,sp
      000B86 24 F7            [12] 3251 	add	a,#0xf7
      000B88 F8               [12] 3252 	mov	r0,a
      000B89 A6 02            [24] 3253 	mov	@r0,ar2
      000B8B 08               [12] 3254 	inc	r0
      000B8C 76 00            [12] 3255 	mov	@r0,#0x00
                                   3256 ;	../../core/net/rime/chameleon-bitopt.c:343: byteptr = bitptr / 8;
      000B8E E5 81            [12] 3257 	mov	a,sp
      000B90 24 F1            [12] 3258 	add	a,#0xf1
      000B92 F8               [12] 3259 	mov	r0,a
      000B93 A6 06            [24] 3260 	mov	@r0,ar6
      000B95 08               [12] 3261 	inc	r0
      000B96 A6 07            [24] 3262 	mov	@r0,ar7
      000B98 E5 81            [12] 3263 	mov	a,sp
      000B9A 24 F1            [12] 3264 	add	a,#0xf1
      000B9C F8               [12] 3265 	mov	r0,a
      000B9D 86 03            [24] 3266 	mov	ar3,@r0
      000B9F 08               [12] 3267 	inc	r0
      000BA0 E6               [12] 3268 	mov	a,@r0
      000BA1 C4               [12] 3269 	swap	a
      000BA2 23               [12] 3270 	rl	a
      000BA3 CB               [12] 3271 	xch	a,r3
      000BA4 C4               [12] 3272 	swap	a
      000BA5 23               [12] 3273 	rl	a
      000BA6 54 1F            [12] 3274 	anl	a,#0x1f
      000BA8 6B               [12] 3275 	xrl	a,r3
      000BA9 CB               [12] 3276 	xch	a,r3
      000BAA 54 1F            [12] 3277 	anl	a,#0x1f
      000BAC CB               [12] 3278 	xch	a,r3
      000BAD 6B               [12] 3279 	xrl	a,r3
      000BAE CB               [12] 3280 	xch	a,r3
      000BAF FC               [12] 3281 	mov	r4,a
      000BB0 E5 81            [12] 3282 	mov	a,sp
      000BB2 24 F5            [12] 3283 	add	a,#0xf5
      000BB4 F8               [12] 3284 	mov	r0,a
      000BB5 A6 03            [24] 3285 	mov	@r0,ar3
      000BB7 08               [12] 3286 	inc	r0
      000BB8 A6 04            [24] 3287 	mov	@r0,ar4
                                   3288 ;	../../core/net/rime/chameleon-bitopt.c:344: if(PACKETBUF_IS_ADDR(a->type)) {
      000BBA BD 18 00         [24] 3289 	cjne	r5,#0x18,00152$
      000BBD                       3290 00152$:
      000BBD 50 03            [24] 3291 	jnc	00153$
      000BBF 02r0Cr6C         [24] 3292 	ljmp	00108$
      000BC2                       3293 00153$:
                                   3294 ;	../../core/net/rime/chameleon-bitopt.c:346: get_bits((uint8_t *)&addr, &hdrptr[byteptr], bitptr & 7, len);
      000BC2 C0 06            [24] 3295 	push	ar6
      000BC4 C0 07            [24] 3296 	push	ar7
      000BC6 E5 81            [12] 3297 	mov	a,sp
      000BC8 24 EF            [12] 3298 	add	a,#0xef
      000BCA F8               [12] 3299 	mov	r0,a
      000BCB 74 07            [12] 3300 	mov	a,#0x07
      000BCD 56               [12] 3301 	anl	a,@r0
      000BCE FD               [12] 3302 	mov	r5,a
      000BCF 7F 00            [12] 3303 	mov	r7,#0x00
      000BD1 E5 81            [12] 3304 	mov	a,sp
      000BD3 24 F1            [12] 3305 	add	a,#0xf1
      000BD5 F8               [12] 3306 	mov	r0,a
      000BD6 A6 05            [24] 3307 	mov	@r0,ar5
      000BD8 08               [12] 3308 	inc	r0
      000BD9 A6 07            [24] 3309 	mov	@r0,ar7
      000BDB E5 81            [12] 3310 	mov	a,sp
      000BDD 24 F7            [12] 3311 	add	a,#0xf7
      000BDF F8               [12] 3312 	mov	r0,a
      000BE0 E5 81            [12] 3313 	mov	a,sp
      000BE2 24 F3            [12] 3314 	add	a,#0xf3
      000BE4 F9               [12] 3315 	mov	r1,a
      000BE5 E7               [12] 3316 	mov	a,@r1
      000BE6 26               [12] 3317 	add	a,@r0
      000BE7 FB               [12] 3318 	mov	r3,a
      000BE8 09               [12] 3319 	inc	r1
      000BE9 E7               [12] 3320 	mov	a,@r1
      000BEA 08               [12] 3321 	inc	r0
      000BEB 36               [12] 3322 	addc	a,@r0
      000BEC FC               [12] 3323 	mov	r4,a
      000BED 08               [12] 3324 	inc	r0
      000BEE 86 06            [24] 3325 	mov	ar6,@r0
      000BF0 E5 81            [12] 3326 	mov	a,sp
      000BF2 24 E9            [12] 3327 	add	a,#0xe9
      000BF4 F8               [12] 3328 	mov	r0,a
      000BF5 86 02            [24] 3329 	mov	ar2,@r0
      000BF7 7D 00            [12] 3330 	mov	r5,#0x00
      000BF9 7F 40            [12] 3331 	mov	r7,#0x40
      000BFB C0 07            [24] 3332 	push	ar7
      000BFD C0 06            [24] 3333 	push	ar6
      000BFF E5 81            [12] 3334 	mov	a,sp
      000C01 24 F3            [12] 3335 	add	a,#0xf3
      000C03 F8               [12] 3336 	mov	r0,a
      000C04 E6               [12] 3337 	mov	a,@r0
      000C05 C0 E0            [24] 3338 	push	acc
      000C07 08               [12] 3339 	inc	r0
      000C08 E6               [12] 3340 	mov	a,@r0
      000C09 C0 E0            [24] 3341 	push	acc
      000C0B E5 81            [12] 3342 	mov	a,sp
      000C0D 24 ED            [12] 3343 	add	a,#0xed
      000C0F F8               [12] 3344 	mov	r0,a
      000C10 E6               [12] 3345 	mov	a,@r0
      000C11 C0 E0            [24] 3346 	push	acc
      000C13 08               [12] 3347 	inc	r0
      000C14 E6               [12] 3348 	mov	a,@r0
      000C15 C0 E0            [24] 3349 	push	acc
      000C17 C0 03            [24] 3350 	push	ar3
      000C19 C0 04            [24] 3351 	push	ar4
      000C1B C0 06            [24] 3352 	push	ar6
      000C1D 8A 82            [24] 3353 	mov	dpl,r2
      000C1F 8D 83            [24] 3354 	mov	dph,r5
      000C21 8F F0            [24] 3355 	mov	b,r7
      000C23 12r00r71         [24] 3356 	lcall	_get_bits
      000C26 E5 81            [12] 3357 	mov	a,sp
      000C28 24 F9            [12] 3358 	add	a,#0xf9
      000C2A F5 81            [12] 3359 	mov	sp,a
      000C2C D0 06            [24] 3360 	pop	ar6
      000C2E D0 07            [24] 3361 	pop	ar7
                                   3362 ;	../../core/net/rime/chameleon-bitopt.c:350: packetbuf_set_addr(a->type, &addr);
      000C30 E5 81            [12] 3363 	mov	a,sp
      000C32 24 EE            [12] 3364 	add	a,#0xee
      000C34 F8               [12] 3365 	mov	r0,a
      000C35 86 05            [24] 3366 	mov	ar5,@r0
      000C37 7E 00            [12] 3367 	mov	r6,#0x00
      000C39 7F 40            [12] 3368 	mov	r7,#0x40
      000C3B E5 81            [12] 3369 	mov	a,sp
      000C3D 24 EB            [12] 3370 	add	a,#0xeb
      000C3F F8               [12] 3371 	mov	r0,a
      000C40 86 82            [24] 3372 	mov	dpl,@r0
      000C42 08               [12] 3373 	inc	r0
      000C43 86 83            [24] 3374 	mov	dph,@r0
      000C45 08               [12] 3375 	inc	r0
      000C46 86 F0            [24] 3376 	mov	b,@r0
      000C48 12r00r00         [24] 3377 	lcall	__gptrget
      000C4B FC               [12] 3378 	mov	r4,a
      000C4C C0 07            [24] 3379 	push	ar7
      000C4E C0 06            [24] 3380 	push	ar6
      000C50 C0 05            [24] 3381 	push	ar5
      000C52 C0 06            [24] 3382 	push	ar6
      000C54 C0 07            [24] 3383 	push	ar7
      000C56 8C 82            [24] 3384 	mov	dpl,r4
      000C58 12r00r00         [24] 3385 	lcall	_packetbuf_set_addr
      000C5B 15 81            [12] 3386 	dec	sp
      000C5D 15 81            [12] 3387 	dec	sp
      000C5F 15 81            [12] 3388 	dec	sp
      000C61 D0 06            [24] 3389 	pop	ar6
      000C63 D0 07            [24] 3390 	pop	ar7
      000C65 D0 07            [24] 3391 	pop	ar7
      000C67 D0 06            [24] 3392 	pop	ar6
      000C69 02r0Dr13         [24] 3393 	ljmp	00109$
      000C6C                       3394 00108$:
                                   3395 ;	../../core/net/rime/chameleon-bitopt.c:352: packetbuf_attr_t val = 0;
      000C6C C0 06            [24] 3396 	push	ar6
      000C6E C0 07            [24] 3397 	push	ar7
      000C70 E5 81            [12] 3398 	mov	a,sp
      000C72 24 FD            [12] 3399 	add	a,#0xfd
      000C74 F8               [12] 3400 	mov	r0,a
      000C75 E4               [12] 3401 	clr	a
      000C76 F6               [12] 3402 	mov	@r0,a
      000C77 08               [12] 3403 	inc	r0
      000C78 F6               [12] 3404 	mov	@r0,a
                                   3405 ;	../../core/net/rime/chameleon-bitopt.c:353: get_bits((uint8_t *)&val, &hdrptr[byteptr], bitptr & 7, len);
      000C79 E5 81            [12] 3406 	mov	a,sp
      000C7B 24 EF            [12] 3407 	add	a,#0xef
      000C7D F8               [12] 3408 	mov	r0,a
      000C7E 74 07            [12] 3409 	mov	a,#0x07
      000C80 56               [12] 3410 	anl	a,@r0
      000C81 FC               [12] 3411 	mov	r4,a
      000C82 7D 00            [12] 3412 	mov	r5,#0x00
      000C84 E5 81            [12] 3413 	mov	a,sp
      000C86 24 F1            [12] 3414 	add	a,#0xf1
      000C88 F8               [12] 3415 	mov	r0,a
      000C89 A6 04            [24] 3416 	mov	@r0,ar4
      000C8B 08               [12] 3417 	inc	r0
      000C8C A6 05            [24] 3418 	mov	@r0,ar5
      000C8E E5 81            [12] 3419 	mov	a,sp
      000C90 24 F7            [12] 3420 	add	a,#0xf7
      000C92 F8               [12] 3421 	mov	r0,a
      000C93 E5 81            [12] 3422 	mov	a,sp
      000C95 24 F3            [12] 3423 	add	a,#0xf3
      000C97 F9               [12] 3424 	mov	r1,a
      000C98 E7               [12] 3425 	mov	a,@r1
      000C99 26               [12] 3426 	add	a,@r0
      000C9A FA               [12] 3427 	mov	r2,a
      000C9B 09               [12] 3428 	inc	r1
      000C9C E7               [12] 3429 	mov	a,@r1
      000C9D 08               [12] 3430 	inc	r0
      000C9E 36               [12] 3431 	addc	a,@r0
      000C9F FB               [12] 3432 	mov	r3,a
      000CA0 08               [12] 3433 	inc	r0
      000CA1 86 07            [24] 3434 	mov	ar7,@r0
      000CA3 E5 81            [12] 3435 	mov	a,sp
      000CA5 24 FD            [12] 3436 	add	a,#0xfd
      000CA7 FC               [12] 3437 	mov	r4,a
      000CA8 7D 00            [12] 3438 	mov	r5,#0x00
      000CAA 7E 40            [12] 3439 	mov	r6,#0x40
      000CAC C0 07            [24] 3440 	push	ar7
      000CAE C0 06            [24] 3441 	push	ar6
      000CB0 E5 81            [12] 3442 	mov	a,sp
      000CB2 24 F3            [12] 3443 	add	a,#0xf3
      000CB4 F8               [12] 3444 	mov	r0,a
      000CB5 E6               [12] 3445 	mov	a,@r0
      000CB6 C0 E0            [24] 3446 	push	acc
      000CB8 08               [12] 3447 	inc	r0
      000CB9 E6               [12] 3448 	mov	a,@r0
      000CBA C0 E0            [24] 3449 	push	acc
      000CBC E5 81            [12] 3450 	mov	a,sp
      000CBE 24 ED            [12] 3451 	add	a,#0xed
      000CC0 F8               [12] 3452 	mov	r0,a
      000CC1 E6               [12] 3453 	mov	a,@r0
      000CC2 C0 E0            [24] 3454 	push	acc
      000CC4 08               [12] 3455 	inc	r0
      000CC5 E6               [12] 3456 	mov	a,@r0
      000CC6 C0 E0            [24] 3457 	push	acc
      000CC8 C0 02            [24] 3458 	push	ar2
      000CCA C0 03            [24] 3459 	push	ar3
      000CCC C0 07            [24] 3460 	push	ar7
      000CCE 8C 82            [24] 3461 	mov	dpl,r4
      000CD0 8D 83            [24] 3462 	mov	dph,r5
      000CD2 8E F0            [24] 3463 	mov	b,r6
      000CD4 12r00r71         [24] 3464 	lcall	_get_bits
      000CD7 E5 81            [12] 3465 	mov	a,sp
      000CD9 24 F9            [12] 3466 	add	a,#0xf9
      000CDB F5 81            [12] 3467 	mov	sp,a
      000CDD D0 06            [24] 3468 	pop	ar6
      000CDF D0 07            [24] 3469 	pop	ar7
                                   3470 ;	../../core/net/rime/chameleon-bitopt.c:355: packetbuf_set_attr(a->type, val);
      000CE1 E5 81            [12] 3471 	mov	a,sp
      000CE3 24 EB            [12] 3472 	add	a,#0xeb
      000CE5 F8               [12] 3473 	mov	r0,a
      000CE6 86 82            [24] 3474 	mov	dpl,@r0
      000CE8 08               [12] 3475 	inc	r0
      000CE9 86 83            [24] 3476 	mov	dph,@r0
      000CEB 08               [12] 3477 	inc	r0
      000CEC 86 F0            [24] 3478 	mov	b,@r0
      000CEE 12r00r00         [24] 3479 	lcall	__gptrget
      000CF1 FF               [12] 3480 	mov	r7,a
      000CF2 C0 07            [24] 3481 	push	ar7
      000CF4 C0 06            [24] 3482 	push	ar6
      000CF6 E5 81            [12] 3483 	mov	a,sp
      000CF8 24 FB            [12] 3484 	add	a,#0xfb
      000CFA F8               [12] 3485 	mov	r0,a
      000CFB E6               [12] 3486 	mov	a,@r0
      000CFC C0 E0            [24] 3487 	push	acc
      000CFE 08               [12] 3488 	inc	r0
      000CFF E6               [12] 3489 	mov	a,@r0
      000D00 C0 E0            [24] 3490 	push	acc
      000D02 8F 82            [24] 3491 	mov	dpl,r7
      000D04 12r00r00         [24] 3492 	lcall	_packetbuf_set_attr
      000D07 15 81            [12] 3493 	dec	sp
      000D09 15 81            [12] 3494 	dec	sp
      000D0B D0 06            [24] 3495 	pop	ar6
      000D0D D0 07            [24] 3496 	pop	ar7
                                   3497 ;	../../core/net/rime/chameleon-bitopt.c:363: return c;
      000D0F D0 07            [24] 3498 	pop	ar7
      000D11 D0 06            [24] 3499 	pop	ar6
                                   3500 ;	../../core/net/rime/chameleon-bitopt.c:355: packetbuf_set_attr(a->type, val);
      000D13                       3501 00109$:
                                   3502 ;	../../core/net/rime/chameleon-bitopt.c:361: bitptr += len;
      000D13 E5 81            [12] 3503 	mov	a,sp
      000D15 24 F7            [12] 3504 	add	a,#0xf7
      000D17 F8               [12] 3505 	mov	r0,a
      000D18 E6               [12] 3506 	mov	a,@r0
      000D19 2E               [12] 3507 	add	a,r6
      000D1A FE               [12] 3508 	mov	r6,a
      000D1B 08               [12] 3509 	inc	r0
      000D1C E6               [12] 3510 	mov	a,@r0
      000D1D 3F               [12] 3511 	addc	a,r7
      000D1E FF               [12] 3512 	mov	r7,a
                                   3513 ;	../../core/net/rime/chameleon-bitopt.c:330: for(a = c->attrlist; a->type != PACKETBUF_ATTR_NONE; ++a) {
      000D1F E5 81            [12] 3514 	mov	a,sp
      000D21 24 ED            [12] 3515 	add	a,#0xed
      000D23 F8               [12] 3516 	mov	r0,a
      000D24 74 02            [12] 3517 	mov	a,#0x02
      000D26 26               [12] 3518 	add	a,@r0
      000D27 F6               [12] 3519 	mov	@r0,a
      000D28 E4               [12] 3520 	clr	a
      000D29 08               [12] 3521 	inc	r0
      000D2A 36               [12] 3522 	addc	a,@r0
      000D2B F6               [12] 3523 	mov	@r0,a
      000D2C 02r0Br54         [24] 3524 	ljmp	00112$
      000D2F                       3525 00110$:
                                   3526 ;	../../core/net/rime/chameleon-bitopt.c:363: return c;
      000D2F E5 81            [12] 3527 	mov	a,sp
      000D31 24 FC            [12] 3528 	add	a,#0xfc
      000D33 F8               [12] 3529 	mov	r0,a
      000D34 86 82            [24] 3530 	mov	dpl,@r0
      000D36 08               [12] 3531 	inc	r0
      000D37 86 83            [24] 3532 	mov	dph,@r0
      000D39 08               [12] 3533 	inc	r0
      000D3A 86 F0            [24] 3534 	mov	b,@r0
      000D3C                       3535 00114$:
                                   3536 ;	../../core/net/rime/chameleon-bitopt.c:364: }
      000D3C C8               [12] 3537 	xch	a,r0
      000D3D E5 81            [12] 3538 	mov	a,sp
      000D3F 24 EA            [12] 3539 	add	a,#0xea
      000D41 F5 81            [12] 3540 	mov	sp,a
      000D43 C8               [12] 3541 	xch	a,r0
      000D44 22               [24] 3542 	ret
                                   3543 	.area CSEG    (CODE)
                                   3544 	.area CONST   (CODE)
      000000                       3545 _bitmask:
      000000 00                    3546 	.db #0x00	; 0
      000001 80                    3547 	.db #0x80	; 128
      000002 C0                    3548 	.db #0xc0	; 192
      000003 E0                    3549 	.db #0xe0	; 224
      000004 F0                    3550 	.db #0xf0	; 240
      000005 F8                    3551 	.db #0xf8	; 248
      000006 FC                    3552 	.db #0xfc	; 252
      000007 FE                    3553 	.db #0xfe	; 254
      000008 FF                    3554 	.db #0xff	; 255
      000009                       3555 _chameleon_bitopt:
      000009r10s0A                 3556 	.byte _unpack_header, (_unpack_header >> 8)
      00000BrFEs06                 3557 	.byte _pack_header, (_pack_header >> 8)
      00000Dr39s03                 3558 	.byte _header_size, (_header_size >> 8)
                                   3559 	.area XINIT   (CODE)
                                   3560 	.area CABS    (ABS,CODE)
