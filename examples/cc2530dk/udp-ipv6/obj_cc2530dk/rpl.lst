                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module rpl
                                      6 	.optsdcc -mmcs51 --model-huge
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _rpl_ipv6_neighbor_callback
                                     12 	.globl _neighbor_info_subscribe
                                     13 	.globl _rpl_reset_periodic_timer
                                     14 	.globl _rpl_find_parent_any_dag
                                     15 	.globl _list_item_next
                                     16 	.globl _uip_ds6_set_addr_iid
                                     17 	.globl _uip_ds6_maddr_add
                                     18 	.globl _uip_ds6_route_list_head
                                     19 	.globl _uip_ds6_route_rm_by_nexthop
                                     20 	.globl _uip_ds6_route_rm
                                     21 	.globl _uip_ds6_route_add
                                     22 	.globl _uip_ds6_route_lookup
                                     23 	.globl ___memcpy
                                     24 	.globl _memcmp
                                     25 	.globl _ACTIVE
                                     26 	.globl _TX_BYTE
                                     27 	.globl _RX_BYTE
                                     28 	.globl _ERR
                                     29 	.globl _FE
                                     30 	.globl _SLAVE
                                     31 	.globl _RE
                                     32 	.globl _MODE
                                     33 	.globl _T3OVFIF
                                     34 	.globl _T3CH0IF
                                     35 	.globl _T3CH1IF
                                     36 	.globl _T4OVFIF
                                     37 	.globl _T4CH0IF
                                     38 	.globl _T4CH1IF
                                     39 	.globl _OVFIM
                                     40 	.globl _B_0
                                     41 	.globl _B_1
                                     42 	.globl _B_2
                                     43 	.globl _B_3
                                     44 	.globl _B_4
                                     45 	.globl _B_5
                                     46 	.globl _B_6
                                     47 	.globl _B_7
                                     48 	.globl _P2IF
                                     49 	.globl _UTX0IF
                                     50 	.globl _UTX1IF
                                     51 	.globl _P1IF
                                     52 	.globl _WDTIF
                                     53 	.globl _ACC_0
                                     54 	.globl _ACC_1
                                     55 	.globl _ACC_2
                                     56 	.globl _ACC_3
                                     57 	.globl _ACC_4
                                     58 	.globl _ACC_5
                                     59 	.globl _ACC_6
                                     60 	.globl _ACC_7
                                     61 	.globl _P
                                     62 	.globl _F1
                                     63 	.globl _OV
                                     64 	.globl _RS0
                                     65 	.globl _RS1
                                     66 	.globl _F0
                                     67 	.globl _AC
                                     68 	.globl _CY
                                     69 	.globl _DMAIF
                                     70 	.globl _T1IF
                                     71 	.globl _T2IF
                                     72 	.globl _T3IF
                                     73 	.globl _T4IF
                                     74 	.globl _P0IF
                                     75 	.globl _STIF
                                     76 	.globl _DMAIE
                                     77 	.globl _T1IE
                                     78 	.globl _T2IE
                                     79 	.globl _T3IE
                                     80 	.globl _T4IE
                                     81 	.globl _P0IE
                                     82 	.globl _RFERRIE
                                     83 	.globl _ADCIE
                                     84 	.globl _URX0IE
                                     85 	.globl _URX1IE
                                     86 	.globl _ENCIE
                                     87 	.globl _STIE
                                     88 	.globl _EA
                                     89 	.globl _P2_0
                                     90 	.globl _P2_1
                                     91 	.globl _P2_2
                                     92 	.globl _P2_3
                                     93 	.globl _P2_4
                                     94 	.globl _P2_5
                                     95 	.globl _P2_6
                                     96 	.globl _P2_7
                                     97 	.globl _ENCIF_0
                                     98 	.globl _ENCIF_1
                                     99 	.globl _P1_0
                                    100 	.globl _P1_1
                                    101 	.globl _P1_2
                                    102 	.globl _P1_3
                                    103 	.globl _P1_4
                                    104 	.globl _P1_5
                                    105 	.globl _P1_6
                                    106 	.globl _P1_7
                                    107 	.globl _IT0
                                    108 	.globl _RFERRIF
                                    109 	.globl _IT1
                                    110 	.globl _URX0IF
                                    111 	.globl _ADCIF
                                    112 	.globl _URX1IF
                                    113 	.globl _P0_0
                                    114 	.globl _P0_1
                                    115 	.globl _P0_2
                                    116 	.globl _P0_3
                                    117 	.globl _P0_4
                                    118 	.globl _P0_5
                                    119 	.globl _P0_6
                                    120 	.globl _P0_7
                                    121 	.globl _WDCTL
                                    122 	.globl _U1GCR
                                    123 	.globl _U1UCR
                                    124 	.globl _U1BAUD
                                    125 	.globl _U1DBUF
                                    126 	.globl _U1CSR
                                    127 	.globl _U0GCR
                                    128 	.globl _U0UCR
                                    129 	.globl _U0BAUD
                                    130 	.globl _U0DBUF
                                    131 	.globl _U0CSR
                                    132 	.globl _TIMIF
                                    133 	.globl _T4CC1
                                    134 	.globl _T4CCTL1
                                    135 	.globl _T4CC0
                                    136 	.globl _T4CCTL0
                                    137 	.globl _T4CTL
                                    138 	.globl _T4CNT
                                    139 	.globl _T3CC1
                                    140 	.globl _T3CCTL1
                                    141 	.globl _T3CC0
                                    142 	.globl _T3CCTL0
                                    143 	.globl _T3CTL
                                    144 	.globl _T3CNT
                                    145 	.globl _T2MSEL
                                    146 	.globl _T2IRQM
                                    147 	.globl _T2MOVF2
                                    148 	.globl _T2MOVF1
                                    149 	.globl _T2MOVF0
                                    150 	.globl _T2M1
                                    151 	.globl _T2M0
                                    152 	.globl _T2IRQF
                                    153 	.globl _T2EVTCFG
                                    154 	.globl _T2CTRL
                                    155 	.globl _T1STAT
                                    156 	.globl _T1CCTL2
                                    157 	.globl _T1CCTL1
                                    158 	.globl _T1CCTL0
                                    159 	.globl _T1CTL
                                    160 	.globl _T1CNTH
                                    161 	.globl _T1CNTL
                                    162 	.globl _T1CC2H
                                    163 	.globl _T1CC2L
                                    164 	.globl _T1CC1H
                                    165 	.globl _T1CC1L
                                    166 	.globl _T1CC0H
                                    167 	.globl _T1CC0L
                                    168 	.globl _CLKCONSTA
                                    169 	.globl _CLKCONCMD
                                    170 	.globl _SLEEPSTA
                                    171 	.globl _SLEEPCMD
                                    172 	.globl _STLOAD
                                    173 	.globl _ST2
                                    174 	.globl _ST1
                                    175 	.globl _ST0
                                    176 	.globl _RFERRF
                                    177 	.globl _RFIRQF0
                                    178 	.globl _RFST
                                    179 	.globl _RFD
                                    180 	.globl _RFIRQF1
                                    181 	.globl _PSBANK
                                    182 	.globl _FMAP
                                    183 	.globl _MEMCTR
                                    184 	.globl __XPAGE
                                    185 	.globl _MPAGE
                                    186 	.globl _PMUX
                                    187 	.globl _P2DIR
                                    188 	.globl _P1DIR
                                    189 	.globl _P0DIR
                                    190 	.globl _P2INP
                                    191 	.globl _P1INP
                                    192 	.globl _P2SEL
                                    193 	.globl _P1SEL
                                    194 	.globl _P0SEL
                                    195 	.globl _APCFG
                                    196 	.globl _PERCFG
                                    197 	.globl _P0INP
                                    198 	.globl _P2IEN
                                    199 	.globl _P1IEN
                                    200 	.globl _P0IEN
                                    201 	.globl _PICTL
                                    202 	.globl _P2IFG
                                    203 	.globl _P1IFG
                                    204 	.globl _P0IFG
                                    205 	.globl _DMAREQ
                                    206 	.globl _DMAARM
                                    207 	.globl _DMA0CFGH
                                    208 	.globl _DMA0CFGL
                                    209 	.globl _DMA1CFGH
                                    210 	.globl _DMA1CFGL
                                    211 	.globl _DMAIRQ
                                    212 	.globl _ENCCS
                                    213 	.globl _ENCDO
                                    214 	.globl _ENCDI
                                    215 	.globl _RNDH
                                    216 	.globl _RNDL
                                    217 	.globl _ADCH
                                    218 	.globl _ADCL
                                    219 	.globl _ADCCON3
                                    220 	.globl _ADCCON2
                                    221 	.globl _ADCCON1
                                    222 	.globl _B
                                    223 	.globl _IRCON2
                                    224 	.globl _ACC
                                    225 	.globl _PSW
                                    226 	.globl _IRCON
                                    227 	.globl _IP1
                                    228 	.globl _IEN1
                                    229 	.globl _IP0
                                    230 	.globl _IEN0
                                    231 	.globl _P2
                                    232 	.globl _S1CON
                                    233 	.globl _IEN2
                                    234 	.globl _S0CON
                                    235 	.globl _DPS
                                    236 	.globl _P1
                                    237 	.globl _TCON
                                    238 	.globl _PCON
                                    239 	.globl _DPH1
                                    240 	.globl _DPL1
                                    241 	.globl _DPH0
                                    242 	.globl _DPL0
                                    243 	.globl _SP
                                    244 	.globl _P0
                                    245 	.globl _X_IEEE_ADDR
                                    246 	.globl _X_INFOPAGE
                                    247 	.globl _X_P2DIR
                                    248 	.globl _X_P1DIR
                                    249 	.globl _X_P0DIR
                                    250 	.globl _X_U1GCR
                                    251 	.globl _X_U1UCR
                                    252 	.globl _X_U1BAUD
                                    253 	.globl _X_U1DBUF
                                    254 	.globl _X_U1CSR
                                    255 	.globl _X_P2INP
                                    256 	.globl _X_P1INP
                                    257 	.globl _X_P2SEL
                                    258 	.globl _X_P1SEL
                                    259 	.globl _X_P0SEL
                                    260 	.globl _X_APCFG
                                    261 	.globl _X_PERCFG
                                    262 	.globl _X_T4CC1
                                    263 	.globl _X_T4CCTL1
                                    264 	.globl _X_T4CC0
                                    265 	.globl _X_T4CCTL0
                                    266 	.globl _X_T4CTL
                                    267 	.globl _X_T4CNT
                                    268 	.globl _X_RFIRQF0
                                    269 	.globl _X_T1CCTL2
                                    270 	.globl _X_T1CCTL1
                                    271 	.globl _X_T1CCTL0
                                    272 	.globl _X_T1CTL
                                    273 	.globl _X_T1CNTH
                                    274 	.globl _X_T1CNTL
                                    275 	.globl _X_RFST
                                    276 	.globl _X_T1CC2H
                                    277 	.globl _X_T1CC2L
                                    278 	.globl _X_T1CC1H
                                    279 	.globl _X_T1CC1L
                                    280 	.globl _X_T1CC0H
                                    281 	.globl _X_T1CC0L
                                    282 	.globl _X_RFD
                                    283 	.globl _X_TIMIF
                                    284 	.globl _X_DMAREQ
                                    285 	.globl _X_DMAARM
                                    286 	.globl _X_DMA0CFGH
                                    287 	.globl _X_DMA0CFGL
                                    288 	.globl _X_DMA1CFGH
                                    289 	.globl _X_DMA1CFGL
                                    290 	.globl _X_DMAIRQ
                                    291 	.globl _X_T3CC1
                                    292 	.globl _X_T3CCTL1
                                    293 	.globl _X_T3CC0
                                    294 	.globl _X_T3CCTL0
                                    295 	.globl _X_T3CTL
                                    296 	.globl _X_T3CNT
                                    297 	.globl _X_WDCTL
                                    298 	.globl _X_MEMCTR
                                    299 	.globl _X_CLKCONCMD
                                    300 	.globl _X_U0GCR
                                    301 	.globl _X_U0UCR
                                    302 	.globl _X_T2MSEL
                                    303 	.globl _X_U0BAUD
                                    304 	.globl _X_U0DBUF
                                    305 	.globl _X_RFERRF
                                    306 	.globl _X_SLEEPCMD
                                    307 	.globl _X_RNDH
                                    308 	.globl _X_RNDL
                                    309 	.globl _X_ADCH
                                    310 	.globl _X_ADCL
                                    311 	.globl _X_ADCCON3
                                    312 	.globl _X_ADCCON2
                                    313 	.globl _X_ADCCON1
                                    314 	.globl _X_ENCCS
                                    315 	.globl _X_ENCDO
                                    316 	.globl _X_ENCDI
                                    317 	.globl _X_T1STAT
                                    318 	.globl _X_PMUX
                                    319 	.globl _X_STLOAD
                                    320 	.globl _X_P2IEN
                                    321 	.globl _X_P0IEN
                                    322 	.globl _X_T2IRQM
                                    323 	.globl _X_T2MOVF2
                                    324 	.globl _X_T2MOVF1
                                    325 	.globl _X_T2MOVF0
                                    326 	.globl _X_T2M1
                                    327 	.globl _X_T2M0
                                    328 	.globl _X_T2IRQF
                                    329 	.globl _X_P2
                                    330 	.globl _X_PSBANK
                                    331 	.globl _X_FMAP
                                    332 	.globl _X_CLKCONSTA
                                    333 	.globl _X_SLEEPSTA
                                    334 	.globl _X_T2EVTCFG
                                    335 	.globl _X_ST2
                                    336 	.globl _X_ST1
                                    337 	.globl _X_ST0
                                    338 	.globl _X_T2CTRL
                                    339 	.globl _X__XPAGE
                                    340 	.globl _X_MPAGE
                                    341 	.globl _X_RFIRQF1
                                    342 	.globl _X_P1
                                    343 	.globl _X_P0INP
                                    344 	.globl _X_P1IEN
                                    345 	.globl _X_PICTL
                                    346 	.globl _X_P2IFG
                                    347 	.globl _X_P1IFG
                                    348 	.globl _X_P0IFG
                                    349 	.globl _X_U0CSR
                                    350 	.globl _X_P0
                                    351 	.globl _USBF5
                                    352 	.globl _USBF4
                                    353 	.globl _USBF3
                                    354 	.globl _USBF2
                                    355 	.globl _USBF1
                                    356 	.globl _USBF0
                                    357 	.globl _USBCNTH
                                    358 	.globl _USBCNTL
                                    359 	.globl _USBCNT0
                                    360 	.globl _USBCSOH
                                    361 	.globl _USBCSOL
                                    362 	.globl _USBMAXO
                                    363 	.globl _USBCSIH
                                    364 	.globl _USBCSIL
                                    365 	.globl _USBCS0
                                    366 	.globl _USBMAXI
                                    367 	.globl _USBCTRL
                                    368 	.globl _USBINDEX
                                    369 	.globl _USBFRMH
                                    370 	.globl _USBFRML
                                    371 	.globl _USBCIE
                                    372 	.globl _USBOIE
                                    373 	.globl _USBIIE
                                    374 	.globl _USBCIF
                                    375 	.globl _USBOIF
                                    376 	.globl _USBIIF
                                    377 	.globl _USBPOW
                                    378 	.globl _USBADDR
                                    379 	.globl _CSPT
                                    380 	.globl _CSPZ
                                    381 	.globl _CSPY
                                    382 	.globl _CSPX
                                    383 	.globl _CSPSTAT
                                    384 	.globl _CSPCTRL
                                    385 	.globl _CSPPROG23
                                    386 	.globl _CSPPROG22
                                    387 	.globl _CSPPROG21
                                    388 	.globl _CSPPROG20
                                    389 	.globl _CSPPROG19
                                    390 	.globl _CSPPROG18
                                    391 	.globl _CSPPROG17
                                    392 	.globl _CSPPROG16
                                    393 	.globl _CSPPROG15
                                    394 	.globl _CSPPROG14
                                    395 	.globl _CSPPROG13
                                    396 	.globl _CSPPROG12
                                    397 	.globl _CSPPROG11
                                    398 	.globl _CSPPROG10
                                    399 	.globl _CSPPROG9
                                    400 	.globl _CSPPROG8
                                    401 	.globl _CSPPROG7
                                    402 	.globl _CSPPROG6
                                    403 	.globl _CSPPROG5
                                    404 	.globl _CSPPROG4
                                    405 	.globl _CSPPROG3
                                    406 	.globl _CSPPROG2
                                    407 	.globl _CSPPROG1
                                    408 	.globl _CSPPROG0
                                    409 	.globl _RFC_OBS_CTRL2
                                    410 	.globl _RFC_OBS_CTRL1
                                    411 	.globl _RFC_OBS_CTRL0
                                    412 	.globl _TXFILTCFG
                                    413 	.globl _PTEST1
                                    414 	.globl _PTEST0
                                    415 	.globl _ATEST
                                    416 	.globl _DACTEST2
                                    417 	.globl _DACTEST1
                                    418 	.globl _DACTEST0
                                    419 	.globl _MDMTEST1
                                    420 	.globl _MDMTEST0
                                    421 	.globl _ADCTEST2
                                    422 	.globl _ADCTEST1
                                    423 	.globl _ADCTEST0
                                    424 	.globl _AGCCTRL3
                                    425 	.globl _AGCCTRL2
                                    426 	.globl _AGCCTRL1
                                    427 	.globl _AGCCTRL0
                                    428 	.globl _FSCAL3
                                    429 	.globl _FSCAL2
                                    430 	.globl _FSCAL1
                                    431 	.globl _FSCAL0
                                    432 	.globl _FSCTRL
                                    433 	.globl _RXCTRL
                                    434 	.globl _FREQEST
                                    435 	.globl _MDMCTRL1
                                    436 	.globl _MDMCTRL0
                                    437 	.globl _RFRND
                                    438 	.globl _RFERRM
                                    439 	.globl _RFIRQM1
                                    440 	.globl _RFIRQM0
                                    441 	.globl _TXLAST_PTR
                                    442 	.globl _TXFIRST_PTR
                                    443 	.globl _RXP1_PTR
                                    444 	.globl _RXLAST_PTR
                                    445 	.globl _RXFIRST_PTR
                                    446 	.globl _TXFIFOCNT
                                    447 	.globl _RXFIFOCNT
                                    448 	.globl _RXFIRST
                                    449 	.globl _RSSISTAT
                                    450 	.globl _RSSI
                                    451 	.globl _CCACTRL1
                                    452 	.globl _CCACTRL0
                                    453 	.globl _FSMCTRL
                                    454 	.globl _FIFOPCTRL
                                    455 	.globl _FSMSTAT1
                                    456 	.globl _FSMSTAT0
                                    457 	.globl _TXCTRL
                                    458 	.globl _TXPOWER
                                    459 	.globl _FREQCTRL
                                    460 	.globl _FREQTUNE
                                    461 	.globl _RXMASKCLR
                                    462 	.globl _RXMASKSET
                                    463 	.globl _RXENABLE
                                    464 	.globl _FRMCTRL1
                                    465 	.globl _FRMCTRL0
                                    466 	.globl _SRCEXTEN2
                                    467 	.globl _SRCEXTEN1
                                    468 	.globl _SRCEXTEN0
                                    469 	.globl _SRCSHORTEN2
                                    470 	.globl _SRCSHORTEN1
                                    471 	.globl _SRCSHORTEN0
                                    472 	.globl _SRCMATCH
                                    473 	.globl _FRMFILT1
                                    474 	.globl _FRMFILT0
                                    475 	.globl _SHORT_ADDR1
                                    476 	.globl _SHORT_ADDR0
                                    477 	.globl _PAN_ID1
                                    478 	.globl _PAN_ID0
                                    479 	.globl _EXT_ADDR7
                                    480 	.globl _EXT_ADDR6
                                    481 	.globl _EXT_ADDR5
                                    482 	.globl _EXT_ADDR4
                                    483 	.globl _EXT_ADDR3
                                    484 	.globl _EXT_ADDR2
                                    485 	.globl _EXT_ADDR1
                                    486 	.globl _EXT_ADDR0
                                    487 	.globl _SRCSHORTPENDEN2
                                    488 	.globl _SRCSHORTPENDEN1
                                    489 	.globl _SRCSHORTPENDEN0
                                    490 	.globl _SRCEXTPENDEN2
                                    491 	.globl _SRCEXTPENDEN1
                                    492 	.globl _SRCEXTPENDEN0
                                    493 	.globl _SRCRESINDEX
                                    494 	.globl _SRCRESMASK2
                                    495 	.globl _SRCRESMASK1
                                    496 	.globl _SRCRESMASK0
                                    497 	.globl _SRC_ADDR_TABLE
                                    498 	.globl _TXFIFO
                                    499 	.globl _RXFIFO
                                    500 	.globl _RFCORE_RAM
                                    501 	.globl _CMPCTL
                                    502 	.globl _OPAMPS
                                    503 	.globl _OPAMPC
                                    504 	.globl _STCV2
                                    505 	.globl _STCV1
                                    506 	.globl _STCV0
                                    507 	.globl _STCS
                                    508 	.globl _STCC
                                    509 	.globl _T1CC4H
                                    510 	.globl _T1CC4L
                                    511 	.globl _T1CC3H
                                    512 	.globl _T1CC3L
                                    513 	.globl _XX_T1CC2H
                                    514 	.globl _XX_T1CC2L
                                    515 	.globl _XX_T1CC1H
                                    516 	.globl _XX_T1CC1L
                                    517 	.globl _XX_T1CC0H
                                    518 	.globl _XX_T1CC0L
                                    519 	.globl _T1CCTL4
                                    520 	.globl _T1CCTL3
                                    521 	.globl _XX_T1CCTL2
                                    522 	.globl _XX_T1CCTL1
                                    523 	.globl _XX_T1CCTL0
                                    524 	.globl _CLD
                                    525 	.globl _IRCTL
                                    526 	.globl _CHIPINFO1
                                    527 	.globl _CHIPINFO0
                                    528 	.globl _FWDATA
                                    529 	.globl _FADDRH
                                    530 	.globl _FADDRL
                                    531 	.globl _FCTL
                                    532 	.globl _IVCTRL
                                    533 	.globl _BATTMON
                                    534 	.globl _SRCRC
                                    535 	.globl _DBGDATA
                                    536 	.globl _TESTREG0
                                    537 	.globl _CHIPID
                                    538 	.globl _CHVER
                                    539 	.globl _OBSSEL5
                                    540 	.globl _OBSSEL4
                                    541 	.globl _OBSSEL3
                                    542 	.globl _OBSSEL2
                                    543 	.globl _OBSSEL1
                                    544 	.globl _OBSSEL0
                                    545 	.globl _I2CIO
                                    546 	.globl _I2CWC
                                    547 	.globl _I2CADDR
                                    548 	.globl _I2CDATA
                                    549 	.globl _I2CSTAT
                                    550 	.globl _I2CCFG
                                    551 	.globl _OPAMPMC
                                    552 	.globl _MONMUX
                                    553 	.globl _rpl_purge_routes
                                    554 	.globl _rpl_remove_routes
                                    555 	.globl _rpl_remove_routes_by_nexthop
                                    556 	.globl _rpl_add_route
                                    557 	.globl _rpl_init
                                    558 ;--------------------------------------------------------
                                    559 ; special function registers
                                    560 ;--------------------------------------------------------
                                    561 	.area RSEG    (ABS,DATA)
      000000                        562 	.org 0x0000
                           000080   563 _P0	=	0x0080
                           000081   564 _SP	=	0x0081
                           000082   565 _DPL0	=	0x0082
                           000083   566 _DPH0	=	0x0083
                           000084   567 _DPL1	=	0x0084
                           000085   568 _DPH1	=	0x0085
                           000087   569 _PCON	=	0x0087
                           000088   570 _TCON	=	0x0088
                           000090   571 _P1	=	0x0090
                           000092   572 _DPS	=	0x0092
                           000098   573 _S0CON	=	0x0098
                           00009A   574 _IEN2	=	0x009a
                           00009B   575 _S1CON	=	0x009b
                           0000A0   576 _P2	=	0x00a0
                           0000A8   577 _IEN0	=	0x00a8
                           0000A9   578 _IP0	=	0x00a9
                           0000B8   579 _IEN1	=	0x00b8
                           0000B9   580 _IP1	=	0x00b9
                           0000C0   581 _IRCON	=	0x00c0
                           0000D0   582 _PSW	=	0x00d0
                           0000E0   583 _ACC	=	0x00e0
                           0000E8   584 _IRCON2	=	0x00e8
                           0000F0   585 _B	=	0x00f0
                           0000B4   586 _ADCCON1	=	0x00b4
                           0000B5   587 _ADCCON2	=	0x00b5
                           0000B6   588 _ADCCON3	=	0x00b6
                           0000BA   589 _ADCL	=	0x00ba
                           0000BB   590 _ADCH	=	0x00bb
                           0000BC   591 _RNDL	=	0x00bc
                           0000BD   592 _RNDH	=	0x00bd
                           0000B1   593 _ENCDI	=	0x00b1
                           0000B2   594 _ENCDO	=	0x00b2
                           0000B3   595 _ENCCS	=	0x00b3
                           0000D1   596 _DMAIRQ	=	0x00d1
                           0000D2   597 _DMA1CFGL	=	0x00d2
                           0000D3   598 _DMA1CFGH	=	0x00d3
                           0000D4   599 _DMA0CFGL	=	0x00d4
                           0000D5   600 _DMA0CFGH	=	0x00d5
                           0000D6   601 _DMAARM	=	0x00d6
                           0000D7   602 _DMAREQ	=	0x00d7
                           000089   603 _P0IFG	=	0x0089
                           00008A   604 _P1IFG	=	0x008a
                           00008B   605 _P2IFG	=	0x008b
                           00008C   606 _PICTL	=	0x008c
                           0000AB   607 _P0IEN	=	0x00ab
                           00008D   608 _P1IEN	=	0x008d
                           0000AC   609 _P2IEN	=	0x00ac
                           00008F   610 _P0INP	=	0x008f
                           0000F1   611 _PERCFG	=	0x00f1
                           0000F2   612 _APCFG	=	0x00f2
                           0000F3   613 _P0SEL	=	0x00f3
                           0000F4   614 _P1SEL	=	0x00f4
                           0000F5   615 _P2SEL	=	0x00f5
                           0000F6   616 _P1INP	=	0x00f6
                           0000F7   617 _P2INP	=	0x00f7
                           0000FD   618 _P0DIR	=	0x00fd
                           0000FE   619 _P1DIR	=	0x00fe
                           0000FF   620 _P2DIR	=	0x00ff
                           0000AE   621 _PMUX	=	0x00ae
                           000093   622 _MPAGE	=	0x0093
                           000093   623 __XPAGE	=	0x0093
                           0000C7   624 _MEMCTR	=	0x00c7
                           00009F   625 _FMAP	=	0x009f
                           00009F   626 _PSBANK	=	0x009f
                           000091   627 _RFIRQF1	=	0x0091
                           0000D9   628 _RFD	=	0x00d9
                           0000E1   629 _RFST	=	0x00e1
                           0000E9   630 _RFIRQF0	=	0x00e9
                           0000BF   631 _RFERRF	=	0x00bf
                           000095   632 _ST0	=	0x0095
                           000096   633 _ST1	=	0x0096
                           000097   634 _ST2	=	0x0097
                           0000AD   635 _STLOAD	=	0x00ad
                           0000BE   636 _SLEEPCMD	=	0x00be
                           00009D   637 _SLEEPSTA	=	0x009d
                           0000C6   638 _CLKCONCMD	=	0x00c6
                           00009E   639 _CLKCONSTA	=	0x009e
                           0000DA   640 _T1CC0L	=	0x00da
                           0000DB   641 _T1CC0H	=	0x00db
                           0000DC   642 _T1CC1L	=	0x00dc
                           0000DD   643 _T1CC1H	=	0x00dd
                           0000DE   644 _T1CC2L	=	0x00de
                           0000DF   645 _T1CC2H	=	0x00df
                           0000E2   646 _T1CNTL	=	0x00e2
                           0000E3   647 _T1CNTH	=	0x00e3
                           0000E4   648 _T1CTL	=	0x00e4
                           0000E5   649 _T1CCTL0	=	0x00e5
                           0000E6   650 _T1CCTL1	=	0x00e6
                           0000E7   651 _T1CCTL2	=	0x00e7
                           0000AF   652 _T1STAT	=	0x00af
                           000094   653 _T2CTRL	=	0x0094
                           00009C   654 _T2EVTCFG	=	0x009c
                           0000A1   655 _T2IRQF	=	0x00a1
                           0000A2   656 _T2M0	=	0x00a2
                           0000A3   657 _T2M1	=	0x00a3
                           0000A4   658 _T2MOVF0	=	0x00a4
                           0000A5   659 _T2MOVF1	=	0x00a5
                           0000A6   660 _T2MOVF2	=	0x00a6
                           0000A7   661 _T2IRQM	=	0x00a7
                           0000C3   662 _T2MSEL	=	0x00c3
                           0000CA   663 _T3CNT	=	0x00ca
                           0000CB   664 _T3CTL	=	0x00cb
                           0000CC   665 _T3CCTL0	=	0x00cc
                           0000CD   666 _T3CC0	=	0x00cd
                           0000CE   667 _T3CCTL1	=	0x00ce
                           0000CF   668 _T3CC1	=	0x00cf
                           0000EA   669 _T4CNT	=	0x00ea
                           0000EB   670 _T4CTL	=	0x00eb
                           0000EC   671 _T4CCTL0	=	0x00ec
                           0000ED   672 _T4CC0	=	0x00ed
                           0000EE   673 _T4CCTL1	=	0x00ee
                           0000EF   674 _T4CC1	=	0x00ef
                           0000D8   675 _TIMIF	=	0x00d8
                           000086   676 _U0CSR	=	0x0086
                           0000C1   677 _U0DBUF	=	0x00c1
                           0000C2   678 _U0BAUD	=	0x00c2
                           0000C4   679 _U0UCR	=	0x00c4
                           0000C5   680 _U0GCR	=	0x00c5
                           0000F8   681 _U1CSR	=	0x00f8
                           0000F9   682 _U1DBUF	=	0x00f9
                           0000FA   683 _U1BAUD	=	0x00fa
                           0000FB   684 _U1UCR	=	0x00fb
                           0000FC   685 _U1GCR	=	0x00fc
                           0000C9   686 _WDCTL	=	0x00c9
                                    687 ;--------------------------------------------------------
                                    688 ; special function bits
                                    689 ;--------------------------------------------------------
                                    690 	.area RSEG    (ABS,DATA)
      000000                        691 	.org 0x0000
                           000087   692 _P0_7	=	0x0087
                           000086   693 _P0_6	=	0x0086
                           000085   694 _P0_5	=	0x0085
                           000084   695 _P0_4	=	0x0084
                           000083   696 _P0_3	=	0x0083
                           000082   697 _P0_2	=	0x0082
                           000081   698 _P0_1	=	0x0081
                           000080   699 _P0_0	=	0x0080
                           00008F   700 _URX1IF	=	0x008f
                           00008D   701 _ADCIF	=	0x008d
                           00008B   702 _URX0IF	=	0x008b
                           00008A   703 _IT1	=	0x008a
                           000089   704 _RFERRIF	=	0x0089
                           000088   705 _IT0	=	0x0088
                           000097   706 _P1_7	=	0x0097
                           000096   707 _P1_6	=	0x0096
                           000095   708 _P1_5	=	0x0095
                           000094   709 _P1_4	=	0x0094
                           000093   710 _P1_3	=	0x0093
                           000092   711 _P1_2	=	0x0092
                           000091   712 _P1_1	=	0x0091
                           000090   713 _P1_0	=	0x0090
                           000099   714 _ENCIF_1	=	0x0099
                           000098   715 _ENCIF_0	=	0x0098
                           0000A7   716 _P2_7	=	0x00a7
                           0000A6   717 _P2_6	=	0x00a6
                           0000A5   718 _P2_5	=	0x00a5
                           0000A4   719 _P2_4	=	0x00a4
                           0000A3   720 _P2_3	=	0x00a3
                           0000A2   721 _P2_2	=	0x00a2
                           0000A1   722 _P2_1	=	0x00a1
                           0000A0   723 _P2_0	=	0x00a0
                           0000AF   724 _EA	=	0x00af
                           0000AD   725 _STIE	=	0x00ad
                           0000AC   726 _ENCIE	=	0x00ac
                           0000AB   727 _URX1IE	=	0x00ab
                           0000AA   728 _URX0IE	=	0x00aa
                           0000A9   729 _ADCIE	=	0x00a9
                           0000A8   730 _RFERRIE	=	0x00a8
                           0000BD   731 _P0IE	=	0x00bd
                           0000BC   732 _T4IE	=	0x00bc
                           0000BB   733 _T3IE	=	0x00bb
                           0000BA   734 _T2IE	=	0x00ba
                           0000B9   735 _T1IE	=	0x00b9
                           0000B8   736 _DMAIE	=	0x00b8
                           0000C7   737 _STIF	=	0x00c7
                           0000C5   738 _P0IF	=	0x00c5
                           0000C4   739 _T4IF	=	0x00c4
                           0000C3   740 _T3IF	=	0x00c3
                           0000C2   741 _T2IF	=	0x00c2
                           0000C1   742 _T1IF	=	0x00c1
                           0000C0   743 _DMAIF	=	0x00c0
                           0000D7   744 _CY	=	0x00d7
                           0000D6   745 _AC	=	0x00d6
                           0000D5   746 _F0	=	0x00d5
                           0000D4   747 _RS1	=	0x00d4
                           0000D3   748 _RS0	=	0x00d3
                           0000D2   749 _OV	=	0x00d2
                           0000D1   750 _F1	=	0x00d1
                           0000D0   751 _P	=	0x00d0
                           0000E7   752 _ACC_7	=	0x00e7
                           0000E6   753 _ACC_6	=	0x00e6
                           0000E5   754 _ACC_5	=	0x00e5
                           0000E4   755 _ACC_4	=	0x00e4
                           0000E3   756 _ACC_3	=	0x00e3
                           0000E2   757 _ACC_2	=	0x00e2
                           0000E1   758 _ACC_1	=	0x00e1
                           0000E0   759 _ACC_0	=	0x00e0
                           0000EC   760 _WDTIF	=	0x00ec
                           0000EB   761 _P1IF	=	0x00eb
                           0000EA   762 _UTX1IF	=	0x00ea
                           0000E9   763 _UTX0IF	=	0x00e9
                           0000E8   764 _P2IF	=	0x00e8
                           0000F7   765 _B_7	=	0x00f7
                           0000F6   766 _B_6	=	0x00f6
                           0000F5   767 _B_5	=	0x00f5
                           0000F4   768 _B_4	=	0x00f4
                           0000F3   769 _B_3	=	0x00f3
                           0000F2   770 _B_2	=	0x00f2
                           0000F1   771 _B_1	=	0x00f1
                           0000F0   772 _B_0	=	0x00f0
                           0000DE   773 _OVFIM	=	0x00de
                           0000DD   774 _T4CH1IF	=	0x00dd
                           0000DC   775 _T4CH0IF	=	0x00dc
                           0000DB   776 _T4OVFIF	=	0x00db
                           0000DA   777 _T3CH1IF	=	0x00da
                           0000D9   778 _T3CH0IF	=	0x00d9
                           0000D8   779 _T3OVFIF	=	0x00d8
                           0000FF   780 _MODE	=	0x00ff
                           0000FE   781 _RE	=	0x00fe
                           0000FD   782 _SLAVE	=	0x00fd
                           0000FC   783 _FE	=	0x00fc
                           0000FB   784 _ERR	=	0x00fb
                           0000FA   785 _RX_BYTE	=	0x00fa
                           0000F9   786 _TX_BYTE	=	0x00f9
                           0000F8   787 _ACTIVE	=	0x00f8
                                    788 ;--------------------------------------------------------
                                    789 ; overlayable register banks
                                    790 ;--------------------------------------------------------
                                    791 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        792 	.ds 8
                                    793 ;--------------------------------------------------------
                                    794 ; internal ram data
                                    795 ;--------------------------------------------------------
                                    796 	.area DSEG    (DATA)
                                    797 ;--------------------------------------------------------
                                    798 ; overlayable items in internal ram 
                                    799 ;--------------------------------------------------------
                                    800 ;--------------------------------------------------------
                                    801 ; indirectly addressable internal ram data
                                    802 ;--------------------------------------------------------
                                    803 	.area ISEG    (DATA)
                                    804 ;--------------------------------------------------------
                                    805 ; absolute internal ram data
                                    806 ;--------------------------------------------------------
                                    807 	.area IABS    (ABS,DATA)
                                    808 	.area IABS    (ABS,DATA)
                                    809 ;--------------------------------------------------------
                                    810 ; bit data
                                    811 ;--------------------------------------------------------
                                    812 	.area BSEG    (BIT)
                                    813 ;--------------------------------------------------------
                                    814 ; paged external ram data
                                    815 ;--------------------------------------------------------
                                    816 	.area PSEG    (PAG,XDATA)
                                    817 ;--------------------------------------------------------
                                    818 ; external ram data
                                    819 ;--------------------------------------------------------
                                    820 	.area XSEG    (XDATA)
                           0061A6   821 _MONMUX	=	0x61a6
                           0061A6   822 _OPAMPMC	=	0x61a6
                           006230   823 _I2CCFG	=	0x6230
                           006231   824 _I2CSTAT	=	0x6231
                           006232   825 _I2CDATA	=	0x6232
                           006233   826 _I2CADDR	=	0x6233
                           006234   827 _I2CWC	=	0x6234
                           006235   828 _I2CIO	=	0x6235
                           006243   829 _OBSSEL0	=	0x6243
                           006244   830 _OBSSEL1	=	0x6244
                           006245   831 _OBSSEL2	=	0x6245
                           006246   832 _OBSSEL3	=	0x6246
                           006247   833 _OBSSEL4	=	0x6247
                           006248   834 _OBSSEL5	=	0x6248
                           006249   835 _CHVER	=	0x6249
                           00624A   836 _CHIPID	=	0x624a
                           00624B   837 _TESTREG0	=	0x624b
                           006260   838 _DBGDATA	=	0x6260
                           006262   839 _SRCRC	=	0x6262
                           006264   840 _BATTMON	=	0x6264
                           006265   841 _IVCTRL	=	0x6265
                           006270   842 _FCTL	=	0x6270
                           006271   843 _FADDRL	=	0x6271
                           006272   844 _FADDRH	=	0x6272
                           006273   845 _FWDATA	=	0x6273
                           006276   846 _CHIPINFO0	=	0x6276
                           006277   847 _CHIPINFO1	=	0x6277
                           006281   848 _IRCTL	=	0x6281
                           006290   849 _CLD	=	0x6290
                           0062A0   850 _XX_T1CCTL0	=	0x62a0
                           0062A1   851 _XX_T1CCTL1	=	0x62a1
                           0062A2   852 _XX_T1CCTL2	=	0x62a2
                           0062A3   853 _T1CCTL3	=	0x62a3
                           0062A4   854 _T1CCTL4	=	0x62a4
                           0062A6   855 _XX_T1CC0L	=	0x62a6
                           0062A7   856 _XX_T1CC0H	=	0x62a7
                           0062A8   857 _XX_T1CC1L	=	0x62a8
                           0062A9   858 _XX_T1CC1H	=	0x62a9
                           0062AA   859 _XX_T1CC2L	=	0x62aa
                           0062AB   860 _XX_T1CC2H	=	0x62ab
                           0062AC   861 _T1CC3L	=	0x62ac
                           0062AD   862 _T1CC3H	=	0x62ad
                           0062AE   863 _T1CC4L	=	0x62ae
                           0062AF   864 _T1CC4H	=	0x62af
                           0062B0   865 _STCC	=	0x62b0
                           0062B1   866 _STCS	=	0x62b1
                           0062B2   867 _STCV0	=	0x62b2
                           0062B3   868 _STCV1	=	0x62b3
                           0062B4   869 _STCV2	=	0x62b4
                           0062C0   870 _OPAMPC	=	0x62c0
                           0062C1   871 _OPAMPS	=	0x62c1
                           0062D0   872 _CMPCTL	=	0x62d0
                           006000   873 _RFCORE_RAM	=	0x6000
                           006000   874 _RXFIFO	=	0x6000
                           006080   875 _TXFIFO	=	0x6080
                           006100   876 _SRC_ADDR_TABLE	=	0x6100
                           006160   877 _SRCRESMASK0	=	0x6160
                           006161   878 _SRCRESMASK1	=	0x6161
                           006162   879 _SRCRESMASK2	=	0x6162
                           006163   880 _SRCRESINDEX	=	0x6163
                           006164   881 _SRCEXTPENDEN0	=	0x6164
                           006165   882 _SRCEXTPENDEN1	=	0x6165
                           006166   883 _SRCEXTPENDEN2	=	0x6166
                           006167   884 _SRCSHORTPENDEN0	=	0x6167
                           006168   885 _SRCSHORTPENDEN1	=	0x6168
                           006169   886 _SRCSHORTPENDEN2	=	0x6169
                           00616A   887 _EXT_ADDR0	=	0x616a
                           00616B   888 _EXT_ADDR1	=	0x616b
                           00616C   889 _EXT_ADDR2	=	0x616c
                           00616D   890 _EXT_ADDR3	=	0x616d
                           00616E   891 _EXT_ADDR4	=	0x616e
                           00616F   892 _EXT_ADDR5	=	0x616f
                           006170   893 _EXT_ADDR6	=	0x6170
                           006171   894 _EXT_ADDR7	=	0x6171
                           006172   895 _PAN_ID0	=	0x6172
                           006173   896 _PAN_ID1	=	0x6173
                           006174   897 _SHORT_ADDR0	=	0x6174
                           006175   898 _SHORT_ADDR1	=	0x6175
                           006180   899 _FRMFILT0	=	0x6180
                           006181   900 _FRMFILT1	=	0x6181
                           006182   901 _SRCMATCH	=	0x6182
                           006183   902 _SRCSHORTEN0	=	0x6183
                           006184   903 _SRCSHORTEN1	=	0x6184
                           006185   904 _SRCSHORTEN2	=	0x6185
                           006186   905 _SRCEXTEN0	=	0x6186
                           006187   906 _SRCEXTEN1	=	0x6187
                           006188   907 _SRCEXTEN2	=	0x6188
                           006189   908 _FRMCTRL0	=	0x6189
                           00618A   909 _FRMCTRL1	=	0x618a
                           00618B   910 _RXENABLE	=	0x618b
                           00618C   911 _RXMASKSET	=	0x618c
                           00618D   912 _RXMASKCLR	=	0x618d
                           00618E   913 _FREQTUNE	=	0x618e
                           00618F   914 _FREQCTRL	=	0x618f
                           006190   915 _TXPOWER	=	0x6190
                           006191   916 _TXCTRL	=	0x6191
                           006192   917 _FSMSTAT0	=	0x6192
                           006193   918 _FSMSTAT1	=	0x6193
                           006194   919 _FIFOPCTRL	=	0x6194
                           006195   920 _FSMCTRL	=	0x6195
                           006196   921 _CCACTRL0	=	0x6196
                           006197   922 _CCACTRL1	=	0x6197
                           006198   923 _RSSI	=	0x6198
                           006199   924 _RSSISTAT	=	0x6199
                           00619A   925 _RXFIRST	=	0x619a
                           00619B   926 _RXFIFOCNT	=	0x619b
                           00619C   927 _TXFIFOCNT	=	0x619c
                           00619D   928 _RXFIRST_PTR	=	0x619d
                           00619E   929 _RXLAST_PTR	=	0x619e
                           00619F   930 _RXP1_PTR	=	0x619f
                           0061A1   931 _TXFIRST_PTR	=	0x61a1
                           0061A2   932 _TXLAST_PTR	=	0x61a2
                           0061A3   933 _RFIRQM0	=	0x61a3
                           0061A4   934 _RFIRQM1	=	0x61a4
                           0061A5   935 _RFERRM	=	0x61a5
                           0061A7   936 _RFRND	=	0x61a7
                           0061A8   937 _MDMCTRL0	=	0x61a8
                           0061A9   938 _MDMCTRL1	=	0x61a9
                           0061AA   939 _FREQEST	=	0x61aa
                           0061AB   940 _RXCTRL	=	0x61ab
                           0061AC   941 _FSCTRL	=	0x61ac
                           0061AD   942 _FSCAL0	=	0x61ad
                           0061AE   943 _FSCAL1	=	0x61ae
                           0061AF   944 _FSCAL2	=	0x61af
                           0061B0   945 _FSCAL3	=	0x61b0
                           0061B1   946 _AGCCTRL0	=	0x61b1
                           0061B2   947 _AGCCTRL1	=	0x61b2
                           0061B3   948 _AGCCTRL2	=	0x61b3
                           0061B4   949 _AGCCTRL3	=	0x61b4
                           0061B5   950 _ADCTEST0	=	0x61b5
                           0061B6   951 _ADCTEST1	=	0x61b6
                           0061B7   952 _ADCTEST2	=	0x61b7
                           0061B8   953 _MDMTEST0	=	0x61b8
                           0061B9   954 _MDMTEST1	=	0x61b9
                           0061BA   955 _DACTEST0	=	0x61ba
                           0061BB   956 _DACTEST1	=	0x61bb
                           0061BC   957 _DACTEST2	=	0x61bc
                           0061BD   958 _ATEST	=	0x61bd
                           0061BE   959 _PTEST0	=	0x61be
                           0061BF   960 _PTEST1	=	0x61bf
                           0061FA   961 _TXFILTCFG	=	0x61fa
                           0061EB   962 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   963 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   964 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   965 _CSPPROG0	=	0x61c0
                           0061C1   966 _CSPPROG1	=	0x61c1
                           0061C2   967 _CSPPROG2	=	0x61c2
                           0061C3   968 _CSPPROG3	=	0x61c3
                           0061C4   969 _CSPPROG4	=	0x61c4
                           0061C5   970 _CSPPROG5	=	0x61c5
                           0061C6   971 _CSPPROG6	=	0x61c6
                           0061C7   972 _CSPPROG7	=	0x61c7
                           0061C8   973 _CSPPROG8	=	0x61c8
                           0061C9   974 _CSPPROG9	=	0x61c9
                           0061CA   975 _CSPPROG10	=	0x61ca
                           0061CB   976 _CSPPROG11	=	0x61cb
                           0061CC   977 _CSPPROG12	=	0x61cc
                           0061CD   978 _CSPPROG13	=	0x61cd
                           0061CE   979 _CSPPROG14	=	0x61ce
                           0061CF   980 _CSPPROG15	=	0x61cf
                           0061D0   981 _CSPPROG16	=	0x61d0
                           0061D1   982 _CSPPROG17	=	0x61d1
                           0061D2   983 _CSPPROG18	=	0x61d2
                           0061D3   984 _CSPPROG19	=	0x61d3
                           0061D4   985 _CSPPROG20	=	0x61d4
                           0061D5   986 _CSPPROG21	=	0x61d5
                           0061D6   987 _CSPPROG22	=	0x61d6
                           0061D7   988 _CSPPROG23	=	0x61d7
                           0061E0   989 _CSPCTRL	=	0x61e0
                           0061E1   990 _CSPSTAT	=	0x61e1
                           0061E2   991 _CSPX	=	0x61e2
                           0061E3   992 _CSPY	=	0x61e3
                           0061E4   993 _CSPZ	=	0x61e4
                           0061E5   994 _CSPT	=	0x61e5
                           006200   995 _USBADDR	=	0x6200
                           006201   996 _USBPOW	=	0x6201
                           006202   997 _USBIIF	=	0x6202
                           006204   998 _USBOIF	=	0x6204
                           006206   999 _USBCIF	=	0x6206
                           006207  1000 _USBIIE	=	0x6207
                           006209  1001 _USBOIE	=	0x6209
                           00620B  1002 _USBCIE	=	0x620b
                           00620C  1003 _USBFRML	=	0x620c
                           00620D  1004 _USBFRMH	=	0x620d
                           00620E  1005 _USBINDEX	=	0x620e
                           00620F  1006 _USBCTRL	=	0x620f
                           006210  1007 _USBMAXI	=	0x6210
                           006211  1008 _USBCS0	=	0x6211
                           006211  1009 _USBCSIL	=	0x6211
                           006212  1010 _USBCSIH	=	0x6212
                           006213  1011 _USBMAXO	=	0x6213
                           006214  1012 _USBCSOL	=	0x6214
                           006215  1013 _USBCSOH	=	0x6215
                           006216  1014 _USBCNT0	=	0x6216
                           006216  1015 _USBCNTL	=	0x6216
                           006217  1016 _USBCNTH	=	0x6217
                           006220  1017 _USBF0	=	0x6220
                           006222  1018 _USBF1	=	0x6222
                           006224  1019 _USBF2	=	0x6224
                           006226  1020 _USBF3	=	0x6226
                           006228  1021 _USBF4	=	0x6228
                           00622A  1022 _USBF5	=	0x622a
                           007080  1023 _X_P0	=	0x7080
                           007086  1024 _X_U0CSR	=	0x7086
                           007089  1025 _X_P0IFG	=	0x7089
                           00708A  1026 _X_P1IFG	=	0x708a
                           00708B  1027 _X_P2IFG	=	0x708b
                           00708C  1028 _X_PICTL	=	0x708c
                           00708D  1029 _X_P1IEN	=	0x708d
                           00708F  1030 _X_P0INP	=	0x708f
                           007090  1031 _X_P1	=	0x7090
                           007091  1032 _X_RFIRQF1	=	0x7091
                           007093  1033 _X_MPAGE	=	0x7093
                           007093  1034 _X__XPAGE	=	0x7093
                           007094  1035 _X_T2CTRL	=	0x7094
                           007095  1036 _X_ST0	=	0x7095
                           007096  1037 _X_ST1	=	0x7096
                           007097  1038 _X_ST2	=	0x7097
                           00709C  1039 _X_T2EVTCFG	=	0x709c
                           00709D  1040 _X_SLEEPSTA	=	0x709d
                           00709E  1041 _X_CLKCONSTA	=	0x709e
                           00709F  1042 _X_FMAP	=	0x709f
                           00709F  1043 _X_PSBANK	=	0x709f
                           0070A0  1044 _X_P2	=	0x70a0
                           0070A1  1045 _X_T2IRQF	=	0x70a1
                           0070A2  1046 _X_T2M0	=	0x70a2
                           0070A3  1047 _X_T2M1	=	0x70a3
                           0070A4  1048 _X_T2MOVF0	=	0x70a4
                           0070A5  1049 _X_T2MOVF1	=	0x70a5
                           0070A6  1050 _X_T2MOVF2	=	0x70a6
                           0070A7  1051 _X_T2IRQM	=	0x70a7
                           0070AB  1052 _X_P0IEN	=	0x70ab
                           0070AC  1053 _X_P2IEN	=	0x70ac
                           0070AD  1054 _X_STLOAD	=	0x70ad
                           0070AE  1055 _X_PMUX	=	0x70ae
                           0070AF  1056 _X_T1STAT	=	0x70af
                           0070B1  1057 _X_ENCDI	=	0x70b1
                           0070B2  1058 _X_ENCDO	=	0x70b2
                           0070B3  1059 _X_ENCCS	=	0x70b3
                           0070B4  1060 _X_ADCCON1	=	0x70b4
                           0070B5  1061 _X_ADCCON2	=	0x70b5
                           0070B6  1062 _X_ADCCON3	=	0x70b6
                           0070BA  1063 _X_ADCL	=	0x70ba
                           0070BB  1064 _X_ADCH	=	0x70bb
                           0070BC  1065 _X_RNDL	=	0x70bc
                           0070BD  1066 _X_RNDH	=	0x70bd
                           0070BE  1067 _X_SLEEPCMD	=	0x70be
                           0070BF  1068 _X_RFERRF	=	0x70bf
                           0070C1  1069 _X_U0DBUF	=	0x70c1
                           0070C2  1070 _X_U0BAUD	=	0x70c2
                           0070C3  1071 _X_T2MSEL	=	0x70c3
                           0070C4  1072 _X_U0UCR	=	0x70c4
                           0070C5  1073 _X_U0GCR	=	0x70c5
                           0070C6  1074 _X_CLKCONCMD	=	0x70c6
                           0070C7  1075 _X_MEMCTR	=	0x70c7
                           0070C9  1076 _X_WDCTL	=	0x70c9
                           0070CA  1077 _X_T3CNT	=	0x70ca
                           0070CB  1078 _X_T3CTL	=	0x70cb
                           0070CC  1079 _X_T3CCTL0	=	0x70cc
                           0070CD  1080 _X_T3CC0	=	0x70cd
                           0070CE  1081 _X_T3CCTL1	=	0x70ce
                           0070CF  1082 _X_T3CC1	=	0x70cf
                           0070D1  1083 _X_DMAIRQ	=	0x70d1
                           0070D2  1084 _X_DMA1CFGL	=	0x70d2
                           0070D3  1085 _X_DMA1CFGH	=	0x70d3
                           0070D4  1086 _X_DMA0CFGL	=	0x70d4
                           0070D5  1087 _X_DMA0CFGH	=	0x70d5
                           0070D6  1088 _X_DMAARM	=	0x70d6
                           0070D7  1089 _X_DMAREQ	=	0x70d7
                           0070D8  1090 _X_TIMIF	=	0x70d8
                           0070D9  1091 _X_RFD	=	0x70d9
                           0070DA  1092 _X_T1CC0L	=	0x70da
                           0070DB  1093 _X_T1CC0H	=	0x70db
                           0070DC  1094 _X_T1CC1L	=	0x70dc
                           0070DD  1095 _X_T1CC1H	=	0x70dd
                           0070DE  1096 _X_T1CC2L	=	0x70de
                           0070DF  1097 _X_T1CC2H	=	0x70df
                           0070E1  1098 _X_RFST	=	0x70e1
                           0070E2  1099 _X_T1CNTL	=	0x70e2
                           0070E3  1100 _X_T1CNTH	=	0x70e3
                           0070E4  1101 _X_T1CTL	=	0x70e4
                           0070E5  1102 _X_T1CCTL0	=	0x70e5
                           0070E6  1103 _X_T1CCTL1	=	0x70e6
                           0070E7  1104 _X_T1CCTL2	=	0x70e7
                           0070E9  1105 _X_RFIRQF0	=	0x70e9
                           0070EA  1106 _X_T4CNT	=	0x70ea
                           0070EB  1107 _X_T4CTL	=	0x70eb
                           0070EC  1108 _X_T4CCTL0	=	0x70ec
                           0070ED  1109 _X_T4CC0	=	0x70ed
                           0070EE  1110 _X_T4CCTL1	=	0x70ee
                           0070EF  1111 _X_T4CC1	=	0x70ef
                           0070F1  1112 _X_PERCFG	=	0x70f1
                           0070F2  1113 _X_APCFG	=	0x70f2
                           0070F3  1114 _X_P0SEL	=	0x70f3
                           0070F4  1115 _X_P1SEL	=	0x70f4
                           0070F5  1116 _X_P2SEL	=	0x70f5
                           0070F6  1117 _X_P1INP	=	0x70f6
                           0070F7  1118 _X_P2INP	=	0x70f7
                           0070F8  1119 _X_U1CSR	=	0x70f8
                           0070F9  1120 _X_U1DBUF	=	0x70f9
                           0070FA  1121 _X_U1BAUD	=	0x70fa
                           0070FB  1122 _X_U1UCR	=	0x70fb
                           0070FC  1123 _X_U1GCR	=	0x70fc
                           0070FD  1124 _X_P0DIR	=	0x70fd
                           0070FE  1125 _X_P1DIR	=	0x70fe
                           0070FF  1126 _X_P2DIR	=	0x70ff
                           007800  1127 _X_INFOPAGE	=	0x7800
                           00780C  1128 _X_IEEE_ADDR	=	0x780c
      000000                       1129 _ipaddr:
      000000                       1130 	.ds 16
      000010                       1131 _p:
      000010                       1132 	.ds 3
      000013                       1133 _parent:
      000013                       1134 	.ds 3
                                   1135 ;--------------------------------------------------------
                                   1136 ; absolute external ram data
                                   1137 ;--------------------------------------------------------
                                   1138 	.area XABS    (ABS,XDATA)
                                   1139 ;--------------------------------------------------------
                                   1140 ; external initialized ram data
                                   1141 ;--------------------------------------------------------
                                   1142 	.area XISEG   (XDATA)
                                   1143 	.area HOME    (CODE)
                                   1144 	.area GSINIT0 (CODE)
                                   1145 	.area GSINIT1 (CODE)
                                   1146 	.area GSINIT2 (CODE)
                                   1147 	.area GSINIT3 (CODE)
                                   1148 	.area GSINIT4 (CODE)
                                   1149 	.area GSINIT5 (CODE)
                                   1150 	.area GSINIT  (CODE)
                                   1151 	.area GSFINAL (CODE)
                                   1152 	.area CSEG    (CODE)
                                   1153 ;--------------------------------------------------------
                                   1154 ; global & static initialisations
                                   1155 ;--------------------------------------------------------
                                   1156 	.area HOME    (CODE)
                                   1157 	.area GSINIT  (CODE)
                                   1158 	.area GSFINAL (CODE)
                                   1159 	.area GSINIT  (CODE)
                                   1160 ;--------------------------------------------------------
                                   1161 ; Home
                                   1162 ;--------------------------------------------------------
                                   1163 	.area HOME    (CODE)
                                   1164 	.area HOME    (CODE)
                                   1165 ;--------------------------------------------------------
                                   1166 ; code
                                   1167 ;--------------------------------------------------------
                                   1168 	.area BANK1   (CODE)
                                   1169 ;------------------------------------------------------------
                                   1170 ;Allocation info for local variables in function 'rpl_purge_routes'
                                   1171 ;------------------------------------------------------------
                                   1172 ;r                         Allocated to registers r5 r6 r7 
                                   1173 ;sloc0                     Allocated to stack - sp -2
                                   1174 ;sloc1                     Allocated to stack - sp -5
                                   1175 ;sloc2                     Allocated to stack - sp -2
                                   1176 ;------------------------------------------------------------
                                   1177 ;	../../../core/net/rpl/rpl.c:64: rpl_purge_routes(void)
                                   1178 ;	-----------------------------------------
                                   1179 ;	 function rpl_purge_routes
                                   1180 ;	-----------------------------------------
      000000                       1181 _rpl_purge_routes:
                           000007  1182 	ar7 = 0x07
                           000006  1183 	ar6 = 0x06
                           000005  1184 	ar5 = 0x05
                           000004  1185 	ar4 = 0x04
                           000003  1186 	ar3 = 0x03
                           000002  1187 	ar2 = 0x02
                           000001  1188 	ar1 = 0x01
                           000000  1189 	ar0 = 0x00
      000000 E5 81            [12] 1190 	mov	a,sp
      000002 24 06            [12] 1191 	add	a,#0x06
      000004 F5 81            [12] 1192 	mov	sp,a
                                   1193 ;	../../../core/net/rpl/rpl.c:69: r = uip_ds6_route_list_head();
      000006 78r00            [12] 1194 	mov	r0,#_uip_ds6_route_list_head
      000008 79s00            [12] 1195 	mov	r1,#(_uip_ds6_route_list_head >> 8)
      00000A 7As00            [12] 1196 	mov	r2,#(_uip_ds6_route_list_head >> 16)
      00000C 12r00r00         [24] 1197 	lcall	__sdcc_banked_call
      00000F A8 81            [24] 1198 	mov	r0,sp
      000011 18               [12] 1199 	dec	r0
      000012 18               [12] 1200 	dec	r0
      000013 A6 82            [24] 1201 	mov	@r0,dpl
      000015 08               [12] 1202 	inc	r0
      000016 A6 83            [24] 1203 	mov	@r0,dph
      000018 08               [12] 1204 	inc	r0
      000019 A6 F0            [24] 1205 	mov	@r0,b
                                   1206 ;	../../../core/net/rpl/rpl.c:71: while(r != NULL) {
      00001B                       1207 00103$:
      00001B A8 81            [24] 1208 	mov	r0,sp
      00001D 18               [12] 1209 	dec	r0
      00001E 18               [12] 1210 	dec	r0
      00001F E6               [12] 1211 	mov	a,@r0
      000020 08               [12] 1212 	inc	r0
      000021 46               [12] 1213 	orl	a,@r0
      000022 70 03            [24] 1214 	jnz	00144$
      000024 02r00rCC         [24] 1215 	ljmp	00105$
      000027                       1216 00144$:
                                   1217 ;	../../../core/net/rpl/rpl.c:72: if(r->state.lifetime >= 1) {
      000027 A8 81            [24] 1218 	mov	r0,sp
      000029 18               [12] 1219 	dec	r0
      00002A 18               [12] 1220 	dec	r0
      00002B E5 81            [12] 1221 	mov	a,sp
      00002D 24 FB            [12] 1222 	add	a,#0xfb
      00002F F9               [12] 1223 	mov	r1,a
      000030 74 25            [12] 1224 	mov	a,#0x25
      000032 26               [12] 1225 	add	a,@r0
      000033 F7               [12] 1226 	mov	@r1,a
      000034 E4               [12] 1227 	clr	a
      000035 08               [12] 1228 	inc	r0
      000036 36               [12] 1229 	addc	a,@r0
      000037 09               [12] 1230 	inc	r1
      000038 F7               [12] 1231 	mov	@r1,a
      000039 08               [12] 1232 	inc	r0
      00003A 09               [12] 1233 	inc	r1
      00003B E6               [12] 1234 	mov	a,@r0
      00003C F7               [12] 1235 	mov	@r1,a
      00003D E5 81            [12] 1236 	mov	a,sp
      00003F 24 FB            [12] 1237 	add	a,#0xfb
      000041 F8               [12] 1238 	mov	r0,a
      000042 86 82            [24] 1239 	mov	dpl,@r0
      000044 08               [12] 1240 	inc	r0
      000045 86 83            [24] 1241 	mov	dph,@r0
      000047 08               [12] 1242 	inc	r0
      000048 86 F0            [24] 1243 	mov	b,@r0
      00004A 12r00r00         [24] 1244 	lcall	__gptrget
      00004D FD               [12] 1245 	mov	r5,a
      00004E A3               [24] 1246 	inc	dptr
      00004F 12r00r00         [24] 1247 	lcall	__gptrget
      000052 FE               [12] 1248 	mov	r6,a
      000053 A3               [24] 1249 	inc	dptr
      000054 12r00r00         [24] 1250 	lcall	__gptrget
      000057 FC               [12] 1251 	mov	r4,a
      000058 A3               [24] 1252 	inc	dptr
      000059 12r00r00         [24] 1253 	lcall	__gptrget
      00005C FF               [12] 1254 	mov	r7,a
      00005D C3               [12] 1255 	clr	c
      00005E ED               [12] 1256 	mov	a,r5
      00005F 94 01            [12] 1257 	subb	a,#0x01
      000061 EE               [12] 1258 	mov	a,r6
      000062 94 00            [12] 1259 	subb	a,#0x00
      000064 EC               [12] 1260 	mov	a,r4
      000065 94 00            [12] 1261 	subb	a,#0x00
      000067 EF               [12] 1262 	mov	a,r7
      000068 94 00            [12] 1263 	subb	a,#0x00
      00006A 40 30            [24] 1264 	jc	00102$
                                   1265 ;	../../../core/net/rpl/rpl.c:78: r->state.lifetime--;
      00006C ED               [12] 1266 	mov	a,r5
      00006D 24 FF            [12] 1267 	add	a,#0xff
      00006F FA               [12] 1268 	mov	r2,a
      000070 EE               [12] 1269 	mov	a,r6
      000071 34 FF            [12] 1270 	addc	a,#0xff
      000073 FB               [12] 1271 	mov	r3,a
      000074 EC               [12] 1272 	mov	a,r4
      000075 34 FF            [12] 1273 	addc	a,#0xff
      000077 FC               [12] 1274 	mov	r4,a
      000078 EF               [12] 1275 	mov	a,r7
      000079 34 FF            [12] 1276 	addc	a,#0xff
      00007B FF               [12] 1277 	mov	r7,a
      00007C E5 81            [12] 1278 	mov	a,sp
      00007E 24 FB            [12] 1279 	add	a,#0xfb
      000080 F8               [12] 1280 	mov	r0,a
      000081 86 82            [24] 1281 	mov	dpl,@r0
      000083 08               [12] 1282 	inc	r0
      000084 86 83            [24] 1283 	mov	dph,@r0
      000086 08               [12] 1284 	inc	r0
      000087 86 F0            [24] 1285 	mov	b,@r0
      000089 EA               [12] 1286 	mov	a,r2
      00008A 12r00r00         [24] 1287 	lcall	__gptrput
      00008D A3               [24] 1288 	inc	dptr
      00008E EB               [12] 1289 	mov	a,r3
      00008F 12r00r00         [24] 1290 	lcall	__gptrput
      000092 A3               [24] 1291 	inc	dptr
      000093 EC               [12] 1292 	mov	a,r4
      000094 12r00r00         [24] 1293 	lcall	__gptrput
      000097 A3               [24] 1294 	inc	dptr
      000098 EF               [12] 1295 	mov	a,r7
      000099 12r00r00         [24] 1296 	lcall	__gptrput
      00009C                       1297 00102$:
                                   1298 ;	../../../core/net/rpl/rpl.c:80: r = list_item_next(r);
      00009C A8 81            [24] 1299 	mov	r0,sp
      00009E 18               [12] 1300 	dec	r0
      00009F 18               [12] 1301 	dec	r0
      0000A0 86 05            [24] 1302 	mov	ar5,@r0
      0000A2 08               [12] 1303 	inc	r0
      0000A3 86 06            [24] 1304 	mov	ar6,@r0
      0000A5 08               [12] 1305 	inc	r0
      0000A6 86 07            [24] 1306 	mov	ar7,@r0
      0000A8 8D 82            [24] 1307 	mov	dpl,r5
      0000AA 8E 83            [24] 1308 	mov	dph,r6
      0000AC 8F F0            [24] 1309 	mov	b,r7
      0000AE 78r00            [12] 1310 	mov	r0,#_list_item_next
      0000B0 79s00            [12] 1311 	mov	r1,#(_list_item_next >> 8)
      0000B2 7As00            [12] 1312 	mov	r2,#(_list_item_next >> 16)
      0000B4 12r00r00         [24] 1313 	lcall	__sdcc_banked_call
      0000B7 AD 82            [24] 1314 	mov	r5,dpl
      0000B9 AE 83            [24] 1315 	mov	r6,dph
      0000BB AF F0            [24] 1316 	mov	r7,b
      0000BD A8 81            [24] 1317 	mov	r0,sp
      0000BF 18               [12] 1318 	dec	r0
      0000C0 18               [12] 1319 	dec	r0
      0000C1 A6 05            [24] 1320 	mov	@r0,ar5
      0000C3 08               [12] 1321 	inc	r0
      0000C4 A6 06            [24] 1322 	mov	@r0,ar6
      0000C6 08               [12] 1323 	inc	r0
      0000C7 A6 07            [24] 1324 	mov	@r0,ar7
      0000C9 02r00r1B         [24] 1325 	ljmp	00103$
      0000CC                       1326 00105$:
                                   1327 ;	../../../core/net/rpl/rpl.c:84: r = uip_ds6_route_list_head();
      0000CC 78r00            [12] 1328 	mov	r0,#_uip_ds6_route_list_head
      0000CE 79s00            [12] 1329 	mov	r1,#(_uip_ds6_route_list_head >> 8)
      0000D0 7As00            [12] 1330 	mov	r2,#(_uip_ds6_route_list_head >> 16)
      0000D2 12r00r00         [24] 1331 	lcall	__sdcc_banked_call
      0000D5 AD 82            [24] 1332 	mov	r5,dpl
      0000D7 AE 83            [24] 1333 	mov	r6,dph
      0000D9 AF F0            [24] 1334 	mov	r7,b
                                   1335 ;	../../../core/net/rpl/rpl.c:86: while(r != NULL) {
      0000DB                       1336 00109$:
      0000DB ED               [12] 1337 	mov	a,r5
      0000DC 4E               [12] 1338 	orl	a,r6
      0000DD 70 03            [24] 1339 	jnz	00146$
      0000DF 02r01r69         [24] 1340 	ljmp	00112$
      0000E2                       1341 00146$:
                                   1342 ;	../../../core/net/rpl/rpl.c:87: if(r->state.lifetime < 1) {
      0000E2 74 25            [12] 1343 	mov	a,#0x25
      0000E4 2D               [12] 1344 	add	a,r5
      0000E5 FA               [12] 1345 	mov	r2,a
      0000E6 E4               [12] 1346 	clr	a
      0000E7 3E               [12] 1347 	addc	a,r6
      0000E8 FB               [12] 1348 	mov	r3,a
      0000E9 8F 04            [24] 1349 	mov	ar4,r7
      0000EB C0 05            [24] 1350 	push	ar5
      0000ED C0 06            [24] 1351 	push	ar6
      0000EF C0 07            [24] 1352 	push	ar7
      0000F1 8A 82            [24] 1353 	mov	dpl,r2
      0000F3 8B 83            [24] 1354 	mov	dph,r3
      0000F5 8C F0            [24] 1355 	mov	b,r4
      0000F7 12r00r00         [24] 1356 	lcall	__gptrget
      0000FA FA               [12] 1357 	mov	r2,a
      0000FB A3               [24] 1358 	inc	dptr
      0000FC 12r00r00         [24] 1359 	lcall	__gptrget
      0000FF FB               [12] 1360 	mov	r3,a
      000100 A3               [24] 1361 	inc	dptr
      000101 12r00r00         [24] 1362 	lcall	__gptrget
      000104 FC               [12] 1363 	mov	r4,a
      000105 A3               [24] 1364 	inc	dptr
      000106 12r00r00         [24] 1365 	lcall	__gptrget
      000109 FF               [12] 1366 	mov	r7,a
      00010A C3               [12] 1367 	clr	c
      00010B EA               [12] 1368 	mov	a,r2
      00010C 94 01            [12] 1369 	subb	a,#0x01
      00010E EB               [12] 1370 	mov	a,r3
      00010F 94 00            [12] 1371 	subb	a,#0x00
      000111 EC               [12] 1372 	mov	a,r4
      000112 94 00            [12] 1373 	subb	a,#0x00
      000114 EF               [12] 1374 	mov	a,r7
      000115 94 00            [12] 1375 	subb	a,#0x00
      000117 D0 07            [24] 1376 	pop	ar7
      000119 D0 06            [24] 1377 	pop	ar6
      00011B D0 05            [24] 1378 	pop	ar5
      00011D 50 26            [24] 1379 	jnc	00107$
                                   1380 ;	../../../core/net/rpl/rpl.c:90: uip_ds6_route_rm(r);
      00011F 8D 82            [24] 1381 	mov	dpl,r5
      000121 8E 83            [24] 1382 	mov	dph,r6
      000123 8F F0            [24] 1383 	mov	b,r7
      000125 78r00            [12] 1384 	mov	r0,#_uip_ds6_route_rm
      000127 79s00            [12] 1385 	mov	r1,#(_uip_ds6_route_rm >> 8)
      000129 7As00            [12] 1386 	mov	r2,#(_uip_ds6_route_rm >> 16)
      00012B 12r00r00         [24] 1387 	lcall	__sdcc_banked_call
                                   1388 ;	../../../core/net/rpl/rpl.c:91: r = uip_ds6_route_list_head();
      00012E 78r00            [12] 1389 	mov	r0,#_uip_ds6_route_list_head
      000130 79s00            [12] 1390 	mov	r1,#(_uip_ds6_route_list_head >> 8)
      000132 7As00            [12] 1391 	mov	r2,#(_uip_ds6_route_list_head >> 16)
      000134 12r00r00         [24] 1392 	lcall	__sdcc_banked_call
      000137 AA 82            [24] 1393 	mov	r2,dpl
      000139 AB 83            [24] 1394 	mov	r3,dph
      00013B AC F0            [24] 1395 	mov	r4,b
      00013D 8A 05            [24] 1396 	mov	ar5,r2
      00013F 8B 06            [24] 1397 	mov	ar6,r3
      000141 8C 07            [24] 1398 	mov	ar7,r4
      000143 80 96            [24] 1399 	sjmp	00109$
      000145                       1400 00107$:
                                   1401 ;	../../../core/net/rpl/rpl.c:93: r = list_item_next(r);
      000145 8D 02            [24] 1402 	mov	ar2,r5
      000147 8E 03            [24] 1403 	mov	ar3,r6
      000149 8F 04            [24] 1404 	mov	ar4,r7
      00014B 8A 82            [24] 1405 	mov	dpl,r2
      00014D 8B 83            [24] 1406 	mov	dph,r3
      00014F 8C F0            [24] 1407 	mov	b,r4
      000151 78r00            [12] 1408 	mov	r0,#_list_item_next
      000153 79s00            [12] 1409 	mov	r1,#(_list_item_next >> 8)
      000155 7As00            [12] 1410 	mov	r2,#(_list_item_next >> 16)
      000157 12r00r00         [24] 1411 	lcall	__sdcc_banked_call
      00015A AA 82            [24] 1412 	mov	r2,dpl
      00015C AB 83            [24] 1413 	mov	r3,dph
      00015E AC F0            [24] 1414 	mov	r4,b
      000160 8A 05            [24] 1415 	mov	ar5,r2
      000162 8B 06            [24] 1416 	mov	ar6,r3
      000164 8C 07            [24] 1417 	mov	ar7,r4
      000166 02r00rDB         [24] 1418 	ljmp	00109$
      000169                       1419 00112$:
                                   1420 ;	../../../core/net/rpl/rpl.c:96: }
      000169 E5 81            [12] 1421 	mov	a,sp
      00016B 24 FA            [12] 1422 	add	a,#0xfa
      00016D F5 81            [12] 1423 	mov	sp,a
      00016F 02r00r00         [24] 1424 	ljmp	__sdcc_banked_ret
                                   1425 ;------------------------------------------------------------
                                   1426 ;Allocation info for local variables in function 'rpl_remove_routes'
                                   1427 ;------------------------------------------------------------
                                   1428 ;dag                       Allocated to stack - sp -2
                                   1429 ;r                         Allocated to registers r2 r3 r4 
                                   1430 ;------------------------------------------------------------
                                   1431 ;	../../../core/net/rpl/rpl.c:99: rpl_remove_routes(rpl_dag_t *dag)
                                   1432 ;	-----------------------------------------
                                   1433 ;	 function rpl_remove_routes
                                   1434 ;	-----------------------------------------
      000172                       1435 _rpl_remove_routes:
      000172 C0 82            [24] 1436 	push	dpl
      000174 C0 83            [24] 1437 	push	dph
      000176 C0 F0            [24] 1438 	push	b
                                   1439 ;	../../../core/net/rpl/rpl.c:103: r = uip_ds6_route_list_head();
      000178 78r00            [12] 1440 	mov	r0,#_uip_ds6_route_list_head
      00017A 79s00            [12] 1441 	mov	r1,#(_uip_ds6_route_list_head >> 8)
      00017C 7As00            [12] 1442 	mov	r2,#(_uip_ds6_route_list_head >> 16)
      00017E 12r00r00         [24] 1443 	lcall	__sdcc_banked_call
      000181 AA 82            [24] 1444 	mov	r2,dpl
      000183 AB 83            [24] 1445 	mov	r3,dph
      000185 AC F0            [24] 1446 	mov	r4,b
                                   1447 ;	../../../core/net/rpl/rpl.c:105: while(r != NULL) {
      000187                       1448 00104$:
      000187 EA               [12] 1449 	mov	a,r2
      000188 4B               [12] 1450 	orl	a,r3
      000189 70 03            [24] 1451 	jnz	00121$
      00018B 02r02r35         [24] 1452 	ljmp	00107$
      00018E                       1453 00121$:
                                   1454 ;	../../../core/net/rpl/rpl.c:106: if(r->state.dag == dag) {
      00018E 74 25            [12] 1455 	mov	a,#0x25
      000190 2A               [12] 1456 	add	a,r2
      000191 FD               [12] 1457 	mov	r5,a
      000192 E4               [12] 1458 	clr	a
      000193 3B               [12] 1459 	addc	a,r3
      000194 FE               [12] 1460 	mov	r6,a
      000195 8C 07            [24] 1461 	mov	ar7,r4
      000197 74 08            [12] 1462 	mov	a,#0x08
      000199 2D               [12] 1463 	add	a,r5
      00019A FD               [12] 1464 	mov	r5,a
      00019B E4               [12] 1465 	clr	a
      00019C 3E               [12] 1466 	addc	a,r6
      00019D FE               [12] 1467 	mov	r6,a
      00019E 8D 82            [24] 1468 	mov	dpl,r5
      0001A0 8E 83            [24] 1469 	mov	dph,r6
      0001A2 8F F0            [24] 1470 	mov	b,r7
      0001A4 12r00r00         [24] 1471 	lcall	__gptrget
      0001A7 FD               [12] 1472 	mov	r5,a
      0001A8 A3               [24] 1473 	inc	dptr
      0001A9 12r00r00         [24] 1474 	lcall	__gptrget
      0001AC FE               [12] 1475 	mov	r6,a
      0001AD A3               [24] 1476 	inc	dptr
      0001AE 12r00r00         [24] 1477 	lcall	__gptrget
      0001B1 FF               [12] 1478 	mov	r7,a
      0001B2 C0 02            [24] 1479 	push	ar2
      0001B4 C0 03            [24] 1480 	push	ar3
      0001B6 C0 04            [24] 1481 	push	ar4
      0001B8 E5 81            [12] 1482 	mov	a,sp
      0001BA 24 FB            [12] 1483 	add	a,#0xfb
      0001BC F8               [12] 1484 	mov	r0,a
      0001BD 86 02            [24] 1485 	mov	ar2,@r0
      0001BF 08               [12] 1486 	inc	r0
      0001C0 86 03            [24] 1487 	mov	ar3,@r0
      0001C2 08               [12] 1488 	inc	r0
      0001C3 86 04            [24] 1489 	mov	ar4,@r0
      0001C5 C0 02            [24] 1490 	push	ar2
      0001C7 C0 03            [24] 1491 	push	ar3
      0001C9 C0 04            [24] 1492 	push	ar4
      0001CB 8D 82            [24] 1493 	mov	dpl,r5
      0001CD 8E 83            [24] 1494 	mov	dph,r6
      0001CF 8F F0            [24] 1495 	mov	b,r7
      0001D1 12r00r00         [24] 1496 	lcall	___gptr_cmp
      0001D4 15 81            [12] 1497 	dec	sp
      0001D6 15 81            [12] 1498 	dec	sp
      0001D8 15 81            [12] 1499 	dec	sp
      0001DA 60 08            [24] 1500 	jz	00123$
      0001DC D0 04            [24] 1501 	pop	ar4
      0001DE D0 03            [24] 1502 	pop	ar3
      0001E0 D0 02            [24] 1503 	pop	ar2
      0001E2 80 2D            [24] 1504 	sjmp	00102$
      0001E4                       1505 00123$:
      0001E4 D0 04            [24] 1506 	pop	ar4
      0001E6 D0 03            [24] 1507 	pop	ar3
      0001E8 D0 02            [24] 1508 	pop	ar2
                                   1509 ;	../../../core/net/rpl/rpl.c:107: uip_ds6_route_rm(r);
      0001EA 8A 82            [24] 1510 	mov	dpl,r2
      0001EC 8B 83            [24] 1511 	mov	dph,r3
      0001EE 8C F0            [24] 1512 	mov	b,r4
      0001F0 78r00            [12] 1513 	mov	r0,#_uip_ds6_route_rm
      0001F2 79s00            [12] 1514 	mov	r1,#(_uip_ds6_route_rm >> 8)
      0001F4 7As00            [12] 1515 	mov	r2,#(_uip_ds6_route_rm >> 16)
      0001F6 12r00r00         [24] 1516 	lcall	__sdcc_banked_call
                                   1517 ;	../../../core/net/rpl/rpl.c:108: r = uip_ds6_route_list_head();
      0001F9 78r00            [12] 1518 	mov	r0,#_uip_ds6_route_list_head
      0001FB 79s00            [12] 1519 	mov	r1,#(_uip_ds6_route_list_head >> 8)
      0001FD 7As00            [12] 1520 	mov	r2,#(_uip_ds6_route_list_head >> 16)
      0001FF 12r00r00         [24] 1521 	lcall	__sdcc_banked_call
      000202 AD 82            [24] 1522 	mov	r5,dpl
      000204 AE 83            [24] 1523 	mov	r6,dph
      000206 AF F0            [24] 1524 	mov	r7,b
      000208 8D 02            [24] 1525 	mov	ar2,r5
      00020A 8E 03            [24] 1526 	mov	ar3,r6
      00020C 8F 04            [24] 1527 	mov	ar4,r7
      00020E 02r01r87         [24] 1528 	ljmp	00104$
      000211                       1529 00102$:
                                   1530 ;	../../../core/net/rpl/rpl.c:110: r = list_item_next(r);
      000211 8A 05            [24] 1531 	mov	ar5,r2
      000213 8B 06            [24] 1532 	mov	ar6,r3
      000215 8C 07            [24] 1533 	mov	ar7,r4
      000217 8D 82            [24] 1534 	mov	dpl,r5
      000219 8E 83            [24] 1535 	mov	dph,r6
      00021B 8F F0            [24] 1536 	mov	b,r7
      00021D 78r00            [12] 1537 	mov	r0,#_list_item_next
      00021F 79s00            [12] 1538 	mov	r1,#(_list_item_next >> 8)
      000221 7As00            [12] 1539 	mov	r2,#(_list_item_next >> 16)
      000223 12r00r00         [24] 1540 	lcall	__sdcc_banked_call
      000226 AD 82            [24] 1541 	mov	r5,dpl
      000228 AE 83            [24] 1542 	mov	r6,dph
      00022A AF F0            [24] 1543 	mov	r7,b
      00022C 8D 02            [24] 1544 	mov	ar2,r5
      00022E 8E 03            [24] 1545 	mov	ar3,r6
      000230 8F 04            [24] 1546 	mov	ar4,r7
      000232 02r01r87         [24] 1547 	ljmp	00104$
      000235                       1548 00107$:
                                   1549 ;	../../../core/net/rpl/rpl.c:113: }
      000235 15 81            [12] 1550 	dec	sp
      000237 15 81            [12] 1551 	dec	sp
      000239 15 81            [12] 1552 	dec	sp
      00023B 02r00r00         [24] 1553 	ljmp	__sdcc_banked_ret
                                   1554 ;------------------------------------------------------------
                                   1555 ;Allocation info for local variables in function 'rpl_remove_routes_by_nexthop'
                                   1556 ;------------------------------------------------------------
                                   1557 ;dag                       Allocated to stack - sp -11
                                   1558 ;nexthop                   Allocated to stack - sp -5
                                   1559 ;r                         Allocated to stack - sp -2
                                   1560 ;------------------------------------------------------------
                                   1561 ;	../../../core/net/rpl/rpl.c:116: rpl_remove_routes_by_nexthop(uip_ipaddr_t *nexthop, rpl_dag_t *dag)
                                   1562 ;	-----------------------------------------
                                   1563 ;	 function rpl_remove_routes_by_nexthop
                                   1564 ;	-----------------------------------------
      00023E                       1565 _rpl_remove_routes_by_nexthop:
      00023E C0 82            [24] 1566 	push	dpl
      000240 C0 83            [24] 1567 	push	dph
      000242 C0 F0            [24] 1568 	push	b
      000244 05 81            [12] 1569 	inc	sp
      000246 05 81            [12] 1570 	inc	sp
      000248 05 81            [12] 1571 	inc	sp
                                   1572 ;	../../../core/net/rpl/rpl.c:120: r = uip_ds6_route_list_head();
      00024A 78r00            [12] 1573 	mov	r0,#_uip_ds6_route_list_head
      00024C 79s00            [12] 1574 	mov	r1,#(_uip_ds6_route_list_head >> 8)
      00024E 7As00            [12] 1575 	mov	r2,#(_uip_ds6_route_list_head >> 16)
      000250 12r00r00         [24] 1576 	lcall	__sdcc_banked_call
      000253 AA 82            [24] 1577 	mov	r2,dpl
      000255 AB 83            [24] 1578 	mov	r3,dph
      000257 AC F0            [24] 1579 	mov	r4,b
      000259 A8 81            [24] 1580 	mov	r0,sp
      00025B 18               [12] 1581 	dec	r0
      00025C 18               [12] 1582 	dec	r0
      00025D A6 02            [24] 1583 	mov	@r0,ar2
      00025F 08               [12] 1584 	inc	r0
      000260 A6 03            [24] 1585 	mov	@r0,ar3
      000262 08               [12] 1586 	inc	r0
      000263 A6 04            [24] 1587 	mov	@r0,ar4
                                   1588 ;	../../../core/net/rpl/rpl.c:122: while(r != NULL) {
      000265                       1589 00105$:
      000265 A8 81            [24] 1590 	mov	r0,sp
      000267 18               [12] 1591 	dec	r0
      000268 18               [12] 1592 	dec	r0
      000269 E6               [12] 1593 	mov	a,@r0
      00026A 08               [12] 1594 	inc	r0
      00026B 46               [12] 1595 	orl	a,@r0
      00026C 70 03            [24] 1596 	jnz	00126$
      00026E 02r03r6D         [24] 1597 	ljmp	00108$
      000271                       1598 00126$:
                                   1599 ;	../../../core/net/rpl/rpl.c:123: if(uip_ipaddr_cmp(&r->nexthop, nexthop) &&
      000271 E5 81            [12] 1600 	mov	a,sp
      000273 24 FB            [12] 1601 	add	a,#0xfb
      000275 F8               [12] 1602 	mov	r0,a
      000276 86 05            [24] 1603 	mov	ar5,@r0
      000278 08               [12] 1604 	inc	r0
      000279 86 06            [24] 1605 	mov	ar6,@r0
      00027B 08               [12] 1606 	inc	r0
      00027C 86 07            [24] 1607 	mov	ar7,@r0
      00027E A8 81            [24] 1608 	mov	r0,sp
      000280 18               [12] 1609 	dec	r0
      000281 18               [12] 1610 	dec	r0
      000282 74 13            [12] 1611 	mov	a,#0x13
      000284 26               [12] 1612 	add	a,@r0
      000285 FA               [12] 1613 	mov	r2,a
      000286 E4               [12] 1614 	clr	a
      000287 08               [12] 1615 	inc	r0
      000288 36               [12] 1616 	addc	a,@r0
      000289 FB               [12] 1617 	mov	r3,a
      00028A 08               [12] 1618 	inc	r0
      00028B 86 04            [24] 1619 	mov	ar4,@r0
      00028D 74 10            [12] 1620 	mov	a,#0x10
      00028F C0 E0            [24] 1621 	push	acc
      000291 E4               [12] 1622 	clr	a
      000292 C0 E0            [24] 1623 	push	acc
      000294 C0 05            [24] 1624 	push	ar5
      000296 C0 06            [24] 1625 	push	ar6
      000298 C0 07            [24] 1626 	push	ar7
      00029A 8A 82            [24] 1627 	mov	dpl,r2
      00029C 8B 83            [24] 1628 	mov	dph,r3
      00029E 8C F0            [24] 1629 	mov	b,r4
      0002A0 78r00            [12] 1630 	mov	r0,#_memcmp
      0002A2 79s00            [12] 1631 	mov	r1,#(_memcmp >> 8)
      0002A4 7As00            [12] 1632 	mov	r2,#(_memcmp >> 16)
      0002A6 12r00r00         [24] 1633 	lcall	__sdcc_banked_call
      0002A9 AE 82            [24] 1634 	mov	r6,dpl
      0002AB AF 83            [24] 1635 	mov	r7,dph
      0002AD E5 81            [12] 1636 	mov	a,sp
      0002AF 24 FB            [12] 1637 	add	a,#0xfb
      0002B1 F5 81            [12] 1638 	mov	sp,a
      0002B3 EE               [12] 1639 	mov	a,r6
      0002B4 4F               [12] 1640 	orl	a,r7
      0002B5 60 03            [24] 1641 	jz	00127$
      0002B7 02r03r3D         [24] 1642 	ljmp	00102$
      0002BA                       1643 00127$:
                                   1644 ;	../../../core/net/rpl/rpl.c:124: r->state.dag == dag) {
      0002BA A8 81            [24] 1645 	mov	r0,sp
      0002BC 18               [12] 1646 	dec	r0
      0002BD 18               [12] 1647 	dec	r0
      0002BE 74 25            [12] 1648 	mov	a,#0x25
      0002C0 26               [12] 1649 	add	a,@r0
      0002C1 FD               [12] 1650 	mov	r5,a
      0002C2 E4               [12] 1651 	clr	a
      0002C3 08               [12] 1652 	inc	r0
      0002C4 36               [12] 1653 	addc	a,@r0
      0002C5 FE               [12] 1654 	mov	r6,a
      0002C6 08               [12] 1655 	inc	r0
      0002C7 86 07            [24] 1656 	mov	ar7,@r0
      0002C9 74 08            [12] 1657 	mov	a,#0x08
      0002CB 2D               [12] 1658 	add	a,r5
      0002CC FD               [12] 1659 	mov	r5,a
      0002CD E4               [12] 1660 	clr	a
      0002CE 3E               [12] 1661 	addc	a,r6
      0002CF FE               [12] 1662 	mov	r6,a
      0002D0 8D 82            [24] 1663 	mov	dpl,r5
      0002D2 8E 83            [24] 1664 	mov	dph,r6
      0002D4 8F F0            [24] 1665 	mov	b,r7
      0002D6 12r00r00         [24] 1666 	lcall	__gptrget
      0002D9 FD               [12] 1667 	mov	r5,a
      0002DA A3               [24] 1668 	inc	dptr
      0002DB 12r00r00         [24] 1669 	lcall	__gptrget
      0002DE FE               [12] 1670 	mov	r6,a
      0002DF A3               [24] 1671 	inc	dptr
      0002E0 12r00r00         [24] 1672 	lcall	__gptrget
      0002E3 FF               [12] 1673 	mov	r7,a
      0002E4 E5 81            [12] 1674 	mov	a,sp
      0002E6 24 F5            [12] 1675 	add	a,#0xf5
      0002E8 F8               [12] 1676 	mov	r0,a
      0002E9 86 02            [24] 1677 	mov	ar2,@r0
      0002EB 08               [12] 1678 	inc	r0
      0002EC 86 03            [24] 1679 	mov	ar3,@r0
      0002EE 08               [12] 1680 	inc	r0
      0002EF 86 04            [24] 1681 	mov	ar4,@r0
      0002F1 C0 02            [24] 1682 	push	ar2
      0002F3 C0 03            [24] 1683 	push	ar3
      0002F5 C0 04            [24] 1684 	push	ar4
      0002F7 8D 82            [24] 1685 	mov	dpl,r5
      0002F9 8E 83            [24] 1686 	mov	dph,r6
      0002FB 8F F0            [24] 1687 	mov	b,r7
      0002FD 12r00r00         [24] 1688 	lcall	___gptr_cmp
      000300 15 81            [12] 1689 	dec	sp
      000302 15 81            [12] 1690 	dec	sp
      000304 15 81            [12] 1691 	dec	sp
      000306 60 02            [24] 1692 	jz	00129$
      000308 80 33            [24] 1693 	sjmp	00102$
      00030A                       1694 00129$:
                                   1695 ;	../../../core/net/rpl/rpl.c:125: uip_ds6_route_rm(r);
      00030A A8 81            [24] 1696 	mov	r0,sp
      00030C 18               [12] 1697 	dec	r0
      00030D 18               [12] 1698 	dec	r0
      00030E 86 82            [24] 1699 	mov	dpl,@r0
      000310 08               [12] 1700 	inc	r0
      000311 86 83            [24] 1701 	mov	dph,@r0
      000313 08               [12] 1702 	inc	r0
      000314 86 F0            [24] 1703 	mov	b,@r0
      000316 78r00            [12] 1704 	mov	r0,#_uip_ds6_route_rm
      000318 79s00            [12] 1705 	mov	r1,#(_uip_ds6_route_rm >> 8)
      00031A 7As00            [12] 1706 	mov	r2,#(_uip_ds6_route_rm >> 16)
      00031C 12r00r00         [24] 1707 	lcall	__sdcc_banked_call
                                   1708 ;	../../../core/net/rpl/rpl.c:126: r = uip_ds6_route_list_head();
      00031F 78r00            [12] 1709 	mov	r0,#_uip_ds6_route_list_head
      000321 79s00            [12] 1710 	mov	r1,#(_uip_ds6_route_list_head >> 8)
      000323 7As00            [12] 1711 	mov	r2,#(_uip_ds6_route_list_head >> 16)
      000325 12r00r00         [24] 1712 	lcall	__sdcc_banked_call
      000328 AD 82            [24] 1713 	mov	r5,dpl
      00032A AE 83            [24] 1714 	mov	r6,dph
      00032C AF F0            [24] 1715 	mov	r7,b
      00032E A8 81            [24] 1716 	mov	r0,sp
      000330 18               [12] 1717 	dec	r0
      000331 18               [12] 1718 	dec	r0
      000332 A6 05            [24] 1719 	mov	@r0,ar5
      000334 08               [12] 1720 	inc	r0
      000335 A6 06            [24] 1721 	mov	@r0,ar6
      000337 08               [12] 1722 	inc	r0
      000338 A6 07            [24] 1723 	mov	@r0,ar7
      00033A 02r02r65         [24] 1724 	ljmp	00105$
      00033D                       1725 00102$:
                                   1726 ;	../../../core/net/rpl/rpl.c:128: r = list_item_next(r);
      00033D A8 81            [24] 1727 	mov	r0,sp
      00033F 18               [12] 1728 	dec	r0
      000340 18               [12] 1729 	dec	r0
      000341 86 02            [24] 1730 	mov	ar2,@r0
      000343 08               [12] 1731 	inc	r0
      000344 86 03            [24] 1732 	mov	ar3,@r0
      000346 08               [12] 1733 	inc	r0
      000347 86 04            [24] 1734 	mov	ar4,@r0
      000349 8A 82            [24] 1735 	mov	dpl,r2
      00034B 8B 83            [24] 1736 	mov	dph,r3
      00034D 8C F0            [24] 1737 	mov	b,r4
      00034F 78r00            [12] 1738 	mov	r0,#_list_item_next
      000351 79s00            [12] 1739 	mov	r1,#(_list_item_next >> 8)
      000353 7As00            [12] 1740 	mov	r2,#(_list_item_next >> 16)
      000355 12r00r00         [24] 1741 	lcall	__sdcc_banked_call
      000358 AD 82            [24] 1742 	mov	r5,dpl
      00035A AE 83            [24] 1743 	mov	r6,dph
      00035C AF F0            [24] 1744 	mov	r7,b
      00035E A8 81            [24] 1745 	mov	r0,sp
      000360 18               [12] 1746 	dec	r0
      000361 18               [12] 1747 	dec	r0
      000362 A6 05            [24] 1748 	mov	@r0,ar5
      000364 08               [12] 1749 	inc	r0
      000365 A6 06            [24] 1750 	mov	@r0,ar6
      000367 08               [12] 1751 	inc	r0
      000368 A6 07            [24] 1752 	mov	@r0,ar7
      00036A 02r02r65         [24] 1753 	ljmp	00105$
      00036D                       1754 00108$:
                                   1755 ;	../../../core/net/rpl/rpl.c:147: }
      00036D E5 81            [12] 1756 	mov	a,sp
      00036F 24 FA            [12] 1757 	add	a,#0xfa
      000371 F5 81            [12] 1758 	mov	sp,a
      000373 02r00r00         [24] 1759 	ljmp	__sdcc_banked_ret
                                   1760 ;------------------------------------------------------------
                                   1761 ;Allocation info for local variables in function 'rpl_add_route'
                                   1762 ;------------------------------------------------------------
                                   1763 ;prefix                    Allocated to stack - sp -18
                                   1764 ;prefix_len                Allocated to stack - sp -20
                                   1765 ;next_hop                  Allocated to stack - sp -23
                                   1766 ;dag                       Allocated to stack - sp -12
                                   1767 ;rep                       Allocated to stack - sp -2
                                   1768 ;sloc0                     Allocated to stack - sp -6
                                   1769 ;sloc1                     Allocated to stack - sp -9
                                   1770 ;sloc2                     Allocated to stack - sp -6
                                   1771 ;------------------------------------------------------------
                                   1772 ;	../../../core/net/rpl/rpl.c:150: rpl_add_route(rpl_dag_t *dag, uip_ipaddr_t *prefix, int prefix_len,
                                   1773 ;	-----------------------------------------
                                   1774 ;	 function rpl_add_route
                                   1775 ;	-----------------------------------------
      000376                       1776 _rpl_add_route:
      000376 C0 82            [24] 1777 	push	dpl
      000378 C0 83            [24] 1778 	push	dph
      00037A C0 F0            [24] 1779 	push	b
      00037C E5 81            [12] 1780 	mov	a,sp
      00037E 24 0A            [12] 1781 	add	a,#0x0a
                                   1782 ;	../../../core/net/rpl/rpl.c:155: rep = uip_ds6_route_lookup(prefix);
      000380 F5 81            [12] 1783 	mov	sp,a
      000382 24 EE            [12] 1784 	add	a,#0xee
      000384 F8               [12] 1785 	mov	r0,a
      000385 86 82            [24] 1786 	mov	dpl,@r0
      000387 08               [12] 1787 	inc	r0
      000388 86 83            [24] 1788 	mov	dph,@r0
      00038A 08               [12] 1789 	inc	r0
      00038B 86 F0            [24] 1790 	mov	b,@r0
      00038D 78r00            [12] 1791 	mov	r0,#_uip_ds6_route_lookup
      00038F 79s00            [12] 1792 	mov	r1,#(_uip_ds6_route_lookup >> 8)
      000391 7As00            [12] 1793 	mov	r2,#(_uip_ds6_route_lookup >> 16)
      000393 12r00r00         [24] 1794 	lcall	__sdcc_banked_call
      000396 AA 82            [24] 1795 	mov	r2,dpl
      000398 AB 83            [24] 1796 	mov	r3,dph
      00039A AC F0            [24] 1797 	mov	r4,b
      00039C A8 81            [24] 1798 	mov	r0,sp
      00039E 18               [12] 1799 	dec	r0
      00039F 18               [12] 1800 	dec	r0
      0003A0 A6 02            [24] 1801 	mov	@r0,ar2
      0003A2 08               [12] 1802 	inc	r0
      0003A3 A6 03            [24] 1803 	mov	@r0,ar3
      0003A5 08               [12] 1804 	inc	r0
      0003A6 A6 04            [24] 1805 	mov	@r0,ar4
                                   1806 ;	../../../core/net/rpl/rpl.c:156: if(rep == NULL) {
      0003A8 A8 81            [24] 1807 	mov	r0,sp
      0003AA 18               [12] 1808 	dec	r0
      0003AB 18               [12] 1809 	dec	r0
      0003AC E6               [12] 1810 	mov	a,@r0
      0003AD 08               [12] 1811 	inc	r0
      0003AE 46               [12] 1812 	orl	a,@r0
      0003AF 70 56            [24] 1813 	jnz	00104$
                                   1814 ;	../../../core/net/rpl/rpl.c:157: if((rep = uip_ds6_route_add(prefix, prefix_len, next_hop, 0)) == NULL) {
      0003B1 E5 81            [12] 1815 	mov	a,sp
      0003B3 24 EC            [12] 1816 	add	a,#0xec
      0003B5 F8               [12] 1817 	mov	r0,a
      0003B6 86 07            [24] 1818 	mov	ar7,@r0
      0003B8 E4               [12] 1819 	clr	a
      0003B9 C0 E0            [24] 1820 	push	acc
      0003BB E5 81            [12] 1821 	mov	a,sp
      0003BD 24 E8            [12] 1822 	add	a,#0xe8
      0003BF F8               [12] 1823 	mov	r0,a
      0003C0 E6               [12] 1824 	mov	a,@r0
      0003C1 C0 E0            [24] 1825 	push	acc
      0003C3 08               [12] 1826 	inc	r0
      0003C4 E6               [12] 1827 	mov	a,@r0
      0003C5 C0 E0            [24] 1828 	push	acc
      0003C7 08               [12] 1829 	inc	r0
      0003C8 E6               [12] 1830 	mov	a,@r0
      0003C9 C0 E0            [24] 1831 	push	acc
      0003CB C0 07            [24] 1832 	push	ar7
      0003CD E5 81            [12] 1833 	mov	a,sp
      0003CF 24 E9            [12] 1834 	add	a,#0xe9
      0003D1 F8               [12] 1835 	mov	r0,a
      0003D2 86 82            [24] 1836 	mov	dpl,@r0
      0003D4 08               [12] 1837 	inc	r0
      0003D5 86 83            [24] 1838 	mov	dph,@r0
      0003D7 08               [12] 1839 	inc	r0
      0003D8 86 F0            [24] 1840 	mov	b,@r0
      0003DA 78r00            [12] 1841 	mov	r0,#_uip_ds6_route_add
      0003DC 79s00            [12] 1842 	mov	r1,#(_uip_ds6_route_add >> 8)
      0003DE 7As00            [12] 1843 	mov	r2,#(_uip_ds6_route_add >> 16)
      0003E0 12r00r00         [24] 1844 	lcall	__sdcc_banked_call
      0003E3 AD 82            [24] 1845 	mov	r5,dpl
      0003E5 AE 83            [24] 1846 	mov	r6,dph
      0003E7 AF F0            [24] 1847 	mov	r7,b
      0003E9 E5 81            [12] 1848 	mov	a,sp
      0003EB 24 FB            [12] 1849 	add	a,#0xfb
      0003ED F5 81            [12] 1850 	mov	sp,a
      0003EF A8 81            [24] 1851 	mov	r0,sp
      0003F1 18               [12] 1852 	dec	r0
      0003F2 18               [12] 1853 	dec	r0
      0003F3 A6 05            [24] 1854 	mov	@r0,ar5
      0003F5 08               [12] 1855 	inc	r0
      0003F6 A6 06            [24] 1856 	mov	@r0,ar6
      0003F8 08               [12] 1857 	inc	r0
      0003F9 A6 07            [24] 1858 	mov	@r0,ar7
      0003FB ED               [12] 1859 	mov	a,r5
      0003FC 4E               [12] 1860 	orl	a,r6
                                   1861 ;	../../../core/net/rpl/rpl.c:159: return NULL;
      0003FD 70 46            [24] 1862 	jnz	00105$
      0003FF 90 00 00         [24] 1863 	mov	dptr,#0x0000
      000402 F5 F0            [12] 1864 	mov	b,a
      000404 02r05r5C         [24] 1865 	ljmp	00106$
      000407                       1866 00104$:
                                   1867 ;	../../../core/net/rpl/rpl.c:167: uip_ipaddr_copy(&rep->nexthop, next_hop);
      000407 E5 81            [12] 1868 	mov	a,sp
      000409 24 E9            [12] 1869 	add	a,#0xe9
      00040B F8               [12] 1870 	mov	r0,a
      00040C 86 05            [24] 1871 	mov	ar5,@r0
      00040E 08               [12] 1872 	inc	r0
      00040F 86 06            [24] 1873 	mov	ar6,@r0
      000411 08               [12] 1874 	inc	r0
      000412 86 07            [24] 1875 	mov	ar7,@r0
      000414 A8 81            [24] 1876 	mov	r0,sp
      000416 18               [12] 1877 	dec	r0
      000417 18               [12] 1878 	dec	r0
      000418 74 13            [12] 1879 	mov	a,#0x13
      00041A 26               [12] 1880 	add	a,@r0
      00041B FA               [12] 1881 	mov	r2,a
      00041C E4               [12] 1882 	clr	a
      00041D 08               [12] 1883 	inc	r0
      00041E 36               [12] 1884 	addc	a,@r0
      00041F FB               [12] 1885 	mov	r3,a
      000420 08               [12] 1886 	inc	r0
      000421 86 04            [24] 1887 	mov	ar4,@r0
      000423 74 10            [12] 1888 	mov	a,#0x10
      000425 C0 E0            [24] 1889 	push	acc
      000427 E4               [12] 1890 	clr	a
      000428 C0 E0            [24] 1891 	push	acc
      00042A C0 05            [24] 1892 	push	ar5
      00042C C0 06            [24] 1893 	push	ar6
      00042E C0 07            [24] 1894 	push	ar7
      000430 8A 82            [24] 1895 	mov	dpl,r2
      000432 8B 83            [24] 1896 	mov	dph,r3
      000434 8C F0            [24] 1897 	mov	b,r4
      000436 78r00            [12] 1898 	mov	r0,#___memcpy
      000438 79s00            [12] 1899 	mov	r1,#(___memcpy >> 8)
      00043A 7As00            [12] 1900 	mov	r2,#(___memcpy >> 16)
      00043C 12r00r00         [24] 1901 	lcall	__sdcc_banked_call
      00043F E5 81            [12] 1902 	mov	a,sp
      000441 24 FB            [12] 1903 	add	a,#0xfb
      000443 F5 81            [12] 1904 	mov	sp,a
                                   1905 ;	../../../core/net/rpl/rpl.c:179: return rep;
                                   1906 ;	../../../core/net/rpl/rpl.c:167: uip_ipaddr_copy(&rep->nexthop, next_hop);
      000445                       1907 00105$:
                                   1908 ;	../../../core/net/rpl/rpl.c:169: rep->state.dag = dag;
      000445 A8 81            [24] 1909 	mov	r0,sp
      000447 18               [12] 1910 	dec	r0
      000448 18               [12] 1911 	dec	r0
      000449 E5 81            [12] 1912 	mov	a,sp
      00044B 24 F7            [12] 1913 	add	a,#0xf7
      00044D F9               [12] 1914 	mov	r1,a
      00044E 74 25            [12] 1915 	mov	a,#0x25
      000450 26               [12] 1916 	add	a,@r0
      000451 F7               [12] 1917 	mov	@r1,a
      000452 E4               [12] 1918 	clr	a
      000453 08               [12] 1919 	inc	r0
      000454 36               [12] 1920 	addc	a,@r0
      000455 09               [12] 1921 	inc	r1
      000456 F7               [12] 1922 	mov	@r1,a
      000457 08               [12] 1923 	inc	r0
      000458 09               [12] 1924 	inc	r1
      000459 E6               [12] 1925 	mov	a,@r0
      00045A F7               [12] 1926 	mov	@r1,a
      00045B E5 81            [12] 1927 	mov	a,sp
      00045D 24 F7            [12] 1928 	add	a,#0xf7
      00045F F8               [12] 1929 	mov	r0,a
      000460 74 08            [12] 1930 	mov	a,#0x08
      000462 26               [12] 1931 	add	a,@r0
      000463 FC               [12] 1932 	mov	r4,a
      000464 E4               [12] 1933 	clr	a
      000465 08               [12] 1934 	inc	r0
      000466 36               [12] 1935 	addc	a,@r0
      000467 FB               [12] 1936 	mov	r3,a
      000468 08               [12] 1937 	inc	r0
      000469 86 02            [24] 1938 	mov	ar2,@r0
      00046B E5 81            [12] 1939 	mov	a,sp
      00046D 24 F4            [12] 1940 	add	a,#0xf4
      00046F F8               [12] 1941 	mov	r0,a
      000470 86 05            [24] 1942 	mov	ar5,@r0
      000472 08               [12] 1943 	inc	r0
      000473 86 06            [24] 1944 	mov	ar6,@r0
      000475 08               [12] 1945 	inc	r0
      000476 86 07            [24] 1946 	mov	ar7,@r0
      000478 8C 82            [24] 1947 	mov	dpl,r4
      00047A 8B 83            [24] 1948 	mov	dph,r3
      00047C 8A F0            [24] 1949 	mov	b,r2
      00047E ED               [12] 1950 	mov	a,r5
      00047F 12r00r00         [24] 1951 	lcall	__gptrput
      000482 A3               [24] 1952 	inc	dptr
      000483 EE               [12] 1953 	mov	a,r6
      000484 12r00r00         [24] 1954 	lcall	__gptrput
      000487 A3               [24] 1955 	inc	dptr
      000488 EF               [12] 1956 	mov	a,r7
      000489 12r00r00         [24] 1957 	lcall	__gptrput
                                   1958 ;	../../../core/net/rpl/rpl.c:170: rep->state.lifetime = RPL_LIFETIME(dag->instance, dag->instance->default_lifetime);
      00048C E5 81            [12] 1959 	mov	a,sp
      00048E 24 F4            [12] 1960 	add	a,#0xf4
      000490 F8               [12] 1961 	mov	r0,a
      000491 74 1C            [12] 1962 	mov	a,#0x1c
      000493 26               [12] 1963 	add	a,@r0
      000494 FD               [12] 1964 	mov	r5,a
      000495 E4               [12] 1965 	clr	a
      000496 08               [12] 1966 	inc	r0
      000497 36               [12] 1967 	addc	a,@r0
      000498 FE               [12] 1968 	mov	r6,a
      000499 08               [12] 1969 	inc	r0
      00049A 86 07            [24] 1970 	mov	ar7,@r0
      00049C 8D 82            [24] 1971 	mov	dpl,r5
      00049E 8E 83            [24] 1972 	mov	dph,r6
      0004A0 8F F0            [24] 1973 	mov	b,r7
      0004A2 12r00r00         [24] 1974 	lcall	__gptrget
      0004A5 FA               [12] 1975 	mov	r2,a
      0004A6 A3               [24] 1976 	inc	dptr
      0004A7 12r00r00         [24] 1977 	lcall	__gptrget
      0004AA FB               [12] 1978 	mov	r3,a
      0004AB A3               [24] 1979 	inc	dptr
      0004AC 12r00r00         [24] 1980 	lcall	__gptrget
      0004AF FC               [12] 1981 	mov	r4,a
      0004B0 74 95            [12] 1982 	mov	a,#0x95
      0004B2 2A               [12] 1983 	add	a,r2
      0004B3 FD               [12] 1984 	mov	r5,a
      0004B4 E4               [12] 1985 	clr	a
      0004B5 3B               [12] 1986 	addc	a,r3
      0004B6 FE               [12] 1987 	mov	r6,a
      0004B7 8C 07            [24] 1988 	mov	ar7,r4
      0004B9 8D 82            [24] 1989 	mov	dpl,r5
      0004BB 8E 83            [24] 1990 	mov	dph,r6
      0004BD 8F F0            [24] 1991 	mov	b,r7
      0004BF 12r00r00         [24] 1992 	lcall	__gptrget
      0004C2 FD               [12] 1993 	mov	r5,a
      0004C3 A3               [24] 1994 	inc	dptr
      0004C4 12r00r00         [24] 1995 	lcall	__gptrget
      0004C7 FE               [12] 1996 	mov	r6,a
      0004C8 E5 81            [12] 1997 	mov	a,sp
      0004CA 24 FA            [12] 1998 	add	a,#0xfa
      0004CC F8               [12] 1999 	mov	r0,a
      0004CD A6 05            [24] 2000 	mov	@r0,ar5
      0004CF 08               [12] 2001 	inc	r0
      0004D0 A6 06            [24] 2002 	mov	@r0,ar6
      0004D2 08               [12] 2003 	inc	r0
      0004D3 76 00            [12] 2004 	mov	@r0,#0x00
      0004D5 08               [12] 2005 	inc	r0
      0004D6 76 00            [12] 2006 	mov	@r0,#0x00
      0004D8 74 8D            [12] 2007 	mov	a,#0x8d
      0004DA 2A               [12] 2008 	add	a,r2
      0004DB FA               [12] 2009 	mov	r2,a
      0004DC E4               [12] 2010 	clr	a
      0004DD 3B               [12] 2011 	addc	a,r3
      0004DE FB               [12] 2012 	mov	r3,a
      0004DF 8C 07            [24] 2013 	mov	ar7,r4
      0004E1 8A 82            [24] 2014 	mov	dpl,r2
      0004E3 8B 83            [24] 2015 	mov	dph,r3
      0004E5 8F F0            [24] 2016 	mov	b,r7
      0004E7 12r00r00         [24] 2017 	lcall	__gptrget
      0004EA FA               [12] 2018 	mov	r2,a
      0004EB 7F 00            [12] 2019 	mov	r7,#0x00
      0004ED 7E 00            [12] 2020 	mov	r6,#0x00
      0004EF 7D 00            [12] 2021 	mov	r5,#0x00
      0004F1 C0 02            [24] 2022 	push	ar2
      0004F3 C0 07            [24] 2023 	push	ar7
      0004F5 C0 06            [24] 2024 	push	ar6
      0004F7 C0 05            [24] 2025 	push	ar5
      0004F9 E5 81            [12] 2026 	mov	a,sp
      0004FB 24 F6            [12] 2027 	add	a,#0xf6
      0004FD F8               [12] 2028 	mov	r0,a
      0004FE 86 82            [24] 2029 	mov	dpl,@r0
      000500 08               [12] 2030 	inc	r0
      000501 86 83            [24] 2031 	mov	dph,@r0
      000503 08               [12] 2032 	inc	r0
      000504 86 F0            [24] 2033 	mov	b,@r0
      000506 08               [12] 2034 	inc	r0
      000507 E6               [12] 2035 	mov	a,@r0
      000508 12r00r00         [24] 2036 	lcall	__mullong
      00050B AE 82            [24] 2037 	mov	r6,dpl
      00050D AD 83            [24] 2038 	mov	r5,dph
      00050F AC F0            [24] 2039 	mov	r4,b
      000511 FF               [12] 2040 	mov	r7,a
      000512 E5 81            [12] 2041 	mov	a,sp
      000514 24 FC            [12] 2042 	add	a,#0xfc
      000516 F5 81            [12] 2043 	mov	sp,a
      000518 24 F7            [12] 2044 	add	a,#0xf7
      00051A F8               [12] 2045 	mov	r0,a
      00051B 86 82            [24] 2046 	mov	dpl,@r0
      00051D 08               [12] 2047 	inc	r0
      00051E 86 83            [24] 2048 	mov	dph,@r0
      000520 08               [12] 2049 	inc	r0
      000521 86 F0            [24] 2050 	mov	b,@r0
      000523 EE               [12] 2051 	mov	a,r6
      000524 12r00r00         [24] 2052 	lcall	__gptrput
      000527 A3               [24] 2053 	inc	dptr
      000528 ED               [12] 2054 	mov	a,r5
      000529 12r00r00         [24] 2055 	lcall	__gptrput
      00052C A3               [24] 2056 	inc	dptr
      00052D EC               [12] 2057 	mov	a,r4
      00052E 12r00r00         [24] 2058 	lcall	__gptrput
      000531 A3               [24] 2059 	inc	dptr
      000532 EF               [12] 2060 	mov	a,r7
      000533 12r00r00         [24] 2061 	lcall	__gptrput
                                   2062 ;	../../../core/net/rpl/rpl.c:171: rep->state.learned_from = RPL_ROUTE_FROM_INTERNAL;
      000536 E5 81            [12] 2063 	mov	a,sp
      000538 24 F7            [12] 2064 	add	a,#0xf7
      00053A F8               [12] 2065 	mov	r0,a
      00053B 74 0B            [12] 2066 	mov	a,#0x0b
      00053D 26               [12] 2067 	add	a,@r0
      00053E FD               [12] 2068 	mov	r5,a
      00053F E4               [12] 2069 	clr	a
      000540 08               [12] 2070 	inc	r0
      000541 36               [12] 2071 	addc	a,@r0
      000542 FE               [12] 2072 	mov	r6,a
      000543 08               [12] 2073 	inc	r0
      000544 86 07            [24] 2074 	mov	ar7,@r0
      000546 8D 82            [24] 2075 	mov	dpl,r5
      000548 8E 83            [24] 2076 	mov	dph,r6
      00054A 8F F0            [24] 2077 	mov	b,r7
      00054C E4               [12] 2078 	clr	a
      00054D 12r00r00         [24] 2079 	lcall	__gptrput
                                   2080 ;	../../../core/net/rpl/rpl.c:179: return rep;
      000550 A8 81            [24] 2081 	mov	r0,sp
      000552 18               [12] 2082 	dec	r0
      000553 18               [12] 2083 	dec	r0
      000554 86 82            [24] 2084 	mov	dpl,@r0
      000556 08               [12] 2085 	inc	r0
      000557 86 83            [24] 2086 	mov	dph,@r0
      000559 08               [12] 2087 	inc	r0
      00055A 86 F0            [24] 2088 	mov	b,@r0
      00055C                       2089 00106$:
                                   2090 ;	../../../core/net/rpl/rpl.c:180: }
      00055C C8               [12] 2091 	xch	a,r0
      00055D E5 81            [12] 2092 	mov	a,sp
      00055F 24 F3            [12] 2093 	add	a,#0xf3
      000561 F5 81            [12] 2094 	mov	sp,a
      000563 C8               [12] 2095 	xch	a,r0
      000564 02r00r00         [24] 2096 	ljmp	__sdcc_banked_ret
                                   2097 ;------------------------------------------------------------
                                   2098 ;Allocation info for local variables in function 'rpl_link_neighbor_callback'
                                   2099 ;------------------------------------------------------------
                                   2100 ;known                     Allocated to stack - sp -7
                                   2101 ;etx                       Allocated to stack - sp -9
                                   2102 ;addr                      Allocated to registers r5 r6 r7 
                                   2103 ;instance                  Allocated to registers 
                                   2104 ;end                       Allocated to registers 
                                   2105 ;sloc0                     Allocated to stack - sp -2
                                   2106 ;------------------------------------------------------------
                                   2107 ;	../../../core/net/rpl/rpl.c:183: rpl_link_neighbor_callback(const rimeaddr_t *addr, int known, int etx)
                                   2108 ;	-----------------------------------------
                                   2109 ;	 function rpl_link_neighbor_callback
                                   2110 ;	-----------------------------------------
      000567                       2111 _rpl_link_neighbor_callback:
      000567 05 81            [12] 2112 	inc	sp
      000569 05 81            [12] 2113 	inc	sp
      00056B 05 81            [12] 2114 	inc	sp
      00056D AD 82            [24] 2115 	mov	r5,dpl
      00056F AE 83            [24] 2116 	mov	r6,dph
      000571 AF F0            [24] 2117 	mov	r7,b
                                   2118 ;	../../../core/net/rpl/rpl.c:188: uip_ip6addr(&ipaddr, 0xfe80, 0, 0, 0, 0, 0, 0, 0);
      000573 90r00r00         [24] 2119 	mov	dptr,#_ipaddr
      000576 74 FE            [12] 2120 	mov	a,#0xfe
      000578 F0               [24] 2121 	movx	@dptr,a
      000579 74 80            [12] 2122 	mov	a,#0x80
      00057B A3               [24] 2123 	inc	dptr
      00057C F0               [24] 2124 	movx	@dptr,a
      00057D 90r00r02         [24] 2125 	mov	dptr,#(_ipaddr + 0x0002)
      000580 E4               [12] 2126 	clr	a
      000581 F0               [24] 2127 	movx	@dptr,a
      000582 A3               [24] 2128 	inc	dptr
      000583 F0               [24] 2129 	movx	@dptr,a
      000584 90r00r04         [24] 2130 	mov	dptr,#(_ipaddr + 0x0004)
      000587 F0               [24] 2131 	movx	@dptr,a
      000588 A3               [24] 2132 	inc	dptr
      000589 F0               [24] 2133 	movx	@dptr,a
      00058A 90r00r06         [24] 2134 	mov	dptr,#(_ipaddr + 0x0006)
      00058D F0               [24] 2135 	movx	@dptr,a
      00058E A3               [24] 2136 	inc	dptr
      00058F F0               [24] 2137 	movx	@dptr,a
      000590 90r00r08         [24] 2138 	mov	dptr,#(_ipaddr + 0x0008)
      000593 F0               [24] 2139 	movx	@dptr,a
      000594 A3               [24] 2140 	inc	dptr
      000595 F0               [24] 2141 	movx	@dptr,a
      000596 90r00r0A         [24] 2142 	mov	dptr,#(_ipaddr + 0x000a)
      000599 F0               [24] 2143 	movx	@dptr,a
      00059A A3               [24] 2144 	inc	dptr
      00059B F0               [24] 2145 	movx	@dptr,a
      00059C 90r00r0C         [24] 2146 	mov	dptr,#(_ipaddr + 0x000c)
      00059F F0               [24] 2147 	movx	@dptr,a
      0005A0 A3               [24] 2148 	inc	dptr
      0005A1 F0               [24] 2149 	movx	@dptr,a
      0005A2 90r00r0E         [24] 2150 	mov	dptr,#(_ipaddr + 0x000e)
      0005A5 F0               [24] 2151 	movx	@dptr,a
      0005A6 A3               [24] 2152 	inc	dptr
      0005A7 F0               [24] 2153 	movx	@dptr,a
                                   2154 ;	../../../core/net/rpl/rpl.c:189: uip_ds6_set_addr_iid(&ipaddr, (uip_lladdr_t *)addr);
      0005A8 C0 05            [24] 2155 	push	ar5
      0005AA C0 06            [24] 2156 	push	ar6
      0005AC C0 07            [24] 2157 	push	ar7
      0005AE 90r00r00         [24] 2158 	mov	dptr,#_ipaddr
      0005B1 75 F0 00         [24] 2159 	mov	b,#0x00
      0005B4 78r00            [12] 2160 	mov	r0,#_uip_ds6_set_addr_iid
      0005B6 79s00            [12] 2161 	mov	r1,#(_uip_ds6_set_addr_iid >> 8)
      0005B8 7As00            [12] 2162 	mov	r2,#(_uip_ds6_set_addr_iid >> 16)
      0005BA 12r00r00         [24] 2163 	lcall	__sdcc_banked_call
      0005BD 15 81            [12] 2164 	dec	sp
      0005BF 15 81            [12] 2165 	dec	sp
      0005C1 15 81            [12] 2166 	dec	sp
                                   2167 ;	../../../core/net/rpl/rpl.c:194: for(instance = &instance_table[0], end = instance + RPL_MAX_INSTANCES; instance < end; ++instance) {
      0005C3 7Dr00            [12] 2168 	mov	r5,#_instance_table
      0005C5 7Es00            [12] 2169 	mov	r6,#(_instance_table >> 8)
      0005C7 7F 00            [12] 2170 	mov	r7,#0x00
      0005C9                       2171 00116$:
      0005C9 74rC5            [12] 2172 	mov	a,#(_instance_table + 0x00c5)
      0005CB C0 E0            [24] 2173 	push	acc
      0005CD 74s00            [12] 2174 	mov	a,#((_instance_table + 0x00c5) >> 8)
      0005CF C0 E0            [24] 2175 	push	acc
      0005D1 E4               [12] 2176 	clr	a
      0005D2 C0 E0            [24] 2177 	push	acc
      0005D4 8D 82            [24] 2178 	mov	dpl,r5
      0005D6 8E 83            [24] 2179 	mov	dph,r6
      0005D8 8F F0            [24] 2180 	mov	b,r7
      0005DA 12r00r00         [24] 2181 	lcall	___gptr_cmp
      0005DD 15 81            [12] 2182 	dec	sp
      0005DF 15 81            [12] 2183 	dec	sp
      0005E1 15 81            [12] 2184 	dec	sp
      0005E3 40 03            [24] 2185 	jc	00149$
      0005E5 02r07r5D         [24] 2186 	ljmp	00112$
      0005E8                       2187 00149$:
                                   2188 ;	../../../core/net/rpl/rpl.c:195: if(instance->used == 1 ) {
      0005E8 74 87            [12] 2189 	mov	a,#0x87
      0005EA 2D               [12] 2190 	add	a,r5
      0005EB FA               [12] 2191 	mov	r2,a
      0005EC E4               [12] 2192 	clr	a
      0005ED 3E               [12] 2193 	addc	a,r6
      0005EE FB               [12] 2194 	mov	r3,a
      0005EF 8F 04            [24] 2195 	mov	ar4,r7
      0005F1 8A 82            [24] 2196 	mov	dpl,r2
      0005F3 8B 83            [24] 2197 	mov	dph,r3
      0005F5 8C F0            [24] 2198 	mov	b,r4
      0005F7 12r00r00         [24] 2199 	lcall	__gptrget
      0005FA FA               [12] 2200 	mov	r2,a
      0005FB BA 01 02         [24] 2201 	cjne	r2,#0x01,00150$
      0005FE 80 03            [24] 2202 	sjmp	00151$
      000600                       2203 00150$:
      000600 02r07r53         [24] 2204 	ljmp	00117$
      000603                       2205 00151$:
                                   2206 ;	../../../core/net/rpl/rpl.c:196: parent = rpl_find_parent_any_dag(instance, &ipaddr);
      000603 C0 07            [24] 2207 	push	ar7
      000605 C0 06            [24] 2208 	push	ar6
      000607 C0 05            [24] 2209 	push	ar5
      000609 74r00            [12] 2210 	mov	a,#_ipaddr
      00060B C0 E0            [24] 2211 	push	acc
      00060D 74s00            [12] 2212 	mov	a,#(_ipaddr >> 8)
      00060F C0 E0            [24] 2213 	push	acc
      000611 E4               [12] 2214 	clr	a
      000612 C0 E0            [24] 2215 	push	acc
      000614 8D 82            [24] 2216 	mov	dpl,r5
      000616 8E 83            [24] 2217 	mov	dph,r6
      000618 8F F0            [24] 2218 	mov	b,r7
      00061A 78r00            [12] 2219 	mov	r0,#_rpl_find_parent_any_dag
      00061C 79s00            [12] 2220 	mov	r1,#(_rpl_find_parent_any_dag >> 8)
      00061E 7As00            [12] 2221 	mov	r2,#(_rpl_find_parent_any_dag >> 16)
      000620 12r00r00         [24] 2222 	lcall	__sdcc_banked_call
      000623 AA 82            [24] 2223 	mov	r2,dpl
      000625 AB 83            [24] 2224 	mov	r3,dph
      000627 AC F0            [24] 2225 	mov	r4,b
      000629 15 81            [12] 2226 	dec	sp
      00062B 15 81            [12] 2227 	dec	sp
      00062D 15 81            [12] 2228 	dec	sp
      00062F D0 05            [24] 2229 	pop	ar5
      000631 D0 06            [24] 2230 	pop	ar6
      000633 D0 07            [24] 2231 	pop	ar7
      000635 90r00r13         [24] 2232 	mov	dptr,#_parent
      000638 EA               [12] 2233 	mov	a,r2
      000639 F0               [24] 2234 	movx	@dptr,a
      00063A EB               [12] 2235 	mov	a,r3
      00063B A3               [24] 2236 	inc	dptr
      00063C F0               [24] 2237 	movx	@dptr,a
      00063D EC               [12] 2238 	mov	a,r4
      00063E A3               [24] 2239 	inc	dptr
      00063F F0               [24] 2240 	movx	@dptr,a
                                   2241 ;	../../../core/net/rpl/rpl.c:197: if(parent != NULL) {
      000640 EA               [12] 2242 	mov	a,r2
      000641 4B               [12] 2243 	orl	a,r3
      000642 70 03            [24] 2244 	jnz	00152$
      000644 02r07r53         [24] 2245 	ljmp	00117$
      000647                       2246 00152$:
                                   2247 ;	../../../core/net/rpl/rpl.c:199: parent->updated = 1;
      000647 74 21            [12] 2248 	mov	a,#0x21
      000649 2A               [12] 2249 	add	a,r2
      00064A FA               [12] 2250 	mov	r2,a
      00064B E4               [12] 2251 	clr	a
      00064C 3B               [12] 2252 	addc	a,r3
      00064D FB               [12] 2253 	mov	r3,a
      00064E 8A 82            [24] 2254 	mov	dpl,r2
      000650 8B 83            [24] 2255 	mov	dph,r3
      000652 8C F0            [24] 2256 	mov	b,r4
      000654 74 01            [12] 2257 	mov	a,#0x01
      000656 12r00r00         [24] 2258 	lcall	__gptrput
                                   2259 ;	../../../core/net/rpl/rpl.c:200: parent->link_metric = etx;
      000659 90r00r13         [24] 2260 	mov	dptr,#_parent
      00065C E0               [24] 2261 	movx	a,@dptr
      00065D FA               [12] 2262 	mov	r2,a
      00065E A3               [24] 2263 	inc	dptr
      00065F E0               [24] 2264 	movx	a,@dptr
      000660 FB               [12] 2265 	mov	r3,a
      000661 A3               [24] 2266 	inc	dptr
      000662 E0               [24] 2267 	movx	a,@dptr
      000663 FC               [12] 2268 	mov	r4,a
      000664 A8 81            [24] 2269 	mov	r0,sp
      000666 18               [12] 2270 	dec	r0
      000667 18               [12] 2271 	dec	r0
      000668 74 1F            [12] 2272 	mov	a,#0x1f
      00066A 2A               [12] 2273 	add	a,r2
      00066B F6               [12] 2274 	mov	@r0,a
      00066C E4               [12] 2275 	clr	a
      00066D 3B               [12] 2276 	addc	a,r3
      00066E 08               [12] 2277 	inc	r0
      00066F F6               [12] 2278 	mov	@r0,a
      000670 08               [12] 2279 	inc	r0
      000671 A6 04            [24] 2280 	mov	@r0,ar4
      000673 E5 81            [12] 2281 	mov	a,sp
      000675 24 F7            [12] 2282 	add	a,#0xf7
      000677 F8               [12] 2283 	mov	r0,a
      000678 86 04            [24] 2284 	mov	ar4,@r0
      00067A A8 81            [24] 2285 	mov	r0,sp
      00067C 18               [12] 2286 	dec	r0
      00067D 18               [12] 2287 	dec	r0
      00067E 86 82            [24] 2288 	mov	dpl,@r0
      000680 08               [12] 2289 	inc	r0
      000681 86 83            [24] 2290 	mov	dph,@r0
      000683 08               [12] 2291 	inc	r0
      000684 86 F0            [24] 2292 	mov	b,@r0
      000686 EC               [12] 2293 	mov	a,r4
      000687 12r00r00         [24] 2294 	lcall	__gptrput
                                   2295 ;	../../../core/net/rpl/rpl.c:202: if(instance->of->parent_state_callback != NULL) {
      00068A 74 07            [12] 2296 	mov	a,#0x07
      00068C 2D               [12] 2297 	add	a,r5
      00068D FA               [12] 2298 	mov	r2,a
      00068E E4               [12] 2299 	clr	a
      00068F 3E               [12] 2300 	addc	a,r6
      000690 FB               [12] 2301 	mov	r3,a
      000691 8F 04            [24] 2302 	mov	ar4,r7
      000693 8A 82            [24] 2303 	mov	dpl,r2
      000695 8B 83            [24] 2304 	mov	dph,r3
      000697 8C F0            [24] 2305 	mov	b,r4
      000699 12r00r00         [24] 2306 	lcall	__gptrget
      00069C FA               [12] 2307 	mov	r2,a
      00069D A3               [24] 2308 	inc	dptr
      00069E 12r00r00         [24] 2309 	lcall	__gptrget
      0006A1 FB               [12] 2310 	mov	r3,a
      0006A2 A3               [24] 2311 	inc	dptr
      0006A3 12r00r00         [24] 2312 	lcall	__gptrget
      0006A6 FC               [12] 2313 	mov	r4,a
      0006A7 74 03            [12] 2314 	mov	a,#0x03
      0006A9 2A               [12] 2315 	add	a,r2
      0006AA FA               [12] 2316 	mov	r2,a
      0006AB E4               [12] 2317 	clr	a
      0006AC 3B               [12] 2318 	addc	a,r3
      0006AD FB               [12] 2319 	mov	r3,a
      0006AE 8A 82            [24] 2320 	mov	dpl,r2
      0006B0 8B 83            [24] 2321 	mov	dph,r3
      0006B2 8C F0            [24] 2322 	mov	b,r4
      0006B4 12r00r00         [24] 2323 	lcall	__gptrget
      0006B7 FA               [12] 2324 	mov	r2,a
      0006B8 A3               [24] 2325 	inc	dptr
      0006B9 12r00r00         [24] 2326 	lcall	__gptrget
      0006BC FB               [12] 2327 	mov	r3,a
      0006BD A3               [24] 2328 	inc	dptr
      0006BE 12r00r00         [24] 2329 	lcall	__gptrget
      0006C1 FC               [12] 2330 	mov	r4,a
      0006C2 EA               [12] 2331 	mov	a,r2
      0006C3 4B               [12] 2332 	orl	a,r3
      0006C4 60 62            [24] 2333 	jz	00105$
                                   2334 ;	../../../core/net/rpl/rpl.c:203: instance->of->parent_state_callback(parent, known, etx);
      0006C6 C0 05            [24] 2335 	push	ar5
      0006C8 C0 06            [24] 2336 	push	ar6
      0006CA C0 07            [24] 2337 	push	ar7
      0006CC 90r00r13         [24] 2338 	mov	dptr,#_parent
      0006CF E0               [24] 2339 	movx	a,@dptr
      0006D0 FD               [12] 2340 	mov	r5,a
      0006D1 A3               [24] 2341 	inc	dptr
      0006D2 E0               [24] 2342 	movx	a,@dptr
      0006D3 FE               [12] 2343 	mov	r6,a
      0006D4 A3               [24] 2344 	inc	dptr
      0006D5 E0               [24] 2345 	movx	a,@dptr
      0006D6 FF               [12] 2346 	mov	r7,a
      0006D7 C0 07            [24] 2347 	push	ar7
      0006D9 C0 06            [24] 2348 	push	ar6
      0006DB C0 05            [24] 2349 	push	ar5
      0006DD C0 04            [24] 2350 	push	ar4
      0006DF C0 03            [24] 2351 	push	ar3
      0006E1 C0 02            [24] 2352 	push	ar2
      0006E3 E5 81            [12] 2353 	mov	a,sp
      0006E5 24 EE            [12] 2354 	add	a,#0xee
      0006E7 F8               [12] 2355 	mov	r0,a
      0006E8 E6               [12] 2356 	mov	a,@r0
      0006E9 C0 E0            [24] 2357 	push	acc
      0006EB 08               [12] 2358 	inc	r0
      0006EC E6               [12] 2359 	mov	a,@r0
      0006ED C0 E0            [24] 2360 	push	acc
      0006EF E5 81            [12] 2361 	mov	a,sp
      0006F1 24 EE            [12] 2362 	add	a,#0xee
      0006F3 F8               [12] 2363 	mov	r0,a
      0006F4 E6               [12] 2364 	mov	a,@r0
      0006F5 C0 E0            [24] 2365 	push	acc
      0006F7 08               [12] 2366 	inc	r0
      0006F8 E6               [12] 2367 	mov	a,@r0
      0006F9 C0 E0            [24] 2368 	push	acc
      0006FB C0 02            [24] 2369 	push	ar2
      0006FD C0 03            [24] 2370 	push	ar3
      0006FF C0 04            [24] 2371 	push	ar4
      000701 8D 82            [24] 2372 	mov	dpl,r5
      000703 8E 83            [24] 2373 	mov	dph,r6
      000705 8F F0            [24] 2374 	mov	b,r7
      000707 D0 02            [24] 2375 	pop	ar2
      000709 D0 01            [24] 2376 	pop	ar1
      00070B D0 00            [24] 2377 	pop	ar0
      00070D 12r00r00         [24] 2378 	lcall	__sdcc_banked_call
      000710 E5 81            [12] 2379 	mov	a,sp
      000712 24 FC            [12] 2380 	add	a,#0xfc
      000714 F5 81            [12] 2381 	mov	sp,a
      000716 D0 02            [24] 2382 	pop	ar2
      000718 D0 03            [24] 2383 	pop	ar3
      00071A D0 04            [24] 2384 	pop	ar4
      00071C D0 05            [24] 2385 	pop	ar5
      00071E D0 06            [24] 2386 	pop	ar6
      000720 D0 07            [24] 2387 	pop	ar7
                                   2388 ;	../../../core/net/rpl/rpl.c:219: uip_ds6_route_rm_by_nexthop(&ipaddr);
      000722 D0 07            [24] 2389 	pop	ar7
      000724 D0 06            [24] 2390 	pop	ar6
      000726 D0 05            [24] 2391 	pop	ar5
                                   2392 ;	../../../core/net/rpl/rpl.c:203: instance->of->parent_state_callback(parent, known, etx);
      000728                       2393 00105$:
                                   2394 ;	../../../core/net/rpl/rpl.c:205: if(!known) {
      000728 E5 81            [12] 2395 	mov	a,sp
      00072A 24 F9            [12] 2396 	add	a,#0xf9
      00072C F8               [12] 2397 	mov	r0,a
      00072D E6               [12] 2398 	mov	a,@r0
      00072E 08               [12] 2399 	inc	r0
      00072F 46               [12] 2400 	orl	a,@r0
      000730 70 21            [24] 2401 	jnz	00117$
                                   2402 ;	../../../core/net/rpl/rpl.c:209: parent->rank = INFINITE_RANK;
      000732 90r00r13         [24] 2403 	mov	dptr,#_parent
      000735 E0               [24] 2404 	movx	a,@dptr
      000736 FA               [12] 2405 	mov	r2,a
      000737 A3               [24] 2406 	inc	dptr
      000738 E0               [24] 2407 	movx	a,@dptr
      000739 FB               [12] 2408 	mov	r3,a
      00073A A3               [24] 2409 	inc	dptr
      00073B E0               [24] 2410 	movx	a,@dptr
      00073C FC               [12] 2411 	mov	r4,a
      00073D 74 1D            [12] 2412 	mov	a,#0x1d
      00073F 2A               [12] 2413 	add	a,r2
      000740 FA               [12] 2414 	mov	r2,a
      000741 E4               [12] 2415 	clr	a
      000742 3B               [12] 2416 	addc	a,r3
      000743 FB               [12] 2417 	mov	r3,a
      000744 8A 82            [24] 2418 	mov	dpl,r2
      000746 8B 83            [24] 2419 	mov	dph,r3
      000748 8C F0            [24] 2420 	mov	b,r4
      00074A 74 FF            [12] 2421 	mov	a,#0xff
      00074C 12r00r00         [24] 2422 	lcall	__gptrput
      00074F A3               [24] 2423 	inc	dptr
      000750 12r00r00         [24] 2424 	lcall	__gptrput
      000753                       2425 00117$:
                                   2426 ;	../../../core/net/rpl/rpl.c:194: for(instance = &instance_table[0], end = instance + RPL_MAX_INSTANCES; instance < end; ++instance) {
      000753 74 C5            [12] 2427 	mov	a,#0xc5
      000755 2D               [12] 2428 	add	a,r5
      000756 FD               [12] 2429 	mov	r5,a
      000757 E4               [12] 2430 	clr	a
      000758 3E               [12] 2431 	addc	a,r6
      000759 FE               [12] 2432 	mov	r6,a
      00075A 02r05rC9         [24] 2433 	ljmp	00116$
      00075D                       2434 00112$:
                                   2435 ;	../../../core/net/rpl/rpl.c:215: if(!known) {
      00075D E5 81            [12] 2436 	mov	a,sp
      00075F 24 F9            [12] 2437 	add	a,#0xf9
      000761 F8               [12] 2438 	mov	r0,a
      000762 E6               [12] 2439 	mov	a,@r0
      000763 08               [12] 2440 	inc	r0
      000764 46               [12] 2441 	orl	a,@r0
                                   2442 ;	../../../core/net/rpl/rpl.c:219: uip_ds6_route_rm_by_nexthop(&ipaddr);
      000765 70 0E            [24] 2443 	jnz	00118$
      000767 90r00r00         [24] 2444 	mov	dptr,#_ipaddr
      00076A F5 F0            [12] 2445 	mov	b,a
      00076C 78r00            [12] 2446 	mov	r0,#_uip_ds6_route_rm_by_nexthop
      00076E 79s00            [12] 2447 	mov	r1,#(_uip_ds6_route_rm_by_nexthop >> 8)
      000770 7As00            [12] 2448 	mov	r2,#(_uip_ds6_route_rm_by_nexthop >> 16)
      000772 12r00r00         [24] 2449 	lcall	__sdcc_banked_call
      000775                       2450 00118$:
                                   2451 ;	../../../core/net/rpl/rpl.c:221: }
      000775 15 81            [12] 2452 	dec	sp
      000777 15 81            [12] 2453 	dec	sp
      000779 15 81            [12] 2454 	dec	sp
      00077B 02r00r00         [24] 2455 	ljmp	__sdcc_banked_ret
                                   2456 ;------------------------------------------------------------
                                   2457 ;Allocation info for local variables in function 'rpl_ipv6_neighbor_callback'
                                   2458 ;------------------------------------------------------------
                                   2459 ;nbr                       Allocated to stack - sp -2
                                   2460 ;instance                  Allocated to registers 
                                   2461 ;end                       Allocated to registers 
                                   2462 ;------------------------------------------------------------
                                   2463 ;	../../../core/net/rpl/rpl.c:224: rpl_ipv6_neighbor_callback(uip_ds6_nbr_t *nbr)
                                   2464 ;	-----------------------------------------
                                   2465 ;	 function rpl_ipv6_neighbor_callback
                                   2466 ;	-----------------------------------------
      00077E                       2467 _rpl_ipv6_neighbor_callback:
      00077E C0 82            [24] 2468 	push	dpl
      000780 C0 83            [24] 2469 	push	dph
      000782 C0 F0            [24] 2470 	push	b
                                   2471 ;	../../../core/net/rpl/rpl.c:229: if(!nbr->isused) {
      000784 A8 81            [24] 2472 	mov	r0,sp
      000786 18               [12] 2473 	dec	r0
      000787 18               [12] 2474 	dec	r0
      000788 86 82            [24] 2475 	mov	dpl,@r0
      00078A 08               [12] 2476 	inc	r0
      00078B 86 83            [24] 2477 	mov	dph,@r0
      00078D 08               [12] 2478 	inc	r0
      00078E 86 F0            [24] 2479 	mov	b,@r0
      000790 12r00r00         [24] 2480 	lcall	__gptrget
      000793 60 03            [24] 2481 	jz	00134$
      000795 02r08r60         [24] 2482 	ljmp	00111$
      000798                       2483 00134$:
                                   2484 ;	../../../core/net/rpl/rpl.c:233: for(instance = &instance_table[0], end = instance + RPL_MAX_INSTANCES; instance < end; ++instance) {
      000798 7Ar00            [12] 2485 	mov	r2,#_instance_table
      00079A 7Bs00            [12] 2486 	mov	r3,#(_instance_table >> 8)
      00079C 7C 00            [12] 2487 	mov	r4,#0x00
      00079E                       2488 00109$:
      00079E 74rC5            [12] 2489 	mov	a,#(_instance_table + 0x00c5)
      0007A0 C0 E0            [24] 2490 	push	acc
      0007A2 74s00            [12] 2491 	mov	a,#((_instance_table + 0x00c5) >> 8)
      0007A4 C0 E0            [24] 2492 	push	acc
      0007A6 E4               [12] 2493 	clr	a
      0007A7 C0 E0            [24] 2494 	push	acc
      0007A9 8A 82            [24] 2495 	mov	dpl,r2
      0007AB 8B 83            [24] 2496 	mov	dph,r3
      0007AD 8C F0            [24] 2497 	mov	b,r4
      0007AF 12r00r00         [24] 2498 	lcall	___gptr_cmp
      0007B2 15 81            [12] 2499 	dec	sp
      0007B4 15 81            [12] 2500 	dec	sp
      0007B6 15 81            [12] 2501 	dec	sp
      0007B8 40 03            [24] 2502 	jc	00135$
      0007BA 02r08r60         [24] 2503 	ljmp	00111$
      0007BD                       2504 00135$:
                                   2505 ;	../../../core/net/rpl/rpl.c:234: if(instance->used == 1 ) {
      0007BD 74 87            [12] 2506 	mov	a,#0x87
      0007BF 2A               [12] 2507 	add	a,r2
      0007C0 FD               [12] 2508 	mov	r5,a
      0007C1 E4               [12] 2509 	clr	a
      0007C2 3B               [12] 2510 	addc	a,r3
      0007C3 FE               [12] 2511 	mov	r6,a
      0007C4 8C 07            [24] 2512 	mov	ar7,r4
      0007C6 8D 82            [24] 2513 	mov	dpl,r5
      0007C8 8E 83            [24] 2514 	mov	dph,r6
      0007CA 8F F0            [24] 2515 	mov	b,r7
      0007CC 12r00r00         [24] 2516 	lcall	__gptrget
      0007CF FD               [12] 2517 	mov	r5,a
      0007D0 BD 01 02         [24] 2518 	cjne	r5,#0x01,00136$
      0007D3 80 03            [24] 2519 	sjmp	00137$
      0007D5                       2520 00136$:
      0007D5 02r08r56         [24] 2521 	ljmp	00110$
      0007D8                       2522 00137$:
                                   2523 ;	../../../core/net/rpl/rpl.c:235: p = rpl_find_parent_any_dag(instance, &nbr->ipaddr);
      0007D8 A8 81            [24] 2524 	mov	r0,sp
      0007DA 18               [12] 2525 	dec	r0
      0007DB 18               [12] 2526 	dec	r0
      0007DC 74 01            [12] 2527 	mov	a,#0x01
      0007DE 26               [12] 2528 	add	a,@r0
      0007DF FD               [12] 2529 	mov	r5,a
      0007E0 E4               [12] 2530 	clr	a
      0007E1 08               [12] 2531 	inc	r0
      0007E2 36               [12] 2532 	addc	a,@r0
      0007E3 FE               [12] 2533 	mov	r6,a
      0007E4 08               [12] 2534 	inc	r0
      0007E5 86 07            [24] 2535 	mov	ar7,@r0
      0007E7 C0 04            [24] 2536 	push	ar4
      0007E9 C0 03            [24] 2537 	push	ar3
      0007EB C0 02            [24] 2538 	push	ar2
      0007ED C0 05            [24] 2539 	push	ar5
      0007EF C0 06            [24] 2540 	push	ar6
      0007F1 C0 07            [24] 2541 	push	ar7
      0007F3 8A 82            [24] 2542 	mov	dpl,r2
      0007F5 8B 83            [24] 2543 	mov	dph,r3
      0007F7 8C F0            [24] 2544 	mov	b,r4
      0007F9 78r00            [12] 2545 	mov	r0,#_rpl_find_parent_any_dag
      0007FB 79s00            [12] 2546 	mov	r1,#(_rpl_find_parent_any_dag >> 8)
      0007FD 7As00            [12] 2547 	mov	r2,#(_rpl_find_parent_any_dag >> 16)
      0007FF 12r00r00         [24] 2548 	lcall	__sdcc_banked_call
      000802 AD 82            [24] 2549 	mov	r5,dpl
      000804 AE 83            [24] 2550 	mov	r6,dph
      000806 AF F0            [24] 2551 	mov	r7,b
      000808 15 81            [12] 2552 	dec	sp
      00080A 15 81            [12] 2553 	dec	sp
      00080C 15 81            [12] 2554 	dec	sp
      00080E D0 02            [24] 2555 	pop	ar2
      000810 D0 03            [24] 2556 	pop	ar3
      000812 D0 04            [24] 2557 	pop	ar4
      000814 90r00r10         [24] 2558 	mov	dptr,#_p
      000817 ED               [12] 2559 	mov	a,r5
      000818 F0               [24] 2560 	movx	@dptr,a
      000819 EE               [12] 2561 	mov	a,r6
      00081A A3               [24] 2562 	inc	dptr
      00081B F0               [24] 2563 	movx	@dptr,a
      00081C EF               [12] 2564 	mov	a,r7
      00081D A3               [24] 2565 	inc	dptr
      00081E F0               [24] 2566 	movx	@dptr,a
                                   2567 ;	../../../core/net/rpl/rpl.c:236: if(p != NULL) {
      00081F ED               [12] 2568 	mov	a,r5
      000820 4E               [12] 2569 	orl	a,r6
      000821 60 33            [24] 2570 	jz	00110$
                                   2571 ;	../../../core/net/rpl/rpl.c:237: p->rank = INFINITE_RANK;
      000823 74 1D            [12] 2572 	mov	a,#0x1d
      000825 2D               [12] 2573 	add	a,r5
      000826 FD               [12] 2574 	mov	r5,a
      000827 E4               [12] 2575 	clr	a
      000828 3E               [12] 2576 	addc	a,r6
      000829 FE               [12] 2577 	mov	r6,a
      00082A 8D 82            [24] 2578 	mov	dpl,r5
      00082C 8E 83            [24] 2579 	mov	dph,r6
      00082E 8F F0            [24] 2580 	mov	b,r7
      000830 74 FF            [12] 2581 	mov	a,#0xff
      000832 12r00r00         [24] 2582 	lcall	__gptrput
      000835 A3               [24] 2583 	inc	dptr
      000836 12r00r00         [24] 2584 	lcall	__gptrput
                                   2585 ;	../../../core/net/rpl/rpl.c:239: p->updated = 1;
      000839 90r00r10         [24] 2586 	mov	dptr,#_p
      00083C E0               [24] 2587 	movx	a,@dptr
      00083D FD               [12] 2588 	mov	r5,a
      00083E A3               [24] 2589 	inc	dptr
      00083F E0               [24] 2590 	movx	a,@dptr
      000840 FE               [12] 2591 	mov	r6,a
      000841 A3               [24] 2592 	inc	dptr
      000842 E0               [24] 2593 	movx	a,@dptr
      000843 FF               [12] 2594 	mov	r7,a
      000844 74 21            [12] 2595 	mov	a,#0x21
      000846 2D               [12] 2596 	add	a,r5
      000847 FD               [12] 2597 	mov	r5,a
      000848 E4               [12] 2598 	clr	a
      000849 3E               [12] 2599 	addc	a,r6
      00084A FE               [12] 2600 	mov	r6,a
      00084B 8D 82            [24] 2601 	mov	dpl,r5
      00084D 8E 83            [24] 2602 	mov	dph,r6
      00084F 8F F0            [24] 2603 	mov	b,r7
      000851 74 01            [12] 2604 	mov	a,#0x01
      000853 12r00r00         [24] 2605 	lcall	__gptrput
      000856                       2606 00110$:
                                   2607 ;	../../../core/net/rpl/rpl.c:233: for(instance = &instance_table[0], end = instance + RPL_MAX_INSTANCES; instance < end; ++instance) {
      000856 74 C5            [12] 2608 	mov	a,#0xc5
      000858 2A               [12] 2609 	add	a,r2
      000859 FA               [12] 2610 	mov	r2,a
      00085A E4               [12] 2611 	clr	a
      00085B 3B               [12] 2612 	addc	a,r3
      00085C FB               [12] 2613 	mov	r3,a
      00085D 02r07r9E         [24] 2614 	ljmp	00109$
      000860                       2615 00111$:
                                   2616 ;	../../../core/net/rpl/rpl.c:244: }
      000860 15 81            [12] 2617 	dec	sp
      000862 15 81            [12] 2618 	dec	sp
      000864 15 81            [12] 2619 	dec	sp
      000866 02r00r00         [24] 2620 	ljmp	__sdcc_banked_ret
                                   2621 ;------------------------------------------------------------
                                   2622 ;Allocation info for local variables in function 'rpl_init'
                                   2623 ;------------------------------------------------------------
                                   2624 ;rplmaddr                  Allocated to stack - sp -15
                                   2625 ;------------------------------------------------------------
                                   2626 ;	../../../core/net/rpl/rpl.c:247: rpl_init(void)
                                   2627 ;	-----------------------------------------
                                   2628 ;	 function rpl_init
                                   2629 ;	-----------------------------------------
      000869                       2630 _rpl_init:
      000869 E5 81            [12] 2631 	mov	a,sp
      00086B 24 10            [12] 2632 	add	a,#0x10
      00086D F5 81            [12] 2633 	mov	sp,a
                                   2634 ;	../../../core/net/rpl/rpl.c:251: default_instance = NULL;
      00086F 90r00r00         [24] 2635 	mov	dptr,#_default_instance
      000872 E4               [12] 2636 	clr	a
      000873 F0               [24] 2637 	movx	@dptr,a
      000874 A3               [24] 2638 	inc	dptr
      000875 F0               [24] 2639 	movx	@dptr,a
      000876 A3               [24] 2640 	inc	dptr
      000877 F0               [24] 2641 	movx	@dptr,a
                                   2642 ;	../../../core/net/rpl/rpl.c:253: rpl_reset_periodic_timer();
      000878 78r00            [12] 2643 	mov	r0,#_rpl_reset_periodic_timer
      00087A 79s00            [12] 2644 	mov	r1,#(_rpl_reset_periodic_timer >> 8)
      00087C 7As00            [12] 2645 	mov	r2,#(_rpl_reset_periodic_timer >> 16)
      00087E 12r00r00         [24] 2646 	lcall	__sdcc_banked_call
                                   2647 ;	../../../core/net/rpl/rpl.c:254: neighbor_info_subscribe(rpl_link_neighbor_callback);
      000881 90r05r67         [24] 2648 	mov	dptr,#_rpl_link_neighbor_callback
      000884 75 F0s00         [24] 2649 	mov	b,#(_rpl_link_neighbor_callback >> 16)
      000887 78r00            [12] 2650 	mov	r0,#_neighbor_info_subscribe
      000889 79s00            [12] 2651 	mov	r1,#(_neighbor_info_subscribe >> 8)
      00088B 7As00            [12] 2652 	mov	r2,#(_neighbor_info_subscribe >> 16)
      00088D 12r00r00         [24] 2653 	lcall	__sdcc_banked_call
                                   2654 ;	../../../core/net/rpl/rpl.c:257: uip_create_linklocal_rplnodes_mcast(&rplmaddr);
      000890 E5 81            [12] 2655 	mov	a,sp
      000892 24 F1            [12] 2656 	add	a,#0xf1
      000894 F8               [12] 2657 	mov	r0,a
      000895 76 FF            [12] 2658 	mov	@r0,#0xff
      000897 08               [12] 2659 	inc	r0
      000898 76 02            [12] 2660 	mov	@r0,#0x02
      00089A E5 81            [12] 2661 	mov	a,sp
      00089C 24 F1            [12] 2662 	add	a,#0xf1
      00089E FF               [12] 2663 	mov	r7,a
      00089F 24 02            [12] 2664 	add	a,#0x02
      0008A1 F8               [12] 2665 	mov	r0,a
      0008A2 76 00            [12] 2666 	mov	@r0,#0x00
      0008A4 08               [12] 2667 	inc	r0
      0008A5 76 00            [12] 2668 	mov	@r0,#0x00
      0008A7 74 04            [12] 2669 	mov	a,#0x04
      0008A9 2F               [12] 2670 	add	a,r7
      0008AA F8               [12] 2671 	mov	r0,a
      0008AB 76 00            [12] 2672 	mov	@r0,#0x00
      0008AD 08               [12] 2673 	inc	r0
      0008AE 76 00            [12] 2674 	mov	@r0,#0x00
      0008B0 74 06            [12] 2675 	mov	a,#0x06
      0008B2 2F               [12] 2676 	add	a,r7
      0008B3 F8               [12] 2677 	mov	r0,a
      0008B4 76 00            [12] 2678 	mov	@r0,#0x00
      0008B6 08               [12] 2679 	inc	r0
      0008B7 76 00            [12] 2680 	mov	@r0,#0x00
      0008B9 74 08            [12] 2681 	mov	a,#0x08
      0008BB 2F               [12] 2682 	add	a,r7
      0008BC F8               [12] 2683 	mov	r0,a
      0008BD 76 00            [12] 2684 	mov	@r0,#0x00
      0008BF 08               [12] 2685 	inc	r0
      0008C0 76 00            [12] 2686 	mov	@r0,#0x00
      0008C2 74 0A            [12] 2687 	mov	a,#0x0a
      0008C4 2F               [12] 2688 	add	a,r7
      0008C5 F8               [12] 2689 	mov	r0,a
      0008C6 76 00            [12] 2690 	mov	@r0,#0x00
      0008C8 08               [12] 2691 	inc	r0
      0008C9 76 00            [12] 2692 	mov	@r0,#0x00
      0008CB 74 0C            [12] 2693 	mov	a,#0x0c
      0008CD 2F               [12] 2694 	add	a,r7
      0008CE F8               [12] 2695 	mov	r0,a
      0008CF 76 00            [12] 2696 	mov	@r0,#0x00
      0008D1 08               [12] 2697 	inc	r0
      0008D2 76 00            [12] 2698 	mov	@r0,#0x00
      0008D4 74 0E            [12] 2699 	mov	a,#0x0e
      0008D6 2F               [12] 2700 	add	a,r7
      0008D7 F8               [12] 2701 	mov	r0,a
      0008D8 76 00            [12] 2702 	mov	@r0,#0x00
      0008DA 08               [12] 2703 	inc	r0
      0008DB 76 1A            [12] 2704 	mov	@r0,#0x1a
                                   2705 ;	../../../core/net/rpl/rpl.c:258: uip_ds6_maddr_add(&rplmaddr);
      0008DD E5 81            [12] 2706 	mov	a,sp
      0008DF 24 F1            [12] 2707 	add	a,#0xf1
      0008E1 FF               [12] 2708 	mov	r7,a
      0008E2 7E 00            [12] 2709 	mov	r6,#0x00
      0008E4 7D 40            [12] 2710 	mov	r5,#0x40
      0008E6 8F 82            [24] 2711 	mov	dpl,r7
      0008E8 8E 83            [24] 2712 	mov	dph,r6
      0008EA 8D F0            [24] 2713 	mov	b,r5
      0008EC 78r00            [12] 2714 	mov	r0,#_uip_ds6_maddr_add
      0008EE 79s00            [12] 2715 	mov	r1,#(_uip_ds6_maddr_add >> 8)
      0008F0 7As00            [12] 2716 	mov	r2,#(_uip_ds6_maddr_add >> 16)
      0008F2 12r00r00         [24] 2717 	lcall	__sdcc_banked_call
                                   2718 ;	../../../core/net/rpl/rpl.c:263: }
      0008F5 E5 81            [12] 2719 	mov	a,sp
      0008F7 24 F0            [12] 2720 	add	a,#0xf0
      0008F9 F5 81            [12] 2721 	mov	sp,a
      0008FB 02r00r00         [24] 2722 	ljmp	__sdcc_banked_ret
                                   2723 	.area CSEG    (CODE)
                                   2724 	.area CONST   (CODE)
                                   2725 	.area XINIT   (CODE)
                                   2726 	.area CABS    (ABS,CODE)
