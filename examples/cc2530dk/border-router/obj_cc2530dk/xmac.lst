                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module xmac
                                      6 	.optsdcc -mmcs51 --model-huge
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _xmac_driver
                                     12 	.globl _memb_alloc
                                     13 	.globl _memb_init
                                     14 	.globl _list_item_next
                                     15 	.globl _list_add
                                     16 	.globl _list_head
                                     17 	.globl _list_init
                                     18 	.globl _queuebuf_free
                                     19 	.globl _queuebuf_to_packetbuf
                                     20 	.globl _queuebuf_new_from_packetbuf
                                     21 	.globl _packetbuf_addr
                                     22 	.globl _packetbuf_set_addr
                                     23 	.globl _packetbuf_attr
                                     24 	.globl _packetbuf_set_attr
                                     25 	.globl _packetbuf_compact
                                     26 	.globl _packetbuf_totlen
                                     27 	.globl _packetbuf_hdrptr
                                     28 	.globl _packetbuf_dataptr
                                     29 	.globl _rimeaddr_cmp
                                     30 	.globl _rimeaddr_copy
                                     31 	.globl _rtimer_set
                                     32 	.globl ___memcpy
                                     33 	.globl _watchdog_periodic
                                     34 	.globl _watchdog_start
                                     35 	.globl _leds_toggle
                                     36 	.globl _leds_off
                                     37 	.globl _leds_on
                                     38 	.globl _ACTIVE
                                     39 	.globl _TX_BYTE
                                     40 	.globl _RX_BYTE
                                     41 	.globl _ERR
                                     42 	.globl _FE
                                     43 	.globl _SLAVE
                                     44 	.globl _RE
                                     45 	.globl _MODE
                                     46 	.globl _T3OVFIF
                                     47 	.globl _T3CH0IF
                                     48 	.globl _T3CH1IF
                                     49 	.globl _T4OVFIF
                                     50 	.globl _T4CH0IF
                                     51 	.globl _T4CH1IF
                                     52 	.globl _OVFIM
                                     53 	.globl _B_0
                                     54 	.globl _B_1
                                     55 	.globl _B_2
                                     56 	.globl _B_3
                                     57 	.globl _B_4
                                     58 	.globl _B_5
                                     59 	.globl _B_6
                                     60 	.globl _B_7
                                     61 	.globl _P2IF
                                     62 	.globl _UTX0IF
                                     63 	.globl _UTX1IF
                                     64 	.globl _P1IF
                                     65 	.globl _WDTIF
                                     66 	.globl _ACC_0
                                     67 	.globl _ACC_1
                                     68 	.globl _ACC_2
                                     69 	.globl _ACC_3
                                     70 	.globl _ACC_4
                                     71 	.globl _ACC_5
                                     72 	.globl _ACC_6
                                     73 	.globl _ACC_7
                                     74 	.globl _P
                                     75 	.globl _F1
                                     76 	.globl _OV
                                     77 	.globl _RS0
                                     78 	.globl _RS1
                                     79 	.globl _F0
                                     80 	.globl _AC
                                     81 	.globl _CY
                                     82 	.globl _DMAIF
                                     83 	.globl _T1IF
                                     84 	.globl _T2IF
                                     85 	.globl _T3IF
                                     86 	.globl _T4IF
                                     87 	.globl _P0IF
                                     88 	.globl _STIF
                                     89 	.globl _DMAIE
                                     90 	.globl _T1IE
                                     91 	.globl _T2IE
                                     92 	.globl _T3IE
                                     93 	.globl _T4IE
                                     94 	.globl _P0IE
                                     95 	.globl _RFERRIE
                                     96 	.globl _ADCIE
                                     97 	.globl _URX0IE
                                     98 	.globl _URX1IE
                                     99 	.globl _ENCIE
                                    100 	.globl _STIE
                                    101 	.globl _EA
                                    102 	.globl _P2_0
                                    103 	.globl _P2_1
                                    104 	.globl _P2_2
                                    105 	.globl _P2_3
                                    106 	.globl _P2_4
                                    107 	.globl _P2_5
                                    108 	.globl _P2_6
                                    109 	.globl _P2_7
                                    110 	.globl _ENCIF_0
                                    111 	.globl _ENCIF_1
                                    112 	.globl _P1_0
                                    113 	.globl _P1_1
                                    114 	.globl _P1_2
                                    115 	.globl _P1_3
                                    116 	.globl _P1_4
                                    117 	.globl _P1_5
                                    118 	.globl _P1_6
                                    119 	.globl _P1_7
                                    120 	.globl _IT0
                                    121 	.globl _RFERRIF
                                    122 	.globl _IT1
                                    123 	.globl _URX0IF
                                    124 	.globl _ADCIF
                                    125 	.globl _URX1IF
                                    126 	.globl _P0_0
                                    127 	.globl _P0_1
                                    128 	.globl _P0_2
                                    129 	.globl _P0_3
                                    130 	.globl _P0_4
                                    131 	.globl _P0_5
                                    132 	.globl _P0_6
                                    133 	.globl _P0_7
                                    134 	.globl _WDCTL
                                    135 	.globl _U1GCR
                                    136 	.globl _U1UCR
                                    137 	.globl _U1BAUD
                                    138 	.globl _U1DBUF
                                    139 	.globl _U1CSR
                                    140 	.globl _U0GCR
                                    141 	.globl _U0UCR
                                    142 	.globl _U0BAUD
                                    143 	.globl _U0DBUF
                                    144 	.globl _U0CSR
                                    145 	.globl _TIMIF
                                    146 	.globl _T4CC1
                                    147 	.globl _T4CCTL1
                                    148 	.globl _T4CC0
                                    149 	.globl _T4CCTL0
                                    150 	.globl _T4CTL
                                    151 	.globl _T4CNT
                                    152 	.globl _T3CC1
                                    153 	.globl _T3CCTL1
                                    154 	.globl _T3CC0
                                    155 	.globl _T3CCTL0
                                    156 	.globl _T3CTL
                                    157 	.globl _T3CNT
                                    158 	.globl _T2MSEL
                                    159 	.globl _T2IRQM
                                    160 	.globl _T2MOVF2
                                    161 	.globl _T2MOVF1
                                    162 	.globl _T2MOVF0
                                    163 	.globl _T2M1
                                    164 	.globl _T2M0
                                    165 	.globl _T2IRQF
                                    166 	.globl _T2EVTCFG
                                    167 	.globl _T2CTRL
                                    168 	.globl _T1STAT
                                    169 	.globl _T1CCTL2
                                    170 	.globl _T1CCTL1
                                    171 	.globl _T1CCTL0
                                    172 	.globl _T1CTL
                                    173 	.globl _T1CNTH
                                    174 	.globl _T1CNTL
                                    175 	.globl _T1CC2H
                                    176 	.globl _T1CC2L
                                    177 	.globl _T1CC1H
                                    178 	.globl _T1CC1L
                                    179 	.globl _T1CC0H
                                    180 	.globl _T1CC0L
                                    181 	.globl _CLKCONSTA
                                    182 	.globl _CLKCONCMD
                                    183 	.globl _SLEEPSTA
                                    184 	.globl _SLEEPCMD
                                    185 	.globl _STLOAD
                                    186 	.globl _ST2
                                    187 	.globl _ST1
                                    188 	.globl _ST0
                                    189 	.globl _RFERRF
                                    190 	.globl _RFIRQF0
                                    191 	.globl _RFST
                                    192 	.globl _RFD
                                    193 	.globl _RFIRQF1
                                    194 	.globl _PSBANK
                                    195 	.globl _FMAP
                                    196 	.globl _MEMCTR
                                    197 	.globl __XPAGE
                                    198 	.globl _MPAGE
                                    199 	.globl _PMUX
                                    200 	.globl _P2DIR
                                    201 	.globl _P1DIR
                                    202 	.globl _P0DIR
                                    203 	.globl _P2INP
                                    204 	.globl _P1INP
                                    205 	.globl _P2SEL
                                    206 	.globl _P1SEL
                                    207 	.globl _P0SEL
                                    208 	.globl _APCFG
                                    209 	.globl _PERCFG
                                    210 	.globl _P0INP
                                    211 	.globl _P2IEN
                                    212 	.globl _P1IEN
                                    213 	.globl _P0IEN
                                    214 	.globl _PICTL
                                    215 	.globl _P2IFG
                                    216 	.globl _P1IFG
                                    217 	.globl _P0IFG
                                    218 	.globl _DMAREQ
                                    219 	.globl _DMAARM
                                    220 	.globl _DMA0CFGH
                                    221 	.globl _DMA0CFGL
                                    222 	.globl _DMA1CFGH
                                    223 	.globl _DMA1CFGL
                                    224 	.globl _DMAIRQ
                                    225 	.globl _ENCCS
                                    226 	.globl _ENCDO
                                    227 	.globl _ENCDI
                                    228 	.globl _RNDH
                                    229 	.globl _RNDL
                                    230 	.globl _ADCH
                                    231 	.globl _ADCL
                                    232 	.globl _ADCCON3
                                    233 	.globl _ADCCON2
                                    234 	.globl _ADCCON1
                                    235 	.globl _B
                                    236 	.globl _IRCON2
                                    237 	.globl _ACC
                                    238 	.globl _PSW
                                    239 	.globl _IRCON
                                    240 	.globl _IP1
                                    241 	.globl _IEN1
                                    242 	.globl _IP0
                                    243 	.globl _IEN0
                                    244 	.globl _P2
                                    245 	.globl _S1CON
                                    246 	.globl _IEN2
                                    247 	.globl _S0CON
                                    248 	.globl _DPS
                                    249 	.globl _P1
                                    250 	.globl _TCON
                                    251 	.globl _PCON
                                    252 	.globl _DPH1
                                    253 	.globl _DPL1
                                    254 	.globl _DPH0
                                    255 	.globl _DPL0
                                    256 	.globl _SP
                                    257 	.globl _P0
                                    258 	.globl _xmac_config
                                    259 	.globl _X_IEEE_ADDR
                                    260 	.globl _X_INFOPAGE
                                    261 	.globl _X_P2DIR
                                    262 	.globl _X_P1DIR
                                    263 	.globl _X_P0DIR
                                    264 	.globl _X_U1GCR
                                    265 	.globl _X_U1UCR
                                    266 	.globl _X_U1BAUD
                                    267 	.globl _X_U1DBUF
                                    268 	.globl _X_U1CSR
                                    269 	.globl _X_P2INP
                                    270 	.globl _X_P1INP
                                    271 	.globl _X_P2SEL
                                    272 	.globl _X_P1SEL
                                    273 	.globl _X_P0SEL
                                    274 	.globl _X_APCFG
                                    275 	.globl _X_PERCFG
                                    276 	.globl _X_T4CC1
                                    277 	.globl _X_T4CCTL1
                                    278 	.globl _X_T4CC0
                                    279 	.globl _X_T4CCTL0
                                    280 	.globl _X_T4CTL
                                    281 	.globl _X_T4CNT
                                    282 	.globl _X_RFIRQF0
                                    283 	.globl _X_T1CCTL2
                                    284 	.globl _X_T1CCTL1
                                    285 	.globl _X_T1CCTL0
                                    286 	.globl _X_T1CTL
                                    287 	.globl _X_T1CNTH
                                    288 	.globl _X_T1CNTL
                                    289 	.globl _X_RFST
                                    290 	.globl _X_T1CC2H
                                    291 	.globl _X_T1CC2L
                                    292 	.globl _X_T1CC1H
                                    293 	.globl _X_T1CC1L
                                    294 	.globl _X_T1CC0H
                                    295 	.globl _X_T1CC0L
                                    296 	.globl _X_RFD
                                    297 	.globl _X_TIMIF
                                    298 	.globl _X_DMAREQ
                                    299 	.globl _X_DMAARM
                                    300 	.globl _X_DMA0CFGH
                                    301 	.globl _X_DMA0CFGL
                                    302 	.globl _X_DMA1CFGH
                                    303 	.globl _X_DMA1CFGL
                                    304 	.globl _X_DMAIRQ
                                    305 	.globl _X_T3CC1
                                    306 	.globl _X_T3CCTL1
                                    307 	.globl _X_T3CC0
                                    308 	.globl _X_T3CCTL0
                                    309 	.globl _X_T3CTL
                                    310 	.globl _X_T3CNT
                                    311 	.globl _X_WDCTL
                                    312 	.globl _X_MEMCTR
                                    313 	.globl _X_CLKCONCMD
                                    314 	.globl _X_U0GCR
                                    315 	.globl _X_U0UCR
                                    316 	.globl _X_T2MSEL
                                    317 	.globl _X_U0BAUD
                                    318 	.globl _X_U0DBUF
                                    319 	.globl _X_RFERRF
                                    320 	.globl _X_SLEEPCMD
                                    321 	.globl _X_RNDH
                                    322 	.globl _X_RNDL
                                    323 	.globl _X_ADCH
                                    324 	.globl _X_ADCL
                                    325 	.globl _X_ADCCON3
                                    326 	.globl _X_ADCCON2
                                    327 	.globl _X_ADCCON1
                                    328 	.globl _X_ENCCS
                                    329 	.globl _X_ENCDO
                                    330 	.globl _X_ENCDI
                                    331 	.globl _X_T1STAT
                                    332 	.globl _X_PMUX
                                    333 	.globl _X_STLOAD
                                    334 	.globl _X_P2IEN
                                    335 	.globl _X_P0IEN
                                    336 	.globl _X_T2IRQM
                                    337 	.globl _X_T2MOVF2
                                    338 	.globl _X_T2MOVF1
                                    339 	.globl _X_T2MOVF0
                                    340 	.globl _X_T2M1
                                    341 	.globl _X_T2M0
                                    342 	.globl _X_T2IRQF
                                    343 	.globl _X_P2
                                    344 	.globl _X_PSBANK
                                    345 	.globl _X_FMAP
                                    346 	.globl _X_CLKCONSTA
                                    347 	.globl _X_SLEEPSTA
                                    348 	.globl _X_T2EVTCFG
                                    349 	.globl _X_ST2
                                    350 	.globl _X_ST1
                                    351 	.globl _X_ST0
                                    352 	.globl _X_T2CTRL
                                    353 	.globl _X__XPAGE
                                    354 	.globl _X_MPAGE
                                    355 	.globl _X_RFIRQF1
                                    356 	.globl _X_P1
                                    357 	.globl _X_P0INP
                                    358 	.globl _X_P1IEN
                                    359 	.globl _X_PICTL
                                    360 	.globl _X_P2IFG
                                    361 	.globl _X_P1IFG
                                    362 	.globl _X_P0IFG
                                    363 	.globl _X_U0CSR
                                    364 	.globl _X_P0
                                    365 	.globl _USBF5
                                    366 	.globl _USBF4
                                    367 	.globl _USBF3
                                    368 	.globl _USBF2
                                    369 	.globl _USBF1
                                    370 	.globl _USBF0
                                    371 	.globl _USBCNTH
                                    372 	.globl _USBCNTL
                                    373 	.globl _USBCNT0
                                    374 	.globl _USBCSOH
                                    375 	.globl _USBCSOL
                                    376 	.globl _USBMAXO
                                    377 	.globl _USBCSIH
                                    378 	.globl _USBCSIL
                                    379 	.globl _USBCS0
                                    380 	.globl _USBMAXI
                                    381 	.globl _USBCTRL
                                    382 	.globl _USBINDEX
                                    383 	.globl _USBFRMH
                                    384 	.globl _USBFRML
                                    385 	.globl _USBCIE
                                    386 	.globl _USBOIE
                                    387 	.globl _USBIIE
                                    388 	.globl _USBCIF
                                    389 	.globl _USBOIF
                                    390 	.globl _USBIIF
                                    391 	.globl _USBPOW
                                    392 	.globl _USBADDR
                                    393 	.globl _CSPT
                                    394 	.globl _CSPZ
                                    395 	.globl _CSPY
                                    396 	.globl _CSPX
                                    397 	.globl _CSPSTAT
                                    398 	.globl _CSPCTRL
                                    399 	.globl _CSPPROG23
                                    400 	.globl _CSPPROG22
                                    401 	.globl _CSPPROG21
                                    402 	.globl _CSPPROG20
                                    403 	.globl _CSPPROG19
                                    404 	.globl _CSPPROG18
                                    405 	.globl _CSPPROG17
                                    406 	.globl _CSPPROG16
                                    407 	.globl _CSPPROG15
                                    408 	.globl _CSPPROG14
                                    409 	.globl _CSPPROG13
                                    410 	.globl _CSPPROG12
                                    411 	.globl _CSPPROG11
                                    412 	.globl _CSPPROG10
                                    413 	.globl _CSPPROG9
                                    414 	.globl _CSPPROG8
                                    415 	.globl _CSPPROG7
                                    416 	.globl _CSPPROG6
                                    417 	.globl _CSPPROG5
                                    418 	.globl _CSPPROG4
                                    419 	.globl _CSPPROG3
                                    420 	.globl _CSPPROG2
                                    421 	.globl _CSPPROG1
                                    422 	.globl _CSPPROG0
                                    423 	.globl _RFC_OBS_CTRL2
                                    424 	.globl _RFC_OBS_CTRL1
                                    425 	.globl _RFC_OBS_CTRL0
                                    426 	.globl _TXFILTCFG
                                    427 	.globl _PTEST1
                                    428 	.globl _PTEST0
                                    429 	.globl _ATEST
                                    430 	.globl _DACTEST2
                                    431 	.globl _DACTEST1
                                    432 	.globl _DACTEST0
                                    433 	.globl _MDMTEST1
                                    434 	.globl _MDMTEST0
                                    435 	.globl _ADCTEST2
                                    436 	.globl _ADCTEST1
                                    437 	.globl _ADCTEST0
                                    438 	.globl _AGCCTRL3
                                    439 	.globl _AGCCTRL2
                                    440 	.globl _AGCCTRL1
                                    441 	.globl _AGCCTRL0
                                    442 	.globl _FSCAL3
                                    443 	.globl _FSCAL2
                                    444 	.globl _FSCAL1
                                    445 	.globl _FSCAL0
                                    446 	.globl _FSCTRL
                                    447 	.globl _RXCTRL
                                    448 	.globl _FREQEST
                                    449 	.globl _MDMCTRL1
                                    450 	.globl _MDMCTRL0
                                    451 	.globl _RFRND
                                    452 	.globl _RFERRM
                                    453 	.globl _RFIRQM1
                                    454 	.globl _RFIRQM0
                                    455 	.globl _TXLAST_PTR
                                    456 	.globl _TXFIRST_PTR
                                    457 	.globl _RXP1_PTR
                                    458 	.globl _RXLAST_PTR
                                    459 	.globl _RXFIRST_PTR
                                    460 	.globl _TXFIFOCNT
                                    461 	.globl _RXFIFOCNT
                                    462 	.globl _RXFIRST
                                    463 	.globl _RSSISTAT
                                    464 	.globl _RSSI
                                    465 	.globl _CCACTRL1
                                    466 	.globl _CCACTRL0
                                    467 	.globl _FSMCTRL
                                    468 	.globl _FIFOPCTRL
                                    469 	.globl _FSMSTAT1
                                    470 	.globl _FSMSTAT0
                                    471 	.globl _TXCTRL
                                    472 	.globl _TXPOWER
                                    473 	.globl _FREQCTRL
                                    474 	.globl _FREQTUNE
                                    475 	.globl _RXMASKCLR
                                    476 	.globl _RXMASKSET
                                    477 	.globl _RXENABLE
                                    478 	.globl _FRMCTRL1
                                    479 	.globl _FRMCTRL0
                                    480 	.globl _SRCEXTEN2
                                    481 	.globl _SRCEXTEN1
                                    482 	.globl _SRCEXTEN0
                                    483 	.globl _SRCSHORTEN2
                                    484 	.globl _SRCSHORTEN1
                                    485 	.globl _SRCSHORTEN0
                                    486 	.globl _SRCMATCH
                                    487 	.globl _FRMFILT1
                                    488 	.globl _FRMFILT0
                                    489 	.globl _SHORT_ADDR1
                                    490 	.globl _SHORT_ADDR0
                                    491 	.globl _PAN_ID1
                                    492 	.globl _PAN_ID0
                                    493 	.globl _EXT_ADDR7
                                    494 	.globl _EXT_ADDR6
                                    495 	.globl _EXT_ADDR5
                                    496 	.globl _EXT_ADDR4
                                    497 	.globl _EXT_ADDR3
                                    498 	.globl _EXT_ADDR2
                                    499 	.globl _EXT_ADDR1
                                    500 	.globl _EXT_ADDR0
                                    501 	.globl _SRCSHORTPENDEN2
                                    502 	.globl _SRCSHORTPENDEN1
                                    503 	.globl _SRCSHORTPENDEN0
                                    504 	.globl _SRCEXTPENDEN2
                                    505 	.globl _SRCEXTPENDEN1
                                    506 	.globl _SRCEXTPENDEN0
                                    507 	.globl _SRCRESINDEX
                                    508 	.globl _SRCRESMASK2
                                    509 	.globl _SRCRESMASK1
                                    510 	.globl _SRCRESMASK0
                                    511 	.globl _SRC_ADDR_TABLE
                                    512 	.globl _TXFIFO
                                    513 	.globl _RXFIFO
                                    514 	.globl _RFCORE_RAM
                                    515 	.globl _CMPCTL
                                    516 	.globl _OPAMPS
                                    517 	.globl _OPAMPC
                                    518 	.globl _STCV2
                                    519 	.globl _STCV1
                                    520 	.globl _STCV0
                                    521 	.globl _STCS
                                    522 	.globl _STCC
                                    523 	.globl _T1CC4H
                                    524 	.globl _T1CC4L
                                    525 	.globl _T1CC3H
                                    526 	.globl _T1CC3L
                                    527 	.globl _XX_T1CC2H
                                    528 	.globl _XX_T1CC2L
                                    529 	.globl _XX_T1CC1H
                                    530 	.globl _XX_T1CC1L
                                    531 	.globl _XX_T1CC0H
                                    532 	.globl _XX_T1CC0L
                                    533 	.globl _T1CCTL4
                                    534 	.globl _T1CCTL3
                                    535 	.globl _XX_T1CCTL2
                                    536 	.globl _XX_T1CCTL1
                                    537 	.globl _XX_T1CCTL0
                                    538 	.globl _CLD
                                    539 	.globl _IRCTL
                                    540 	.globl _CHIPINFO1
                                    541 	.globl _CHIPINFO0
                                    542 	.globl _FWDATA
                                    543 	.globl _FADDRH
                                    544 	.globl _FADDRL
                                    545 	.globl _FCTL
                                    546 	.globl _IVCTRL
                                    547 	.globl _BATTMON
                                    548 	.globl _SRCRC
                                    549 	.globl _DBGDATA
                                    550 	.globl _TESTREG0
                                    551 	.globl _CHIPID
                                    552 	.globl _CHVER
                                    553 	.globl _OBSSEL5
                                    554 	.globl _OBSSEL4
                                    555 	.globl _OBSSEL3
                                    556 	.globl _OBSSEL2
                                    557 	.globl _OBSSEL1
                                    558 	.globl _OBSSEL0
                                    559 	.globl _I2CIO
                                    560 	.globl _I2CWC
                                    561 	.globl _I2CADDR
                                    562 	.globl _I2CDATA
                                    563 	.globl _I2CSTAT
                                    564 	.globl _I2CCFG
                                    565 	.globl _OPAMPMC
                                    566 	.globl _MONMUX
                                    567 	.globl _xmac_set_announcement_radio_txpower
                                    568 ;--------------------------------------------------------
                                    569 ; special function registers
                                    570 ;--------------------------------------------------------
                                    571 	.area RSEG    (ABS,DATA)
      000000                        572 	.org 0x0000
                           000080   573 _P0	=	0x0080
                           000081   574 _SP	=	0x0081
                           000082   575 _DPL0	=	0x0082
                           000083   576 _DPH0	=	0x0083
                           000084   577 _DPL1	=	0x0084
                           000085   578 _DPH1	=	0x0085
                           000087   579 _PCON	=	0x0087
                           000088   580 _TCON	=	0x0088
                           000090   581 _P1	=	0x0090
                           000092   582 _DPS	=	0x0092
                           000098   583 _S0CON	=	0x0098
                           00009A   584 _IEN2	=	0x009a
                           00009B   585 _S1CON	=	0x009b
                           0000A0   586 _P2	=	0x00a0
                           0000A8   587 _IEN0	=	0x00a8
                           0000A9   588 _IP0	=	0x00a9
                           0000B8   589 _IEN1	=	0x00b8
                           0000B9   590 _IP1	=	0x00b9
                           0000C0   591 _IRCON	=	0x00c0
                           0000D0   592 _PSW	=	0x00d0
                           0000E0   593 _ACC	=	0x00e0
                           0000E8   594 _IRCON2	=	0x00e8
                           0000F0   595 _B	=	0x00f0
                           0000B4   596 _ADCCON1	=	0x00b4
                           0000B5   597 _ADCCON2	=	0x00b5
                           0000B6   598 _ADCCON3	=	0x00b6
                           0000BA   599 _ADCL	=	0x00ba
                           0000BB   600 _ADCH	=	0x00bb
                           0000BC   601 _RNDL	=	0x00bc
                           0000BD   602 _RNDH	=	0x00bd
                           0000B1   603 _ENCDI	=	0x00b1
                           0000B2   604 _ENCDO	=	0x00b2
                           0000B3   605 _ENCCS	=	0x00b3
                           0000D1   606 _DMAIRQ	=	0x00d1
                           0000D2   607 _DMA1CFGL	=	0x00d2
                           0000D3   608 _DMA1CFGH	=	0x00d3
                           0000D4   609 _DMA0CFGL	=	0x00d4
                           0000D5   610 _DMA0CFGH	=	0x00d5
                           0000D6   611 _DMAARM	=	0x00d6
                           0000D7   612 _DMAREQ	=	0x00d7
                           000089   613 _P0IFG	=	0x0089
                           00008A   614 _P1IFG	=	0x008a
                           00008B   615 _P2IFG	=	0x008b
                           00008C   616 _PICTL	=	0x008c
                           0000AB   617 _P0IEN	=	0x00ab
                           00008D   618 _P1IEN	=	0x008d
                           0000AC   619 _P2IEN	=	0x00ac
                           00008F   620 _P0INP	=	0x008f
                           0000F1   621 _PERCFG	=	0x00f1
                           0000F2   622 _APCFG	=	0x00f2
                           0000F3   623 _P0SEL	=	0x00f3
                           0000F4   624 _P1SEL	=	0x00f4
                           0000F5   625 _P2SEL	=	0x00f5
                           0000F6   626 _P1INP	=	0x00f6
                           0000F7   627 _P2INP	=	0x00f7
                           0000FD   628 _P0DIR	=	0x00fd
                           0000FE   629 _P1DIR	=	0x00fe
                           0000FF   630 _P2DIR	=	0x00ff
                           0000AE   631 _PMUX	=	0x00ae
                           000093   632 _MPAGE	=	0x0093
                           000093   633 __XPAGE	=	0x0093
                           0000C7   634 _MEMCTR	=	0x00c7
                           00009F   635 _FMAP	=	0x009f
                           00009F   636 _PSBANK	=	0x009f
                           000091   637 _RFIRQF1	=	0x0091
                           0000D9   638 _RFD	=	0x00d9
                           0000E1   639 _RFST	=	0x00e1
                           0000E9   640 _RFIRQF0	=	0x00e9
                           0000BF   641 _RFERRF	=	0x00bf
                           000095   642 _ST0	=	0x0095
                           000096   643 _ST1	=	0x0096
                           000097   644 _ST2	=	0x0097
                           0000AD   645 _STLOAD	=	0x00ad
                           0000BE   646 _SLEEPCMD	=	0x00be
                           00009D   647 _SLEEPSTA	=	0x009d
                           0000C6   648 _CLKCONCMD	=	0x00c6
                           00009E   649 _CLKCONSTA	=	0x009e
                           0000DA   650 _T1CC0L	=	0x00da
                           0000DB   651 _T1CC0H	=	0x00db
                           0000DC   652 _T1CC1L	=	0x00dc
                           0000DD   653 _T1CC1H	=	0x00dd
                           0000DE   654 _T1CC2L	=	0x00de
                           0000DF   655 _T1CC2H	=	0x00df
                           0000E2   656 _T1CNTL	=	0x00e2
                           0000E3   657 _T1CNTH	=	0x00e3
                           0000E4   658 _T1CTL	=	0x00e4
                           0000E5   659 _T1CCTL0	=	0x00e5
                           0000E6   660 _T1CCTL1	=	0x00e6
                           0000E7   661 _T1CCTL2	=	0x00e7
                           0000AF   662 _T1STAT	=	0x00af
                           000094   663 _T2CTRL	=	0x0094
                           00009C   664 _T2EVTCFG	=	0x009c
                           0000A1   665 _T2IRQF	=	0x00a1
                           0000A2   666 _T2M0	=	0x00a2
                           0000A3   667 _T2M1	=	0x00a3
                           0000A4   668 _T2MOVF0	=	0x00a4
                           0000A5   669 _T2MOVF1	=	0x00a5
                           0000A6   670 _T2MOVF2	=	0x00a6
                           0000A7   671 _T2IRQM	=	0x00a7
                           0000C3   672 _T2MSEL	=	0x00c3
                           0000CA   673 _T3CNT	=	0x00ca
                           0000CB   674 _T3CTL	=	0x00cb
                           0000CC   675 _T3CCTL0	=	0x00cc
                           0000CD   676 _T3CC0	=	0x00cd
                           0000CE   677 _T3CCTL1	=	0x00ce
                           0000CF   678 _T3CC1	=	0x00cf
                           0000EA   679 _T4CNT	=	0x00ea
                           0000EB   680 _T4CTL	=	0x00eb
                           0000EC   681 _T4CCTL0	=	0x00ec
                           0000ED   682 _T4CC0	=	0x00ed
                           0000EE   683 _T4CCTL1	=	0x00ee
                           0000EF   684 _T4CC1	=	0x00ef
                           0000D8   685 _TIMIF	=	0x00d8
                           000086   686 _U0CSR	=	0x0086
                           0000C1   687 _U0DBUF	=	0x00c1
                           0000C2   688 _U0BAUD	=	0x00c2
                           0000C4   689 _U0UCR	=	0x00c4
                           0000C5   690 _U0GCR	=	0x00c5
                           0000F8   691 _U1CSR	=	0x00f8
                           0000F9   692 _U1DBUF	=	0x00f9
                           0000FA   693 _U1BAUD	=	0x00fa
                           0000FB   694 _U1UCR	=	0x00fb
                           0000FC   695 _U1GCR	=	0x00fc
                           0000C9   696 _WDCTL	=	0x00c9
                                    697 ;--------------------------------------------------------
                                    698 ; special function bits
                                    699 ;--------------------------------------------------------
                                    700 	.area RSEG    (ABS,DATA)
      000000                        701 	.org 0x0000
                           000087   702 _P0_7	=	0x0087
                           000086   703 _P0_6	=	0x0086
                           000085   704 _P0_5	=	0x0085
                           000084   705 _P0_4	=	0x0084
                           000083   706 _P0_3	=	0x0083
                           000082   707 _P0_2	=	0x0082
                           000081   708 _P0_1	=	0x0081
                           000080   709 _P0_0	=	0x0080
                           00008F   710 _URX1IF	=	0x008f
                           00008D   711 _ADCIF	=	0x008d
                           00008B   712 _URX0IF	=	0x008b
                           00008A   713 _IT1	=	0x008a
                           000089   714 _RFERRIF	=	0x0089
                           000088   715 _IT0	=	0x0088
                           000097   716 _P1_7	=	0x0097
                           000096   717 _P1_6	=	0x0096
                           000095   718 _P1_5	=	0x0095
                           000094   719 _P1_4	=	0x0094
                           000093   720 _P1_3	=	0x0093
                           000092   721 _P1_2	=	0x0092
                           000091   722 _P1_1	=	0x0091
                           000090   723 _P1_0	=	0x0090
                           000099   724 _ENCIF_1	=	0x0099
                           000098   725 _ENCIF_0	=	0x0098
                           0000A7   726 _P2_7	=	0x00a7
                           0000A6   727 _P2_6	=	0x00a6
                           0000A5   728 _P2_5	=	0x00a5
                           0000A4   729 _P2_4	=	0x00a4
                           0000A3   730 _P2_3	=	0x00a3
                           0000A2   731 _P2_2	=	0x00a2
                           0000A1   732 _P2_1	=	0x00a1
                           0000A0   733 _P2_0	=	0x00a0
                           0000AF   734 _EA	=	0x00af
                           0000AD   735 _STIE	=	0x00ad
                           0000AC   736 _ENCIE	=	0x00ac
                           0000AB   737 _URX1IE	=	0x00ab
                           0000AA   738 _URX0IE	=	0x00aa
                           0000A9   739 _ADCIE	=	0x00a9
                           0000A8   740 _RFERRIE	=	0x00a8
                           0000BD   741 _P0IE	=	0x00bd
                           0000BC   742 _T4IE	=	0x00bc
                           0000BB   743 _T3IE	=	0x00bb
                           0000BA   744 _T2IE	=	0x00ba
                           0000B9   745 _T1IE	=	0x00b9
                           0000B8   746 _DMAIE	=	0x00b8
                           0000C7   747 _STIF	=	0x00c7
                           0000C5   748 _P0IF	=	0x00c5
                           0000C4   749 _T4IF	=	0x00c4
                           0000C3   750 _T3IF	=	0x00c3
                           0000C2   751 _T2IF	=	0x00c2
                           0000C1   752 _T1IF	=	0x00c1
                           0000C0   753 _DMAIF	=	0x00c0
                           0000D7   754 _CY	=	0x00d7
                           0000D6   755 _AC	=	0x00d6
                           0000D5   756 _F0	=	0x00d5
                           0000D4   757 _RS1	=	0x00d4
                           0000D3   758 _RS0	=	0x00d3
                           0000D2   759 _OV	=	0x00d2
                           0000D1   760 _F1	=	0x00d1
                           0000D0   761 _P	=	0x00d0
                           0000E7   762 _ACC_7	=	0x00e7
                           0000E6   763 _ACC_6	=	0x00e6
                           0000E5   764 _ACC_5	=	0x00e5
                           0000E4   765 _ACC_4	=	0x00e4
                           0000E3   766 _ACC_3	=	0x00e3
                           0000E2   767 _ACC_2	=	0x00e2
                           0000E1   768 _ACC_1	=	0x00e1
                           0000E0   769 _ACC_0	=	0x00e0
                           0000EC   770 _WDTIF	=	0x00ec
                           0000EB   771 _P1IF	=	0x00eb
                           0000EA   772 _UTX1IF	=	0x00ea
                           0000E9   773 _UTX0IF	=	0x00e9
                           0000E8   774 _P2IF	=	0x00e8
                           0000F7   775 _B_7	=	0x00f7
                           0000F6   776 _B_6	=	0x00f6
                           0000F5   777 _B_5	=	0x00f5
                           0000F4   778 _B_4	=	0x00f4
                           0000F3   779 _B_3	=	0x00f3
                           0000F2   780 _B_2	=	0x00f2
                           0000F1   781 _B_1	=	0x00f1
                           0000F0   782 _B_0	=	0x00f0
                           0000DE   783 _OVFIM	=	0x00de
                           0000DD   784 _T4CH1IF	=	0x00dd
                           0000DC   785 _T4CH0IF	=	0x00dc
                           0000DB   786 _T4OVFIF	=	0x00db
                           0000DA   787 _T3CH1IF	=	0x00da
                           0000D9   788 _T3CH0IF	=	0x00d9
                           0000D8   789 _T3OVFIF	=	0x00d8
                           0000FF   790 _MODE	=	0x00ff
                           0000FE   791 _RE	=	0x00fe
                           0000FD   792 _SLAVE	=	0x00fd
                           0000FC   793 _FE	=	0x00fc
                           0000FB   794 _ERR	=	0x00fb
                           0000FA   795 _RX_BYTE	=	0x00fa
                           0000F9   796 _TX_BYTE	=	0x00f9
                           0000F8   797 _ACTIVE	=	0x00f8
                                    798 ;--------------------------------------------------------
                                    799 ; overlayable register banks
                                    800 ;--------------------------------------------------------
                                    801 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        802 	.ds 8
                                    803 ;--------------------------------------------------------
                                    804 ; internal ram data
                                    805 ;--------------------------------------------------------
                                    806 	.area DSEG    (DATA)
                                    807 ;--------------------------------------------------------
                                    808 ; overlayable items in internal ram 
                                    809 ;--------------------------------------------------------
                                    810 ;--------------------------------------------------------
                                    811 ; indirectly addressable internal ram data
                                    812 ;--------------------------------------------------------
                                    813 	.area ISEG    (DATA)
                                    814 ;--------------------------------------------------------
                                    815 ; absolute internal ram data
                                    816 ;--------------------------------------------------------
                                    817 	.area IABS    (ABS,DATA)
                                    818 	.area IABS    (ABS,DATA)
                                    819 ;--------------------------------------------------------
                                    820 ; bit data
                                    821 ;--------------------------------------------------------
                                    822 	.area BSEG    (BIT)
                                    823 ;--------------------------------------------------------
                                    824 ; paged external ram data
                                    825 ;--------------------------------------------------------
                                    826 	.area PSEG    (PAG,XDATA)
                                    827 ;--------------------------------------------------------
                                    828 ; external ram data
                                    829 ;--------------------------------------------------------
                                    830 	.area XSEG    (XDATA)
                           0061A6   831 _MONMUX	=	0x61a6
                           0061A6   832 _OPAMPMC	=	0x61a6
                           006230   833 _I2CCFG	=	0x6230
                           006231   834 _I2CSTAT	=	0x6231
                           006232   835 _I2CDATA	=	0x6232
                           006233   836 _I2CADDR	=	0x6233
                           006234   837 _I2CWC	=	0x6234
                           006235   838 _I2CIO	=	0x6235
                           006243   839 _OBSSEL0	=	0x6243
                           006244   840 _OBSSEL1	=	0x6244
                           006245   841 _OBSSEL2	=	0x6245
                           006246   842 _OBSSEL3	=	0x6246
                           006247   843 _OBSSEL4	=	0x6247
                           006248   844 _OBSSEL5	=	0x6248
                           006249   845 _CHVER	=	0x6249
                           00624A   846 _CHIPID	=	0x624a
                           00624B   847 _TESTREG0	=	0x624b
                           006260   848 _DBGDATA	=	0x6260
                           006262   849 _SRCRC	=	0x6262
                           006264   850 _BATTMON	=	0x6264
                           006265   851 _IVCTRL	=	0x6265
                           006270   852 _FCTL	=	0x6270
                           006271   853 _FADDRL	=	0x6271
                           006272   854 _FADDRH	=	0x6272
                           006273   855 _FWDATA	=	0x6273
                           006276   856 _CHIPINFO0	=	0x6276
                           006277   857 _CHIPINFO1	=	0x6277
                           006281   858 _IRCTL	=	0x6281
                           006290   859 _CLD	=	0x6290
                           0062A0   860 _XX_T1CCTL0	=	0x62a0
                           0062A1   861 _XX_T1CCTL1	=	0x62a1
                           0062A2   862 _XX_T1CCTL2	=	0x62a2
                           0062A3   863 _T1CCTL3	=	0x62a3
                           0062A4   864 _T1CCTL4	=	0x62a4
                           0062A6   865 _XX_T1CC0L	=	0x62a6
                           0062A7   866 _XX_T1CC0H	=	0x62a7
                           0062A8   867 _XX_T1CC1L	=	0x62a8
                           0062A9   868 _XX_T1CC1H	=	0x62a9
                           0062AA   869 _XX_T1CC2L	=	0x62aa
                           0062AB   870 _XX_T1CC2H	=	0x62ab
                           0062AC   871 _T1CC3L	=	0x62ac
                           0062AD   872 _T1CC3H	=	0x62ad
                           0062AE   873 _T1CC4L	=	0x62ae
                           0062AF   874 _T1CC4H	=	0x62af
                           0062B0   875 _STCC	=	0x62b0
                           0062B1   876 _STCS	=	0x62b1
                           0062B2   877 _STCV0	=	0x62b2
                           0062B3   878 _STCV1	=	0x62b3
                           0062B4   879 _STCV2	=	0x62b4
                           0062C0   880 _OPAMPC	=	0x62c0
                           0062C1   881 _OPAMPS	=	0x62c1
                           0062D0   882 _CMPCTL	=	0x62d0
                           006000   883 _RFCORE_RAM	=	0x6000
                           006000   884 _RXFIFO	=	0x6000
                           006080   885 _TXFIFO	=	0x6080
                           006100   886 _SRC_ADDR_TABLE	=	0x6100
                           006160   887 _SRCRESMASK0	=	0x6160
                           006161   888 _SRCRESMASK1	=	0x6161
                           006162   889 _SRCRESMASK2	=	0x6162
                           006163   890 _SRCRESINDEX	=	0x6163
                           006164   891 _SRCEXTPENDEN0	=	0x6164
                           006165   892 _SRCEXTPENDEN1	=	0x6165
                           006166   893 _SRCEXTPENDEN2	=	0x6166
                           006167   894 _SRCSHORTPENDEN0	=	0x6167
                           006168   895 _SRCSHORTPENDEN1	=	0x6168
                           006169   896 _SRCSHORTPENDEN2	=	0x6169
                           00616A   897 _EXT_ADDR0	=	0x616a
                           00616B   898 _EXT_ADDR1	=	0x616b
                           00616C   899 _EXT_ADDR2	=	0x616c
                           00616D   900 _EXT_ADDR3	=	0x616d
                           00616E   901 _EXT_ADDR4	=	0x616e
                           00616F   902 _EXT_ADDR5	=	0x616f
                           006170   903 _EXT_ADDR6	=	0x6170
                           006171   904 _EXT_ADDR7	=	0x6171
                           006172   905 _PAN_ID0	=	0x6172
                           006173   906 _PAN_ID1	=	0x6173
                           006174   907 _SHORT_ADDR0	=	0x6174
                           006175   908 _SHORT_ADDR1	=	0x6175
                           006180   909 _FRMFILT0	=	0x6180
                           006181   910 _FRMFILT1	=	0x6181
                           006182   911 _SRCMATCH	=	0x6182
                           006183   912 _SRCSHORTEN0	=	0x6183
                           006184   913 _SRCSHORTEN1	=	0x6184
                           006185   914 _SRCSHORTEN2	=	0x6185
                           006186   915 _SRCEXTEN0	=	0x6186
                           006187   916 _SRCEXTEN1	=	0x6187
                           006188   917 _SRCEXTEN2	=	0x6188
                           006189   918 _FRMCTRL0	=	0x6189
                           00618A   919 _FRMCTRL1	=	0x618a
                           00618B   920 _RXENABLE	=	0x618b
                           00618C   921 _RXMASKSET	=	0x618c
                           00618D   922 _RXMASKCLR	=	0x618d
                           00618E   923 _FREQTUNE	=	0x618e
                           00618F   924 _FREQCTRL	=	0x618f
                           006190   925 _TXPOWER	=	0x6190
                           006191   926 _TXCTRL	=	0x6191
                           006192   927 _FSMSTAT0	=	0x6192
                           006193   928 _FSMSTAT1	=	0x6193
                           006194   929 _FIFOPCTRL	=	0x6194
                           006195   930 _FSMCTRL	=	0x6195
                           006196   931 _CCACTRL0	=	0x6196
                           006197   932 _CCACTRL1	=	0x6197
                           006198   933 _RSSI	=	0x6198
                           006199   934 _RSSISTAT	=	0x6199
                           00619A   935 _RXFIRST	=	0x619a
                           00619B   936 _RXFIFOCNT	=	0x619b
                           00619C   937 _TXFIFOCNT	=	0x619c
                           00619D   938 _RXFIRST_PTR	=	0x619d
                           00619E   939 _RXLAST_PTR	=	0x619e
                           00619F   940 _RXP1_PTR	=	0x619f
                           0061A1   941 _TXFIRST_PTR	=	0x61a1
                           0061A2   942 _TXLAST_PTR	=	0x61a2
                           0061A3   943 _RFIRQM0	=	0x61a3
                           0061A4   944 _RFIRQM1	=	0x61a4
                           0061A5   945 _RFERRM	=	0x61a5
                           0061A7   946 _RFRND	=	0x61a7
                           0061A8   947 _MDMCTRL0	=	0x61a8
                           0061A9   948 _MDMCTRL1	=	0x61a9
                           0061AA   949 _FREQEST	=	0x61aa
                           0061AB   950 _RXCTRL	=	0x61ab
                           0061AC   951 _FSCTRL	=	0x61ac
                           0061AD   952 _FSCAL0	=	0x61ad
                           0061AE   953 _FSCAL1	=	0x61ae
                           0061AF   954 _FSCAL2	=	0x61af
                           0061B0   955 _FSCAL3	=	0x61b0
                           0061B1   956 _AGCCTRL0	=	0x61b1
                           0061B2   957 _AGCCTRL1	=	0x61b2
                           0061B3   958 _AGCCTRL2	=	0x61b3
                           0061B4   959 _AGCCTRL3	=	0x61b4
                           0061B5   960 _ADCTEST0	=	0x61b5
                           0061B6   961 _ADCTEST1	=	0x61b6
                           0061B7   962 _ADCTEST2	=	0x61b7
                           0061B8   963 _MDMTEST0	=	0x61b8
                           0061B9   964 _MDMTEST1	=	0x61b9
                           0061BA   965 _DACTEST0	=	0x61ba
                           0061BB   966 _DACTEST1	=	0x61bb
                           0061BC   967 _DACTEST2	=	0x61bc
                           0061BD   968 _ATEST	=	0x61bd
                           0061BE   969 _PTEST0	=	0x61be
                           0061BF   970 _PTEST1	=	0x61bf
                           0061FA   971 _TXFILTCFG	=	0x61fa
                           0061EB   972 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   973 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   974 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   975 _CSPPROG0	=	0x61c0
                           0061C1   976 _CSPPROG1	=	0x61c1
                           0061C2   977 _CSPPROG2	=	0x61c2
                           0061C3   978 _CSPPROG3	=	0x61c3
                           0061C4   979 _CSPPROG4	=	0x61c4
                           0061C5   980 _CSPPROG5	=	0x61c5
                           0061C6   981 _CSPPROG6	=	0x61c6
                           0061C7   982 _CSPPROG7	=	0x61c7
                           0061C8   983 _CSPPROG8	=	0x61c8
                           0061C9   984 _CSPPROG9	=	0x61c9
                           0061CA   985 _CSPPROG10	=	0x61ca
                           0061CB   986 _CSPPROG11	=	0x61cb
                           0061CC   987 _CSPPROG12	=	0x61cc
                           0061CD   988 _CSPPROG13	=	0x61cd
                           0061CE   989 _CSPPROG14	=	0x61ce
                           0061CF   990 _CSPPROG15	=	0x61cf
                           0061D0   991 _CSPPROG16	=	0x61d0
                           0061D1   992 _CSPPROG17	=	0x61d1
                           0061D2   993 _CSPPROG18	=	0x61d2
                           0061D3   994 _CSPPROG19	=	0x61d3
                           0061D4   995 _CSPPROG20	=	0x61d4
                           0061D5   996 _CSPPROG21	=	0x61d5
                           0061D6   997 _CSPPROG22	=	0x61d6
                           0061D7   998 _CSPPROG23	=	0x61d7
                           0061E0   999 _CSPCTRL	=	0x61e0
                           0061E1  1000 _CSPSTAT	=	0x61e1
                           0061E2  1001 _CSPX	=	0x61e2
                           0061E3  1002 _CSPY	=	0x61e3
                           0061E4  1003 _CSPZ	=	0x61e4
                           0061E5  1004 _CSPT	=	0x61e5
                           006200  1005 _USBADDR	=	0x6200
                           006201  1006 _USBPOW	=	0x6201
                           006202  1007 _USBIIF	=	0x6202
                           006204  1008 _USBOIF	=	0x6204
                           006206  1009 _USBCIF	=	0x6206
                           006207  1010 _USBIIE	=	0x6207
                           006209  1011 _USBOIE	=	0x6209
                           00620B  1012 _USBCIE	=	0x620b
                           00620C  1013 _USBFRML	=	0x620c
                           00620D  1014 _USBFRMH	=	0x620d
                           00620E  1015 _USBINDEX	=	0x620e
                           00620F  1016 _USBCTRL	=	0x620f
                           006210  1017 _USBMAXI	=	0x6210
                           006211  1018 _USBCS0	=	0x6211
                           006211  1019 _USBCSIL	=	0x6211
                           006212  1020 _USBCSIH	=	0x6212
                           006213  1021 _USBMAXO	=	0x6213
                           006214  1022 _USBCSOL	=	0x6214
                           006215  1023 _USBCSOH	=	0x6215
                           006216  1024 _USBCNT0	=	0x6216
                           006216  1025 _USBCNTL	=	0x6216
                           006217  1026 _USBCNTH	=	0x6217
                           006220  1027 _USBF0	=	0x6220
                           006222  1028 _USBF1	=	0x6222
                           006224  1029 _USBF2	=	0x6224
                           006226  1030 _USBF3	=	0x6226
                           006228  1031 _USBF4	=	0x6228
                           00622A  1032 _USBF5	=	0x622a
                           007080  1033 _X_P0	=	0x7080
                           007086  1034 _X_U0CSR	=	0x7086
                           007089  1035 _X_P0IFG	=	0x7089
                           00708A  1036 _X_P1IFG	=	0x708a
                           00708B  1037 _X_P2IFG	=	0x708b
                           00708C  1038 _X_PICTL	=	0x708c
                           00708D  1039 _X_P1IEN	=	0x708d
                           00708F  1040 _X_P0INP	=	0x708f
                           007090  1041 _X_P1	=	0x7090
                           007091  1042 _X_RFIRQF1	=	0x7091
                           007093  1043 _X_MPAGE	=	0x7093
                           007093  1044 _X__XPAGE	=	0x7093
                           007094  1045 _X_T2CTRL	=	0x7094
                           007095  1046 _X_ST0	=	0x7095
                           007096  1047 _X_ST1	=	0x7096
                           007097  1048 _X_ST2	=	0x7097
                           00709C  1049 _X_T2EVTCFG	=	0x709c
                           00709D  1050 _X_SLEEPSTA	=	0x709d
                           00709E  1051 _X_CLKCONSTA	=	0x709e
                           00709F  1052 _X_FMAP	=	0x709f
                           00709F  1053 _X_PSBANK	=	0x709f
                           0070A0  1054 _X_P2	=	0x70a0
                           0070A1  1055 _X_T2IRQF	=	0x70a1
                           0070A2  1056 _X_T2M0	=	0x70a2
                           0070A3  1057 _X_T2M1	=	0x70a3
                           0070A4  1058 _X_T2MOVF0	=	0x70a4
                           0070A5  1059 _X_T2MOVF1	=	0x70a5
                           0070A6  1060 _X_T2MOVF2	=	0x70a6
                           0070A7  1061 _X_T2IRQM	=	0x70a7
                           0070AB  1062 _X_P0IEN	=	0x70ab
                           0070AC  1063 _X_P2IEN	=	0x70ac
                           0070AD  1064 _X_STLOAD	=	0x70ad
                           0070AE  1065 _X_PMUX	=	0x70ae
                           0070AF  1066 _X_T1STAT	=	0x70af
                           0070B1  1067 _X_ENCDI	=	0x70b1
                           0070B2  1068 _X_ENCDO	=	0x70b2
                           0070B3  1069 _X_ENCCS	=	0x70b3
                           0070B4  1070 _X_ADCCON1	=	0x70b4
                           0070B5  1071 _X_ADCCON2	=	0x70b5
                           0070B6  1072 _X_ADCCON3	=	0x70b6
                           0070BA  1073 _X_ADCL	=	0x70ba
                           0070BB  1074 _X_ADCH	=	0x70bb
                           0070BC  1075 _X_RNDL	=	0x70bc
                           0070BD  1076 _X_RNDH	=	0x70bd
                           0070BE  1077 _X_SLEEPCMD	=	0x70be
                           0070BF  1078 _X_RFERRF	=	0x70bf
                           0070C1  1079 _X_U0DBUF	=	0x70c1
                           0070C2  1080 _X_U0BAUD	=	0x70c2
                           0070C3  1081 _X_T2MSEL	=	0x70c3
                           0070C4  1082 _X_U0UCR	=	0x70c4
                           0070C5  1083 _X_U0GCR	=	0x70c5
                           0070C6  1084 _X_CLKCONCMD	=	0x70c6
                           0070C7  1085 _X_MEMCTR	=	0x70c7
                           0070C9  1086 _X_WDCTL	=	0x70c9
                           0070CA  1087 _X_T3CNT	=	0x70ca
                           0070CB  1088 _X_T3CTL	=	0x70cb
                           0070CC  1089 _X_T3CCTL0	=	0x70cc
                           0070CD  1090 _X_T3CC0	=	0x70cd
                           0070CE  1091 _X_T3CCTL1	=	0x70ce
                           0070CF  1092 _X_T3CC1	=	0x70cf
                           0070D1  1093 _X_DMAIRQ	=	0x70d1
                           0070D2  1094 _X_DMA1CFGL	=	0x70d2
                           0070D3  1095 _X_DMA1CFGH	=	0x70d3
                           0070D4  1096 _X_DMA0CFGL	=	0x70d4
                           0070D5  1097 _X_DMA0CFGH	=	0x70d5
                           0070D6  1098 _X_DMAARM	=	0x70d6
                           0070D7  1099 _X_DMAREQ	=	0x70d7
                           0070D8  1100 _X_TIMIF	=	0x70d8
                           0070D9  1101 _X_RFD	=	0x70d9
                           0070DA  1102 _X_T1CC0L	=	0x70da
                           0070DB  1103 _X_T1CC0H	=	0x70db
                           0070DC  1104 _X_T1CC1L	=	0x70dc
                           0070DD  1105 _X_T1CC1H	=	0x70dd
                           0070DE  1106 _X_T1CC2L	=	0x70de
                           0070DF  1107 _X_T1CC2H	=	0x70df
                           0070E1  1108 _X_RFST	=	0x70e1
                           0070E2  1109 _X_T1CNTL	=	0x70e2
                           0070E3  1110 _X_T1CNTH	=	0x70e3
                           0070E4  1111 _X_T1CTL	=	0x70e4
                           0070E5  1112 _X_T1CCTL0	=	0x70e5
                           0070E6  1113 _X_T1CCTL1	=	0x70e6
                           0070E7  1114 _X_T1CCTL2	=	0x70e7
                           0070E9  1115 _X_RFIRQF0	=	0x70e9
                           0070EA  1116 _X_T4CNT	=	0x70ea
                           0070EB  1117 _X_T4CTL	=	0x70eb
                           0070EC  1118 _X_T4CCTL0	=	0x70ec
                           0070ED  1119 _X_T4CC0	=	0x70ed
                           0070EE  1120 _X_T4CCTL1	=	0x70ee
                           0070EF  1121 _X_T4CC1	=	0x70ef
                           0070F1  1122 _X_PERCFG	=	0x70f1
                           0070F2  1123 _X_APCFG	=	0x70f2
                           0070F3  1124 _X_P0SEL	=	0x70f3
                           0070F4  1125 _X_P1SEL	=	0x70f4
                           0070F5  1126 _X_P2SEL	=	0x70f5
                           0070F6  1127 _X_P1INP	=	0x70f6
                           0070F7  1128 _X_P2INP	=	0x70f7
                           0070F8  1129 _X_U1CSR	=	0x70f8
                           0070F9  1130 _X_U1DBUF	=	0x70f9
                           0070FA  1131 _X_U1BAUD	=	0x70fa
                           0070FB  1132 _X_U1UCR	=	0x70fb
                           0070FC  1133 _X_U1GCR	=	0x70fc
                           0070FD  1134 _X_P0DIR	=	0x70fd
                           0070FE  1135 _X_P1DIR	=	0x70fe
                           0070FF  1136 _X_P2DIR	=	0x70ff
                           007800  1137 _X_INFOPAGE	=	0x7800
                           00780C  1138 _X_IEEE_ADDR	=	0x780c
      000000                       1139 _rt:
      000000                       1140 	.ds 8
      000008                       1141 _pt:
      000008                       1142 	.ds 2
      00000A                       1143 _is_listening:
      00000A                       1144 	.ds 1
      00000B                       1145 _encounter_memb_memb_count:
      00000B                       1146 	.ds 4
      00000F                       1147 _encounter_memb_memb_mem:
      00000F                       1148 	.ds 52
      000043                       1149 _is_streaming:
      000043                       1150 	.ds 1
      000044                       1151 _is_streaming_to:
      000044                       1152 	.ds 8
      00004C                       1153 _is_streaming_to_too:
      00004C                       1154 	.ds 8
      000054                       1155 _stream_until:
      000054                       1156 	.ds 2
      000056                       1157 _received_seqnos:
      000056                       1158 	.ds 72
                                   1159 ;--------------------------------------------------------
                                   1160 ; absolute external ram data
                                   1161 ;--------------------------------------------------------
                                   1162 	.area XABS    (ABS,XDATA)
                                   1163 ;--------------------------------------------------------
                                   1164 ; external initialized ram data
                                   1165 ;--------------------------------------------------------
                                   1166 	.area XISEG   (XDATA)
      000000                       1167 _xmac_config::
      000000                       1168 	.ds 8
      000008                       1169 _xmac_is_on:
      000008                       1170 	.ds 1
      000009                       1171 _waiting_for_packet:
      000009                       1172 	.ds 1
      00000A                       1173 _someone_is_sending:
      00000A                       1174 	.ds 1
      00000B                       1175 _we_are_sending:
      00000B                       1176 	.ds 1
      00000C                       1177 _radio_is_on:
      00000C                       1178 	.ds 1
      00000D                       1179 _encounter_list_list:
      00000D                       1180 	.ds 3
      000010                       1181 _encounter_list:
      000010                       1182 	.ds 3
      000013                       1183 _encounter_memb:
      000013                       1184 	.ds 10
                                   1185 	.area HOME    (CODE)
                                   1186 	.area GSINIT0 (CODE)
                                   1187 	.area GSINIT1 (CODE)
                                   1188 	.area GSINIT2 (CODE)
                                   1189 	.area GSINIT3 (CODE)
                                   1190 	.area GSINIT4 (CODE)
                                   1191 	.area GSINIT5 (CODE)
                                   1192 	.area GSINIT  (CODE)
                                   1193 	.area GSFINAL (CODE)
                                   1194 	.area CSEG    (CODE)
                                   1195 ;--------------------------------------------------------
                                   1196 ; global & static initialisations
                                   1197 ;--------------------------------------------------------
                                   1198 	.area HOME    (CODE)
                                   1199 	.area GSINIT  (CODE)
                                   1200 	.area GSFINAL (CODE)
                                   1201 	.area GSINIT  (CODE)
                                   1202 ;--------------------------------------------------------
                                   1203 ; Home
                                   1204 ;--------------------------------------------------------
                                   1205 	.area HOME    (CODE)
                                   1206 	.area HOME    (CODE)
                                   1207 ;--------------------------------------------------------
                                   1208 ; code
                                   1209 ;--------------------------------------------------------
                                   1210 	.area BANK1   (CODE)
                                   1211 ;------------------------------------------------------------
                                   1212 ;Allocation info for local variables in function 'on'
                                   1213 ;------------------------------------------------------------
                                   1214 ;	../../../core/net/mac/xmac.c:233: on(void)
                                   1215 ;	-----------------------------------------
                                   1216 ;	 function on
                                   1217 ;	-----------------------------------------
      000000                       1218 _on:
                           000007  1219 	ar7 = 0x07
                           000006  1220 	ar6 = 0x06
                           000005  1221 	ar5 = 0x05
                           000004  1222 	ar4 = 0x04
                           000003  1223 	ar3 = 0x03
                           000002  1224 	ar2 = 0x02
                           000001  1225 	ar1 = 0x01
                           000000  1226 	ar0 = 0x00
                                   1227 ;	../../../core/net/mac/xmac.c:235: if(xmac_is_on && radio_is_on == 0) {
      000000 90r00r08         [24] 1228 	mov	dptr,#_xmac_is_on
      000003 E0               [24] 1229 	movx	a,@dptr
      000004 60 35            [24] 1230 	jz	00104$
      000006 90r00r0C         [24] 1231 	mov	dptr,#_radio_is_on
      000009 E0               [24] 1232 	movx	a,@dptr
      00000A 70 2F            [24] 1233 	jnz	00104$
                                   1234 ;	../../../core/net/mac/xmac.c:236: radio_is_on = 1;
      00000C 90r00r0C         [24] 1235 	mov	dptr,#_radio_is_on
      00000F 74 01            [12] 1236 	mov	a,#0x01
      000011 F0               [24] 1237 	movx	@dptr,a
                                   1238 ;	../../../core/net/mac/xmac.c:237: NETSTACK_RADIO.on();
      000012 90r00r18         [24] 1239 	mov	dptr,#(_cc2530_rf_driver + 0x0018)
      000015 E4               [12] 1240 	clr	a
      000016 93               [24] 1241 	movc	a,@a+dptr
      000017 FD               [12] 1242 	mov	r5,a
      000018 A3               [24] 1243 	inc	dptr
      000019 E4               [12] 1244 	clr	a
      00001A 93               [24] 1245 	movc	a,@a+dptr
      00001B FE               [12] 1246 	mov	r6,a
      00001C A3               [24] 1247 	inc	dptr
      00001D E4               [12] 1248 	clr	a
      00001E 93               [24] 1249 	movc	a,@a+dptr
      00001F FF               [12] 1250 	mov	r7,a
      000020 C0 07            [24] 1251 	push	ar7
      000022 C0 06            [24] 1252 	push	ar6
      000024 C0 05            [24] 1253 	push	ar5
      000026 C0 05            [24] 1254 	push	ar5
      000028 C0 06            [24] 1255 	push	ar6
      00002A C0 07            [24] 1256 	push	ar7
      00002C D0 02            [24] 1257 	pop	ar2
      00002E D0 01            [24] 1258 	pop	ar1
      000030 D0 00            [24] 1259 	pop	ar0
      000032 12r00r00         [24] 1260 	lcall	__sdcc_banked_call
      000035 D0 05            [24] 1261 	pop	ar5
      000037 D0 06            [24] 1262 	pop	ar6
      000039 D0 07            [24] 1263 	pop	ar7
      00003B                       1264 00104$:
                                   1265 ;	../../../core/net/mac/xmac.c:240: }
      00003B 02r00r00         [24] 1266 	ljmp	__sdcc_banked_ret
                                   1267 ;------------------------------------------------------------
                                   1268 ;Allocation info for local variables in function 'off'
                                   1269 ;------------------------------------------------------------
                                   1270 ;	../../../core/net/mac/xmac.c:243: off(void)
                                   1271 ;	-----------------------------------------
                                   1272 ;	 function off
                                   1273 ;	-----------------------------------------
      00003E                       1274 _off:
                                   1275 ;	../../../core/net/mac/xmac.c:245: if(xmac_is_on && radio_is_on != 0 && is_listening == 0 &&
      00003E 90r00r08         [24] 1276 	mov	dptr,#_xmac_is_on
      000041 E0               [24] 1277 	movx	a,@dptr
      000042 60 3F            [24] 1278 	jz	00106$
      000044 90r00r0C         [24] 1279 	mov	dptr,#_radio_is_on
      000047 E0               [24] 1280 	movx	a,@dptr
      000048 60 39            [24] 1281 	jz	00106$
      00004A 90r00r0A         [24] 1282 	mov	dptr,#_is_listening
      00004D E0               [24] 1283 	movx	a,@dptr
      00004E 70 33            [24] 1284 	jnz	00106$
                                   1285 ;	../../../core/net/mac/xmac.c:246: is_streaming == 0) {
      000050 90r00r43         [24] 1286 	mov	dptr,#_is_streaming
      000053 E0               [24] 1287 	movx	a,@dptr
      000054 70 2D            [24] 1288 	jnz	00106$
                                   1289 ;	../../../core/net/mac/xmac.c:247: radio_is_on = 0;
      000056 90r00r0C         [24] 1290 	mov	dptr,#_radio_is_on
      000059 E4               [12] 1291 	clr	a
      00005A F0               [24] 1292 	movx	@dptr,a
                                   1293 ;	../../../core/net/mac/xmac.c:248: NETSTACK_RADIO.off();
      00005B 90r00r1B         [24] 1294 	mov	dptr,#(_cc2530_rf_driver + 0x001b)
                                   1295 ;	genFromRTrack removed	clr	a
      00005E 93               [24] 1296 	movc	a,@a+dptr
      00005F FD               [12] 1297 	mov	r5,a
      000060 A3               [24] 1298 	inc	dptr
      000061 E4               [12] 1299 	clr	a
      000062 93               [24] 1300 	movc	a,@a+dptr
      000063 FE               [12] 1301 	mov	r6,a
      000064 A3               [24] 1302 	inc	dptr
      000065 E4               [12] 1303 	clr	a
      000066 93               [24] 1304 	movc	a,@a+dptr
      000067 FF               [12] 1305 	mov	r7,a
      000068 C0 07            [24] 1306 	push	ar7
      00006A C0 06            [24] 1307 	push	ar6
      00006C C0 05            [24] 1308 	push	ar5
      00006E C0 05            [24] 1309 	push	ar5
      000070 C0 06            [24] 1310 	push	ar6
      000072 C0 07            [24] 1311 	push	ar7
      000074 D0 02            [24] 1312 	pop	ar2
      000076 D0 01            [24] 1313 	pop	ar1
      000078 D0 00            [24] 1314 	pop	ar0
      00007A 12r00r00         [24] 1315 	lcall	__sdcc_banked_call
      00007D D0 05            [24] 1316 	pop	ar5
      00007F D0 06            [24] 1317 	pop	ar6
      000081 D0 07            [24] 1318 	pop	ar7
      000083                       1319 00106$:
                                   1320 ;	../../../core/net/mac/xmac.c:251: }
      000083 02r00r00         [24] 1321 	ljmp	__sdcc_banked_ret
                                   1322 ;------------------------------------------------------------
                                   1323 ;Allocation info for local variables in function 'schedule_powercycle'
                                   1324 ;------------------------------------------------------------
                                   1325 ;time                      Allocated to stack - sp -7
                                   1326 ;t                         Allocated to stack - sp -2
                                   1327 ;r                         Allocated to registers 
                                   1328 ;------------------------------------------------------------
                                   1329 ;	../../../core/net/mac/xmac.c:255: schedule_powercycle(struct rtimer *t, rtimer_clock_t time)
                                   1330 ;	-----------------------------------------
                                   1331 ;	 function schedule_powercycle
                                   1332 ;	-----------------------------------------
      000086                       1333 _schedule_powercycle:
      000086 C0 82            [24] 1334 	push	dpl
      000088 C0 83            [24] 1335 	push	dph
      00008A C0 F0            [24] 1336 	push	b
                                   1337 ;	../../../core/net/mac/xmac.c:258: if(xmac_is_on) {
      00008C 90r00r08         [24] 1338 	mov	dptr,#_xmac_is_on
      00008F E0               [24] 1339 	movx	a,@dptr
      000090 60 5A            [24] 1340 	jz	00103$
                                   1341 ;	../../../core/net/mac/xmac.c:260: (void (*)(struct rtimer *, void *))powercycle, NULL);
      000092 7Ar25            [12] 1342 	mov	r2,#_powercycle
      000094 7Bs01            [12] 1343 	mov	r3,#(_powercycle >> 8)
      000096 7Cs00            [12] 1344 	mov	r4,#(_powercycle >> 16)
                                   1345 ;	../../../core/net/mac/xmac.c:259: r = rtimer_set(t, RTIMER_TIME(t) + time, 1,
      000098 A8 81            [24] 1346 	mov	r0,sp
      00009A 18               [12] 1347 	dec	r0
      00009B 18               [12] 1348 	dec	r0
      00009C 86 82            [24] 1349 	mov	dpl,@r0
      00009E 08               [12] 1350 	inc	r0
      00009F 86 83            [24] 1351 	mov	dph,@r0
      0000A1 08               [12] 1352 	inc	r0
      0000A2 86 F0            [24] 1353 	mov	b,@r0
      0000A4 12r00r00         [24] 1354 	lcall	__gptrget
      0000A7 FE               [12] 1355 	mov	r6,a
      0000A8 A3               [24] 1356 	inc	dptr
      0000A9 12r00r00         [24] 1357 	lcall	__gptrget
      0000AC FF               [12] 1358 	mov	r7,a
      0000AD E5 81            [12] 1359 	mov	a,sp
      0000AF 24 F9            [12] 1360 	add	a,#0xf9
      0000B1 F8               [12] 1361 	mov	r0,a
      0000B2 E6               [12] 1362 	mov	a,@r0
      0000B3 2E               [12] 1363 	add	a,r6
      0000B4 FE               [12] 1364 	mov	r6,a
      0000B5 08               [12] 1365 	inc	r0
      0000B6 E6               [12] 1366 	mov	a,@r0
      0000B7 3F               [12] 1367 	addc	a,r7
      0000B8 FF               [12] 1368 	mov	r7,a
      0000B9 E4               [12] 1369 	clr	a
      0000BA C0 E0            [24] 1370 	push	acc
      0000BC C0 E0            [24] 1371 	push	acc
      0000BE C0 E0            [24] 1372 	push	acc
      0000C0 C0 02            [24] 1373 	push	ar2
      0000C2 C0 03            [24] 1374 	push	ar3
      0000C4 C0 04            [24] 1375 	push	ar4
      0000C6 04               [12] 1376 	inc	a
      0000C7 C0 E0            [24] 1377 	push	acc
      0000C9 E4               [12] 1378 	clr	a
      0000CA C0 E0            [24] 1379 	push	acc
      0000CC C0 06            [24] 1380 	push	ar6
      0000CE C0 07            [24] 1381 	push	ar7
      0000D0 E5 81            [12] 1382 	mov	a,sp
      0000D2 24 F4            [12] 1383 	add	a,#0xf4
      0000D4 F8               [12] 1384 	mov	r0,a
      0000D5 86 82            [24] 1385 	mov	dpl,@r0
      0000D7 08               [12] 1386 	inc	r0
      0000D8 86 83            [24] 1387 	mov	dph,@r0
      0000DA 08               [12] 1388 	inc	r0
      0000DB 86 F0            [24] 1389 	mov	b,@r0
      0000DD 78r00            [12] 1390 	mov	r0,#_rtimer_set
      0000DF 79s00            [12] 1391 	mov	r1,#(_rtimer_set >> 8)
      0000E1 7As00            [12] 1392 	mov	r2,#(_rtimer_set >> 16)
      0000E3 12r00r00         [24] 1393 	lcall	__sdcc_banked_call
      0000E6 E5 81            [12] 1394 	mov	a,sp
      0000E8 24 F6            [12] 1395 	add	a,#0xf6
      0000EA F5 81            [12] 1396 	mov	sp,a
                                   1397 ;	../../../core/net/mac/xmac.c:261: if(r) {
      0000EC                       1398 00103$:
                                   1399 ;	../../../core/net/mac/xmac.c:265: }
      0000EC 15 81            [12] 1400 	dec	sp
      0000EE 15 81            [12] 1401 	dec	sp
      0000F0 15 81            [12] 1402 	dec	sp
      0000F2 02r00r00         [24] 1403 	ljmp	__sdcc_banked_ret
                                   1404 ;------------------------------------------------------------
                                   1405 ;Allocation info for local variables in function 'powercycle_turn_radio_off'
                                   1406 ;------------------------------------------------------------
                                   1407 ;	../../../core/net/mac/xmac.c:267: powercycle_turn_radio_off(void)
                                   1408 ;	-----------------------------------------
                                   1409 ;	 function powercycle_turn_radio_off
                                   1410 ;	-----------------------------------------
      0000F5                       1411 _powercycle_turn_radio_off:
                                   1412 ;	../../../core/net/mac/xmac.c:269: if(we_are_sending == 0 &&
      0000F5 90r00r0B         [24] 1413 	mov	dptr,#_we_are_sending
      0000F8 E0               [24] 1414 	movx	a,@dptr
      0000F9 70 0F            [24] 1415 	jnz	00104$
                                   1416 ;	../../../core/net/mac/xmac.c:270: waiting_for_packet == 0) {
      0000FB 90r00r09         [24] 1417 	mov	dptr,#_waiting_for_packet
      0000FE E0               [24] 1418 	movx	a,@dptr
      0000FF 70 09            [24] 1419 	jnz	00104$
                                   1420 ;	../../../core/net/mac/xmac.c:271: off();
      000101 78r3E            [12] 1421 	mov	r0,#_off
      000103 79s00            [12] 1422 	mov	r1,#(_off >> 8)
      000105 7As00            [12] 1423 	mov	r2,#(_off >> 16)
      000107 12r00r00         [24] 1424 	lcall	__sdcc_banked_call
      00010A                       1425 00104$:
                                   1426 ;	../../../core/net/mac/xmac.c:276: }
      00010A 02r00r00         [24] 1427 	ljmp	__sdcc_banked_ret
                                   1428 ;------------------------------------------------------------
                                   1429 ;Allocation info for local variables in function 'powercycle_turn_radio_on'
                                   1430 ;------------------------------------------------------------
                                   1431 ;	../../../core/net/mac/xmac.c:278: powercycle_turn_radio_on(void)
                                   1432 ;	-----------------------------------------
                                   1433 ;	 function powercycle_turn_radio_on
                                   1434 ;	-----------------------------------------
      00010D                       1435 _powercycle_turn_radio_on:
                                   1436 ;	../../../core/net/mac/xmac.c:280: if(we_are_sending == 0 &&
      00010D 90r00r0B         [24] 1437 	mov	dptr,#_we_are_sending
      000110 E0               [24] 1438 	movx	a,@dptr
      000111 70 0F            [24] 1439 	jnz	00104$
                                   1440 ;	../../../core/net/mac/xmac.c:281: waiting_for_packet == 0) {
      000113 90r00r09         [24] 1441 	mov	dptr,#_waiting_for_packet
      000116 E0               [24] 1442 	movx	a,@dptr
      000117 70 09            [24] 1443 	jnz	00104$
                                   1444 ;	../../../core/net/mac/xmac.c:282: on();
      000119 78r00            [12] 1445 	mov	r0,#_on
      00011B 79s00            [12] 1446 	mov	r1,#(_on >> 8)
      00011D 7As00            [12] 1447 	mov	r2,#(_on >> 16)
      00011F 12r00r00         [24] 1448 	lcall	__sdcc_banked_call
      000122                       1449 00104$:
                                   1450 ;	../../../core/net/mac/xmac.c:284: }
      000122 02r00r00         [24] 1451 	ljmp	__sdcc_banked_ret
                                   1452 ;------------------------------------------------------------
                                   1453 ;Allocation info for local variables in function 'powercycle'
                                   1454 ;------------------------------------------------------------
                                   1455 ;ptr                       Allocated to stack - sp -5
                                   1456 ;t                         Allocated to registers r5 r6 r7 
                                   1457 ;PT_YIELD_FLAG             Allocated to registers r4 
                                   1458 ;------------------------------------------------------------
                                   1459 ;	../../../core/net/mac/xmac.c:286: powercycle(struct rtimer *t, void *ptr)
                                   1460 ;	-----------------------------------------
                                   1461 ;	 function powercycle
                                   1462 ;	-----------------------------------------
      000125                       1463 _powercycle:
      000125 AD 82            [24] 1464 	mov	r5,dpl
      000127 AE 83            [24] 1465 	mov	r6,dph
      000129 AF F0            [24] 1466 	mov	r7,b
                                   1467 ;	../../../core/net/mac/xmac.c:288: if(is_streaming) {
      00012B 90r00r43         [24] 1468 	mov	dptr,#_is_streaming
      00012E E0               [24] 1469 	movx	a,@dptr
      00012F 70 03            [24] 1470 	jnz	00185$
      000131 02r01rB2         [24] 1471 	ljmp	00104$
      000134                       1472 00185$:
                                   1473 ;	../../../core/net/mac/xmac.c:289: if(!RTIMER_CLOCK_LT(RTIMER_NOW(), stream_until)) {
      000134 C0 05            [24] 1474 	push	ar5
      000136 C0 06            [24] 1475 	push	ar6
      000138 C0 07            [24] 1476 	push	ar7
      00013A AB E2            [24] 1477 	mov	r3,_T1CNTL
      00013C 7C 00            [12] 1478 	mov	r4,#0x00
      00013E AA E3            [24] 1479 	mov	r2,_T1CNTH
      000140 8A 07            [24] 1480 	mov	ar7,r2
      000142 E4               [12] 1481 	clr	a
      000143 FA               [12] 1482 	mov	r2,a
      000144 2B               [12] 1483 	add	a,r3
      000145 FB               [12] 1484 	mov	r3,a
      000146 EF               [12] 1485 	mov	a,r7
      000147 3C               [12] 1486 	addc	a,r4
      000148 FC               [12] 1487 	mov	r4,a
      000149 90r00r54         [24] 1488 	mov	dptr,#_stream_until
      00014C E0               [24] 1489 	movx	a,@dptr
      00014D FE               [12] 1490 	mov	r6,a
      00014E A3               [24] 1491 	inc	dptr
      00014F E0               [24] 1492 	movx	a,@dptr
      000150 FF               [12] 1493 	mov	r7,a
      000151 EB               [12] 1494 	mov	a,r3
      000152 C3               [12] 1495 	clr	c
      000153 9E               [12] 1496 	subb	a,r6
      000154 EC               [12] 1497 	mov	a,r4
      000155 9F               [12] 1498 	subb	a,r7
      000156 D0 07            [24] 1499 	pop	ar7
      000158 D0 06            [24] 1500 	pop	ar6
      00015A D0 05            [24] 1501 	pop	ar5
      00015C 20 E7 53         [24] 1502 	jb	acc.7,00104$
                                   1503 ;	../../../core/net/mac/xmac.c:290: is_streaming = 0;
      00015F 90r00r43         [24] 1504 	mov	dptr,#_is_streaming
      000162 E4               [12] 1505 	clr	a
      000163 F0               [24] 1506 	movx	@dptr,a
                                   1507 ;	../../../core/net/mac/xmac.c:291: rimeaddr_copy(&is_streaming_to, &rimeaddr_null);
      000164 C0 07            [24] 1508 	push	ar7
      000166 C0 06            [24] 1509 	push	ar6
      000168 C0 05            [24] 1510 	push	ar5
      00016A 74r00            [12] 1511 	mov	a,#_rimeaddr_null
      00016C C0 E0            [24] 1512 	push	acc
      00016E 74s00            [12] 1513 	mov	a,#(_rimeaddr_null >> 8)
      000170 C0 E0            [24] 1514 	push	acc
      000172 74 80            [12] 1515 	mov	a,#0x80
      000174 C0 E0            [24] 1516 	push	acc
      000176 90r00r44         [24] 1517 	mov	dptr,#_is_streaming_to
      000179 75 F0 00         [24] 1518 	mov	b,#0x00
      00017C 78r00            [12] 1519 	mov	r0,#_rimeaddr_copy
      00017E 79s00            [12] 1520 	mov	r1,#(_rimeaddr_copy >> 8)
      000180 7As00            [12] 1521 	mov	r2,#(_rimeaddr_copy >> 16)
      000182 12r00r00         [24] 1522 	lcall	__sdcc_banked_call
      000185 15 81            [12] 1523 	dec	sp
      000187 15 81            [12] 1524 	dec	sp
      000189 15 81            [12] 1525 	dec	sp
                                   1526 ;	../../../core/net/mac/xmac.c:292: rimeaddr_copy(&is_streaming_to_too, &rimeaddr_null);
      00018B 74r00            [12] 1527 	mov	a,#_rimeaddr_null
      00018D C0 E0            [24] 1528 	push	acc
      00018F 74s00            [12] 1529 	mov	a,#(_rimeaddr_null >> 8)
      000191 C0 E0            [24] 1530 	push	acc
      000193 74 80            [12] 1531 	mov	a,#0x80
      000195 C0 E0            [24] 1532 	push	acc
      000197 90r00r4C         [24] 1533 	mov	dptr,#_is_streaming_to_too
      00019A 75 F0 00         [24] 1534 	mov	b,#0x00
      00019D 78r00            [12] 1535 	mov	r0,#_rimeaddr_copy
      00019F 79s00            [12] 1536 	mov	r1,#(_rimeaddr_copy >> 8)
      0001A1 7As00            [12] 1537 	mov	r2,#(_rimeaddr_copy >> 16)
      0001A3 12r00r00         [24] 1538 	lcall	__sdcc_banked_call
      0001A6 15 81            [12] 1539 	dec	sp
      0001A8 15 81            [12] 1540 	dec	sp
      0001AA 15 81            [12] 1541 	dec	sp
      0001AC D0 05            [24] 1542 	pop	ar5
      0001AE D0 06            [24] 1543 	pop	ar6
      0001B0 D0 07            [24] 1544 	pop	ar7
      0001B2                       1545 00104$:
                                   1546 ;	../../../core/net/mac/xmac.c:296: PT_BEGIN(&pt);
      0001B2 7C 01            [12] 1547 	mov	r4,#0x01
      0001B4 90r00r08         [24] 1548 	mov	dptr,#_pt
      0001B7 E0               [24] 1549 	movx	a,@dptr
      0001B8 FA               [12] 1550 	mov	r2,a
      0001B9 A3               [24] 1551 	inc	dptr
      0001BA E0               [24] 1552 	movx	a,@dptr
      0001BB FB               [12] 1553 	mov	r3,a
      0001BC BA 00 05         [24] 1554 	cjne	r2,#0x00,00187$
      0001BF BB 00 02         [24] 1555 	cjne	r3,#0x00,00187$
      0001C2 80 14            [24] 1556 	sjmp	00128$
      0001C4                       1557 00187$:
      0001C4 BA 33 05         [24] 1558 	cjne	r2,#0x33,00188$
      0001C7 BB 01 02         [24] 1559 	cjne	r3,#0x01,00188$
      0001CA 80 64            [24] 1560 	sjmp	00108$
      0001CC                       1561 00188$:
      0001CC BA 42 06         [24] 1562 	cjne	r2,#0x42,00189$
      0001CF BB 01 03         [24] 1563 	cjne	r3,#0x01,00189$
      0001D2 02r02rFC         [24] 1564 	ljmp	00118$
      0001D5                       1565 00189$:
      0001D5 02r03r07         [24] 1566 	ljmp	00130$
                                   1567 ;	../../../core/net/mac/xmac.c:298: while(1) {
      0001D8                       1568 00128$:
                                   1569 ;	../../../core/net/mac/xmac.c:300: if(someone_is_sending > 0) {
      0001D8 90r00r0A         [24] 1570 	mov	dptr,#_someone_is_sending
      0001DB E0               [24] 1571 	movx	a,@dptr
      0001DC 60 06            [24] 1572 	jz	00107$
                                   1573 ;	../../../core/net/mac/xmac.c:301: someone_is_sending--;
      0001DE 90r00r0A         [24] 1574 	mov	dptr,#_someone_is_sending
      0001E1 E0               [24] 1575 	movx	a,@dptr
      0001E2 14               [12] 1576 	dec	a
      0001E3 F0               [24] 1577 	movx	@dptr,a
      0001E4                       1578 00107$:
                                   1579 ;	../../../core/net/mac/xmac.c:305: powercycle_turn_radio_on();
      0001E4 C0 07            [24] 1580 	push	ar7
      0001E6 C0 06            [24] 1581 	push	ar6
      0001E8 C0 05            [24] 1582 	push	ar5
      0001EA 78r0D            [12] 1583 	mov	r0,#_powercycle_turn_radio_on
      0001EC 79s01            [12] 1584 	mov	r1,#(_powercycle_turn_radio_on >> 8)
      0001EE 7As00            [12] 1585 	mov	r2,#(_powercycle_turn_radio_on >> 16)
      0001F0 12r00r00         [24] 1586 	lcall	__sdcc_banked_call
      0001F3 D0 05            [24] 1587 	pop	ar5
      0001F5 D0 06            [24] 1588 	pop	ar6
      0001F7 D0 07            [24] 1589 	pop	ar7
                                   1590 ;	../../../core/net/mac/xmac.c:306: schedule_powercycle(t, xmac_config.on_time);
      0001F9 90r00r00         [24] 1591 	mov	dptr,#_xmac_config
      0001FC E0               [24] 1592 	movx	a,@dptr
      0001FD FA               [12] 1593 	mov	r2,a
      0001FE A3               [24] 1594 	inc	dptr
      0001FF E0               [24] 1595 	movx	a,@dptr
      000200 FB               [12] 1596 	mov	r3,a
      000201 C0 07            [24] 1597 	push	ar7
      000203 C0 06            [24] 1598 	push	ar6
      000205 C0 05            [24] 1599 	push	ar5
      000207 C0 02            [24] 1600 	push	ar2
      000209 C0 03            [24] 1601 	push	ar3
      00020B 8D 82            [24] 1602 	mov	dpl,r5
      00020D 8E 83            [24] 1603 	mov	dph,r6
      00020F 8F F0            [24] 1604 	mov	b,r7
      000211 78r86            [12] 1605 	mov	r0,#_schedule_powercycle
      000213 79s00            [12] 1606 	mov	r1,#(_schedule_powercycle >> 8)
      000215 7As00            [12] 1607 	mov	r2,#(_schedule_powercycle >> 16)
      000217 12r00r00         [24] 1608 	lcall	__sdcc_banked_call
      00021A 15 81            [12] 1609 	dec	sp
      00021C 15 81            [12] 1610 	dec	sp
      00021E D0 05            [24] 1611 	pop	ar5
      000220 D0 06            [24] 1612 	pop	ar6
      000222 D0 07            [24] 1613 	pop	ar7
                                   1614 ;	../../../core/net/mac/xmac.c:307: PT_YIELD(&pt);
      000224 7C 00            [12] 1615 	mov	r4,#0x00
      000226 90r00r08         [24] 1616 	mov	dptr,#_pt
      000229 74 33            [12] 1617 	mov	a,#0x33
      00022B F0               [24] 1618 	movx	@dptr,a
      00022C 74 01            [12] 1619 	mov	a,#0x01
      00022E A3               [24] 1620 	inc	dptr
      00022F F0               [24] 1621 	movx	@dptr,a
      000230                       1622 00108$:
      000230 EC               [12] 1623 	mov	a,r4
      000231 70 06            [24] 1624 	jnz	00112$
      000233 75 82 01         [24] 1625 	mov	dpl,#0x01
      000236 02r00r00         [24] 1626 	ljmp	__sdcc_banked_ret
      000239                       1627 00112$:
                                   1628 ;	../../../core/net/mac/xmac.c:309: if(xmac_config.off_time > 0 && !NETSTACK_RADIO.receiving_packet()) {
      000239 90r00r02         [24] 1629 	mov	dptr,#(_xmac_config + 0x0002)
      00023C E0               [24] 1630 	movx	a,@dptr
      00023D FA               [12] 1631 	mov	r2,a
      00023E A3               [24] 1632 	inc	dptr
      00023F E0               [24] 1633 	movx	a,@dptr
      000240 FB               [12] 1634 	mov	r3,a
      000241 4A               [12] 1635 	orl	a,r2
      000242 60 94            [24] 1636 	jz	00128$
      000244 C0 05            [24] 1637 	push	ar5
      000246 C0 06            [24] 1638 	push	ar6
      000248 C0 07            [24] 1639 	push	ar7
      00024A 90r00r12         [24] 1640 	mov	dptr,#(_cc2530_rf_driver + 0x0012)
      00024D E4               [12] 1641 	clr	a
      00024E 93               [24] 1642 	movc	a,@a+dptr
      00024F FA               [12] 1643 	mov	r2,a
      000250 A3               [24] 1644 	inc	dptr
      000251 E4               [12] 1645 	clr	a
      000252 93               [24] 1646 	movc	a,@a+dptr
      000253 FB               [12] 1647 	mov	r3,a
      000254 A3               [24] 1648 	inc	dptr
      000255 E4               [12] 1649 	clr	a
      000256 93               [24] 1650 	movc	a,@a+dptr
      000257 FF               [12] 1651 	mov	r7,a
      000258 C0 07            [24] 1652 	push	ar7
      00025A C0 06            [24] 1653 	push	ar6
      00025C C0 05            [24] 1654 	push	ar5
      00025E C0 02            [24] 1655 	push	ar2
      000260 C0 03            [24] 1656 	push	ar3
      000262 C0 07            [24] 1657 	push	ar7
      000264 D0 02            [24] 1658 	pop	ar2
      000266 D0 01            [24] 1659 	pop	ar1
      000268 D0 00            [24] 1660 	pop	ar0
      00026A 12r00r00         [24] 1661 	lcall	__sdcc_banked_call
      00026D AA 82            [24] 1662 	mov	r2,dpl
      00026F AB 83            [24] 1663 	mov	r3,dph
      000271 D0 05            [24] 1664 	pop	ar5
      000273 D0 06            [24] 1665 	pop	ar6
      000275 D0 07            [24] 1666 	pop	ar7
      000277 D0 07            [24] 1667 	pop	ar7
      000279 D0 06            [24] 1668 	pop	ar6
      00027B D0 05            [24] 1669 	pop	ar5
      00027D EA               [12] 1670 	mov	a,r2
      00027E 4B               [12] 1671 	orl	a,r3
      00027F 60 03            [24] 1672 	jz	00193$
      000281 02r01rD8         [24] 1673 	ljmp	00128$
      000284                       1674 00193$:
                                   1675 ;	../../../core/net/mac/xmac.c:310: powercycle_turn_radio_off();
      000284 C0 07            [24] 1676 	push	ar7
      000286 C0 06            [24] 1677 	push	ar6
      000288 C0 05            [24] 1678 	push	ar5
      00028A 78rF5            [12] 1679 	mov	r0,#_powercycle_turn_radio_off
      00028C 79s00            [12] 1680 	mov	r1,#(_powercycle_turn_radio_off >> 8)
      00028E 7As00            [12] 1681 	mov	r2,#(_powercycle_turn_radio_off >> 16)
      000290 12r00r00         [24] 1682 	lcall	__sdcc_banked_call
      000293 D0 05            [24] 1683 	pop	ar5
      000295 D0 06            [24] 1684 	pop	ar6
      000297 D0 07            [24] 1685 	pop	ar7
                                   1686 ;	../../../core/net/mac/xmac.c:311: if(waiting_for_packet != 0) {
      000299 90r00r09         [24] 1687 	mov	dptr,#_waiting_for_packet
      00029C E0               [24] 1688 	movx	a,@dptr
      00029D 60 26            [24] 1689 	jz	00117$
                                   1690 ;	../../../core/net/mac/xmac.c:312: waiting_for_packet++;
      00029F 90r00r09         [24] 1691 	mov	dptr,#_waiting_for_packet
      0002A2 E0               [24] 1692 	movx	a,@dptr
      0002A3 04               [12] 1693 	inc	a
      0002A4 F0               [24] 1694 	movx	@dptr,a
                                   1695 ;	../../../core/net/mac/xmac.c:313: if(waiting_for_packet > 2) {
      0002A5 E0               [24] 1696 	movx	a,@dptr
      0002A6 FB               [12] 1697 	mov  r3,a
      0002A7 24 FD            [12] 1698 	add	a,#0xff - 0x02
      0002A9 50 1A            [24] 1699 	jnc	00117$
                                   1700 ;	../../../core/net/mac/xmac.c:317: waiting_for_packet = 0;
      0002AB 90r00r09         [24] 1701 	mov	dptr,#_waiting_for_packet
      0002AE E4               [12] 1702 	clr	a
      0002AF F0               [24] 1703 	movx	@dptr,a
                                   1704 ;	../../../core/net/mac/xmac.c:318: powercycle_turn_radio_off();
      0002B0 C0 07            [24] 1705 	push	ar7
      0002B2 C0 06            [24] 1706 	push	ar6
      0002B4 C0 05            [24] 1707 	push	ar5
      0002B6 78rF5            [12] 1708 	mov	r0,#_powercycle_turn_radio_off
      0002B8 79s00            [12] 1709 	mov	r1,#(_powercycle_turn_radio_off >> 8)
      0002BA 7As00            [12] 1710 	mov	r2,#(_powercycle_turn_radio_off >> 16)
      0002BC 12r00r00         [24] 1711 	lcall	__sdcc_banked_call
      0002BF D0 05            [24] 1712 	pop	ar5
      0002C1 D0 06            [24] 1713 	pop	ar6
      0002C3 D0 07            [24] 1714 	pop	ar7
      0002C5                       1715 00117$:
                                   1716 ;	../../../core/net/mac/xmac.c:321: schedule_powercycle(t, xmac_config.off_time);
      0002C5 90r00r02         [24] 1717 	mov	dptr,#(_xmac_config + 0x0002)
      0002C8 E0               [24] 1718 	movx	a,@dptr
      0002C9 FA               [12] 1719 	mov	r2,a
      0002CA A3               [24] 1720 	inc	dptr
      0002CB E0               [24] 1721 	movx	a,@dptr
      0002CC FB               [12] 1722 	mov	r3,a
      0002CD C0 07            [24] 1723 	push	ar7
      0002CF C0 06            [24] 1724 	push	ar6
      0002D1 C0 05            [24] 1725 	push	ar5
      0002D3 C0 02            [24] 1726 	push	ar2
      0002D5 C0 03            [24] 1727 	push	ar3
      0002D7 8D 82            [24] 1728 	mov	dpl,r5
      0002D9 8E 83            [24] 1729 	mov	dph,r6
      0002DB 8F F0            [24] 1730 	mov	b,r7
      0002DD 78r86            [12] 1731 	mov	r0,#_schedule_powercycle
      0002DF 79s00            [12] 1732 	mov	r1,#(_schedule_powercycle >> 8)
      0002E1 7As00            [12] 1733 	mov	r2,#(_schedule_powercycle >> 16)
      0002E3 12r00r00         [24] 1734 	lcall	__sdcc_banked_call
      0002E6 15 81            [12] 1735 	dec	sp
      0002E8 15 81            [12] 1736 	dec	sp
      0002EA D0 05            [24] 1737 	pop	ar5
      0002EC D0 06            [24] 1738 	pop	ar6
      0002EE D0 07            [24] 1739 	pop	ar7
                                   1740 ;	../../../core/net/mac/xmac.c:322: PT_YIELD(&pt);
      0002F0 7C 00            [12] 1741 	mov	r4,#0x00
      0002F2 90r00r08         [24] 1742 	mov	dptr,#_pt
      0002F5 74 42            [12] 1743 	mov	a,#0x42
      0002F7 F0               [24] 1744 	movx	@dptr,a
      0002F8 74 01            [12] 1745 	mov	a,#0x01
      0002FA A3               [24] 1746 	inc	dptr
      0002FB F0               [24] 1747 	movx	@dptr,a
      0002FC                       1748 00118$:
      0002FC EC               [12] 1749 	mov	a,r4
      0002FD 60 03            [24] 1750 	jz	00196$
      0002FF 02r01rD8         [24] 1751 	ljmp	00128$
      000302                       1752 00196$:
      000302 75 82 01         [24] 1753 	mov	dpl,#0x01
                                   1754 ;	../../../core/net/mac/xmac.c:326: PT_END(&pt);
      000305 80 0A            [24] 1755 	sjmp	00131$
      000307                       1756 00130$:
      000307 90r00r08         [24] 1757 	mov	dptr,#_pt
      00030A E4               [12] 1758 	clr	a
      00030B F0               [24] 1759 	movx	@dptr,a
      00030C A3               [24] 1760 	inc	dptr
      00030D F0               [24] 1761 	movx	@dptr,a
      00030E 75 82 03         [24] 1762 	mov	dpl,#0x03
      000311                       1763 00131$:
                                   1764 ;	../../../core/net/mac/xmac.c:327: }
      000311 02r00r00         [24] 1765 	ljmp	__sdcc_banked_ret
                                   1766 ;------------------------------------------------------------
                                   1767 ;Allocation info for local variables in function 'register_encounter'
                                   1768 ;------------------------------------------------------------
                                   1769 ;time                      Allocated to stack - sp -7
                                   1770 ;neighbor                  Allocated to stack - sp -2
                                   1771 ;e                         Allocated to registers r5 r6 r7 
                                   1772 ;------------------------------------------------------------
                                   1773 ;	../../../core/net/mac/xmac.c:391: register_encounter(const rimeaddr_t *neighbor, rtimer_clock_t time)
                                   1774 ;	-----------------------------------------
                                   1775 ;	 function register_encounter
                                   1776 ;	-----------------------------------------
      000314                       1777 _register_encounter:
      000314 C0 82            [24] 1778 	push	dpl
      000316 C0 83            [24] 1779 	push	dph
      000318 C0 F0            [24] 1780 	push	b
                                   1781 ;	../../../core/net/mac/xmac.c:396: for(e = list_head(encounter_list); e != NULL; e = list_item_next(e)) {
      00031A 90r00r10         [24] 1782 	mov	dptr,#_encounter_list
      00031D E0               [24] 1783 	movx	a,@dptr
      00031E FA               [12] 1784 	mov	r2,a
      00031F A3               [24] 1785 	inc	dptr
      000320 E0               [24] 1786 	movx	a,@dptr
      000321 FB               [12] 1787 	mov	r3,a
      000322 A3               [24] 1788 	inc	dptr
      000323 E0               [24] 1789 	movx	a,@dptr
      000324 FC               [12] 1790 	mov	r4,a
      000325 8A 82            [24] 1791 	mov	dpl,r2
      000327 8B 83            [24] 1792 	mov	dph,r3
      000329 8C F0            [24] 1793 	mov	b,r4
      00032B 78r00            [12] 1794 	mov	r0,#_list_head
      00032D 79s00            [12] 1795 	mov	r1,#(_list_head >> 8)
      00032F 7As00            [12] 1796 	mov	r2,#(_list_head >> 16)
      000331 12r00r00         [24] 1797 	lcall	__sdcc_banked_call
      000334 AA 82            [24] 1798 	mov	r2,dpl
      000336 AB 83            [24] 1799 	mov	r3,dph
      000338 AC F0            [24] 1800 	mov	r4,b
      00033A                       1801 00109$:
      00033A EA               [12] 1802 	mov	a,r2
      00033B 4B               [12] 1803 	orl	a,r3
      00033C 70 03            [24] 1804 	jnz	00138$
      00033E 02r03rC4         [24] 1805 	ljmp	00103$
      000341                       1806 00138$:
                                   1807 ;	../../../core/net/mac/xmac.c:397: if(rimeaddr_cmp(neighbor, &e->neighbor)) {
      000341 74 03            [12] 1808 	mov	a,#0x03
      000343 2A               [12] 1809 	add	a,r2
      000344 FD               [12] 1810 	mov	r5,a
      000345 E4               [12] 1811 	clr	a
      000346 3B               [12] 1812 	addc	a,r3
      000347 FE               [12] 1813 	mov	r6,a
      000348 8C 07            [24] 1814 	mov	ar7,r4
      00034A C0 04            [24] 1815 	push	ar4
      00034C C0 03            [24] 1816 	push	ar3
      00034E C0 02            [24] 1817 	push	ar2
      000350 C0 05            [24] 1818 	push	ar5
      000352 C0 06            [24] 1819 	push	ar6
      000354 C0 07            [24] 1820 	push	ar7
      000356 E5 81            [12] 1821 	mov	a,sp
      000358 24 F8            [12] 1822 	add	a,#0xf8
      00035A F8               [12] 1823 	mov	r0,a
      00035B 86 82            [24] 1824 	mov	dpl,@r0
      00035D 08               [12] 1825 	inc	r0
      00035E 86 83            [24] 1826 	mov	dph,@r0
      000360 08               [12] 1827 	inc	r0
      000361 86 F0            [24] 1828 	mov	b,@r0
      000363 78r00            [12] 1829 	mov	r0,#_rimeaddr_cmp
      000365 79s00            [12] 1830 	mov	r1,#(_rimeaddr_cmp >> 8)
      000367 7As00            [12] 1831 	mov	r2,#(_rimeaddr_cmp >> 16)
      000369 12r00r00         [24] 1832 	lcall	__sdcc_banked_call
      00036C AE 82            [24] 1833 	mov	r6,dpl
      00036E AF 83            [24] 1834 	mov	r7,dph
      000370 15 81            [12] 1835 	dec	sp
      000372 15 81            [12] 1836 	dec	sp
      000374 15 81            [12] 1837 	dec	sp
      000376 D0 02            [24] 1838 	pop	ar2
      000378 D0 03            [24] 1839 	pop	ar3
      00037A D0 04            [24] 1840 	pop	ar4
      00037C EE               [12] 1841 	mov	a,r6
      00037D 4F               [12] 1842 	orl	a,r7
      00037E 60 20            [24] 1843 	jz	00110$
                                   1844 ;	../../../core/net/mac/xmac.c:398: e->time = time;
      000380 74 0B            [12] 1845 	mov	a,#0x0b
      000382 2A               [12] 1846 	add	a,r2
      000383 FD               [12] 1847 	mov	r5,a
      000384 E4               [12] 1848 	clr	a
      000385 3B               [12] 1849 	addc	a,r3
      000386 FE               [12] 1850 	mov	r6,a
      000387 8C 07            [24] 1851 	mov	ar7,r4
      000389 8D 82            [24] 1852 	mov	dpl,r5
      00038B 8E 83            [24] 1853 	mov	dph,r6
      00038D 8F F0            [24] 1854 	mov	b,r7
      00038F E5 81            [12] 1855 	mov	a,sp
      000391 24 F9            [12] 1856 	add	a,#0xf9
      000393 F8               [12] 1857 	mov	r0,a
      000394 E6               [12] 1858 	mov	a,@r0
      000395 12r00r00         [24] 1859 	lcall	__gptrput
      000398 A3               [24] 1860 	inc	dptr
      000399 08               [12] 1861 	inc	r0
      00039A E6               [12] 1862 	mov	a,@r0
      00039B 12r00r00         [24] 1863 	lcall	__gptrput
                                   1864 ;	../../../core/net/mac/xmac.c:399: break;
      00039E 80 24            [24] 1865 	sjmp	00103$
      0003A0                       1866 00110$:
                                   1867 ;	../../../core/net/mac/xmac.c:396: for(e = list_head(encounter_list); e != NULL; e = list_item_next(e)) {
      0003A0 8A 05            [24] 1868 	mov	ar5,r2
      0003A2 8B 06            [24] 1869 	mov	ar6,r3
      0003A4 8C 07            [24] 1870 	mov	ar7,r4
      0003A6 8D 82            [24] 1871 	mov	dpl,r5
      0003A8 8E 83            [24] 1872 	mov	dph,r6
      0003AA 8F F0            [24] 1873 	mov	b,r7
      0003AC 78r00            [12] 1874 	mov	r0,#_list_item_next
      0003AE 79s00            [12] 1875 	mov	r1,#(_list_item_next >> 8)
      0003B0 7As00            [12] 1876 	mov	r2,#(_list_item_next >> 16)
      0003B2 12r00r00         [24] 1877 	lcall	__sdcc_banked_call
      0003B5 AD 82            [24] 1878 	mov	r5,dpl
      0003B7 AE 83            [24] 1879 	mov	r6,dph
      0003B9 AF F0            [24] 1880 	mov	r7,b
      0003BB 8D 02            [24] 1881 	mov	ar2,r5
      0003BD 8E 03            [24] 1882 	mov	ar3,r6
      0003BF 8F 04            [24] 1883 	mov	ar4,r7
      0003C1 02r03r3A         [24] 1884 	ljmp	00109$
      0003C4                       1885 00103$:
                                   1886 ;	../../../core/net/mac/xmac.c:403: if(e == NULL) {
      0003C4 EA               [12] 1887 	mov	a,r2
      0003C5 4B               [12] 1888 	orl	a,r3
      0003C6 60 03            [24] 1889 	jz	00140$
      0003C8 02r04r65         [24] 1890 	ljmp	00111$
      0003CB                       1891 00140$:
                                   1892 ;	../../../core/net/mac/xmac.c:404: e = memb_alloc(&encounter_memb);
      0003CB 90r00r13         [24] 1893 	mov	dptr,#_encounter_memb
      0003CE 75 F0 00         [24] 1894 	mov	b,#0x00
      0003D1 78r00            [12] 1895 	mov	r0,#_memb_alloc
      0003D3 79s00            [12] 1896 	mov	r1,#(_memb_alloc >> 8)
      0003D5 7As00            [12] 1897 	mov	r2,#(_memb_alloc >> 16)
      0003D7 12r00r00         [24] 1898 	lcall	__sdcc_banked_call
      0003DA AD 82            [24] 1899 	mov	r5,dpl
      0003DC AE 83            [24] 1900 	mov	r6,dph
      0003DE AF F0            [24] 1901 	mov	r7,b
                                   1902 ;	../../../core/net/mac/xmac.c:405: if(e == NULL) {
      0003E0 ED               [12] 1903 	mov	a,r5
      0003E1 4E               [12] 1904 	orl	a,r6
      0003E2 70 03            [24] 1905 	jnz	00105$
                                   1906 ;	../../../core/net/mac/xmac.c:407: return;
      0003E4 02r04r65         [24] 1907 	ljmp	00111$
      0003E7                       1908 00105$:
                                   1909 ;	../../../core/net/mac/xmac.c:409: rimeaddr_copy(&e->neighbor, neighbor);
      0003E7 74 03            [12] 1910 	mov	a,#0x03
      0003E9 2D               [12] 1911 	add	a,r5
      0003EA FA               [12] 1912 	mov	r2,a
      0003EB E4               [12] 1913 	clr	a
      0003EC 3E               [12] 1914 	addc	a,r6
      0003ED FB               [12] 1915 	mov	r3,a
      0003EE 8F 04            [24] 1916 	mov	ar4,r7
      0003F0 C0 07            [24] 1917 	push	ar7
      0003F2 C0 06            [24] 1918 	push	ar6
      0003F4 C0 05            [24] 1919 	push	ar5
      0003F6 E5 81            [12] 1920 	mov	a,sp
      0003F8 24 FB            [12] 1921 	add	a,#0xfb
      0003FA F8               [12] 1922 	mov	r0,a
      0003FB E6               [12] 1923 	mov	a,@r0
      0003FC C0 E0            [24] 1924 	push	acc
      0003FE 08               [12] 1925 	inc	r0
      0003FF E6               [12] 1926 	mov	a,@r0
      000400 C0 E0            [24] 1927 	push	acc
      000402 08               [12] 1928 	inc	r0
      000403 E6               [12] 1929 	mov	a,@r0
      000404 C0 E0            [24] 1930 	push	acc
      000406 8A 82            [24] 1931 	mov	dpl,r2
      000408 8B 83            [24] 1932 	mov	dph,r3
      00040A 8C F0            [24] 1933 	mov	b,r4
      00040C 78r00            [12] 1934 	mov	r0,#_rimeaddr_copy
      00040E 79s00            [12] 1935 	mov	r1,#(_rimeaddr_copy >> 8)
      000410 7As00            [12] 1936 	mov	r2,#(_rimeaddr_copy >> 16)
      000412 12r00r00         [24] 1937 	lcall	__sdcc_banked_call
      000415 15 81            [12] 1938 	dec	sp
      000417 15 81            [12] 1939 	dec	sp
      000419 15 81            [12] 1940 	dec	sp
      00041B D0 05            [24] 1941 	pop	ar5
      00041D D0 06            [24] 1942 	pop	ar6
      00041F D0 07            [24] 1943 	pop	ar7
                                   1944 ;	../../../core/net/mac/xmac.c:410: e->time = time;
      000421 74 0B            [12] 1945 	mov	a,#0x0b
      000423 2D               [12] 1946 	add	a,r5
      000424 FA               [12] 1947 	mov	r2,a
      000425 E4               [12] 1948 	clr	a
      000426 3E               [12] 1949 	addc	a,r6
      000427 FB               [12] 1950 	mov	r3,a
      000428 8F 04            [24] 1951 	mov	ar4,r7
      00042A 8A 82            [24] 1952 	mov	dpl,r2
      00042C 8B 83            [24] 1953 	mov	dph,r3
      00042E 8C F0            [24] 1954 	mov	b,r4
      000430 E5 81            [12] 1955 	mov	a,sp
      000432 24 F9            [12] 1956 	add	a,#0xf9
      000434 F8               [12] 1957 	mov	r0,a
      000435 E6               [12] 1958 	mov	a,@r0
      000436 12r00r00         [24] 1959 	lcall	__gptrput
      000439 A3               [24] 1960 	inc	dptr
      00043A 08               [12] 1961 	inc	r0
      00043B E6               [12] 1962 	mov	a,@r0
      00043C 12r00r00         [24] 1963 	lcall	__gptrput
                                   1964 ;	../../../core/net/mac/xmac.c:411: list_add(encounter_list, e);
      00043F 90r00r10         [24] 1965 	mov	dptr,#_encounter_list
      000442 E0               [24] 1966 	movx	a,@dptr
      000443 FA               [12] 1967 	mov	r2,a
      000444 A3               [24] 1968 	inc	dptr
      000445 E0               [24] 1969 	movx	a,@dptr
      000446 FB               [12] 1970 	mov	r3,a
      000447 A3               [24] 1971 	inc	dptr
      000448 E0               [24] 1972 	movx	a,@dptr
      000449 FC               [12] 1973 	mov	r4,a
      00044A C0 05            [24] 1974 	push	ar5
      00044C C0 06            [24] 1975 	push	ar6
      00044E C0 07            [24] 1976 	push	ar7
      000450 8A 82            [24] 1977 	mov	dpl,r2
      000452 8B 83            [24] 1978 	mov	dph,r3
      000454 8C F0            [24] 1979 	mov	b,r4
      000456 78r00            [12] 1980 	mov	r0,#_list_add
      000458 79s00            [12] 1981 	mov	r1,#(_list_add >> 8)
      00045A 7As00            [12] 1982 	mov	r2,#(_list_add >> 16)
      00045C 12r00r00         [24] 1983 	lcall	__sdcc_banked_call
      00045F 15 81            [12] 1984 	dec	sp
      000461 15 81            [12] 1985 	dec	sp
      000463 15 81            [12] 1986 	dec	sp
      000465                       1987 00111$:
                                   1988 ;	../../../core/net/mac/xmac.c:413: }
      000465 15 81            [12] 1989 	dec	sp
      000467 15 81            [12] 1990 	dec	sp
      000469 15 81            [12] 1991 	dec	sp
      00046B 02r00r00         [24] 1992 	ljmp	__sdcc_banked_ret
                                   1993 ;------------------------------------------------------------
                                   1994 ;Allocation info for local variables in function 'detect_ack'
                                   1995 ;------------------------------------------------------------
                                   1996 ;wt                        Allocated to registers r5 r6 
                                   1997 ;ack_received              Allocated to registers r7 
                                   1998 ;len                       Allocated to registers r4 r5 
                                   1999 ;ackbuf                    Allocated to stack - sp -4
                                   2000 ;------------------------------------------------------------
                                   2001 ;	../../../core/net/mac/xmac.c:417: detect_ack(void)
                                   2002 ;	-----------------------------------------
                                   2003 ;	 function detect_ack
                                   2004 ;	-----------------------------------------
      00046E                       2005 _detect_ack:
      00046E E5 81            [12] 2006 	mov	a,sp
      000470 24 05            [12] 2007 	add	a,#0x05
      000472 F5 81            [12] 2008 	mov	sp,a
                                   2009 ;	../../../core/net/mac/xmac.c:423: uint8_t ack_received = 0;
      000474 7F 00            [12] 2010 	mov	r7,#0x00
                                   2011 ;	../../../core/net/mac/xmac.c:425: wt = RTIMER_NOW();
      000476 AD E2            [24] 2012 	mov	r5,_T1CNTL
      000478 7E 00            [12] 2013 	mov	r6,#0x00
      00047A AB E3            [24] 2014 	mov	r3,_T1CNTH
      00047C 8B 04            [24] 2015 	mov	ar4,r3
      00047E E4               [12] 2016 	clr	a
      00047F 2D               [12] 2017 	add	a,r5
      000480 FD               [12] 2018 	mov	r5,a
      000481 EC               [12] 2019 	mov	a,r4
      000482 3E               [12] 2020 	addc	a,r6
      000483 FE               [12] 2021 	mov	r6,a
                                   2022 ;	../../../core/net/mac/xmac.c:426: leds_on(LEDS_GREEN);
      000484 75 82 02         [24] 2023 	mov	dpl,#0x02
      000487 C0 07            [24] 2024 	push	ar7
      000489 C0 06            [24] 2025 	push	ar6
      00048B C0 05            [24] 2026 	push	ar5
      00048D 78r00            [12] 2027 	mov	r0,#_leds_on
      00048F 79s00            [12] 2028 	mov	r1,#(_leds_on >> 8)
      000491 7As00            [12] 2029 	mov	r2,#(_leds_on >> 16)
      000493 12r00r00         [24] 2030 	lcall	__sdcc_banked_call
      000496 D0 05            [24] 2031 	pop	ar5
      000498 D0 06            [24] 2032 	pop	ar6
      00049A D0 07            [24] 2033 	pop	ar7
                                   2034 ;	../../../core/net/mac/xmac.c:427: while(RTIMER_CLOCK_LT(RTIMER_NOW(), wt + INTER_PACKET_INTERVAL)) { }
      00049C                       2035 00101$:
      00049C C0 07            [24] 2036 	push	ar7
      00049E AB E2            [24] 2037 	mov	r3,_T1CNTL
      0004A0 7C 00            [12] 2038 	mov	r4,#0x00
      0004A2 AA E3            [24] 2039 	mov	r2,_T1CNTH
      0004A4 8A 07            [24] 2040 	mov	ar7,r2
      0004A6 E4               [12] 2041 	clr	a
      0004A7 2B               [12] 2042 	add	a,r3
      0004A8 FB               [12] 2043 	mov	r3,a
      0004A9 EF               [12] 2044 	mov	a,r7
      0004AA 3C               [12] 2045 	addc	a,r4
      0004AB FC               [12] 2046 	mov	r4,a
      0004AC 8D 02            [24] 2047 	mov	ar2,r5
      0004AE 8E 07            [24] 2048 	mov	ar7,r6
      0004B0 74 03            [12] 2049 	mov	a,#0x03
      0004B2 2A               [12] 2050 	add	a,r2
      0004B3 FA               [12] 2051 	mov	r2,a
      0004B4 E4               [12] 2052 	clr	a
      0004B5 3F               [12] 2053 	addc	a,r7
      0004B6 FF               [12] 2054 	mov	r7,a
      0004B7 EB               [12] 2055 	mov	a,r3
      0004B8 C3               [12] 2056 	clr	c
      0004B9 9A               [12] 2057 	subb	a,r2
      0004BA EC               [12] 2058 	mov	a,r4
      0004BB 9F               [12] 2059 	subb	a,r7
      0004BC D0 07            [24] 2060 	pop	ar7
      0004BE 20 E7 DB         [24] 2061 	jb	acc.7,00101$
                                   2062 ;	../../../core/net/mac/xmac.c:428: leds_off(LEDS_GREEN);
      0004C1 75 82 02         [24] 2063 	mov	dpl,#0x02
      0004C4 C0 07            [24] 2064 	push	ar7
      0004C6 78r00            [12] 2065 	mov	r0,#_leds_off
      0004C8 79s00            [12] 2066 	mov	r1,#(_leds_off >> 8)
      0004CA 7As00            [12] 2067 	mov	r2,#(_leds_off >> 16)
      0004CC 12r00r00         [24] 2068 	lcall	__sdcc_banked_call
                                   2069 ;	../../../core/net/mac/xmac.c:430: if((NETSTACK_RADIO.receiving_packet() ||
      0004CF 90r00r12         [24] 2070 	mov	dptr,#(_cc2530_rf_driver + 0x0012)
      0004D2 E4               [12] 2071 	clr	a
      0004D3 93               [24] 2072 	movc	a,@a+dptr
      0004D4 FC               [12] 2073 	mov	r4,a
      0004D5 A3               [24] 2074 	inc	dptr
      0004D6 E4               [12] 2075 	clr	a
      0004D7 93               [24] 2076 	movc	a,@a+dptr
      0004D8 FD               [12] 2077 	mov	r5,a
      0004D9 A3               [24] 2078 	inc	dptr
      0004DA E4               [12] 2079 	clr	a
      0004DB 93               [24] 2080 	movc	a,@a+dptr
      0004DC FE               [12] 2081 	mov	r6,a
      0004DD C0 06            [24] 2082 	push	ar6
      0004DF C0 04            [24] 2083 	push	ar4
      0004E1 C0 05            [24] 2084 	push	ar5
      0004E3 C0 06            [24] 2085 	push	ar6
      0004E5 D0 02            [24] 2086 	pop	ar2
      0004E7 D0 01            [24] 2087 	pop	ar1
      0004E9 D0 00            [24] 2088 	pop	ar0
      0004EB 12r00r00         [24] 2089 	lcall	__sdcc_banked_call
      0004EE AC 82            [24] 2090 	mov	r4,dpl
      0004F0 AD 83            [24] 2091 	mov	r5,dph
      0004F2 D0 06            [24] 2092 	pop	ar6
      0004F4 D0 07            [24] 2093 	pop	ar7
      0004F6 EC               [12] 2094 	mov	a,r4
      0004F7 4D               [12] 2095 	orl	a,r5
      0004F8 70 5D            [24] 2096 	jnz	00109$
                                   2097 ;	../../../core/net/mac/xmac.c:431: NETSTACK_RADIO.pending_packet() ||
      0004FA 90r00r15         [24] 2098 	mov	dptr,#(_cc2530_rf_driver + 0x0015)
      0004FD E4               [12] 2099 	clr	a
      0004FE 93               [24] 2100 	movc	a,@a+dptr
      0004FF FC               [12] 2101 	mov	r4,a
      000500 A3               [24] 2102 	inc	dptr
      000501 E4               [12] 2103 	clr	a
      000502 93               [24] 2104 	movc	a,@a+dptr
      000503 FD               [12] 2105 	mov	r5,a
      000504 A3               [24] 2106 	inc	dptr
      000505 E4               [12] 2107 	clr	a
      000506 93               [24] 2108 	movc	a,@a+dptr
      000507 FE               [12] 2109 	mov	r6,a
      000508 C0 07            [24] 2110 	push	ar7
      00050A C0 06            [24] 2111 	push	ar6
      00050C C0 04            [24] 2112 	push	ar4
      00050E C0 05            [24] 2113 	push	ar5
      000510 C0 06            [24] 2114 	push	ar6
      000512 D0 02            [24] 2115 	pop	ar2
      000514 D0 01            [24] 2116 	pop	ar1
      000516 D0 00            [24] 2117 	pop	ar0
      000518 12r00r00         [24] 2118 	lcall	__sdcc_banked_call
      00051B AC 82            [24] 2119 	mov	r4,dpl
      00051D AD 83            [24] 2120 	mov	r5,dph
      00051F D0 06            [24] 2121 	pop	ar6
      000521 D0 07            [24] 2122 	pop	ar7
      000523 EC               [12] 2123 	mov	a,r4
      000524 4D               [12] 2124 	orl	a,r5
      000525 70 30            [24] 2125 	jnz	00109$
                                   2126 ;	../../../core/net/mac/xmac.c:432: NETSTACK_RADIO.channel_clear() == 0)) {
      000527 90r00r0F         [24] 2127 	mov	dptr,#(_cc2530_rf_driver + 0x000f)
      00052A E4               [12] 2128 	clr	a
      00052B 93               [24] 2129 	movc	a,@a+dptr
      00052C FC               [12] 2130 	mov	r4,a
      00052D A3               [24] 2131 	inc	dptr
      00052E E4               [12] 2132 	clr	a
      00052F 93               [24] 2133 	movc	a,@a+dptr
      000530 FD               [12] 2134 	mov	r5,a
      000531 A3               [24] 2135 	inc	dptr
      000532 E4               [12] 2136 	clr	a
      000533 93               [24] 2137 	movc	a,@a+dptr
      000534 FE               [12] 2138 	mov	r6,a
      000535 C0 07            [24] 2139 	push	ar7
      000537 C0 06            [24] 2140 	push	ar6
      000539 C0 04            [24] 2141 	push	ar4
      00053B C0 05            [24] 2142 	push	ar5
      00053D C0 06            [24] 2143 	push	ar6
      00053F D0 02            [24] 2144 	pop	ar2
      000541 D0 01            [24] 2145 	pop	ar1
      000543 D0 00            [24] 2146 	pop	ar0
      000545 12r00r00         [24] 2147 	lcall	__sdcc_banked_call
      000548 AC 82            [24] 2148 	mov	r4,dpl
      00054A AD 83            [24] 2149 	mov	r5,dph
      00054C D0 06            [24] 2150 	pop	ar6
      00054E D0 07            [24] 2151 	pop	ar7
      000550 EC               [12] 2152 	mov	a,r4
      000551 4D               [12] 2153 	orl	a,r5
      000552 60 03            [24] 2154 	jz	00160$
      000554 02r05rE0         [24] 2155 	ljmp	00110$
      000557                       2156 00160$:
      000557                       2157 00109$:
                                   2158 ;	../../../core/net/mac/xmac.c:436: wt = RTIMER_NOW();
      000557 AD E2            [24] 2159 	mov	r5,_T1CNTL
      000559 7E 00            [12] 2160 	mov	r6,#0x00
      00055B AB E3            [24] 2161 	mov	r3,_T1CNTH
      00055D 8B 04            [24] 2162 	mov	ar4,r3
      00055F E4               [12] 2163 	clr	a
      000560 FB               [12] 2164 	mov	r3,a
      000561 2D               [12] 2165 	add	a,r5
      000562 FD               [12] 2166 	mov	r5,a
      000563 EC               [12] 2167 	mov	a,r4
      000564 3E               [12] 2168 	addc	a,r6
      000565 FE               [12] 2169 	mov	r6,a
                                   2170 ;	../../../core/net/mac/xmac.c:437: while(RTIMER_CLOCK_LT(RTIMER_NOW(), wt + AFTER_ACK_DETECTECT_WAIT_TIME)) { }
      000566                       2171 00104$:
      000566 C0 07            [24] 2172 	push	ar7
      000568 AB E2            [24] 2173 	mov	r3,_T1CNTL
      00056A 7C 00            [12] 2174 	mov	r4,#0x00
      00056C AA E3            [24] 2175 	mov	r2,_T1CNTH
      00056E 8A 07            [24] 2176 	mov	ar7,r2
      000570 E4               [12] 2177 	clr	a
      000571 2B               [12] 2178 	add	a,r3
      000572 FB               [12] 2179 	mov	r3,a
      000573 EF               [12] 2180 	mov	a,r7
      000574 3C               [12] 2181 	addc	a,r4
      000575 FC               [12] 2182 	mov	r4,a
      000576 8D 02            [24] 2183 	mov	ar2,r5
      000578 8E 07            [24] 2184 	mov	ar7,r6
      00057A 74 0F            [12] 2185 	mov	a,#0x0f
      00057C 2A               [12] 2186 	add	a,r2
      00057D FA               [12] 2187 	mov	r2,a
      00057E E4               [12] 2188 	clr	a
      00057F 3F               [12] 2189 	addc	a,r7
      000580 FF               [12] 2190 	mov	r7,a
      000581 EB               [12] 2191 	mov	a,r3
      000582 C3               [12] 2192 	clr	c
      000583 9A               [12] 2193 	subb	a,r2
      000584 EC               [12] 2194 	mov	a,r4
      000585 9F               [12] 2195 	subb	a,r7
      000586 D0 07            [24] 2196 	pop	ar7
      000588 20 E7 DB         [24] 2197 	jb	acc.7,00104$
                                   2198 ;	../../../core/net/mac/xmac.c:439: len = NETSTACK_RADIO.read(ackbuf, ACK_LEN);
      00058B C0 07            [24] 2199 	push	ar7
      00058D 90r00r0C         [24] 2200 	mov	dptr,#(_cc2530_rf_driver + 0x000c)
      000590 E4               [12] 2201 	clr	a
      000591 93               [24] 2202 	movc	a,@a+dptr
      000592 FC               [12] 2203 	mov	r4,a
      000593 A3               [24] 2204 	inc	dptr
      000594 E4               [12] 2205 	clr	a
      000595 93               [24] 2206 	movc	a,@a+dptr
      000596 FD               [12] 2207 	mov	r5,a
      000597 A3               [24] 2208 	inc	dptr
      000598 E4               [12] 2209 	clr	a
      000599 93               [24] 2210 	movc	a,@a+dptr
      00059A FE               [12] 2211 	mov	r6,a
      00059B E5 81            [12] 2212 	mov	a,sp
      00059D 24 FB            [12] 2213 	add	a,#0xfb
      00059F FA               [12] 2214 	mov	r2,a
      0005A0 7B 00            [12] 2215 	mov	r3,#0x00
      0005A2 7F 40            [12] 2216 	mov	r7,#0x40
      0005A4 C0 07            [24] 2217 	push	ar7
      0005A6 C0 06            [24] 2218 	push	ar6
      0005A8 74 03            [12] 2219 	mov	a,#0x03
      0005AA C0 E0            [24] 2220 	push	acc
      0005AC E4               [12] 2221 	clr	a
      0005AD C0 E0            [24] 2222 	push	acc
      0005AF C0 04            [24] 2223 	push	ar4
      0005B1 C0 05            [24] 2224 	push	ar5
      0005B3 C0 06            [24] 2225 	push	ar6
      0005B5 8A 82            [24] 2226 	mov	dpl,r2
      0005B7 8B 83            [24] 2227 	mov	dph,r3
      0005B9 8F F0            [24] 2228 	mov	b,r7
      0005BB D0 02            [24] 2229 	pop	ar2
      0005BD D0 01            [24] 2230 	pop	ar1
      0005BF D0 00            [24] 2231 	pop	ar0
      0005C1 12r00r00         [24] 2232 	lcall	__sdcc_banked_call
      0005C4 AC 82            [24] 2233 	mov	r4,dpl
      0005C6 AD 83            [24] 2234 	mov	r5,dph
      0005C8 15 81            [12] 2235 	dec	sp
      0005CA 15 81            [12] 2236 	dec	sp
      0005CC D0 06            [24] 2237 	pop	ar6
      0005CE D0 07            [24] 2238 	pop	ar7
                                   2239 ;	../../../core/net/mac/xmac.c:440: if(len == ACK_LEN) {
      0005D0 BC 03 05         [24] 2240 	cjne	r4,#0x03,00162$
      0005D3 BD 00 02         [24] 2241 	cjne	r5,#0x00,00162$
      0005D6 80 04            [24] 2242 	sjmp	00163$
      0005D8                       2243 00162$:
      0005D8 D0 07            [24] 2244 	pop	ar7
      0005DA 80 04            [24] 2245 	sjmp	00110$
      0005DC                       2246 00163$:
      0005DC D0 07            [24] 2247 	pop	ar7
                                   2248 ;	../../../core/net/mac/xmac.c:441: ack_received = 1;
      0005DE 7F 01            [12] 2249 	mov	r7,#0x01
      0005E0                       2250 00110$:
                                   2251 ;	../../../core/net/mac/xmac.c:444: if(ack_received) {
      0005E0 EF               [12] 2252 	mov	a,r7
      0005E1 60 10            [24] 2253 	jz	00114$
                                   2254 ;	../../../core/net/mac/xmac.c:445: leds_toggle(LEDS_RED);
      0005E3 75 82 01         [24] 2255 	mov	dpl,#0x01
      0005E6 C0 07            [24] 2256 	push	ar7
      0005E8 78r00            [12] 2257 	mov	r0,#_leds_toggle
      0005EA 79s00            [12] 2258 	mov	r1,#(_leds_toggle >> 8)
      0005EC 7As00            [12] 2259 	mov	r2,#(_leds_toggle >> 16)
      0005EE 12r00r00         [24] 2260 	lcall	__sdcc_banked_call
      0005F1 D0 07            [24] 2261 	pop	ar7
      0005F3                       2262 00114$:
                                   2263 ;	../../../core/net/mac/xmac.c:447: return ack_received;
      0005F3 7E 00            [12] 2264 	mov	r6,#0x00
      0005F5 8F 82            [24] 2265 	mov	dpl,r7
      0005F7 8E 83            [24] 2266 	mov	dph,r6
                                   2267 ;	../../../core/net/mac/xmac.c:448: }
      0005F9 E5 81            [12] 2268 	mov	a,sp
      0005FB 24 FB            [12] 2269 	add	a,#0xfb
      0005FD F5 81            [12] 2270 	mov	sp,a
      0005FF 02r00r00         [24] 2271 	ljmp	__sdcc_banked_ret
                                   2272 ;------------------------------------------------------------
                                   2273 ;Allocation info for local variables in function 'send_packet'
                                   2274 ;------------------------------------------------------------
                                   2275 ;t0                        Allocated to stack - sp -69
                                   2276 ;t                         Allocated to stack - sp -67
                                   2277 ;encounter_time            Allocated to registers 
                                   2278 ;strobes                   Allocated to registers 
                                   2279 ;ret                       Allocated to registers 
                                   2280 ;got_strobe_ack            Allocated to stack - sp -65
                                   2281 ;got_ack                   Allocated to stack - sp -64
                                   2282 ;strobe                    Allocated to stack - sp -63
                                   2283 ;strobe_len                Allocated to stack - sp -13
                                   2284 ;len                       Allocated to stack - sp -11
                                   2285 ;is_broadcast              Allocated to stack - sp -9
                                   2286 ;e                         Allocated to stack - sp -7
                                   2287 ;packet                    Allocated to stack - sp -4
                                   2288 ;is_already_streaming      Allocated to stack - sp -1
                                   2289 ;collisions                Allocated to registers r3 
                                   2290 ;neighbor                  Allocated to registers r7 r6 r3 
                                   2291 ;wait                      Allocated to registers r5 r3 
                                   2292 ;now                       Allocated to registers r2 r4 
                                   2293 ;expected                  Allocated to registers r6 r7 
                                   2294 ;sloc0                     Allocated to stack - sp -72
                                   2295 ;sloc1                     Allocated to stack - sp -71
                                   2296 ;------------------------------------------------------------
                                   2297 ;	../../../core/net/mac/xmac.c:451: send_packet(void)
                                   2298 ;	-----------------------------------------
                                   2299 ;	 function send_packet
                                   2300 ;	-----------------------------------------
      000602                       2301 _send_packet:
      000602 E5 81            [12] 2302 	mov	a,sp
      000604 24 49            [12] 2303 	add	a,#0x49
                                   2304 ;	../../../core/net/mac/xmac.c:461: uint8_t got_strobe_ack = 0;
      000606 F5 81            [12] 2305 	mov	sp,a
      000608 24 BF            [12] 2306 	add	a,#0xbf
      00060A F8               [12] 2307 	mov	r0,a
      00060B 76 00            [12] 2308 	mov	@r0,#0x00
                                   2309 ;	../../../core/net/mac/xmac.c:462: uint8_t got_ack = 0;
      00060D E5 81            [12] 2310 	mov	a,sp
      00060F 24 C0            [12] 2311 	add	a,#0xc0
      000611 F8               [12] 2312 	mov	r0,a
      000612 76 00            [12] 2313 	mov	@r0,#0x00
                                   2314 ;	../../../core/net/mac/xmac.c:465: int is_broadcast = 0;
      000614 E5 81            [12] 2315 	mov	a,sp
      000616 24 F7            [12] 2316 	add	a,#0xf7
      000618 F8               [12] 2317 	mov	r0,a
      000619 E4               [12] 2318 	clr	a
      00061A F6               [12] 2319 	mov	@r0,a
      00061B 08               [12] 2320 	inc	r0
      00061C F6               [12] 2321 	mov	@r0,a
                                   2322 ;	../../../core/net/mac/xmac.c:469: int is_already_streaming = 0;
      00061D A8 81            [24] 2323 	mov	r0,sp
      00061F 18               [12] 2324 	dec	r0
      000620 F6               [12] 2325 	mov	@r0,a
      000621 08               [12] 2326 	inc	r0
      000622 F6               [12] 2327 	mov	@r0,a
                                   2328 ;	../../../core/net/mac/xmac.c:473: packetbuf_set_addr(PACKETBUF_ADDR_SENDER, &rimeaddr_node_addr);
      000623 74r00            [12] 2329 	mov	a,#_rimeaddr_node_addr
      000625 C0 E0            [24] 2330 	push	acc
      000627 74s00            [12] 2331 	mov	a,#(_rimeaddr_node_addr >> 8)
      000629 C0 E0            [24] 2332 	push	acc
      00062B E4               [12] 2333 	clr	a
      00062C C0 E0            [24] 2334 	push	acc
      00062E 75 82 18         [24] 2335 	mov	dpl,#0x18
      000631 78r00            [12] 2336 	mov	r0,#_packetbuf_set_addr
      000633 79s00            [12] 2337 	mov	r1,#(_packetbuf_set_addr >> 8)
      000635 7As00            [12] 2338 	mov	r2,#(_packetbuf_set_addr >> 16)
      000637 12r00r00         [24] 2339 	lcall	__sdcc_banked_call
      00063A 15 81            [12] 2340 	dec	sp
      00063C 15 81            [12] 2341 	dec	sp
      00063E 15 81            [12] 2342 	dec	sp
                                   2343 ;	../../../core/net/mac/xmac.c:474: if(rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER), &rimeaddr_null)) {
      000640 75 82 19         [24] 2344 	mov	dpl,#0x19
      000643 78r00            [12] 2345 	mov	r0,#_packetbuf_addr
      000645 79s00            [12] 2346 	mov	r1,#(_packetbuf_addr >> 8)
      000647 7As00            [12] 2347 	mov	r2,#(_packetbuf_addr >> 16)
      000649 12r00r00         [24] 2348 	lcall	__sdcc_banked_call
      00064C AA 82            [24] 2349 	mov	r2,dpl
      00064E AB 83            [24] 2350 	mov	r3,dph
      000650 AE F0            [24] 2351 	mov	r6,b
      000652 74r00            [12] 2352 	mov	a,#_rimeaddr_null
      000654 C0 E0            [24] 2353 	push	acc
      000656 74s00            [12] 2354 	mov	a,#(_rimeaddr_null >> 8)
      000658 C0 E0            [24] 2355 	push	acc
      00065A 74 80            [12] 2356 	mov	a,#0x80
      00065C C0 E0            [24] 2357 	push	acc
      00065E 8A 82            [24] 2358 	mov	dpl,r2
      000660 8B 83            [24] 2359 	mov	dph,r3
      000662 8E F0            [24] 2360 	mov	b,r6
      000664 78r00            [12] 2361 	mov	r0,#_rimeaddr_cmp
      000666 79s00            [12] 2362 	mov	r1,#(_rimeaddr_cmp >> 8)
      000668 7As00            [12] 2363 	mov	r2,#(_rimeaddr_cmp >> 16)
      00066A 12r00r00         [24] 2364 	lcall	__sdcc_banked_call
      00066D AB 82            [24] 2365 	mov	r3,dpl
      00066F AE 83            [24] 2366 	mov	r6,dph
      000671 15 81            [12] 2367 	dec	sp
      000673 15 81            [12] 2368 	dec	sp
      000675 15 81            [12] 2369 	dec	sp
      000677 EB               [12] 2370 	mov	a,r3
      000678 4E               [12] 2371 	orl	a,r6
      000679 60 0A            [24] 2372 	jz	00102$
                                   2373 ;	../../../core/net/mac/xmac.c:475: is_broadcast = 1;
      00067B E5 81            [12] 2374 	mov	a,sp
      00067D 24 F7            [12] 2375 	add	a,#0xf7
      00067F F8               [12] 2376 	mov	r0,a
      000680 76 01            [12] 2377 	mov	@r0,#0x01
      000682 08               [12] 2378 	inc	r0
      000683 76 00            [12] 2379 	mov	@r0,#0x00
      000685                       2380 00102$:
                                   2381 ;	../../../core/net/mac/xmac.c:497: packetbuf_set_attr(PACKETBUF_ATTR_MAC_ACK, 1);
      000685 74 01            [12] 2382 	mov	a,#0x01
      000687 C0 E0            [24] 2383 	push	acc
      000689 E4               [12] 2384 	clr	a
      00068A C0 E0            [24] 2385 	push	acc
      00068C 75 82 0B         [24] 2386 	mov	dpl,#0x0b
      00068F 78r00            [12] 2387 	mov	r0,#_packetbuf_set_attr
      000691 79s00            [12] 2388 	mov	r1,#(_packetbuf_set_attr >> 8)
      000693 7As00            [12] 2389 	mov	r2,#(_packetbuf_set_attr >> 16)
      000695 12r00r00         [24] 2390 	lcall	__sdcc_banked_call
      000698 15 81            [12] 2391 	dec	sp
      00069A 15 81            [12] 2392 	dec	sp
                                   2393 ;	../../../core/net/mac/xmac.c:498: len = NETSTACK_FRAMER.create();
      00069C 90r00r00         [24] 2394 	mov	dptr,#_framer_802154
      00069F E4               [12] 2395 	clr	a
      0006A0 93               [24] 2396 	movc	a,@a+dptr
      0006A1 FA               [12] 2397 	mov	r2,a
      0006A2 A3               [24] 2398 	inc	dptr
      0006A3 E4               [12] 2399 	clr	a
      0006A4 93               [24] 2400 	movc	a,@a+dptr
      0006A5 FB               [12] 2401 	mov	r3,a
      0006A6 A3               [24] 2402 	inc	dptr
      0006A7 E4               [12] 2403 	clr	a
      0006A8 93               [24] 2404 	movc	a,@a+dptr
      0006A9 FE               [12] 2405 	mov	r6,a
      0006AA C0 06            [24] 2406 	push	ar6
      0006AC C0 02            [24] 2407 	push	ar2
      0006AE C0 03            [24] 2408 	push	ar3
      0006B0 C0 06            [24] 2409 	push	ar6
      0006B2 D0 02            [24] 2410 	pop	ar2
      0006B4 D0 01            [24] 2411 	pop	ar1
      0006B6 D0 00            [24] 2412 	pop	ar0
      0006B8 12r00r00         [24] 2413 	lcall	__sdcc_banked_call
      0006BB AA 82            [24] 2414 	mov	r2,dpl
      0006BD AB 83            [24] 2415 	mov	r3,dph
      0006BF D0 06            [24] 2416 	pop	ar6
      0006C1 E5 81            [12] 2417 	mov	a,sp
      0006C3 24 F5            [12] 2418 	add	a,#0xf5
      0006C5 F8               [12] 2419 	mov	r0,a
      0006C6 A6 02            [24] 2420 	mov	@r0,ar2
      0006C8 08               [12] 2421 	inc	r0
      0006C9 A6 03            [24] 2422 	mov	@r0,ar3
                                   2423 ;	../../../core/net/mac/xmac.c:499: strobe_len = len + sizeof(struct xmac_hdr);
      0006CB E5 81            [12] 2424 	mov	a,sp
      0006CD 24 F5            [12] 2425 	add	a,#0xf5
      0006CF F8               [12] 2426 	mov	r0,a
      0006D0 E5 81            [12] 2427 	mov	a,sp
      0006D2 24 F3            [12] 2428 	add	a,#0xf3
      0006D4 F9               [12] 2429 	mov	r1,a
      0006D5 74 02            [12] 2430 	mov	a,#0x02
      0006D7 26               [12] 2431 	add	a,@r0
      0006D8 F7               [12] 2432 	mov	@r1,a
      0006D9 E4               [12] 2433 	clr	a
      0006DA 08               [12] 2434 	inc	r0
      0006DB 36               [12] 2435 	addc	a,@r0
      0006DC 09               [12] 2436 	inc	r1
      0006DD F7               [12] 2437 	mov	@r1,a
                                   2438 ;	../../../core/net/mac/xmac.c:500: if(len < 0 || strobe_len > (int)sizeof(strobe)) {
      0006DE E5 81            [12] 2439 	mov	a,sp
      0006E0 24 F5            [12] 2440 	add	a,#0xf5
      0006E2 F8               [12] 2441 	mov	r0,a
      0006E3 08               [12] 2442 	inc	r0
      0006E4 E6               [12] 2443 	mov	a,@r0
      0006E5 20 E7 15         [24] 2444 	jb	acc.7,00103$
      0006E8 E5 81            [12] 2445 	mov	a,sp
      0006EA 24 F3            [12] 2446 	add	a,#0xf3
      0006EC F8               [12] 2447 	mov	r0,a
      0006ED C3               [12] 2448 	clr	c
      0006EE 74 32            [12] 2449 	mov	a,#0x32
      0006F0 96               [12] 2450 	subb	a,@r0
      0006F1 74 80            [12] 2451 	mov	a,#(0x00 ^ 0x80)
      0006F3 08               [12] 2452 	inc	r0
      0006F4 86 F0            [24] 2453 	mov	b,@r0
      0006F6 63 F0 80         [24] 2454 	xrl	b,#0x80
      0006F9 95 F0            [12] 2455 	subb	a,b
      0006FB 50 06            [24] 2456 	jnc	00104$
      0006FD                       2457 00103$:
                                   2458 ;	../../../core/net/mac/xmac.c:503: return MAC_TX_ERR_FATAL;
      0006FD 90 00 05         [24] 2459 	mov	dptr,#0x0005
      000700 02r0Er35         [24] 2460 	ljmp	00170$
      000703                       2461 00104$:
                                   2462 ;	../../../core/net/mac/xmac.c:505: memcpy(strobe, packetbuf_hdrptr(), len);
      000703 78r00            [12] 2463 	mov	r0,#_packetbuf_hdrptr
      000705 79s00            [12] 2464 	mov	r1,#(_packetbuf_hdrptr >> 8)
      000707 7As00            [12] 2465 	mov	r2,#(_packetbuf_hdrptr >> 16)
      000709 12r00r00         [24] 2466 	lcall	__sdcc_banked_call
      00070C AA 82            [24] 2467 	mov	r2,dpl
      00070E AC 83            [24] 2468 	mov	r4,dph
      000710 AD F0            [24] 2469 	mov	r5,b
      000712 E5 81            [12] 2470 	mov	a,sp
      000714 24 B8            [12] 2471 	add	a,#0xb8
      000716 F8               [12] 2472 	mov	r0,a
      000717 E5 81            [12] 2473 	mov	a,sp
      000719 24 C1            [12] 2474 	add	a,#0xc1
      00071B F6               [12] 2475 	mov	@r0,a
      00071C E5 81            [12] 2476 	mov	a,sp
      00071E 24 B8            [12] 2477 	add	a,#0xb8
      000720 F8               [12] 2478 	mov	r0,a
      000721 86 03            [24] 2479 	mov	ar3,@r0
      000723 7E 00            [12] 2480 	mov	r6,#0x00
      000725 7F 40            [12] 2481 	mov	r7,#0x40
      000727 E5 81            [12] 2482 	mov	a,sp
      000729 24 F5            [12] 2483 	add	a,#0xf5
      00072B F8               [12] 2484 	mov	r0,a
      00072C E6               [12] 2485 	mov	a,@r0
      00072D C0 E0            [24] 2486 	push	acc
      00072F 08               [12] 2487 	inc	r0
      000730 E6               [12] 2488 	mov	a,@r0
      000731 C0 E0            [24] 2489 	push	acc
      000733 C0 02            [24] 2490 	push	ar2
      000735 C0 04            [24] 2491 	push	ar4
      000737 C0 05            [24] 2492 	push	ar5
      000739 8B 82            [24] 2493 	mov	dpl,r3
      00073B 8E 83            [24] 2494 	mov	dph,r6
      00073D 8F F0            [24] 2495 	mov	b,r7
      00073F 78r00            [12] 2496 	mov	r0,#___memcpy
      000741 79s00            [12] 2497 	mov	r1,#(___memcpy >> 8)
      000743 7As00            [12] 2498 	mov	r2,#(___memcpy >> 16)
      000745 12r00r00         [24] 2499 	lcall	__sdcc_banked_call
      000748 E5 81            [12] 2500 	mov	a,sp
      00074A 24 FB            [12] 2501 	add	a,#0xfb
                                   2502 ;	../../../core/net/mac/xmac.c:506: strobe[len] = DISPATCH; /* dispatch */
      00074C F5 81            [12] 2503 	mov	sp,a
      00074E 24 B8            [12] 2504 	add	a,#0xb8
      000750 F8               [12] 2505 	mov	r0,a
      000751 E5 81            [12] 2506 	mov	a,sp
      000753 24 F5            [12] 2507 	add	a,#0xf5
      000755 F9               [12] 2508 	mov	r1,a
      000756 E7               [12] 2509 	mov	a,@r1
      000757 26               [12] 2510 	add	a,@r0
      000758 F8               [12] 2511 	mov	r0,a
      000759 76 00            [12] 2512 	mov	@r0,#0x00
                                   2513 ;	../../../core/net/mac/xmac.c:507: strobe[len + 1] = TYPE_STROBE; /* type */
      00075B E5 81            [12] 2514 	mov	a,sp
      00075D 24 F5            [12] 2515 	add	a,#0xf5
      00075F F8               [12] 2516 	mov	r0,a
      000760 E6               [12] 2517 	mov	a,@r0
      000761 04               [12] 2518 	inc	a
      000762 C8               [12] 2519 	xch	a,r0
      000763 E5 81            [12] 2520 	mov	a,sp
      000765 24 B8            [12] 2521 	add	a,#0xb8
      000767 C8               [12] 2522 	xch	a,r0
      000768 26               [12] 2523 	add	a,@r0
      000769 F8               [12] 2524 	mov	r0,a
      00076A 76 10            [12] 2525 	mov	@r0,#0x10
                                   2526 ;	../../../core/net/mac/xmac.c:509: packetbuf_compact();
      00076C 78r00            [12] 2527 	mov	r0,#_packetbuf_compact
      00076E 79s00            [12] 2528 	mov	r1,#(_packetbuf_compact >> 8)
      000770 7As00            [12] 2529 	mov	r2,#(_packetbuf_compact >> 16)
      000772 12r00r00         [24] 2530 	lcall	__sdcc_banked_call
                                   2531 ;	../../../core/net/mac/xmac.c:510: packet = queuebuf_new_from_packetbuf();
      000775 78r00            [12] 2532 	mov	r0,#_queuebuf_new_from_packetbuf
      000777 79s00            [12] 2533 	mov	r1,#(_queuebuf_new_from_packetbuf >> 8)
      000779 7As00            [12] 2534 	mov	r2,#(_queuebuf_new_from_packetbuf >> 16)
      00077B 12r00r00         [24] 2535 	lcall	__sdcc_banked_call
      00077E AD 82            [24] 2536 	mov	r5,dpl
      000780 AE 83            [24] 2537 	mov	r6,dph
      000782 AF F0            [24] 2538 	mov	r7,b
      000784 E5 81            [12] 2539 	mov	a,sp
      000786 24 FC            [12] 2540 	add	a,#0xfc
      000788 F8               [12] 2541 	mov	r0,a
      000789 A6 05            [24] 2542 	mov	@r0,ar5
      00078B 08               [12] 2543 	inc	r0
      00078C A6 06            [24] 2544 	mov	@r0,ar6
      00078E 08               [12] 2545 	inc	r0
      00078F A6 07            [24] 2546 	mov	@r0,ar7
                                   2547 ;	../../../core/net/mac/xmac.c:511: if(packet == NULL) {
      000791 E5 81            [12] 2548 	mov	a,sp
      000793 24 FC            [12] 2549 	add	a,#0xfc
      000795 F8               [12] 2550 	mov	r0,a
      000796 E6               [12] 2551 	mov	a,@r0
      000797 08               [12] 2552 	inc	r0
      000798 46               [12] 2553 	orl	a,@r0
      000799 70 06            [24] 2554 	jnz	00107$
                                   2555 ;	../../../core/net/mac/xmac.c:515: return MAC_TX_ERR;
      00079B 90 00 04         [24] 2556 	mov	dptr,#0x0004
      00079E 02r0Er35         [24] 2557 	ljmp	00170$
      0007A1                       2558 00107$:
                                   2559 ;	../../../core/net/mac/xmac.c:519: if(is_streaming == 1 &&
      0007A1 90r00r43         [24] 2560 	mov	dptr,#_is_streaming
      0007A4 E0               [24] 2561 	movx	a,@dptr
      0007A5 FF               [12] 2562 	mov	r7,a
      0007A6 BF 01 02         [24] 2563 	cjne	r7,#0x01,00302$
      0007A9 80 02            [24] 2564 	sjmp	00303$
      0007AB                       2565 00302$:
      0007AB 80 7C            [24] 2566 	sjmp	00109$
      0007AD                       2567 00303$:
                                   2568 ;	../../../core/net/mac/xmac.c:521: &is_streaming_to) ||
                                   2569 ;	../../../core/net/mac/xmac.c:520: (rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
      0007AD 75 82 19         [24] 2570 	mov	dpl,#0x19
      0007B0 78r00            [12] 2571 	mov	r0,#_packetbuf_addr
      0007B2 79s00            [12] 2572 	mov	r1,#(_packetbuf_addr >> 8)
      0007B4 7As00            [12] 2573 	mov	r2,#(_packetbuf_addr >> 16)
      0007B6 12r00r00         [24] 2574 	lcall	__sdcc_banked_call
      0007B9 AB 82            [24] 2575 	mov	r3,dpl
      0007BB AE 83            [24] 2576 	mov	r6,dph
      0007BD AF F0            [24] 2577 	mov	r7,b
      0007BF 74r44            [12] 2578 	mov	a,#_is_streaming_to
      0007C1 C0 E0            [24] 2579 	push	acc
      0007C3 74s00            [12] 2580 	mov	a,#(_is_streaming_to >> 8)
      0007C5 C0 E0            [24] 2581 	push	acc
      0007C7 E4               [12] 2582 	clr	a
      0007C8 C0 E0            [24] 2583 	push	acc
      0007CA 8B 82            [24] 2584 	mov	dpl,r3
      0007CC 8E 83            [24] 2585 	mov	dph,r6
      0007CE 8F F0            [24] 2586 	mov	b,r7
      0007D0 78r00            [12] 2587 	mov	r0,#_rimeaddr_cmp
      0007D2 79s00            [12] 2588 	mov	r1,#(_rimeaddr_cmp >> 8)
      0007D4 7As00            [12] 2589 	mov	r2,#(_rimeaddr_cmp >> 16)
      0007D6 12r00r00         [24] 2590 	lcall	__sdcc_banked_call
      0007D9 AE 82            [24] 2591 	mov	r6,dpl
      0007DB AF 83            [24] 2592 	mov	r7,dph
      0007DD 15 81            [12] 2593 	dec	sp
      0007DF 15 81            [12] 2594 	dec	sp
      0007E1 15 81            [12] 2595 	dec	sp
      0007E3 EE               [12] 2596 	mov	a,r6
      0007E4 4F               [12] 2597 	orl	a,r7
      0007E5 70 3A            [24] 2598 	jnz	00108$
                                   2599 ;	../../../core/net/mac/xmac.c:523: &is_streaming_to_too))) {
                                   2600 ;	../../../core/net/mac/xmac.c:522: rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
      0007E7 75 82 19         [24] 2601 	mov	dpl,#0x19
      0007EA 78r00            [12] 2602 	mov	r0,#_packetbuf_addr
      0007EC 79s00            [12] 2603 	mov	r1,#(_packetbuf_addr >> 8)
      0007EE 7As00            [12] 2604 	mov	r2,#(_packetbuf_addr >> 16)
      0007F0 12r00r00         [24] 2605 	lcall	__sdcc_banked_call
      0007F3 AB 82            [24] 2606 	mov	r3,dpl
      0007F5 AE 83            [24] 2607 	mov	r6,dph
      0007F7 AF F0            [24] 2608 	mov	r7,b
      0007F9 74r4C            [12] 2609 	mov	a,#_is_streaming_to_too
      0007FB C0 E0            [24] 2610 	push	acc
      0007FD 74s00            [12] 2611 	mov	a,#(_is_streaming_to_too >> 8)
      0007FF C0 E0            [24] 2612 	push	acc
      000801 E4               [12] 2613 	clr	a
      000802 C0 E0            [24] 2614 	push	acc
      000804 8B 82            [24] 2615 	mov	dpl,r3
      000806 8E 83            [24] 2616 	mov	dph,r6
      000808 8F F0            [24] 2617 	mov	b,r7
      00080A 78r00            [12] 2618 	mov	r0,#_rimeaddr_cmp
      00080C 79s00            [12] 2619 	mov	r1,#(_rimeaddr_cmp >> 8)
      00080E 7As00            [12] 2620 	mov	r2,#(_rimeaddr_cmp >> 16)
      000810 12r00r00         [24] 2621 	lcall	__sdcc_banked_call
      000813 AE 82            [24] 2622 	mov	r6,dpl
      000815 AF 83            [24] 2623 	mov	r7,dph
      000817 15 81            [12] 2624 	dec	sp
      000819 15 81            [12] 2625 	dec	sp
      00081B 15 81            [12] 2626 	dec	sp
      00081D EE               [12] 2627 	mov	a,r6
      00081E 4F               [12] 2628 	orl	a,r7
      00081F 60 08            [24] 2629 	jz	00109$
      000821                       2630 00108$:
                                   2631 ;	../../../core/net/mac/xmac.c:524: is_already_streaming = 1;
      000821 A8 81            [24] 2632 	mov	r0,sp
      000823 18               [12] 2633 	dec	r0
      000824 76 01            [12] 2634 	mov	@r0,#0x01
      000826 08               [12] 2635 	inc	r0
      000827 76 00            [12] 2636 	mov	@r0,#0x00
      000829                       2637 00109$:
                                   2638 ;	../../../core/net/mac/xmac.c:526: if(packetbuf_attr(PACKETBUF_ATTR_PACKET_TYPE) ==
      000829 75 82 0E         [24] 2639 	mov	dpl,#0x0e
      00082C 78r00            [12] 2640 	mov	r0,#_packetbuf_attr
      00082E 79s00            [12] 2641 	mov	r1,#(_packetbuf_attr >> 8)
      000830 7As00            [12] 2642 	mov	r2,#(_packetbuf_attr >> 16)
      000832 12r00r00         [24] 2643 	lcall	__sdcc_banked_call
      000835 AE 82            [24] 2644 	mov	r6,dpl
      000837 AF 83            [24] 2645 	mov	r7,dph
      000839 BE 02 05         [24] 2646 	cjne	r6,#0x02,00306$
      00083C BF 00 02         [24] 2647 	cjne	r7,#0x00,00306$
      00083F 80 03            [24] 2648 	sjmp	00307$
      000841                       2649 00306$:
      000841 02r09r23         [24] 2650 	ljmp	00118$
      000844                       2651 00307$:
                                   2652 ;	../../../core/net/mac/xmac.c:528: is_streaming = 1;
      000844 90r00r43         [24] 2653 	mov	dptr,#_is_streaming
      000847 74 01            [12] 2654 	mov	a,#0x01
      000849 F0               [24] 2655 	movx	@dptr,a
                                   2656 ;	../../../core/net/mac/xmac.c:529: if(rimeaddr_cmp(&is_streaming_to, &rimeaddr_null)) {
      00084A 74r00            [12] 2657 	mov	a,#_rimeaddr_null
      00084C C0 E0            [24] 2658 	push	acc
      00084E 74s00            [12] 2659 	mov	a,#(_rimeaddr_null >> 8)
      000850 C0 E0            [24] 2660 	push	acc
      000852 74 80            [12] 2661 	mov	a,#0x80
      000854 C0 E0            [24] 2662 	push	acc
      000856 90r00r44         [24] 2663 	mov	dptr,#_is_streaming_to
      000859 75 F0 00         [24] 2664 	mov	b,#0x00
      00085C 78r00            [12] 2665 	mov	r0,#_rimeaddr_cmp
      00085E 79s00            [12] 2666 	mov	r1,#(_rimeaddr_cmp >> 8)
      000860 7As00            [12] 2667 	mov	r2,#(_rimeaddr_cmp >> 16)
      000862 12r00r00         [24] 2668 	lcall	__sdcc_banked_call
      000865 AE 82            [24] 2669 	mov	r6,dpl
      000867 AF 83            [24] 2670 	mov	r7,dph
      000869 15 81            [12] 2671 	dec	sp
      00086B 15 81            [12] 2672 	dec	sp
      00086D 15 81            [12] 2673 	dec	sp
      00086F EE               [12] 2674 	mov	a,r6
      000870 4F               [12] 2675 	orl	a,r7
      000871 60 2F            [24] 2676 	jz	00115$
                                   2677 ;	../../../core/net/mac/xmac.c:530: rimeaddr_copy(&is_streaming_to, packetbuf_addr(PACKETBUF_ADDR_RECEIVER));
      000873 75 82 19         [24] 2678 	mov	dpl,#0x19
      000876 78r00            [12] 2679 	mov	r0,#_packetbuf_addr
      000878 79s00            [12] 2680 	mov	r1,#(_packetbuf_addr >> 8)
      00087A 7As00            [12] 2681 	mov	r2,#(_packetbuf_addr >> 16)
      00087C 12r00r00         [24] 2682 	lcall	__sdcc_banked_call
      00087F AB 82            [24] 2683 	mov	r3,dpl
      000881 AE 83            [24] 2684 	mov	r6,dph
      000883 AF F0            [24] 2685 	mov	r7,b
      000885 C0 03            [24] 2686 	push	ar3
      000887 C0 06            [24] 2687 	push	ar6
      000889 C0 07            [24] 2688 	push	ar7
      00088B 90r00r44         [24] 2689 	mov	dptr,#_is_streaming_to
      00088E 75 F0 00         [24] 2690 	mov	b,#0x00
      000891 78r00            [12] 2691 	mov	r0,#_rimeaddr_copy
      000893 79s00            [12] 2692 	mov	r1,#(_rimeaddr_copy >> 8)
      000895 7As00            [12] 2693 	mov	r2,#(_rimeaddr_copy >> 16)
      000897 12r00r00         [24] 2694 	lcall	__sdcc_banked_call
      00089A 15 81            [12] 2695 	dec	sp
      00089C 15 81            [12] 2696 	dec	sp
      00089E 15 81            [12] 2697 	dec	sp
      0008A0 80 62            [24] 2698 	sjmp	00116$
      0008A2                       2699 00115$:
                                   2700 ;	../../../core/net/mac/xmac.c:531: } else if(!rimeaddr_cmp(&is_streaming_to, packetbuf_addr(PACKETBUF_ADDR_RECEIVER))) {
      0008A2 75 82 19         [24] 2701 	mov	dpl,#0x19
      0008A5 78r00            [12] 2702 	mov	r0,#_packetbuf_addr
      0008A7 79s00            [12] 2703 	mov	r1,#(_packetbuf_addr >> 8)
      0008A9 7As00            [12] 2704 	mov	r2,#(_packetbuf_addr >> 16)
      0008AB 12r00r00         [24] 2705 	lcall	__sdcc_banked_call
      0008AE AB 82            [24] 2706 	mov	r3,dpl
      0008B0 AE 83            [24] 2707 	mov	r6,dph
      0008B2 AF F0            [24] 2708 	mov	r7,b
      0008B4 C0 03            [24] 2709 	push	ar3
      0008B6 C0 06            [24] 2710 	push	ar6
      0008B8 C0 07            [24] 2711 	push	ar7
      0008BA 90r00r44         [24] 2712 	mov	dptr,#_is_streaming_to
      0008BD 75 F0 00         [24] 2713 	mov	b,#0x00
      0008C0 78r00            [12] 2714 	mov	r0,#_rimeaddr_cmp
      0008C2 79s00            [12] 2715 	mov	r1,#(_rimeaddr_cmp >> 8)
      0008C4 7As00            [12] 2716 	mov	r2,#(_rimeaddr_cmp >> 16)
      0008C6 12r00r00         [24] 2717 	lcall	__sdcc_banked_call
      0008C9 AE 82            [24] 2718 	mov	r6,dpl
      0008CB AF 83            [24] 2719 	mov	r7,dph
      0008CD 15 81            [12] 2720 	dec	sp
      0008CF 15 81            [12] 2721 	dec	sp
      0008D1 15 81            [12] 2722 	dec	sp
      0008D3 EE               [12] 2723 	mov	a,r6
      0008D4 4F               [12] 2724 	orl	a,r7
      0008D5 70 2D            [24] 2725 	jnz	00116$
                                   2726 ;	../../../core/net/mac/xmac.c:532: rimeaddr_copy(&is_streaming_to_too, packetbuf_addr(PACKETBUF_ADDR_RECEIVER));
      0008D7 75 82 19         [24] 2727 	mov	dpl,#0x19
      0008DA 78r00            [12] 2728 	mov	r0,#_packetbuf_addr
      0008DC 79s00            [12] 2729 	mov	r1,#(_packetbuf_addr >> 8)
      0008DE 7As00            [12] 2730 	mov	r2,#(_packetbuf_addr >> 16)
      0008E0 12r00r00         [24] 2731 	lcall	__sdcc_banked_call
      0008E3 AB 82            [24] 2732 	mov	r3,dpl
      0008E5 AE 83            [24] 2733 	mov	r6,dph
      0008E7 AF F0            [24] 2734 	mov	r7,b
      0008E9 C0 03            [24] 2735 	push	ar3
      0008EB C0 06            [24] 2736 	push	ar6
      0008ED C0 07            [24] 2737 	push	ar7
      0008EF 90r00r4C         [24] 2738 	mov	dptr,#_is_streaming_to_too
      0008F2 75 F0 00         [24] 2739 	mov	b,#0x00
      0008F5 78r00            [12] 2740 	mov	r0,#_rimeaddr_copy
      0008F7 79s00            [12] 2741 	mov	r1,#(_rimeaddr_copy >> 8)
      0008F9 7As00            [12] 2742 	mov	r2,#(_rimeaddr_copy >> 16)
      0008FB 12r00r00         [24] 2743 	lcall	__sdcc_banked_call
      0008FE 15 81            [12] 2744 	dec	sp
      000900 15 81            [12] 2745 	dec	sp
      000902 15 81            [12] 2746 	dec	sp
      000904                       2747 00116$:
                                   2748 ;	../../../core/net/mac/xmac.c:534: stream_until = RTIMER_NOW() + DEFAULT_STREAM_TIME;
      000904 AE E2            [24] 2749 	mov	r6,_T1CNTL
      000906 7F 00            [12] 2750 	mov	r7,#0x00
      000908 AA E3            [24] 2751 	mov	r2,_T1CNTH
      00090A 8A 03            [24] 2752 	mov	ar3,r2
      00090C E4               [12] 2753 	clr	a
      00090D FA               [12] 2754 	mov	r2,a
      00090E 2E               [12] 2755 	add	a,r6
      00090F FE               [12] 2756 	mov	r6,a
      000910 EB               [12] 2757 	mov	a,r3
      000911 3F               [12] 2758 	addc	a,r7
      000912 FF               [12] 2759 	mov	r7,a
      000913 74 09            [12] 2760 	mov	a,#0x09
      000915 2E               [12] 2761 	add	a,r6
      000916 FE               [12] 2762 	mov	r6,a
      000917 74 3D            [12] 2763 	mov	a,#0x3d
      000919 3F               [12] 2764 	addc	a,r7
      00091A FF               [12] 2765 	mov	r7,a
      00091B 90r00r54         [24] 2766 	mov	dptr,#_stream_until
      00091E EE               [12] 2767 	mov	a,r6
      00091F F0               [24] 2768 	movx	@dptr,a
      000920 EF               [12] 2769 	mov	a,r7
      000921 A3               [24] 2770 	inc	dptr
      000922 F0               [24] 2771 	movx	@dptr,a
      000923                       2772 00118$:
                                   2773 ;	../../../core/net/mac/xmac.c:538: off();
      000923 78r3E            [12] 2774 	mov	r0,#_off
      000925 79s00            [12] 2775 	mov	r1,#(_off >> 8)
      000927 7As00            [12] 2776 	mov	r2,#(_off >> 16)
      000929 12r00r00         [24] 2777 	lcall	__sdcc_banked_call
                                   2778 ;	../../../core/net/mac/xmac.c:545: for(e = list_head(encounter_list); e != NULL; e = list_item_next(e)) {
      00092C 90r00r10         [24] 2779 	mov	dptr,#_encounter_list
      00092F E0               [24] 2780 	movx	a,@dptr
      000930 FB               [12] 2781 	mov	r3,a
      000931 A3               [24] 2782 	inc	dptr
      000932 E0               [24] 2783 	movx	a,@dptr
      000933 FE               [12] 2784 	mov	r6,a
      000934 A3               [24] 2785 	inc	dptr
      000935 E0               [24] 2786 	movx	a,@dptr
      000936 FF               [12] 2787 	mov	r7,a
      000937 8B 82            [24] 2788 	mov	dpl,r3
      000939 8E 83            [24] 2789 	mov	dph,r6
      00093B 8F F0            [24] 2790 	mov	b,r7
      00093D 78r00            [12] 2791 	mov	r0,#_list_head
      00093F 79s00            [12] 2792 	mov	r1,#(_list_head >> 8)
      000941 7As00            [12] 2793 	mov	r2,#(_list_head >> 16)
      000943 12r00r00         [24] 2794 	lcall	__sdcc_banked_call
      000946 AB 82            [24] 2795 	mov	r3,dpl
      000948 AE 83            [24] 2796 	mov	r6,dph
      00094A AF F0            [24] 2797 	mov	r7,b
      00094C E5 81            [12] 2798 	mov	a,sp
      00094E 24 F9            [12] 2799 	add	a,#0xf9
      000950 F8               [12] 2800 	mov	r0,a
      000951 A6 03            [24] 2801 	mov	@r0,ar3
      000953 08               [12] 2802 	inc	r0
      000954 A6 06            [24] 2803 	mov	@r0,ar6
      000956 08               [12] 2804 	inc	r0
      000957 A6 07            [24] 2805 	mov	@r0,ar7
      000959                       2806 00163$:
      000959 E5 81            [12] 2807 	mov	a,sp
      00095B 24 F9            [12] 2808 	add	a,#0xf9
      00095D F8               [12] 2809 	mov	r0,a
      00095E E6               [12] 2810 	mov	a,@r0
      00095F 08               [12] 2811 	inc	r0
      000960 46               [12] 2812 	orl	a,@r0
      000961 70 03            [24] 2813 	jnz	00310$
      000963 02r0Ar71         [24] 2814 	ljmp	00126$
      000966                       2815 00310$:
                                   2816 ;	../../../core/net/mac/xmac.c:546: const rimeaddr_t *neighbor = packetbuf_addr(PACKETBUF_ADDR_RECEIVER);
      000966 75 82 19         [24] 2817 	mov	dpl,#0x19
      000969 78r00            [12] 2818 	mov	r0,#_packetbuf_addr
      00096B 79s00            [12] 2819 	mov	r1,#(_packetbuf_addr >> 8)
      00096D 7As00            [12] 2820 	mov	r2,#(_packetbuf_addr >> 16)
      00096F 12r00r00         [24] 2821 	lcall	__sdcc_banked_call
      000972 AF 82            [24] 2822 	mov	r7,dpl
      000974 AE 83            [24] 2823 	mov	r6,dph
      000976 AD F0            [24] 2824 	mov	r5,b
      000978 8D 03            [24] 2825 	mov	ar3,r5
                                   2826 ;	../../../core/net/mac/xmac.c:548: if(rimeaddr_cmp(neighbor, &e->neighbor)) {
      00097A E5 81            [12] 2827 	mov	a,sp
      00097C 24 F9            [12] 2828 	add	a,#0xf9
      00097E F8               [12] 2829 	mov	r0,a
      00097F 74 03            [12] 2830 	mov	a,#0x03
      000981 26               [12] 2831 	add	a,@r0
      000982 FA               [12] 2832 	mov	r2,a
      000983 E4               [12] 2833 	clr	a
      000984 08               [12] 2834 	inc	r0
      000985 36               [12] 2835 	addc	a,@r0
      000986 FC               [12] 2836 	mov	r4,a
      000987 08               [12] 2837 	inc	r0
      000988 86 05            [24] 2838 	mov	ar5,@r0
      00098A C0 02            [24] 2839 	push	ar2
      00098C C0 04            [24] 2840 	push	ar4
      00098E C0 05            [24] 2841 	push	ar5
      000990 8F 82            [24] 2842 	mov	dpl,r7
      000992 8E 83            [24] 2843 	mov	dph,r6
      000994 8B F0            [24] 2844 	mov	b,r3
      000996 78r00            [12] 2845 	mov	r0,#_rimeaddr_cmp
      000998 79s00            [12] 2846 	mov	r1,#(_rimeaddr_cmp >> 8)
      00099A 7As00            [12] 2847 	mov	r2,#(_rimeaddr_cmp >> 16)
      00099C 12r00r00         [24] 2848 	lcall	__sdcc_banked_call
      00099F AC 82            [24] 2849 	mov	r4,dpl
      0009A1 AD 83            [24] 2850 	mov	r5,dph
      0009A3 15 81            [12] 2851 	dec	sp
      0009A5 15 81            [12] 2852 	dec	sp
      0009A7 15 81            [12] 2853 	dec	sp
      0009A9 EC               [12] 2854 	mov	a,r4
      0009AA 4D               [12] 2855 	orl	a,r5
      0009AB 70 03            [24] 2856 	jnz	00311$
      0009AD 02r0Ar3F         [24] 2857 	ljmp	00164$
      0009B0                       2858 00311$:
                                   2859 ;	../../../core/net/mac/xmac.c:558: now = RTIMER_NOW();
      0009B0 AA E2            [24] 2860 	mov	r2,_T1CNTL
      0009B2 7D 00            [12] 2861 	mov	r5,#0x00
      0009B4 AC E3            [24] 2862 	mov	r4,_T1CNTH
      0009B6 8C 07            [24] 2863 	mov	ar7,r4
      0009B8 E4               [12] 2864 	clr	a
      0009B9 2A               [12] 2865 	add	a,r2
      0009BA FA               [12] 2866 	mov	r2,a
      0009BB EF               [12] 2867 	mov	a,r7
      0009BC 3D               [12] 2868 	addc	a,r5
      0009BD FC               [12] 2869 	mov	r4,a
                                   2870 ;	../../../core/net/mac/xmac.c:559: wait = ((rtimer_clock_t)(e->time - now)) % (DEFAULT_PERIOD);
      0009BE E5 81            [12] 2871 	mov	a,sp
      0009C0 24 F9            [12] 2872 	add	a,#0xf9
      0009C2 F8               [12] 2873 	mov	r0,a
      0009C3 74 0B            [12] 2874 	mov	a,#0x0b
      0009C5 26               [12] 2875 	add	a,@r0
      0009C6 FD               [12] 2876 	mov	r5,a
      0009C7 E4               [12] 2877 	clr	a
      0009C8 08               [12] 2878 	inc	r0
      0009C9 36               [12] 2879 	addc	a,@r0
      0009CA FE               [12] 2880 	mov	r6,a
      0009CB 08               [12] 2881 	inc	r0
      0009CC 86 07            [24] 2882 	mov	ar7,@r0
      0009CE 8D 82            [24] 2883 	mov	dpl,r5
      0009D0 8E 83            [24] 2884 	mov	dph,r6
      0009D2 8F F0            [24] 2885 	mov	b,r7
      0009D4 12r00r00         [24] 2886 	lcall	__gptrget
      0009D7 FD               [12] 2887 	mov	r5,a
      0009D8 A3               [24] 2888 	inc	dptr
      0009D9 12r00r00         [24] 2889 	lcall	__gptrget
      0009DC FE               [12] 2890 	mov	r6,a
      0009DD ED               [12] 2891 	mov	a,r5
      0009DE C3               [12] 2892 	clr	c
      0009DF 9A               [12] 2893 	subb	a,r2
      0009E0 FD               [12] 2894 	mov	r5,a
      0009E1 EE               [12] 2895 	mov	a,r6
      0009E2 9C               [12] 2896 	subb	a,r4
      0009E3 FE               [12] 2897 	mov	r6,a
      0009E4 C0 04            [24] 2898 	push	ar4
      0009E6 C0 02            [24] 2899 	push	ar2
      0009E8 74 A1            [12] 2900 	mov	a,#0xa1
      0009EA C0 E0            [24] 2901 	push	acc
      0009EC 74 07            [12] 2902 	mov	a,#0x07
      0009EE C0 E0            [24] 2903 	push	acc
      0009F0 8D 82            [24] 2904 	mov	dpl,r5
      0009F2 8E 83            [24] 2905 	mov	dph,r6
      0009F4 12r00r00         [24] 2906 	lcall	__moduint
      0009F7 AE 82            [24] 2907 	mov	r6,dpl
      0009F9 AF 83            [24] 2908 	mov	r7,dph
      0009FB 15 81            [12] 2909 	dec	sp
      0009FD 15 81            [12] 2910 	dec	sp
      0009FF D0 02            [24] 2911 	pop	ar2
      000A01 D0 04            [24] 2912 	pop	ar4
      000A03 8E 05            [24] 2913 	mov	ar5,r6
      000A05 8F 03            [24] 2914 	mov	ar3,r7
                                   2915 ;	../../../core/net/mac/xmac.c:560: if(wait < 2 * DEFAULT_ON_TIME) {
      000A07 8D 06            [24] 2916 	mov	ar6,r5
      000A09 8B 07            [24] 2917 	mov	ar7,r3
      000A0B C3               [12] 2918 	clr	c
      000A0C EE               [12] 2919 	mov	a,r6
      000A0D 94 C2            [12] 2920 	subb	a,#0xc2
      000A0F EF               [12] 2921 	mov	a,r7
      000A10 94 00            [12] 2922 	subb	a,#0x00
      000A12 50 04            [24] 2923 	jnc	00120$
                                   2924 ;	../../../core/net/mac/xmac.c:561: wait = DEFAULT_PERIOD;
      000A14 7D A1            [12] 2925 	mov	r5,#0xa1
      000A16 7B 07            [12] 2926 	mov	r3,#0x07
      000A18                       2927 00120$:
                                   2928 ;	../../../core/net/mac/xmac.c:563: expected = now + wait - 2 * DEFAULT_ON_TIME;
      000A18 ED               [12] 2929 	mov	a,r5
      000A19 2A               [12] 2930 	add	a,r2
      000A1A FE               [12] 2931 	mov	r6,a
      000A1B EB               [12] 2932 	mov	a,r3
      000A1C 3C               [12] 2933 	addc	a,r4
      000A1D FF               [12] 2934 	mov	r7,a
      000A1E EE               [12] 2935 	mov	a,r6
      000A1F 24 3E            [12] 2936 	add	a,#0x3e
      000A21 FE               [12] 2937 	mov	r6,a
      000A22 EF               [12] 2938 	mov	a,r7
      000A23 34 FF            [12] 2939 	addc	a,#0xff
      000A25 FF               [12] 2940 	mov	r7,a
                                   2941 ;	../../../core/net/mac/xmac.c:576: while(RTIMER_CLOCK_LT(RTIMER_NOW(), expected));
      000A26                       2942 00121$:
      000A26 AA E2            [24] 2943 	mov	r2,_T1CNTL
      000A28 7B 00            [12] 2944 	mov	r3,#0x00
      000A2A AC E3            [24] 2945 	mov	r4,_T1CNTH
      000A2C 8C 05            [24] 2946 	mov	ar5,r4
      000A2E E4               [12] 2947 	clr	a
      000A2F FC               [12] 2948 	mov	r4,a
      000A30 2A               [12] 2949 	add	a,r2
      000A31 FA               [12] 2950 	mov	r2,a
      000A32 ED               [12] 2951 	mov	a,r5
      000A33 3B               [12] 2952 	addc	a,r3
      000A34 FB               [12] 2953 	mov	r3,a
      000A35 EA               [12] 2954 	mov	a,r2
      000A36 C3               [12] 2955 	clr	c
      000A37 9E               [12] 2956 	subb	a,r6
      000A38 FA               [12] 2957 	mov	r2,a
      000A39 EB               [12] 2958 	mov	a,r3
      000A3A 9F               [12] 2959 	subb	a,r7
      000A3B FB               [12] 2960 	mov	r3,a
      000A3C 20 E7 E7         [24] 2961 	jb	acc.7,00121$
      000A3F                       2962 00164$:
                                   2963 ;	../../../core/net/mac/xmac.c:545: for(e = list_head(encounter_list); e != NULL; e = list_item_next(e)) {
      000A3F E5 81            [12] 2964 	mov	a,sp
      000A41 24 F9            [12] 2965 	add	a,#0xf9
      000A43 F8               [12] 2966 	mov	r0,a
      000A44 86 03            [24] 2967 	mov	ar3,@r0
      000A46 08               [12] 2968 	inc	r0
      000A47 86 06            [24] 2969 	mov	ar6,@r0
      000A49 08               [12] 2970 	inc	r0
      000A4A 86 07            [24] 2971 	mov	ar7,@r0
      000A4C 8B 82            [24] 2972 	mov	dpl,r3
      000A4E 8E 83            [24] 2973 	mov	dph,r6
      000A50 8F F0            [24] 2974 	mov	b,r7
      000A52 78r00            [12] 2975 	mov	r0,#_list_item_next
      000A54 79s00            [12] 2976 	mov	r1,#(_list_item_next >> 8)
      000A56 7As00            [12] 2977 	mov	r2,#(_list_item_next >> 16)
      000A58 12r00r00         [24] 2978 	lcall	__sdcc_banked_call
      000A5B AB 82            [24] 2979 	mov	r3,dpl
      000A5D AE 83            [24] 2980 	mov	r6,dph
      000A5F AF F0            [24] 2981 	mov	r7,b
      000A61 E5 81            [12] 2982 	mov	a,sp
      000A63 24 F9            [12] 2983 	add	a,#0xf9
      000A65 F8               [12] 2984 	mov	r0,a
      000A66 A6 03            [24] 2985 	mov	@r0,ar3
      000A68 08               [12] 2986 	inc	r0
      000A69 A6 06            [24] 2987 	mov	@r0,ar6
      000A6B 08               [12] 2988 	inc	r0
      000A6C A6 07            [24] 2989 	mov	@r0,ar7
      000A6E 02r09r59         [24] 2990 	ljmp	00163$
      000A71                       2991 00126$:
                                   2992 ;	../../../core/net/mac/xmac.c:584: we_are_sending = 1;
      000A71 90r00r0B         [24] 2993 	mov	dptr,#_we_are_sending
      000A74 74 01            [12] 2994 	mov	a,#0x01
      000A76 F0               [24] 2995 	movx	@dptr,a
                                   2996 ;	../../../core/net/mac/xmac.c:586: t0 = RTIMER_NOW();
      000A77 AE E2            [24] 2997 	mov	r6,_T1CNTL
      000A79 7F 00            [12] 2998 	mov	r7,#0x00
      000A7B AA E3            [24] 2999 	mov	r2,_T1CNTH
      000A7D 8A 03            [24] 3000 	mov	ar3,r2
      000A7F E4               [12] 3001 	clr	a
      000A80 FA               [12] 3002 	mov	r2,a
      000A81 2E               [12] 3003 	add	a,r6
      000A82 FE               [12] 3004 	mov	r6,a
      000A83 EB               [12] 3005 	mov	a,r3
      000A84 3F               [12] 3006 	addc	a,r7
      000A85 FF               [12] 3007 	mov	r7,a
      000A86 E5 81            [12] 3008 	mov	a,sp
      000A88 24 BB            [12] 3009 	add	a,#0xbb
      000A8A F8               [12] 3010 	mov	r0,a
      000A8B A6 06            [24] 3011 	mov	@r0,ar6
      000A8D 08               [12] 3012 	inc	r0
      000A8E A6 07            [24] 3013 	mov	@r0,ar7
                                   3014 ;	../../../core/net/mac/xmac.c:595: collisions = 0;
      000A90 7B 00            [12] 3015 	mov	r3,#0x00
                                   3016 ;	../../../core/net/mac/xmac.c:596: if(!is_already_streaming) {
      000A92 A8 81            [24] 3017 	mov	r0,sp
      000A94 18               [12] 3018 	dec	r0
      000A95 E6               [12] 3019 	mov	a,@r0
      000A96 08               [12] 3020 	inc	r0
      000A97 46               [12] 3021 	orl	a,@r0
      000A98 60 03            [24] 3022 	jz	00314$
      000A9A 02r0CrBC         [24] 3023 	ljmp	00142$
      000A9D                       3024 00314$:
                                   3025 ;	../../../core/net/mac/xmac.c:597: watchdog_stop();
      000A9D 78r00            [12] 3026 	mov	r0,#_watchdog_periodic
      000A9F 79s00            [12] 3027 	mov	r1,#(_watchdog_periodic >> 8)
      000AA1 7As00            [12] 3028 	mov	r2,#(_watchdog_periodic >> 16)
      000AA3 12r00r00         [24] 3029 	lcall	__sdcc_banked_call
                                   3030 ;	../../../core/net/mac/xmac.c:598: got_strobe_ack = 0;
      000AA6 E5 81            [12] 3031 	mov	a,sp
      000AA8 24 BF            [12] 3032 	add	a,#0xbf
      000AAA F8               [12] 3033 	mov	r0,a
      000AAB 76 00            [12] 3034 	mov	@r0,#0x00
                                   3035 ;	../../../core/net/mac/xmac.c:599: t = RTIMER_NOW();
      000AAD AA E2            [24] 3036 	mov	r2,_T1CNTL
      000AAF 7F 00            [12] 3037 	mov	r7,#0x00
      000AB1 AD E3            [24] 3038 	mov	r5,_T1CNTH
      000AB3 8D 06            [24] 3039 	mov	ar6,r5
      000AB5 E4               [12] 3040 	clr	a
      000AB6 FD               [12] 3041 	mov	r5,a
      000AB7 2A               [12] 3042 	add	a,r2
      000AB8 FA               [12] 3043 	mov	r2,a
      000AB9 EE               [12] 3044 	mov	a,r6
      000ABA 3F               [12] 3045 	addc	a,r7
      000ABB FF               [12] 3046 	mov	r7,a
      000ABC E5 81            [12] 3047 	mov	a,sp
      000ABE 24 BD            [12] 3048 	add	a,#0xbd
      000AC0 F8               [12] 3049 	mov	r0,a
      000AC1 A6 02            [24] 3050 	mov	@r0,ar2
      000AC3 08               [12] 3051 	inc	r0
      000AC4 A6 07            [24] 3052 	mov	@r0,ar7
                                   3053 ;	../../../core/net/mac/xmac.c:600: for(strobes = 0, collisions = 0;
      000AC6 7B 00            [12] 3054 	mov	r3,#0x00
      000AC8 E5 81            [12] 3055 	mov	a,sp
      000ACA 24 B8            [12] 3056 	add	a,#0xb8
      000ACC F8               [12] 3057 	mov	r0,a
                                   3058 ;	../../../core/net/mac/xmac.c:757: return MAC_TX_COLLISION;
                                   3059 ;	../../../core/net/mac/xmac.c:600: for(strobes = 0, collisions = 0;
      000ACD                       3060 00168$:
                                   3061 ;	../../../core/net/mac/xmac.c:601: got_strobe_ack == 0 && collisions == 0 &&
      000ACD E5 81            [12] 3062 	mov	a,sp
      000ACF 24 BF            [12] 3063 	add	a,#0xbf
      000AD1 F8               [12] 3064 	mov	r0,a
      000AD2 E6               [12] 3065 	mov	a,@r0
      000AD3 60 03            [24] 3066 	jz	00315$
      000AD5 02r0CrBC         [24] 3067 	ljmp	00142$
      000AD8                       3068 00315$:
                                   3069 ;	../../../core/net/mac/xmac.c:602: RTIMER_CLOCK_LT(RTIMER_NOW(), t0 + xmac_config.strobe_time);
      000AD8 C0 03            [24] 3070 	push	ar3
      000ADA AC E2            [24] 3071 	mov	r4,_T1CNTL
      000ADC 7D 00            [12] 3072 	mov	r5,#0x00
      000ADE AA E3            [24] 3073 	mov	r2,_T1CNTH
      000AE0 8A 03            [24] 3074 	mov	ar3,r2
      000AE2 E4               [12] 3075 	clr	a
      000AE3 2C               [12] 3076 	add	a,r4
      000AE4 FC               [12] 3077 	mov	r4,a
      000AE5 EB               [12] 3078 	mov	a,r3
      000AE6 3D               [12] 3079 	addc	a,r5
      000AE7 FD               [12] 3080 	mov	r5,a
      000AE8 90r00r04         [24] 3081 	mov	dptr,#(_xmac_config + 0x0004)
      000AEB E0               [24] 3082 	movx	a,@dptr
      000AEC FA               [12] 3083 	mov	r2,a
      000AED A3               [24] 3084 	inc	dptr
      000AEE E0               [24] 3085 	movx	a,@dptr
      000AEF FB               [12] 3086 	mov	r3,a
      000AF0 E5 81            [12] 3087 	mov	a,sp
      000AF2 24 BA            [12] 3088 	add	a,#0xba
      000AF4 F8               [12] 3089 	mov	r0,a
      000AF5 EA               [12] 3090 	mov	a,r2
      000AF6 26               [12] 3091 	add	a,@r0
      000AF7 FA               [12] 3092 	mov	r2,a
      000AF8 EB               [12] 3093 	mov	a,r3
      000AF9 08               [12] 3094 	inc	r0
      000AFA 36               [12] 3095 	addc	a,@r0
      000AFB FB               [12] 3096 	mov	r3,a
      000AFC EC               [12] 3097 	mov	a,r4
      000AFD C3               [12] 3098 	clr	c
      000AFE 9A               [12] 3099 	subb	a,r2
      000AFF FA               [12] 3100 	mov	r2,a
      000B00 ED               [12] 3101 	mov	a,r5
      000B01 9B               [12] 3102 	subb	a,r3
      000B02 D0 03            [24] 3103 	pop	ar3
      000B04 20 E7 03         [24] 3104 	jb	acc.7,00316$
      000B07 02r0CrBC         [24] 3105 	ljmp	00142$
      000B0A                       3106 00316$:
                                   3107 ;	../../../core/net/mac/xmac.c:605: while(got_strobe_ack == 0 &&
      000B0A                       3108 00128$:
      000B0A E5 81            [12] 3109 	mov	a,sp
      000B0C 24 BF            [12] 3110 	add	a,#0xbf
      000B0E F8               [12] 3111 	mov	r0,a
      000B0F E6               [12] 3112 	mov	a,@r0
      000B10 70 2E            [24] 3113 	jnz	00130$
                                   3114 ;	../../../core/net/mac/xmac.c:606: RTIMER_CLOCK_LT(RTIMER_NOW(), t + xmac_config.strobe_wait_time)) {
      000B12 C0 03            [24] 3115 	push	ar3
      000B14 AC E2            [24] 3116 	mov	r4,_T1CNTL
      000B16 7D 00            [12] 3117 	mov	r5,#0x00
      000B18 AA E3            [24] 3118 	mov	r2,_T1CNTH
      000B1A 8A 03            [24] 3119 	mov	ar3,r2
      000B1C E4               [12] 3120 	clr	a
      000B1D 2C               [12] 3121 	add	a,r4
      000B1E FC               [12] 3122 	mov	r4,a
      000B1F EB               [12] 3123 	mov	a,r3
      000B20 3D               [12] 3124 	addc	a,r5
      000B21 FD               [12] 3125 	mov	r5,a
      000B22 90r00r06         [24] 3126 	mov	dptr,#(_xmac_config + 0x0006)
      000B25 E0               [24] 3127 	movx	a,@dptr
      000B26 FA               [12] 3128 	mov	r2,a
      000B27 A3               [24] 3129 	inc	dptr
      000B28 E0               [24] 3130 	movx	a,@dptr
      000B29 FB               [12] 3131 	mov	r3,a
      000B2A E5 81            [12] 3132 	mov	a,sp
      000B2C 24 BC            [12] 3133 	add	a,#0xbc
      000B2E F8               [12] 3134 	mov	r0,a
      000B2F EA               [12] 3135 	mov	a,r2
      000B30 26               [12] 3136 	add	a,@r0
      000B31 FA               [12] 3137 	mov	r2,a
      000B32 EB               [12] 3138 	mov	a,r3
      000B33 08               [12] 3139 	inc	r0
      000B34 36               [12] 3140 	addc	a,@r0
      000B35 FB               [12] 3141 	mov	r3,a
      000B36 EC               [12] 3142 	mov	a,r4
      000B37 C3               [12] 3143 	clr	c
      000B38 9A               [12] 3144 	subb	a,r2
      000B39 ED               [12] 3145 	mov	a,r5
      000B3A 9B               [12] 3146 	subb	a,r3
      000B3B D0 03            [24] 3147 	pop	ar3
      000B3D 20 E7 CA         [24] 3148 	jb	acc.7,00128$
      000B40                       3149 00130$:
                                   3150 ;	../../../core/net/mac/xmac.c:638: t = RTIMER_NOW();
      000B40 C0 03            [24] 3151 	push	ar3
      000B42 AC E2            [24] 3152 	mov	r4,_T1CNTL
      000B44 7D 00            [12] 3153 	mov	r5,#0x00
      000B46 AA E3            [24] 3154 	mov	r2,_T1CNTH
      000B48 8A 03            [24] 3155 	mov	ar3,r2
      000B4A E4               [12] 3156 	clr	a
      000B4B FA               [12] 3157 	mov	r2,a
      000B4C 2C               [12] 3158 	add	a,r4
      000B4D FC               [12] 3159 	mov	r4,a
      000B4E EB               [12] 3160 	mov	a,r3
      000B4F 3D               [12] 3161 	addc	a,r5
      000B50 FD               [12] 3162 	mov	r5,a
      000B51 E5 81            [12] 3163 	mov	a,sp
      000B53 24 BC            [12] 3164 	add	a,#0xbc
      000B55 F8               [12] 3165 	mov	r0,a
      000B56 A6 04            [24] 3166 	mov	@r0,ar4
      000B58 08               [12] 3167 	inc	r0
      000B59 A6 05            [24] 3168 	mov	@r0,ar5
                                   3169 ;	../../../core/net/mac/xmac.c:640: if(got_strobe_ack == 0 && collisions == 0) {
      000B5B D0 03            [24] 3170 	pop	ar3
      000B5D E5 81            [12] 3171 	mov	a,sp
      000B5F 24 BF            [12] 3172 	add	a,#0xbf
      000B61 F8               [12] 3173 	mov	r0,a
      000B62 E6               [12] 3174 	mov	a,@r0
      000B63 60 03            [24] 3175 	jz	00319$
      000B65 02r0ArCD         [24] 3176 	ljmp	00168$
      000B68                       3177 00319$:
                                   3178 ;	../../../core/net/mac/xmac.c:642: if(is_broadcast) {
      000B68 E5 81            [12] 3179 	mov	a,sp
      000B6A 24 F7            [12] 3180 	add	a,#0xf7
      000B6C F8               [12] 3181 	mov	r0,a
      000B6D E6               [12] 3182 	mov	a,@r0
      000B6E 08               [12] 3183 	inc	r0
      000B6F 46               [12] 3184 	orl	a,@r0
      000B70 70 03            [24] 3185 	jnz	00320$
      000B72 02r0Cr1D         [24] 3186 	ljmp	00135$
      000B75                       3187 00320$:
                                   3188 ;	../../../core/net/mac/xmac.c:647: queuebuf_to_packetbuf(packet);
      000B75 C0 03            [24] 3189 	push	ar3
      000B77 E5 81            [12] 3190 	mov	a,sp
      000B79 24 FB            [12] 3191 	add	a,#0xfb
      000B7B F8               [12] 3192 	mov	r0,a
      000B7C 86 82            [24] 3193 	mov	dpl,@r0
      000B7E 08               [12] 3194 	inc	r0
      000B7F 86 83            [24] 3195 	mov	dph,@r0
      000B81 08               [12] 3196 	inc	r0
      000B82 86 F0            [24] 3197 	mov	b,@r0
      000B84 C0 03            [24] 3198 	push	ar3
      000B86 78r00            [12] 3199 	mov	r0,#_queuebuf_to_packetbuf
      000B88 79s00            [12] 3200 	mov	r1,#(_queuebuf_to_packetbuf >> 8)
      000B8A 7As00            [12] 3201 	mov	r2,#(_queuebuf_to_packetbuf >> 16)
      000B8C 12r00r00         [24] 3202 	lcall	__sdcc_banked_call
      000B8F D0 03            [24] 3203 	pop	ar3
                                   3204 ;	../../../core/net/mac/xmac.c:648: ret = NETSTACK_RADIO.send(packetbuf_hdrptr(), packetbuf_totlen());
      000B91 90r00r09         [24] 3205 	mov	dptr,#(_cc2530_rf_driver + 0x0009)
      000B94 E4               [12] 3206 	clr	a
      000B95 93               [24] 3207 	movc	a,@a+dptr
      000B96 FA               [12] 3208 	mov	r2,a
      000B97 A3               [24] 3209 	inc	dptr
      000B98 E4               [12] 3210 	clr	a
      000B99 93               [24] 3211 	movc	a,@a+dptr
      000B9A FC               [12] 3212 	mov	r4,a
      000B9B A3               [24] 3213 	inc	dptr
      000B9C E4               [12] 3214 	clr	a
      000B9D 93               [24] 3215 	movc	a,@a+dptr
      000B9E FD               [12] 3216 	mov	r5,a
      000B9F C0 05            [24] 3217 	push	ar5
      000BA1 C0 04            [24] 3218 	push	ar4
      000BA3 C0 03            [24] 3219 	push	ar3
      000BA5 C0 02            [24] 3220 	push	ar2
      000BA7 78r00            [12] 3221 	mov	r0,#_packetbuf_totlen
      000BA9 79s00            [12] 3222 	mov	r1,#(_packetbuf_totlen >> 8)
      000BAB 7As00            [12] 3223 	mov	r2,#(_packetbuf_totlen >> 16)
      000BAD 12r00r00         [24] 3224 	lcall	__sdcc_banked_call
      000BB0 C8               [12] 3225 	xch	a,r0
      000BB1 E5 81            [12] 3226 	mov	a,sp
      000BB3 24 B4            [12] 3227 	add	a,#0xb4
      000BB5 C8               [12] 3228 	xch	a,r0
      000BB6 A6 82            [24] 3229 	mov	@r0,dpl
      000BB8 08               [12] 3230 	inc	r0
      000BB9 A6 83            [24] 3231 	mov	@r0,dph
      000BBB D0 02            [24] 3232 	pop	ar2
      000BBD D0 03            [24] 3233 	pop	ar3
      000BBF C0 02            [24] 3234 	push	ar2
      000BC1 78r00            [12] 3235 	mov	r0,#_packetbuf_hdrptr
      000BC3 79s00            [12] 3236 	mov	r1,#(_packetbuf_hdrptr >> 8)
      000BC5 7As00            [12] 3237 	mov	r2,#(_packetbuf_hdrptr >> 16)
      000BC7 12r00r00         [24] 3238 	lcall	__sdcc_banked_call
      000BCA AB 82            [24] 3239 	mov	r3,dpl
      000BCC AE 83            [24] 3240 	mov	r6,dph
      000BCE AF F0            [24] 3241 	mov	r7,b
      000BD0 D0 02            [24] 3242 	pop	ar2
      000BD2 D0 04            [24] 3243 	pop	ar4
      000BD4 D0 05            [24] 3244 	pop	ar5
      000BD6 C0 05            [24] 3245 	push	ar5
      000BD8 C0 04            [24] 3246 	push	ar4
      000BDA C0 03            [24] 3247 	push	ar3
      000BDC C0 02            [24] 3248 	push	ar2
      000BDE E5 81            [12] 3249 	mov	a,sp
      000BE0 24 B4            [12] 3250 	add	a,#0xb4
      000BE2 F8               [12] 3251 	mov	r0,a
      000BE3 E6               [12] 3252 	mov	a,@r0
      000BE4 C0 E0            [24] 3253 	push	acc
      000BE6 08               [12] 3254 	inc	r0
      000BE7 E6               [12] 3255 	mov	a,@r0
      000BE8 C0 E0            [24] 3256 	push	acc
      000BEA C0 02            [24] 3257 	push	ar2
      000BEC C0 04            [24] 3258 	push	ar4
      000BEE C0 05            [24] 3259 	push	ar5
      000BF0 8B 82            [24] 3260 	mov	dpl,r3
      000BF2 8E 83            [24] 3261 	mov	dph,r6
      000BF4 8F F0            [24] 3262 	mov	b,r7
      000BF6 D0 02            [24] 3263 	pop	ar2
      000BF8 D0 01            [24] 3264 	pop	ar1
      000BFA D0 00            [24] 3265 	pop	ar0
      000BFC 12r00r00         [24] 3266 	lcall	__sdcc_banked_call
      000BFF 15 81            [12] 3267 	dec	sp
      000C01 15 81            [12] 3268 	dec	sp
      000C03 D0 02            [24] 3269 	pop	ar2
      000C05 D0 03            [24] 3270 	pop	ar3
      000C07 D0 04            [24] 3271 	pop	ar4
      000C09 D0 05            [24] 3272 	pop	ar5
                                   3273 ;	../../../core/net/mac/xmac.c:650: off();
      000C0B C0 03            [24] 3274 	push	ar3
      000C0D 78r3E            [12] 3275 	mov	r0,#_off
      000C0F 79s00            [12] 3276 	mov	r1,#(_off >> 8)
      000C11 7As00            [12] 3277 	mov	r2,#(_off >> 16)
      000C13 12r00r00         [24] 3278 	lcall	__sdcc_banked_call
      000C16 D0 03            [24] 3279 	pop	ar3
      000C18 D0 03            [24] 3280 	pop	ar3
      000C1A 02r0ArCD         [24] 3281 	ljmp	00168$
      000C1D                       3282 00135$:
                                   3283 ;	../../../core/net/mac/xmac.c:655: on();
      000C1D C0 03            [24] 3284 	push	ar3
      000C1F C0 03            [24] 3285 	push	ar3
      000C21 78r00            [12] 3286 	mov	r0,#_on
      000C23 79s00            [12] 3287 	mov	r1,#(_on >> 8)
      000C25 7As00            [12] 3288 	mov	r2,#(_on >> 16)
      000C27 12r00r00         [24] 3289 	lcall	__sdcc_banked_call
      000C2A D0 03            [24] 3290 	pop	ar3
                                   3291 ;	../../../core/net/mac/xmac.c:656: ret = NETSTACK_RADIO.send(strobe, strobe_len);
      000C2C 90r00r09         [24] 3292 	mov	dptr,#(_cc2530_rf_driver + 0x0009)
      000C2F E4               [12] 3293 	clr	a
      000C30 93               [24] 3294 	movc	a,@a+dptr
      000C31 FD               [12] 3295 	mov	r5,a
      000C32 A3               [24] 3296 	inc	dptr
      000C33 E4               [12] 3297 	clr	a
      000C34 93               [24] 3298 	movc	a,@a+dptr
      000C35 FE               [12] 3299 	mov	r6,a
      000C36 A3               [24] 3300 	inc	dptr
      000C37 E4               [12] 3301 	clr	a
      000C38 93               [24] 3302 	movc	a,@a+dptr
      000C39 FF               [12] 3303 	mov	r7,a
      000C3A E5 81            [12] 3304 	mov	a,sp
      000C3C 24 F2            [12] 3305 	add	a,#0xf2
      000C3E F8               [12] 3306 	mov	r0,a
      000C3F E5 81            [12] 3307 	mov	a,sp
      000C41 24 B8            [12] 3308 	add	a,#0xb8
      000C43 F9               [12] 3309 	mov	r1,a
      000C44 E6               [12] 3310 	mov	a,@r0
      000C45 F7               [12] 3311 	mov	@r1,a
      000C46 08               [12] 3312 	inc	r0
      000C47 09               [12] 3313 	inc	r1
      000C48 E6               [12] 3314 	mov	a,@r0
      000C49 F7               [12] 3315 	mov	@r1,a
      000C4A E5 81            [12] 3316 	mov	a,sp
      000C4C 24 B7            [12] 3317 	add	a,#0xb7
      000C4E F8               [12] 3318 	mov	r0,a
      000C4F 86 02            [24] 3319 	mov	ar2,@r0
      000C51 7B 00            [12] 3320 	mov	r3,#0x00
      000C53 7C 40            [12] 3321 	mov	r4,#0x40
      000C55 C0 07            [24] 3322 	push	ar7
      000C57 C0 06            [24] 3323 	push	ar6
      000C59 C0 05            [24] 3324 	push	ar5
      000C5B C0 03            [24] 3325 	push	ar3
      000C5D E5 81            [12] 3326 	mov	a,sp
      000C5F 24 B4            [12] 3327 	add	a,#0xb4
      000C61 F8               [12] 3328 	mov	r0,a
      000C62 E6               [12] 3329 	mov	a,@r0
      000C63 C0 E0            [24] 3330 	push	acc
      000C65 08               [12] 3331 	inc	r0
      000C66 E6               [12] 3332 	mov	a,@r0
      000C67 C0 E0            [24] 3333 	push	acc
      000C69 C0 05            [24] 3334 	push	ar5
      000C6B C0 06            [24] 3335 	push	ar6
      000C6D C0 07            [24] 3336 	push	ar7
      000C6F 8A 82            [24] 3337 	mov	dpl,r2
      000C71 8B 83            [24] 3338 	mov	dph,r3
      000C73 8C F0            [24] 3339 	mov	b,r4
      000C75 D0 02            [24] 3340 	pop	ar2
      000C77 D0 01            [24] 3341 	pop	ar1
      000C79 D0 00            [24] 3342 	pop	ar0
      000C7B 12r00r00         [24] 3343 	lcall	__sdcc_banked_call
      000C7E 15 81            [12] 3344 	dec	sp
      000C80 15 81            [12] 3345 	dec	sp
      000C82 D0 03            [24] 3346 	pop	ar3
      000C84 D0 05            [24] 3347 	pop	ar5
      000C86 D0 06            [24] 3348 	pop	ar6
      000C88 D0 07            [24] 3349 	pop	ar7
                                   3350 ;	../../../core/net/mac/xmac.c:672: if(detect_ack()) {
      000C8A C0 03            [24] 3351 	push	ar3
      000C8C 78r6E            [12] 3352 	mov	r0,#_detect_ack
      000C8E 79s04            [12] 3353 	mov	r1,#(_detect_ack >> 8)
      000C90 7As00            [12] 3354 	mov	r2,#(_detect_ack >> 16)
      000C92 12r00r00         [24] 3355 	lcall	__sdcc_banked_call
      000C95 E5 82            [12] 3356 	mov	a,dpl
      000C97 85 83 F0         [24] 3357 	mov	b,dph
      000C9A D0 03            [24] 3358 	pop	ar3
      000C9C D0 03            [24] 3359 	pop	ar3
      000C9E 45 F0            [12] 3360 	orl	a,b
      000CA0 60 0A            [24] 3361 	jz	00132$
                                   3362 ;	../../../core/net/mac/xmac.c:673: got_strobe_ack = 1;
      000CA2 E5 81            [12] 3363 	mov	a,sp
      000CA4 24 BF            [12] 3364 	add	a,#0xbf
      000CA6 F8               [12] 3365 	mov	r0,a
      000CA7 76 01            [12] 3366 	mov	@r0,#0x01
      000CA9 02r0ArCD         [24] 3367 	ljmp	00168$
      000CAC                       3368 00132$:
                                   3369 ;	../../../core/net/mac/xmac.c:675: off();
      000CAC C0 03            [24] 3370 	push	ar3
      000CAE 78r3E            [12] 3371 	mov	r0,#_off
      000CB0 79s00            [12] 3372 	mov	r1,#(_off >> 8)
      000CB2 7As00            [12] 3373 	mov	r2,#(_off >> 16)
      000CB4 12r00r00         [24] 3374 	lcall	__sdcc_banked_call
      000CB7 D0 03            [24] 3375 	pop	ar3
                                   3376 ;	../../../core/net/mac/xmac.c:603: strobes++) {
      000CB9 02r0ArCD         [24] 3377 	ljmp	00168$
      000CBC                       3378 00142$:
                                   3379 ;	../../../core/net/mac/xmac.c:700: queuebuf_to_packetbuf(packet);
      000CBC E5 81            [12] 3380 	mov	a,sp
      000CBE 24 FC            [12] 3381 	add	a,#0xfc
      000CC0 F8               [12] 3382 	mov	r0,a
      000CC1 86 82            [24] 3383 	mov	dpl,@r0
      000CC3 08               [12] 3384 	inc	r0
      000CC4 86 83            [24] 3385 	mov	dph,@r0
      000CC6 08               [12] 3386 	inc	r0
      000CC7 86 F0            [24] 3387 	mov	b,@r0
      000CC9 C0 03            [24] 3388 	push	ar3
      000CCB 78r00            [12] 3389 	mov	r0,#_queuebuf_to_packetbuf
      000CCD 79s00            [12] 3390 	mov	r1,#(_queuebuf_to_packetbuf >> 8)
      000CCF 7As00            [12] 3391 	mov	r2,#(_queuebuf_to_packetbuf >> 16)
      000CD1 12r00r00         [24] 3392 	lcall	__sdcc_banked_call
      000CD4 D0 03            [24] 3393 	pop	ar3
                                   3394 ;	../../../core/net/mac/xmac.c:701: queuebuf_free(packet);
      000CD6 E5 81            [12] 3395 	mov	a,sp
      000CD8 24 FC            [12] 3396 	add	a,#0xfc
      000CDA F8               [12] 3397 	mov	r0,a
      000CDB 86 82            [24] 3398 	mov	dpl,@r0
      000CDD 08               [12] 3399 	inc	r0
      000CDE 86 83            [24] 3400 	mov	dph,@r0
      000CE0 08               [12] 3401 	inc	r0
      000CE1 86 F0            [24] 3402 	mov	b,@r0
      000CE3 C0 03            [24] 3403 	push	ar3
      000CE5 78r00            [12] 3404 	mov	r0,#_queuebuf_free
      000CE7 79s00            [12] 3405 	mov	r1,#(_queuebuf_free >> 8)
      000CE9 7As00            [12] 3406 	mov	r2,#(_queuebuf_free >> 16)
      000CEB 12r00r00         [24] 3407 	lcall	__sdcc_banked_call
      000CEE D0 03            [24] 3408 	pop	ar3
                                   3409 ;	../../../core/net/mac/xmac.c:704: if((is_broadcast || got_strobe_ack || is_streaming) && collisions == 0) {
      000CF0 E5 81            [12] 3410 	mov	a,sp
      000CF2 24 F7            [12] 3411 	add	a,#0xf7
      000CF4 F8               [12] 3412 	mov	r0,a
      000CF5 E6               [12] 3413 	mov	a,@r0
      000CF6 08               [12] 3414 	inc	r0
      000CF7 46               [12] 3415 	orl	a,@r0
      000CF8 70 11            [24] 3416 	jnz	00151$
      000CFA E5 81            [12] 3417 	mov	a,sp
      000CFC 24 BF            [12] 3418 	add	a,#0xbf
      000CFE F8               [12] 3419 	mov	r0,a
      000CFF E6               [12] 3420 	mov	a,@r0
      000D00 70 09            [24] 3421 	jnz	00151$
      000D02 90r00r43         [24] 3422 	mov	dptr,#_is_streaming
      000D05 E0               [24] 3423 	movx	a,@dptr
      000D06 70 03            [24] 3424 	jnz	00324$
      000D08 02r0DrB2         [24] 3425 	ljmp	00148$
      000D0B                       3426 00324$:
      000D0B                       3427 00151$:
      000D0B EB               [12] 3428 	mov	a,r3
      000D0C 60 03            [24] 3429 	jz	00325$
      000D0E 02r0DrB2         [24] 3430 	ljmp	00148$
      000D11                       3431 00325$:
                                   3432 ;	../../../core/net/mac/xmac.c:705: ret = NETSTACK_RADIO.send(packetbuf_hdrptr(), packetbuf_totlen());
      000D11 C0 03            [24] 3433 	push	ar3
      000D13 90r00r09         [24] 3434 	mov	dptr,#(_cc2530_rf_driver + 0x0009)
      000D16 E4               [12] 3435 	clr	a
      000D17 93               [24] 3436 	movc	a,@a+dptr
      000D18 FD               [12] 3437 	mov	r5,a
      000D19 A3               [24] 3438 	inc	dptr
      000D1A E4               [12] 3439 	clr	a
      000D1B 93               [24] 3440 	movc	a,@a+dptr
      000D1C FE               [12] 3441 	mov	r6,a
      000D1D A3               [24] 3442 	inc	dptr
      000D1E E4               [12] 3443 	clr	a
      000D1F 93               [24] 3444 	movc	a,@a+dptr
      000D20 FF               [12] 3445 	mov	r7,a
      000D21 C0 07            [24] 3446 	push	ar7
      000D23 C0 06            [24] 3447 	push	ar6
      000D25 C0 05            [24] 3448 	push	ar5
      000D27 C0 03            [24] 3449 	push	ar3
      000D29 78r00            [12] 3450 	mov	r0,#_packetbuf_totlen
      000D2B 79s00            [12] 3451 	mov	r1,#(_packetbuf_totlen >> 8)
      000D2D 7As00            [12] 3452 	mov	r2,#(_packetbuf_totlen >> 16)
      000D2F 12r00r00         [24] 3453 	lcall	__sdcc_banked_call
      000D32 C8               [12] 3454 	xch	a,r0
      000D33 E5 81            [12] 3455 	mov	a,sp
      000D35 24 B4            [12] 3456 	add	a,#0xb4
      000D37 C8               [12] 3457 	xch	a,r0
      000D38 A6 82            [24] 3458 	mov	@r0,dpl
      000D3A 08               [12] 3459 	inc	r0
      000D3B A6 83            [24] 3460 	mov	@r0,dph
      000D3D D0 03            [24] 3461 	pop	ar3
      000D3F 78r00            [12] 3462 	mov	r0,#_packetbuf_hdrptr
      000D41 79s00            [12] 3463 	mov	r1,#(_packetbuf_hdrptr >> 8)
      000D43 7As00            [12] 3464 	mov	r2,#(_packetbuf_hdrptr >> 16)
      000D45 12r00r00         [24] 3465 	lcall	__sdcc_banked_call
      000D48 AA 82            [24] 3466 	mov	r2,dpl
      000D4A AB 83            [24] 3467 	mov	r3,dph
      000D4C AC F0            [24] 3468 	mov	r4,b
      000D4E D0 05            [24] 3469 	pop	ar5
      000D50 D0 06            [24] 3470 	pop	ar6
      000D52 D0 07            [24] 3471 	pop	ar7
      000D54 C0 07            [24] 3472 	push	ar7
      000D56 C0 06            [24] 3473 	push	ar6
      000D58 C0 05            [24] 3474 	push	ar5
      000D5A C0 03            [24] 3475 	push	ar3
      000D5C E5 81            [12] 3476 	mov	a,sp
      000D5E 24 B4            [12] 3477 	add	a,#0xb4
      000D60 F8               [12] 3478 	mov	r0,a
      000D61 E6               [12] 3479 	mov	a,@r0
      000D62 C0 E0            [24] 3480 	push	acc
      000D64 08               [12] 3481 	inc	r0
      000D65 E6               [12] 3482 	mov	a,@r0
      000D66 C0 E0            [24] 3483 	push	acc
      000D68 C0 05            [24] 3484 	push	ar5
      000D6A C0 06            [24] 3485 	push	ar6
      000D6C C0 07            [24] 3486 	push	ar7
      000D6E 8A 82            [24] 3487 	mov	dpl,r2
      000D70 8B 83            [24] 3488 	mov	dph,r3
      000D72 8C F0            [24] 3489 	mov	b,r4
      000D74 D0 02            [24] 3490 	pop	ar2
      000D76 D0 01            [24] 3491 	pop	ar1
      000D78 D0 00            [24] 3492 	pop	ar0
      000D7A 12r00r00         [24] 3493 	lcall	__sdcc_banked_call
      000D7D 15 81            [12] 3494 	dec	sp
      000D7F 15 81            [12] 3495 	dec	sp
      000D81 D0 03            [24] 3496 	pop	ar3
      000D83 D0 05            [24] 3497 	pop	ar5
      000D85 D0 06            [24] 3498 	pop	ar6
      000D87 D0 07            [24] 3499 	pop	ar7
                                   3500 ;	../../../core/net/mac/xmac.c:707: if(!is_broadcast) {
      000D89 D0 03            [24] 3501 	pop	ar3
      000D8B E5 81            [12] 3502 	mov	a,sp
      000D8D 24 F7            [12] 3503 	add	a,#0xf7
      000D8F F8               [12] 3504 	mov	r0,a
      000D90 E6               [12] 3505 	mov	a,@r0
      000D91 08               [12] 3506 	inc	r0
      000D92 46               [12] 3507 	orl	a,@r0
      000D93 70 1D            [24] 3508 	jnz	00148$
                                   3509 ;	../../../core/net/mac/xmac.c:713: if(detect_ack()) {
      000D95 C0 03            [24] 3510 	push	ar3
      000D97 78r6E            [12] 3511 	mov	r0,#_detect_ack
      000D99 79s04            [12] 3512 	mov	r1,#(_detect_ack >> 8)
      000D9B 7As00            [12] 3513 	mov	r2,#(_detect_ack >> 16)
      000D9D 12r00r00         [24] 3514 	lcall	__sdcc_banked_call
      000DA0 E5 82            [12] 3515 	mov	a,dpl
      000DA2 85 83 F0         [24] 3516 	mov	b,dph
      000DA5 D0 03            [24] 3517 	pop	ar3
      000DA7 45 F0            [12] 3518 	orl	a,b
      000DA9 60 07            [24] 3519 	jz	00148$
                                   3520 ;	../../../core/net/mac/xmac.c:714: got_ack = 1;
      000DAB E5 81            [12] 3521 	mov	a,sp
      000DAD 24 C0            [12] 3522 	add	a,#0xc0
      000DAF F8               [12] 3523 	mov	r0,a
      000DB0 76 01            [12] 3524 	mov	@r0,#0x01
      000DB2                       3525 00148$:
                                   3526 ;	../../../core/net/mac/xmac.c:719: off();
      000DB2 C0 03            [24] 3527 	push	ar3
      000DB4 78r3E            [12] 3528 	mov	r0,#_off
      000DB6 79s00            [12] 3529 	mov	r1,#(_off >> 8)
      000DB8 7As00            [12] 3530 	mov	r2,#(_off >> 16)
      000DBA 12r00r00         [24] 3531 	lcall	__sdcc_banked_call
      000DBD D0 03            [24] 3532 	pop	ar3
                                   3533 ;	../../../core/net/mac/xmac.c:722: if(got_strobe_ack && !is_streaming) {
      000DBF E5 81            [12] 3534 	mov	a,sp
      000DC1 24 BF            [12] 3535 	add	a,#0xbf
      000DC3 F8               [12] 3536 	mov	r0,a
      000DC4 E6               [12] 3537 	mov	a,@r0
      000DC5 60 34            [24] 3538 	jz	00153$
      000DC7 90r00r43         [24] 3539 	mov	dptr,#_is_streaming
      000DCA E0               [24] 3540 	movx	a,@dptr
      000DCB 70 2E            [24] 3541 	jnz	00153$
                                   3542 ;	../../../core/net/mac/xmac.c:723: register_encounter(packetbuf_addr(PACKETBUF_ADDR_RECEIVER), encounter_time);
      000DCD 75 82 19         [24] 3543 	mov	dpl,#0x19
      000DD0 C0 03            [24] 3544 	push	ar3
      000DD2 78r00            [12] 3545 	mov	r0,#_packetbuf_addr
      000DD4 79s00            [12] 3546 	mov	r1,#(_packetbuf_addr >> 8)
      000DD6 7As00            [12] 3547 	mov	r2,#(_packetbuf_addr >> 16)
      000DD8 12r00r00         [24] 3548 	lcall	__sdcc_banked_call
      000DDB AD 82            [24] 3549 	mov	r5,dpl
      000DDD AE 83            [24] 3550 	mov	r6,dph
      000DDF AF F0            [24] 3551 	mov	r7,b
      000DE1 E4               [12] 3552 	clr	a
      000DE2 C0 E0            [24] 3553 	push	acc
      000DE4 C0 E0            [24] 3554 	push	acc
      000DE6 8D 82            [24] 3555 	mov	dpl,r5
      000DE8 8E 83            [24] 3556 	mov	dph,r6
      000DEA 8F F0            [24] 3557 	mov	b,r7
      000DEC 78r14            [12] 3558 	mov	r0,#_register_encounter
      000DEE 79s03            [12] 3559 	mov	r1,#(_register_encounter >> 8)
      000DF0 7As00            [12] 3560 	mov	r2,#(_register_encounter >> 16)
      000DF2 12r00r00         [24] 3561 	lcall	__sdcc_banked_call
      000DF5 15 81            [12] 3562 	dec	sp
      000DF7 15 81            [12] 3563 	dec	sp
      000DF9 D0 03            [24] 3564 	pop	ar3
      000DFB                       3565 00153$:
                                   3566 ;	../../../core/net/mac/xmac.c:726: watchdog_start();
      000DFB C0 03            [24] 3567 	push	ar3
      000DFD 78r00            [12] 3568 	mov	r0,#_watchdog_start
      000DFF 79s00            [12] 3569 	mov	r1,#(_watchdog_start >> 8)
      000E01 7As00            [12] 3570 	mov	r2,#(_watchdog_start >> 16)
      000E03 12r00r00         [24] 3571 	lcall	__sdcc_banked_call
      000E06 D0 03            [24] 3572 	pop	ar3
                                   3573 ;	../../../core/net/mac/xmac.c:746: we_are_sending = 0;
      000E08 90r00r0B         [24] 3574 	mov	dptr,#_we_are_sending
      000E0B E4               [12] 3575 	clr	a
      000E0C F0               [24] 3576 	movx	@dptr,a
                                   3577 ;	../../../core/net/mac/xmac.c:749: if(collisions == 0) {
      000E0D EB               [12] 3578 	mov	a,r3
      000E0E 70 1C            [24] 3579 	jnz	00160$
                                   3580 ;	../../../core/net/mac/xmac.c:750: if(is_broadcast == 0 && got_ack == 0) {
      000E10 E5 81            [12] 3581 	mov	a,sp
      000E12 24 F7            [12] 3582 	add	a,#0xf7
      000E14 F8               [12] 3583 	mov	r0,a
      000E15 E6               [12] 3584 	mov	a,@r0
      000E16 08               [12] 3585 	inc	r0
      000E17 46               [12] 3586 	orl	a,@r0
      000E18 70 0D            [24] 3587 	jnz	00156$
      000E1A E5 81            [12] 3588 	mov	a,sp
      000E1C 24 C0            [12] 3589 	add	a,#0xc0
      000E1E F8               [12] 3590 	mov	r0,a
      000E1F E6               [12] 3591 	mov	a,@r0
      000E20 70 05            [24] 3592 	jnz	00156$
                                   3593 ;	../../../core/net/mac/xmac.c:751: return MAC_TX_NOACK;
      000E22 90 00 02         [24] 3594 	mov	dptr,#0x0002
      000E25 80 0E            [24] 3595 	sjmp	00170$
      000E27                       3596 00156$:
                                   3597 ;	../../../core/net/mac/xmac.c:753: return MAC_TX_OK;
      000E27 90 00 00         [24] 3598 	mov	dptr,#0x0000
      000E2A 80 09            [24] 3599 	sjmp	00170$
      000E2C                       3600 00160$:
                                   3601 ;	../../../core/net/mac/xmac.c:756: someone_is_sending++;
      000E2C 90r00r0A         [24] 3602 	mov	dptr,#_someone_is_sending
      000E2F E0               [24] 3603 	movx	a,@dptr
      000E30 04               [12] 3604 	inc	a
      000E31 F0               [24] 3605 	movx	@dptr,a
                                   3606 ;	../../../core/net/mac/xmac.c:757: return MAC_TX_COLLISION;
      000E32 90 00 01         [24] 3607 	mov	dptr,#0x0001
      000E35                       3608 00170$:
                                   3609 ;	../../../core/net/mac/xmac.c:760: }
      000E35 E5 81            [12] 3610 	mov	a,sp
      000E37 24 B7            [12] 3611 	add	a,#0xb7
      000E39 F5 81            [12] 3612 	mov	sp,a
      000E3B 02r00r00         [24] 3613 	ljmp	__sdcc_banked_ret
                                   3614 ;------------------------------------------------------------
                                   3615 ;Allocation info for local variables in function 'qsend_packet'
                                   3616 ;------------------------------------------------------------
                                   3617 ;ptr                       Allocated to stack - sp -7
                                   3618 ;sent                      Allocated to registers r5 r6 r7 
                                   3619 ;ret                       Allocated to stack - sp -1
                                   3620 ;sloc0                     Allocated to stack - sp -1
                                   3621 ;------------------------------------------------------------
                                   3622 ;	../../../core/net/mac/xmac.c:763: qsend_packet(mac_callback_t sent, void *ptr)
                                   3623 ;	-----------------------------------------
                                   3624 ;	 function qsend_packet
                                   3625 ;	-----------------------------------------
      000E3E                       3626 _qsend_packet:
      000E3E 05 81            [12] 3627 	inc	sp
      000E40 05 81            [12] 3628 	inc	sp
      000E42 AD 82            [24] 3629 	mov	r5,dpl
      000E44 AE 83            [24] 3630 	mov	r6,dph
      000E46 AF F0            [24] 3631 	mov	r7,b
                                   3632 ;	../../../core/net/mac/xmac.c:767: if(someone_is_sending) {
      000E48 90r00r0A         [24] 3633 	mov	dptr,#_someone_is_sending
      000E4B E0               [24] 3634 	movx	a,@dptr
      000E4C 60 41            [24] 3635 	jz	00102$
                                   3636 ;	../../../core/net/mac/xmac.c:770: RIMESTATS_ADD(sendingdrop);
      000E4E C0 05            [24] 3637 	push	ar5
      000E50 C0 06            [24] 3638 	push	ar6
      000E52 C0 07            [24] 3639 	push	ar7
      000E54 90r00r3C         [24] 3640 	mov	dptr,#(_rimestats + 0x003c)
      000E57 E0               [24] 3641 	movx	a,@dptr
      000E58 FA               [12] 3642 	mov	r2,a
      000E59 A3               [24] 3643 	inc	dptr
      000E5A E0               [24] 3644 	movx	a,@dptr
      000E5B FB               [12] 3645 	mov	r3,a
      000E5C A3               [24] 3646 	inc	dptr
      000E5D E0               [24] 3647 	movx	a,@dptr
      000E5E FC               [12] 3648 	mov	r4,a
      000E5F A3               [24] 3649 	inc	dptr
      000E60 E0               [24] 3650 	movx	a,@dptr
      000E61 FF               [12] 3651 	mov	r7,a
      000E62 0A               [12] 3652 	inc	r2
      000E63 BA 00 09         [24] 3653 	cjne	r2,#0x00,00120$
      000E66 0B               [12] 3654 	inc	r3
      000E67 BB 00 05         [24] 3655 	cjne	r3,#0x00,00120$
      000E6A 0C               [12] 3656 	inc	r4
      000E6B BC 00 01         [24] 3657 	cjne	r4,#0x00,00120$
      000E6E 0F               [12] 3658 	inc	r7
      000E6F                       3659 00120$:
      000E6F 90r00r3C         [24] 3660 	mov	dptr,#(_rimestats + 0x003c)
      000E72 EA               [12] 3661 	mov	a,r2
      000E73 F0               [24] 3662 	movx	@dptr,a
      000E74 EB               [12] 3663 	mov	a,r3
      000E75 A3               [24] 3664 	inc	dptr
      000E76 F0               [24] 3665 	movx	@dptr,a
      000E77 EC               [12] 3666 	mov	a,r4
      000E78 A3               [24] 3667 	inc	dptr
      000E79 F0               [24] 3668 	movx	@dptr,a
      000E7A EF               [12] 3669 	mov	a,r7
      000E7B A3               [24] 3670 	inc	dptr
      000E7C F0               [24] 3671 	movx	@dptr,a
                                   3672 ;	../../../core/net/mac/xmac.c:771: ret = MAC_TX_COLLISION;
      000E7D E5 81            [12] 3673 	mov	a,sp
      000E7F 24 FC            [12] 3674 	add	a,#0xfc
      000E81 F8               [12] 3675 	mov	r0,a
      000E82 76 01            [12] 3676 	mov	@r0,#0x01
      000E84 08               [12] 3677 	inc	r0
      000E85 76 00            [12] 3678 	mov	@r0,#0x00
      000E87 D0 07            [24] 3679 	pop	ar7
      000E89 D0 06            [24] 3680 	pop	ar6
      000E8B D0 05            [24] 3681 	pop	ar5
      000E8D 80 21            [24] 3682 	sjmp	00106$
      000E8F                       3683 00102$:
                                   3684 ;	../../../core/net/mac/xmac.c:774: ret = send_packet();
      000E8F C0 07            [24] 3685 	push	ar7
      000E91 C0 06            [24] 3686 	push	ar6
      000E93 C0 05            [24] 3687 	push	ar5
      000E95 78r02            [12] 3688 	mov	r0,#_send_packet
      000E97 79s06            [12] 3689 	mov	r1,#(_send_packet >> 8)
      000E99 7As00            [12] 3690 	mov	r2,#(_send_packet >> 16)
      000E9B 12r00r00         [24] 3691 	lcall	__sdcc_banked_call
      000E9E AB 82            [24] 3692 	mov	r3,dpl
      000EA0 AC 83            [24] 3693 	mov	r4,dph
      000EA2 D0 05            [24] 3694 	pop	ar5
      000EA4 D0 06            [24] 3695 	pop	ar6
      000EA6 D0 07            [24] 3696 	pop	ar7
      000EA8 A8 81            [24] 3697 	mov	r0,sp
      000EAA 18               [12] 3698 	dec	r0
      000EAB A6 03            [24] 3699 	mov	@r0,ar3
      000EAD 08               [12] 3700 	inc	r0
      000EAE A6 04            [24] 3701 	mov	@r0,ar4
                                   3702 ;	../../../core/net/mac/xmac.c:777: mac_call_sent_callback(sent, ptr, ret, 1);
      000EB0                       3703 00106$:
      000EB0 ED               [12] 3704 	mov	a,r5
      000EB1 4E               [12] 3705 	orl	a,r6
      000EB2 60 41            [24] 3706 	jz	00109$
      000EB4 C0 07            [24] 3707 	push	ar7
      000EB6 C0 06            [24] 3708 	push	ar6
      000EB8 C0 05            [24] 3709 	push	ar5
      000EBA 74 01            [12] 3710 	mov	a,#0x01
      000EBC C0 E0            [24] 3711 	push	acc
      000EBE E4               [12] 3712 	clr	a
      000EBF C0 E0            [24] 3713 	push	acc
      000EC1 E5 81            [12] 3714 	mov	a,sp
      000EC3 24 FA            [12] 3715 	add	a,#0xfa
      000EC5 F8               [12] 3716 	mov	r0,a
      000EC6 E6               [12] 3717 	mov	a,@r0
      000EC7 C0 E0            [24] 3718 	push	acc
      000EC9 08               [12] 3719 	inc	r0
      000ECA E6               [12] 3720 	mov	a,@r0
      000ECB C0 E0            [24] 3721 	push	acc
      000ECD C0 05            [24] 3722 	push	ar5
      000ECF C0 06            [24] 3723 	push	ar6
      000ED1 C0 07            [24] 3724 	push	ar7
      000ED3 E5 81            [12] 3725 	mov	a,sp
      000ED5 24 EF            [12] 3726 	add	a,#0xef
      000ED7 F8               [12] 3727 	mov	r0,a
      000ED8 86 82            [24] 3728 	mov	dpl,@r0
      000EDA 08               [12] 3729 	inc	r0
      000EDB 86 83            [24] 3730 	mov	dph,@r0
      000EDD 08               [12] 3731 	inc	r0
      000EDE 86 F0            [24] 3732 	mov	b,@r0
      000EE0 D0 02            [24] 3733 	pop	ar2
      000EE2 D0 01            [24] 3734 	pop	ar1
      000EE4 D0 00            [24] 3735 	pop	ar0
      000EE6 12r00r00         [24] 3736 	lcall	__sdcc_banked_call
      000EE9 E5 81            [12] 3737 	mov	a,sp
      000EEB 24 FC            [12] 3738 	add	a,#0xfc
      000EED F5 81            [12] 3739 	mov	sp,a
      000EEF D0 05            [24] 3740 	pop	ar5
      000EF1 D0 06            [24] 3741 	pop	ar6
      000EF3 D0 07            [24] 3742 	pop	ar7
      000EF5                       3743 00109$:
                                   3744 ;	../../../core/net/mac/xmac.c:778: }
      000EF5 15 81            [12] 3745 	dec	sp
      000EF7 15 81            [12] 3746 	dec	sp
      000EF9 02r00r00         [24] 3747 	ljmp	__sdcc_banked_ret
                                   3748 ;------------------------------------------------------------
                                   3749 ;Allocation info for local variables in function 'qsend_list'
                                   3750 ;------------------------------------------------------------
                                   3751 ;ptr                       Allocated to stack - sp -5
                                   3752 ;buf_list                  Allocated to stack - sp -8
                                   3753 ;sent                      Allocated to registers r5 r6 r7 
                                   3754 ;------------------------------------------------------------
                                   3755 ;	../../../core/net/mac/xmac.c:781: qsend_list(mac_callback_t sent, void *ptr, struct rdc_buf_list *buf_list)
                                   3756 ;	-----------------------------------------
                                   3757 ;	 function qsend_list
                                   3758 ;	-----------------------------------------
      000EFC                       3759 _qsend_list:
      000EFC AD 82            [24] 3760 	mov	r5,dpl
      000EFE AE 83            [24] 3761 	mov	r6,dph
      000F00 AF F0            [24] 3762 	mov	r7,b
                                   3763 ;	../../../core/net/mac/xmac.c:783: if(buf_list != NULL) {
      000F02 E5 81            [12] 3764 	mov	a,sp
      000F04 24 F8            [12] 3765 	add	a,#0xf8
      000F06 F8               [12] 3766 	mov	r0,a
      000F07 E6               [12] 3767 	mov	a,@r0
      000F08 08               [12] 3768 	inc	r0
      000F09 46               [12] 3769 	orl	a,@r0
      000F0A 60 68            [24] 3770 	jz	00103$
                                   3771 ;	../../../core/net/mac/xmac.c:784: queuebuf_to_packetbuf(buf_list->buf);
      000F0C E5 81            [12] 3772 	mov	a,sp
      000F0E 24 F8            [12] 3773 	add	a,#0xf8
      000F10 F8               [12] 3774 	mov	r0,a
      000F11 86 02            [24] 3775 	mov	ar2,@r0
      000F13 08               [12] 3776 	inc	r0
      000F14 86 03            [24] 3777 	mov	ar3,@r0
      000F16 08               [12] 3778 	inc	r0
      000F17 86 04            [24] 3779 	mov	ar4,@r0
      000F19 74 03            [12] 3780 	mov	a,#0x03
      000F1B 2A               [12] 3781 	add	a,r2
      000F1C FA               [12] 3782 	mov	r2,a
      000F1D E4               [12] 3783 	clr	a
      000F1E 3B               [12] 3784 	addc	a,r3
      000F1F FB               [12] 3785 	mov	r3,a
      000F20 8A 82            [24] 3786 	mov	dpl,r2
      000F22 8B 83            [24] 3787 	mov	dph,r3
      000F24 8C F0            [24] 3788 	mov	b,r4
      000F26 12r00r00         [24] 3789 	lcall	__gptrget
      000F29 FA               [12] 3790 	mov	r2,a
      000F2A A3               [24] 3791 	inc	dptr
      000F2B 12r00r00         [24] 3792 	lcall	__gptrget
      000F2E FB               [12] 3793 	mov	r3,a
      000F2F A3               [24] 3794 	inc	dptr
      000F30 12r00r00         [24] 3795 	lcall	__gptrget
      000F33 FC               [12] 3796 	mov	r4,a
      000F34 8A 82            [24] 3797 	mov	dpl,r2
      000F36 8B 83            [24] 3798 	mov	dph,r3
      000F38 8C F0            [24] 3799 	mov	b,r4
      000F3A C0 07            [24] 3800 	push	ar7
      000F3C C0 06            [24] 3801 	push	ar6
      000F3E C0 05            [24] 3802 	push	ar5
      000F40 78r00            [12] 3803 	mov	r0,#_queuebuf_to_packetbuf
      000F42 79s00            [12] 3804 	mov	r1,#(_queuebuf_to_packetbuf >> 8)
      000F44 7As00            [12] 3805 	mov	r2,#(_queuebuf_to_packetbuf >> 16)
      000F46 12r00r00         [24] 3806 	lcall	__sdcc_banked_call
      000F49 D0 05            [24] 3807 	pop	ar5
      000F4B D0 06            [24] 3808 	pop	ar6
      000F4D D0 07            [24] 3809 	pop	ar7
                                   3810 ;	../../../core/net/mac/xmac.c:785: qsend_packet(sent, ptr);
      000F4F E5 81            [12] 3811 	mov	a,sp
      000F51 24 FB            [12] 3812 	add	a,#0xfb
      000F53 F8               [12] 3813 	mov	r0,a
      000F54 E6               [12] 3814 	mov	a,@r0
      000F55 C0 E0            [24] 3815 	push	acc
      000F57 08               [12] 3816 	inc	r0
      000F58 E6               [12] 3817 	mov	a,@r0
      000F59 C0 E0            [24] 3818 	push	acc
      000F5B 08               [12] 3819 	inc	r0
      000F5C E6               [12] 3820 	mov	a,@r0
      000F5D C0 E0            [24] 3821 	push	acc
      000F5F 8D 82            [24] 3822 	mov	dpl,r5
      000F61 8E 83            [24] 3823 	mov	dph,r6
      000F63 8F F0            [24] 3824 	mov	b,r7
      000F65 78r3E            [12] 3825 	mov	r0,#_qsend_packet
      000F67 79s0E            [12] 3826 	mov	r1,#(_qsend_packet >> 8)
      000F69 7As00            [12] 3827 	mov	r2,#(_qsend_packet >> 16)
      000F6B 12r00r00         [24] 3828 	lcall	__sdcc_banked_call
      000F6E 15 81            [12] 3829 	dec	sp
      000F70 15 81            [12] 3830 	dec	sp
      000F72 15 81            [12] 3831 	dec	sp
      000F74                       3832 00103$:
                                   3833 ;	../../../core/net/mac/xmac.c:787: }
      000F74 02r00r00         [24] 3834 	ljmp	__sdcc_banked_ret
                                   3835 ;------------------------------------------------------------
                                   3836 ;Allocation info for local variables in function 'input_packet'
                                   3837 ;------------------------------------------------------------
                                   3838 ;hdr                       Allocated to registers r5 r6 r7 
                                   3839 ;i                         Allocated to stack - sp -1
                                   3840 ;sloc0                     Allocated to stack - sp -6
                                   3841 ;sloc1                     Allocated to stack - sp +1
                                   3842 ;sloc2                     Allocated to stack - sp +3
                                   3843 ;sloc3                     Allocated to stack - sp -4
                                   3844 ;sloc4                     Allocated to stack - sp +8
                                   3845 ;------------------------------------------------------------
                                   3846 ;	../../../core/net/mac/xmac.c:790: input_packet(void)
                                   3847 ;	-----------------------------------------
                                   3848 ;	 function input_packet
                                   3849 ;	-----------------------------------------
      000F77                       3850 _input_packet:
      000F77 E5 81            [12] 3851 	mov	a,sp
      000F79 24 07            [12] 3852 	add	a,#0x07
      000F7B F5 81            [12] 3853 	mov	sp,a
                                   3854 ;	../../../core/net/mac/xmac.c:794: if(NETSTACK_FRAMER.parse() >= 0) {
      000F7D 90r00r03         [24] 3855 	mov	dptr,#(_framer_802154 + 0x0003)
      000F80 E4               [12] 3856 	clr	a
      000F81 93               [24] 3857 	movc	a,@a+dptr
      000F82 FD               [12] 3858 	mov	r5,a
      000F83 A3               [24] 3859 	inc	dptr
      000F84 E4               [12] 3860 	clr	a
      000F85 93               [24] 3861 	movc	a,@a+dptr
      000F86 FE               [12] 3862 	mov	r6,a
      000F87 A3               [24] 3863 	inc	dptr
      000F88 E4               [12] 3864 	clr	a
      000F89 93               [24] 3865 	movc	a,@a+dptr
      000F8A FF               [12] 3866 	mov	r7,a
      000F8B C0 07            [24] 3867 	push	ar7
      000F8D C0 05            [24] 3868 	push	ar5
      000F8F C0 06            [24] 3869 	push	ar6
      000F91 C0 07            [24] 3870 	push	ar7
      000F93 D0 02            [24] 3871 	pop	ar2
      000F95 D0 01            [24] 3872 	pop	ar1
      000F97 D0 00            [24] 3873 	pop	ar0
      000F99 12r00r00         [24] 3874 	lcall	__sdcc_banked_call
      000F9C AD 82            [24] 3875 	mov	r5,dpl
      000F9E AE 83            [24] 3876 	mov	r6,dph
      000FA0 D0 07            [24] 3877 	pop	ar7
      000FA2 EE               [12] 3878 	mov	a,r6
      000FA3 30 E7 03         [24] 3879 	jnb	acc.7,00177$
      000FA6 02r12r9B         [24] 3880 	ljmp	00126$
      000FA9                       3881 00177$:
                                   3882 ;	../../../core/net/mac/xmac.c:795: hdr = packetbuf_dataptr();
      000FA9 78r00            [12] 3883 	mov	r0,#_packetbuf_dataptr
      000FAB 79s00            [12] 3884 	mov	r1,#(_packetbuf_dataptr >> 8)
      000FAD 7As00            [12] 3885 	mov	r2,#(_packetbuf_dataptr >> 16)
      000FAF 12r00r00         [24] 3886 	lcall	__sdcc_banked_call
                                   3887 ;	../../../core/net/mac/xmac.c:797: if(hdr->dispatch != DISPATCH) {
      000FB2 AD 82            [24] 3888 	mov	r5,dpl
      000FB4 AE 83            [24] 3889 	mov	r6,dph
      000FB6 AF F0            [24] 3890 	mov	r7,b
      000FB8 12r00r00         [24] 3891 	lcall	__gptrget
      000FBB 70 03            [24] 3892 	jnz	00178$
      000FBD 02r11rF2         [24] 3893 	ljmp	00118$
      000FC0                       3894 00178$:
                                   3895 ;	../../../core/net/mac/xmac.c:798: someone_is_sending = 0;
      000FC0 90r00r0A         [24] 3896 	mov	dptr,#_someone_is_sending
      000FC3 E4               [12] 3897 	clr	a
      000FC4 F0               [24] 3898 	movx	@dptr,a
                                   3899 ;	../../../core/net/mac/xmac.c:800: &rimeaddr_node_addr) ||
                                   3900 ;	../../../core/net/mac/xmac.c:799: if(rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
      000FC5 75 82 19         [24] 3901 	mov	dpl,#0x19
      000FC8 78r00            [12] 3902 	mov	r0,#_packetbuf_addr
      000FCA 79s00            [12] 3903 	mov	r1,#(_packetbuf_addr >> 8)
      000FCC 7As00            [12] 3904 	mov	r2,#(_packetbuf_addr >> 16)
      000FCE 12r00r00         [24] 3905 	lcall	__sdcc_banked_call
      000FD1 AA 82            [24] 3906 	mov	r2,dpl
      000FD3 AB 83            [24] 3907 	mov	r3,dph
      000FD5 AC F0            [24] 3908 	mov	r4,b
      000FD7 74r00            [12] 3909 	mov	a,#_rimeaddr_node_addr
      000FD9 C0 E0            [24] 3910 	push	acc
      000FDB 74s00            [12] 3911 	mov	a,#(_rimeaddr_node_addr >> 8)
      000FDD C0 E0            [24] 3912 	push	acc
      000FDF E4               [12] 3913 	clr	a
      000FE0 C0 E0            [24] 3914 	push	acc
      000FE2 8A 82            [24] 3915 	mov	dpl,r2
      000FE4 8B 83            [24] 3916 	mov	dph,r3
      000FE6 8C F0            [24] 3917 	mov	b,r4
      000FE8 78r00            [12] 3918 	mov	r0,#_rimeaddr_cmp
      000FEA 79s00            [12] 3919 	mov	r1,#(_rimeaddr_cmp >> 8)
      000FEC 7As00            [12] 3920 	mov	r2,#(_rimeaddr_cmp >> 16)
      000FEE 12r00r00         [24] 3921 	lcall	__sdcc_banked_call
      000FF1 AB 82            [24] 3922 	mov	r3,dpl
      000FF3 AC 83            [24] 3923 	mov	r4,dph
      000FF5 15 81            [12] 3924 	dec	sp
      000FF7 15 81            [12] 3925 	dec	sp
      000FF9 15 81            [12] 3926 	dec	sp
      000FFB EB               [12] 3927 	mov	a,r3
      000FFC 4C               [12] 3928 	orl	a,r4
      000FFD 70 3E            [24] 3929 	jnz	00106$
                                   3930 ;	../../../core/net/mac/xmac.c:802: &rimeaddr_null)) {
                                   3931 ;	../../../core/net/mac/xmac.c:801: rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
      000FFF 75 82 19         [24] 3932 	mov	dpl,#0x19
      001002 78r00            [12] 3933 	mov	r0,#_packetbuf_addr
      001004 79s00            [12] 3934 	mov	r1,#(_packetbuf_addr >> 8)
      001006 7As00            [12] 3935 	mov	r2,#(_packetbuf_addr >> 16)
      001008 12r00r00         [24] 3936 	lcall	__sdcc_banked_call
      00100B AA 82            [24] 3937 	mov	r2,dpl
      00100D AB 83            [24] 3938 	mov	r3,dph
      00100F AC F0            [24] 3939 	mov	r4,b
      001011 74r00            [12] 3940 	mov	a,#_rimeaddr_null
      001013 C0 E0            [24] 3941 	push	acc
      001015 74s00            [12] 3942 	mov	a,#(_rimeaddr_null >> 8)
      001017 C0 E0            [24] 3943 	push	acc
      001019 74 80            [12] 3944 	mov	a,#0x80
      00101B C0 E0            [24] 3945 	push	acc
      00101D 8A 82            [24] 3946 	mov	dpl,r2
      00101F 8B 83            [24] 3947 	mov	dph,r3
      001021 8C F0            [24] 3948 	mov	b,r4
      001023 78r00            [12] 3949 	mov	r0,#_rimeaddr_cmp
      001025 79s00            [12] 3950 	mov	r1,#(_rimeaddr_cmp >> 8)
      001027 7As00            [12] 3951 	mov	r2,#(_rimeaddr_cmp >> 16)
      001029 12r00r00         [24] 3952 	lcall	__sdcc_banked_call
      00102C AB 82            [24] 3953 	mov	r3,dpl
      00102E AC 83            [24] 3954 	mov	r4,dph
      001030 15 81            [12] 3955 	dec	sp
      001032 15 81            [12] 3956 	dec	sp
      001034 15 81            [12] 3957 	dec	sp
      001036 EB               [12] 3958 	mov	a,r3
      001037 4C               [12] 3959 	orl	a,r4
      001038 70 03            [24] 3960 	jnz	00180$
      00103A 02r12r9B         [24] 3961 	ljmp	00126$
      00103D                       3962 00180$:
      00103D                       3963 00106$:
                                   3964 ;	../../../core/net/mac/xmac.c:808: off();
      00103D 78r3E            [12] 3965 	mov	r0,#_off
      00103F 79s00            [12] 3966 	mov	r1,#(_off >> 8)
      001041 7As00            [12] 3967 	mov	r2,#(_off >> 16)
      001043 12r00r00         [24] 3968 	lcall	__sdcc_banked_call
                                   3969 ;	../../../core/net/mac/xmac.c:814: for(i = 0; i < MAX_SEQNOS; ++i) {
      001046 A8 81            [24] 3970 	mov	r0,sp
      001048 18               [12] 3971 	dec	r0
      001049 E4               [12] 3972 	clr	a
      00104A F6               [12] 3973 	mov	@r0,a
      00104B 08               [12] 3974 	inc	r0
      00104C F6               [12] 3975 	mov	@r0,a
      00104D E5 81            [12] 3976 	mov	a,sp
      00104F 24 FA            [12] 3977 	add	a,#0xfa
      001051 F8               [12] 3978 	mov	r0,a
      001052 E4               [12] 3979 	clr	a
      001053 F6               [12] 3980 	mov	@r0,a
      001054 08               [12] 3981 	inc	r0
      001055 F6               [12] 3982 	mov	@r0,a
      001056                       3983 00122$:
                                   3984 ;	../../../core/net/mac/xmac.c:815: if(packetbuf_attr(PACKETBUF_ATTR_PACKET_ID) == received_seqnos[i].seqno &&
      001056 75 82 0D         [24] 3985 	mov	dpl,#0x0d
      001059 78r00            [12] 3986 	mov	r0,#_packetbuf_attr
      00105B 79s00            [12] 3987 	mov	r1,#(_packetbuf_attr >> 8)
      00105D 7As00            [12] 3988 	mov	r2,#(_packetbuf_attr >> 16)
      00105F 12r00r00         [24] 3989 	lcall	__sdcc_banked_call
      001062 AF 82            [24] 3990 	mov	r7,dpl
      001064 AE 83            [24] 3991 	mov	r6,dph
      001066 E5 81            [12] 3992 	mov	a,sp
      001068 24 FA            [12] 3993 	add	a,#0xfa
      00106A F8               [12] 3994 	mov	r0,a
      00106B E6               [12] 3995 	mov	a,@r0
      00106C 24r56            [12] 3996 	add	a,#_received_seqnos
      00106E FB               [12] 3997 	mov	r3,a
      00106F 08               [12] 3998 	inc	r0
      001070 E6               [12] 3999 	mov	a,@r0
      001071 34s00            [12] 4000 	addc	a,#(_received_seqnos >> 8)
      001073 FD               [12] 4001 	mov	r5,a
      001074 74 08            [12] 4002 	mov	a,#0x08
      001076 2B               [12] 4003 	add	a,r3
      001077 F5 82            [12] 4004 	mov	dpl,a
      001079 E4               [12] 4005 	clr	a
      00107A 3D               [12] 4006 	addc	a,r5
      00107B F5 83            [12] 4007 	mov	dph,a
      00107D E0               [24] 4008 	movx	a,@dptr
      00107E FA               [12] 4009 	mov	r2,a
      00107F 7C 00            [12] 4010 	mov	r4,#0x00
      001081 EF               [12] 4011 	mov	a,r7
      001082 B5 02 38         [24] 4012 	cjne	a,ar2,00123$
      001085 EE               [12] 4013 	mov	a,r6
      001086 B5 04 34         [24] 4014 	cjne	a,ar4,00123$
                                   4015 ;	../../../core/net/mac/xmac.c:817: &received_seqnos[i].sender)) {
      001089 8D 04            [24] 4016 	mov	ar4,r5
      00108B 8B 07            [24] 4017 	mov	ar7,r3
      00108D 8C 06            [24] 4018 	mov	ar6,r4
      00108F 7D 00            [12] 4019 	mov	r5,#0x00
                                   4020 ;	../../../core/net/mac/xmac.c:816: rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_SENDER),
      001091 75 82 18         [24] 4021 	mov	dpl,#0x18
      001094 C0 07            [24] 4022 	push	ar7
      001096 C0 06            [24] 4023 	push	ar6
      001098 C0 05            [24] 4024 	push	ar5
      00109A 78r00            [12] 4025 	mov	r0,#_packetbuf_addr
      00109C 79s00            [12] 4026 	mov	r1,#(_packetbuf_addr >> 8)
      00109E 7As00            [12] 4027 	mov	r2,#(_packetbuf_addr >> 16)
      0010A0 12r00r00         [24] 4028 	lcall	__sdcc_banked_call
      0010A3 78r00            [12] 4029 	mov	r0,#_rimeaddr_cmp
      0010A5 79s00            [12] 4030 	mov	r1,#(_rimeaddr_cmp >> 8)
      0010A7 7As00            [12] 4031 	mov	r2,#(_rimeaddr_cmp >> 16)
      0010A9 12r00r00         [24] 4032 	lcall	__sdcc_banked_call
      0010AC AB 82            [24] 4033 	mov	r3,dpl
      0010AE AC 83            [24] 4034 	mov	r4,dph
      0010B0 15 81            [12] 4035 	dec	sp
      0010B2 15 81            [12] 4036 	dec	sp
      0010B4 15 81            [12] 4037 	dec	sp
      0010B6 EB               [12] 4038 	mov	a,r3
      0010B7 4C               [12] 4039 	orl	a,r4
      0010B8 60 03            [24] 4040 	jz	00123$
                                   4041 ;	../../../core/net/mac/xmac.c:819: return;
      0010BA 02r12r9B         [24] 4042 	ljmp	00126$
      0010BD                       4043 00123$:
                                   4044 ;	../../../core/net/mac/xmac.c:814: for(i = 0; i < MAX_SEQNOS; ++i) {
      0010BD E5 81            [12] 4045 	mov	a,sp
      0010BF 24 FA            [12] 4046 	add	a,#0xfa
      0010C1 F8               [12] 4047 	mov	r0,a
      0010C2 74 09            [12] 4048 	mov	a,#0x09
      0010C4 26               [12] 4049 	add	a,@r0
      0010C5 F6               [12] 4050 	mov	@r0,a
      0010C6 E4               [12] 4051 	clr	a
      0010C7 08               [12] 4052 	inc	r0
      0010C8 36               [12] 4053 	addc	a,@r0
      0010C9 F6               [12] 4054 	mov	@r0,a
      0010CA A8 81            [24] 4055 	mov	r0,sp
      0010CC 18               [12] 4056 	dec	r0
      0010CD 06               [12] 4057 	inc	@r0
      0010CE B6 00 02         [24] 4058 	cjne	@r0,#0x00,00184$
      0010D1 08               [12] 4059 	inc	r0
      0010D2 06               [12] 4060 	inc	@r0
      0010D3                       4061 00184$:
      0010D3 A8 81            [24] 4062 	mov	r0,sp
      0010D5 18               [12] 4063 	dec	r0
      0010D6 C3               [12] 4064 	clr	c
      0010D7 E6               [12] 4065 	mov	a,@r0
      0010D8 94 08            [12] 4066 	subb	a,#0x08
      0010DA 08               [12] 4067 	inc	r0
      0010DB E6               [12] 4068 	mov	a,@r0
      0010DC 64 80            [12] 4069 	xrl	a,#0x80
      0010DE 94 80            [12] 4070 	subb	a,#0x80
      0010E0 50 03            [24] 4071 	jnc	00185$
      0010E2 02r10r56         [24] 4072 	ljmp	00122$
      0010E5                       4073 00185$:
                                   4074 ;	../../../core/net/mac/xmac.c:822: for(i = MAX_SEQNOS - 1; i > 0; --i) {
      0010E5 A8 81            [24] 4075 	mov	r0,sp
      0010E7 18               [12] 4076 	dec	r0
      0010E8 76 07            [12] 4077 	mov	@r0,#0x07
      0010EA 08               [12] 4078 	inc	r0
      0010EB 76 00            [12] 4079 	mov	@r0,#0x00
      0010ED E5 81            [12] 4080 	mov	a,sp
      0010EF 24 FC            [12] 4081 	add	a,#0xfc
      0010F1 F8               [12] 4082 	mov	r0,a
      0010F2 76 3F            [12] 4083 	mov	@r0,#0x3f
      0010F4 08               [12] 4084 	inc	r0
      0010F5 76 00            [12] 4085 	mov	@r0,#0x00
      0010F7                       4086 00124$:
                                   4087 ;	../../../core/net/mac/xmac.c:823: memcpy(&received_seqnos[i], &received_seqnos[i - 1],
      0010F7 A8 81            [24] 4088 	mov	r0,sp
      0010F9 18               [12] 4089 	dec	r0
      0010FA 86 03            [24] 4090 	mov	ar3,@r0
      0010FC 1B               [12] 4091 	dec	r3
      0010FD C2 D5            [12] 4092 	clr	F0
      0010FF 75 F0 09         [24] 4093 	mov	b,#0x09
      001102 EB               [12] 4094 	mov	a,r3
      001103 30 E7 04         [24] 4095 	jnb	acc.7,00186$
      001106 B2 D5            [12] 4096 	cpl	F0
      001108 F4               [12] 4097 	cpl	a
      001109 04               [12] 4098 	inc	a
      00110A                       4099 00186$:
      00110A A4               [48] 4100 	mul	ab
      00110B 30 D5 0A         [24] 4101 	jnb	F0,00187$
      00110E F4               [12] 4102 	cpl	a
      00110F 24 01            [12] 4103 	add	a,#0x01
      001111 C5 F0            [12] 4104 	xch	a,b
      001113 F4               [12] 4105 	cpl	a
      001114 34 00            [12] 4106 	addc	a,#0x00
      001116 C5 F0            [12] 4107 	xch	a,b
      001118                       4108 00187$:
      001118 24r56            [12] 4109 	add	a,#_received_seqnos
      00111A FB               [12] 4110 	mov	r3,a
      00111B 74s00            [12] 4111 	mov	a,#(_received_seqnos >> 8)
      00111D 35 F0            [12] 4112 	addc	a,b
      00111F FC               [12] 4113 	mov	r4,a
      001120 8B 07            [24] 4114 	mov	ar7,r3
      001122 8C 06            [24] 4115 	mov	ar6,r4
      001124 7D 00            [12] 4116 	mov	r5,#0x00
      001126 E5 81            [12] 4117 	mov	a,sp
      001128 24 FC            [12] 4118 	add	a,#0xfc
      00112A F8               [12] 4119 	mov	r0,a
      00112B E6               [12] 4120 	mov	a,@r0
      00112C 24r56            [12] 4121 	add	a,#_received_seqnos
      00112E FB               [12] 4122 	mov	r3,a
      00112F 08               [12] 4123 	inc	r0
      001130 E6               [12] 4124 	mov	a,@r0
      001131 34s00            [12] 4125 	addc	a,#(_received_seqnos >> 8)
      001133 FC               [12] 4126 	mov	r4,a
      001134 7A 00            [12] 4127 	mov	r2,#0x00
      001136 74 09            [12] 4128 	mov	a,#0x09
      001138 C0 E0            [24] 4129 	push	acc
      00113A E4               [12] 4130 	clr	a
      00113B C0 E0            [24] 4131 	push	acc
      00113D C0 07            [24] 4132 	push	ar7
      00113F C0 06            [24] 4133 	push	ar6
      001141 C0 05            [24] 4134 	push	ar5
      001143 8B 82            [24] 4135 	mov	dpl,r3
      001145 8C 83            [24] 4136 	mov	dph,r4
      001147 8A F0            [24] 4137 	mov	b,r2
      001149 78r00            [12] 4138 	mov	r0,#___memcpy
      00114B 79s00            [12] 4139 	mov	r1,#(___memcpy >> 8)
      00114D 7As00            [12] 4140 	mov	r2,#(___memcpy >> 16)
      00114F 12r00r00         [24] 4141 	lcall	__sdcc_banked_call
      001152 E5 81            [12] 4142 	mov	a,sp
      001154 24 FB            [12] 4143 	add	a,#0xfb
                                   4144 ;	../../../core/net/mac/xmac.c:822: for(i = MAX_SEQNOS - 1; i > 0; --i) {
      001156 F5 81            [12] 4145 	mov	sp,a
      001158 24 FC            [12] 4146 	add	a,#0xfc
      00115A F8               [12] 4147 	mov	r0,a
      00115B E6               [12] 4148 	mov	a,@r0
      00115C 24 F7            [12] 4149 	add	a,#0xf7
      00115E F6               [12] 4150 	mov	@r0,a
      00115F 08               [12] 4151 	inc	r0
      001160 E6               [12] 4152 	mov	a,@r0
      001161 34 FF            [12] 4153 	addc	a,#0xff
      001163 F6               [12] 4154 	mov	@r0,a
      001164 A8 81            [24] 4155 	mov	r0,sp
      001166 18               [12] 4156 	dec	r0
      001167 16               [12] 4157 	dec	@r0
      001168 B6 FF 02         [24] 4158 	cjne	@r0,#0xff,00188$
      00116B 08               [12] 4159 	inc	r0
      00116C 16               [12] 4160 	dec	@r0
      00116D                       4161 00188$:
      00116D A8 81            [24] 4162 	mov	r0,sp
      00116F 18               [12] 4163 	dec	r0
      001170 C3               [12] 4164 	clr	c
      001171 E4               [12] 4165 	clr	a
      001172 96               [12] 4166 	subb	a,@r0
      001173 74 80            [12] 4167 	mov	a,#(0x00 ^ 0x80)
      001175 08               [12] 4168 	inc	r0
      001176 86 F0            [24] 4169 	mov	b,@r0
      001178 63 F0 80         [24] 4170 	xrl	b,#0x80
      00117B 95 F0            [12] 4171 	subb	a,b
      00117D 50 03            [24] 4172 	jnc	00189$
      00117F 02r10rF7         [24] 4173 	ljmp	00124$
      001182                       4174 00189$:
                                   4175 ;	../../../core/net/mac/xmac.c:826: received_seqnos[0].seqno = packetbuf_attr(PACKETBUF_ATTR_PACKET_ID);
      001182 75 82 0D         [24] 4176 	mov	dpl,#0x0d
      001185 78r00            [12] 4177 	mov	r0,#_packetbuf_attr
      001187 79s00            [12] 4178 	mov	r1,#(_packetbuf_attr >> 8)
      001189 7As00            [12] 4179 	mov	r2,#(_packetbuf_attr >> 16)
      00118B 12r00r00         [24] 4180 	lcall	__sdcc_banked_call
      00118E AB 82            [24] 4181 	mov	r3,dpl
      001190 90r00r5E         [24] 4182 	mov	dptr,#(_received_seqnos + 0x0008)
      001193 EB               [12] 4183 	mov	a,r3
      001194 F0               [24] 4184 	movx	@dptr,a
                                   4185 ;	../../../core/net/mac/xmac.c:828: packetbuf_addr(PACKETBUF_ADDR_SENDER));
      001195 75 82 18         [24] 4186 	mov	dpl,#0x18
      001198 78r00            [12] 4187 	mov	r0,#_packetbuf_addr
      00119A 79s00            [12] 4188 	mov	r1,#(_packetbuf_addr >> 8)
      00119C 7As00            [12] 4189 	mov	r2,#(_packetbuf_addr >> 16)
      00119E 12r00r00         [24] 4190 	lcall	__sdcc_banked_call
      0011A1 AA 82            [24] 4191 	mov	r2,dpl
      0011A3 AB 83            [24] 4192 	mov	r3,dph
      0011A5 AC F0            [24] 4193 	mov	r4,b
                                   4194 ;	../../../core/net/mac/xmac.c:827: rimeaddr_copy(&received_seqnos[0].sender,
      0011A7 C0 02            [24] 4195 	push	ar2
      0011A9 C0 03            [24] 4196 	push	ar3
      0011AB C0 04            [24] 4197 	push	ar4
      0011AD 90r00r56         [24] 4198 	mov	dptr,#_received_seqnos
      0011B0 75 F0 00         [24] 4199 	mov	b,#0x00
      0011B3 78r00            [12] 4200 	mov	r0,#_rimeaddr_copy
      0011B5 79s00            [12] 4201 	mov	r1,#(_rimeaddr_copy >> 8)
      0011B7 7As00            [12] 4202 	mov	r2,#(_rimeaddr_copy >> 16)
      0011B9 12r00r00         [24] 4203 	lcall	__sdcc_banked_call
      0011BC 15 81            [12] 4204 	dec	sp
      0011BE 15 81            [12] 4205 	dec	sp
      0011C0 15 81            [12] 4206 	dec	sp
                                   4207 ;	../../../core/net/mac/xmac.c:845: waiting_for_packet = 0;
      0011C2 90r00r09         [24] 4208 	mov	dptr,#_waiting_for_packet
      0011C5 E4               [12] 4209 	clr	a
      0011C6 F0               [24] 4210 	movx	@dptr,a
                                   4211 ;	../../../core/net/mac/xmac.c:848: NETSTACK_MAC.input();
      0011C7 90r00r09         [24] 4212 	mov	dptr,#(_csma_driver + 0x0009)
                                   4213 ;	genFromRTrack removed	clr	a
      0011CA 93               [24] 4214 	movc	a,@a+dptr
      0011CB FA               [12] 4215 	mov	r2,a
      0011CC A3               [24] 4216 	inc	dptr
      0011CD E4               [12] 4217 	clr	a
      0011CE 93               [24] 4218 	movc	a,@a+dptr
      0011CF FB               [12] 4219 	mov	r3,a
      0011D0 A3               [24] 4220 	inc	dptr
      0011D1 E4               [12] 4221 	clr	a
      0011D2 93               [24] 4222 	movc	a,@a+dptr
      0011D3 FC               [12] 4223 	mov	r4,a
      0011D4 C0 04            [24] 4224 	push	ar4
      0011D6 C0 03            [24] 4225 	push	ar3
      0011D8 C0 02            [24] 4226 	push	ar2
      0011DA C0 02            [24] 4227 	push	ar2
      0011DC C0 03            [24] 4228 	push	ar3
      0011DE C0 04            [24] 4229 	push	ar4
      0011E0 D0 02            [24] 4230 	pop	ar2
      0011E2 D0 01            [24] 4231 	pop	ar1
      0011E4 D0 00            [24] 4232 	pop	ar0
      0011E6 12r00r00         [24] 4233 	lcall	__sdcc_banked_call
      0011E9 D0 02            [24] 4234 	pop	ar2
      0011EB D0 03            [24] 4235 	pop	ar3
      0011ED D0 04            [24] 4236 	pop	ar4
                                   4237 ;	../../../core/net/mac/xmac.c:849: return;
      0011EF 02r12r9B         [24] 4238 	ljmp	00126$
      0011F2                       4239 00118$:
                                   4240 ;	../../../core/net/mac/xmac.c:854: } else if(hdr->type == TYPE_STROBE) {
      0011F2 0D               [12] 4241 	inc	r5
      0011F3 BD 00 01         [24] 4242 	cjne	r5,#0x00,00190$
      0011F6 0E               [12] 4243 	inc	r6
      0011F7                       4244 00190$:
      0011F7 8D 82            [24] 4245 	mov	dpl,r5
      0011F9 8E 83            [24] 4246 	mov	dph,r6
      0011FB 8F F0            [24] 4247 	mov	b,r7
      0011FD 12r00r00         [24] 4248 	lcall	__gptrget
      001200 FD               [12] 4249 	mov	r5,a
      001201 BD 10 02         [24] 4250 	cjne	r5,#0x10,00191$
      001204 80 03            [24] 4251 	sjmp	00192$
      001206                       4252 00191$:
      001206 02r12r9B         [24] 4253 	ljmp	00126$
      001209                       4254 00192$:
                                   4255 ;	../../../core/net/mac/xmac.c:855: someone_is_sending = 2;
      001209 90r00r0A         [24] 4256 	mov	dptr,#_someone_is_sending
      00120C 74 02            [12] 4257 	mov	a,#0x02
      00120E F0               [24] 4258 	movx	@dptr,a
                                   4259 ;	../../../core/net/mac/xmac.c:858: &rimeaddr_node_addr)) {
                                   4260 ;	../../../core/net/mac/xmac.c:857: if(rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
      00120F 75 82 19         [24] 4261 	mov	dpl,#0x19
      001212 78r00            [12] 4262 	mov	r0,#_packetbuf_addr
      001214 79s00            [12] 4263 	mov	r1,#(_packetbuf_addr >> 8)
      001216 7As00            [12] 4264 	mov	r2,#(_packetbuf_addr >> 16)
      001218 12r00r00         [24] 4265 	lcall	__sdcc_banked_call
      00121B AD 82            [24] 4266 	mov	r5,dpl
      00121D AE 83            [24] 4267 	mov	r6,dph
      00121F AF F0            [24] 4268 	mov	r7,b
      001221 74r00            [12] 4269 	mov	a,#_rimeaddr_node_addr
      001223 C0 E0            [24] 4270 	push	acc
      001225 74s00            [12] 4271 	mov	a,#(_rimeaddr_node_addr >> 8)
      001227 C0 E0            [24] 4272 	push	acc
      001229 E4               [12] 4273 	clr	a
      00122A C0 E0            [24] 4274 	push	acc
      00122C 8D 82            [24] 4275 	mov	dpl,r5
      00122E 8E 83            [24] 4276 	mov	dph,r6
      001230 8F F0            [24] 4277 	mov	b,r7
      001232 78r00            [12] 4278 	mov	r0,#_rimeaddr_cmp
      001234 79s00            [12] 4279 	mov	r1,#(_rimeaddr_cmp >> 8)
      001236 7As00            [12] 4280 	mov	r2,#(_rimeaddr_cmp >> 16)
      001238 12r00r00         [24] 4281 	lcall	__sdcc_banked_call
      00123B AE 82            [24] 4282 	mov	r6,dpl
      00123D AF 83            [24] 4283 	mov	r7,dph
      00123F 15 81            [12] 4284 	dec	sp
      001241 15 81            [12] 4285 	dec	sp
      001243 15 81            [12] 4286 	dec	sp
      001245 EE               [12] 4287 	mov	a,r6
      001246 4F               [12] 4288 	orl	a,r7
      001247 60 08            [24] 4289 	jz	00112$
                                   4290 ;	../../../core/net/mac/xmac.c:865: waiting_for_packet = 1;
      001249 90r00r09         [24] 4291 	mov	dptr,#_waiting_for_packet
      00124C 74 01            [12] 4292 	mov	a,#0x01
      00124E F0               [24] 4293 	movx	@dptr,a
      00124F 80 4A            [24] 4294 	sjmp	00113$
      001251                       4295 00112$:
                                   4296 ;	../../../core/net/mac/xmac.c:885: &rimeaddr_null)) {
                                   4297 ;	../../../core/net/mac/xmac.c:884: } else if(rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
      001251 75 82 19         [24] 4298 	mov	dpl,#0x19
      001254 78r00            [12] 4299 	mov	r0,#_packetbuf_addr
      001256 79s00            [12] 4300 	mov	r1,#(_packetbuf_addr >> 8)
      001258 7As00            [12] 4301 	mov	r2,#(_packetbuf_addr >> 16)
      00125A 12r00r00         [24] 4302 	lcall	__sdcc_banked_call
      00125D AD 82            [24] 4303 	mov	r5,dpl
      00125F AE 83            [24] 4304 	mov	r6,dph
      001261 AF F0            [24] 4305 	mov	r7,b
      001263 74r00            [12] 4306 	mov	a,#_rimeaddr_null
      001265 C0 E0            [24] 4307 	push	acc
      001267 74s00            [12] 4308 	mov	a,#(_rimeaddr_null >> 8)
      001269 C0 E0            [24] 4309 	push	acc
      00126B 74 80            [12] 4310 	mov	a,#0x80
      00126D C0 E0            [24] 4311 	push	acc
      00126F 8D 82            [24] 4312 	mov	dpl,r5
      001271 8E 83            [24] 4313 	mov	dph,r6
      001273 8F F0            [24] 4314 	mov	b,r7
      001275 78r00            [12] 4315 	mov	r0,#_rimeaddr_cmp
      001277 79s00            [12] 4316 	mov	r1,#(_rimeaddr_cmp >> 8)
      001279 7As00            [12] 4317 	mov	r2,#(_rimeaddr_cmp >> 16)
      00127B 12r00r00         [24] 4318 	lcall	__sdcc_banked_call
      00127E AE 82            [24] 4319 	mov	r6,dpl
      001280 AF 83            [24] 4320 	mov	r7,dph
      001282 15 81            [12] 4321 	dec	sp
      001284 15 81            [12] 4322 	dec	sp
      001286 15 81            [12] 4323 	dec	sp
      001288 EE               [12] 4324 	mov	a,r6
      001289 4F               [12] 4325 	orl	a,r7
      00128A 60 0F            [24] 4326 	jz	00113$
                                   4327 ;	../../../core/net/mac/xmac.c:890: waiting_for_packet = 1;
      00128C 90r00r09         [24] 4328 	mov	dptr,#_waiting_for_packet
      00128F 74 01            [12] 4329 	mov	a,#0x01
      001291 F0               [24] 4330 	movx	@dptr,a
                                   4331 ;	../../../core/net/mac/xmac.c:891: on();
      001292 78r00            [12] 4332 	mov	r0,#_on
      001294 79s00            [12] 4333 	mov	r1,#(_on >> 8)
      001296 7As00            [12] 4334 	mov	r2,#(_on >> 16)
      001298 12r00r00         [24] 4335 	lcall	__sdcc_banked_call
      00129B                       4336 00113$:
                                   4337 ;	../../../core/net/mac/xmac.c:898: return;
                                   4338 ;	../../../core/net/mac/xmac.c:904: } else if(hdr->type == TYPE_STROBE_ACK) {
      00129B                       4339 00126$:
                                   4340 ;	../../../core/net/mac/xmac.c:913: }
      00129B E5 81            [12] 4341 	mov	a,sp
      00129D 24 F9            [12] 4342 	add	a,#0xf9
      00129F F5 81            [12] 4343 	mov	sp,a
      0012A1 02r00r00         [24] 4344 	ljmp	__sdcc_banked_ret
                                   4345 ;------------------------------------------------------------
                                   4346 ;Allocation info for local variables in function 'xmac_set_announcement_radio_txpower'
                                   4347 ;------------------------------------------------------------
                                   4348 ;txpower                   Allocated to registers 
                                   4349 ;------------------------------------------------------------
                                   4350 ;	../../../core/net/mac/xmac.c:964: xmac_set_announcement_radio_txpower(int txpower)
                                   4351 ;	-----------------------------------------
                                   4352 ;	 function xmac_set_announcement_radio_txpower
                                   4353 ;	-----------------------------------------
      0012A4                       4354 _xmac_set_announcement_radio_txpower:
                                   4355 ;	../../../core/net/mac/xmac.c:969: }
      0012A4 02r00r00         [24] 4356 	ljmp	__sdcc_banked_ret
                                   4357 ;------------------------------------------------------------
                                   4358 ;Allocation info for local variables in function 'init'
                                   4359 ;------------------------------------------------------------
                                   4360 ;	../../../core/net/mac/xmac.c:972: init(void)
                                   4361 ;	-----------------------------------------
                                   4362 ;	 function init
                                   4363 ;	-----------------------------------------
      0012A7                       4364 _init:
                                   4365 ;	../../../core/net/mac/xmac.c:974: radio_is_on = 0;
      0012A7 90r00r0C         [24] 4366 	mov	dptr,#_radio_is_on
      0012AA E4               [12] 4367 	clr	a
      0012AB F0               [24] 4368 	movx	@dptr,a
                                   4369 ;	../../../core/net/mac/xmac.c:975: waiting_for_packet = 0;
      0012AC 90r00r09         [24] 4370 	mov	dptr,#_waiting_for_packet
      0012AF F0               [24] 4371 	movx	@dptr,a
                                   4372 ;	../../../core/net/mac/xmac.c:976: PT_INIT(&pt);
      0012B0 90r00r08         [24] 4373 	mov	dptr,#_pt
      0012B3 F0               [24] 4374 	movx	@dptr,a
      0012B4 A3               [24] 4375 	inc	dptr
      0012B5 F0               [24] 4376 	movx	@dptr,a
                                   4377 ;	../../../core/net/mac/xmac.c:978: (void (*)(struct rtimer *, void *))powercycle, NULL);
      0012B6 7Dr25            [12] 4378 	mov	r5,#_powercycle
      0012B8 7Es01            [12] 4379 	mov	r6,#(_powercycle >> 8)
      0012BA 7Fs00            [12] 4380 	mov	r7,#(_powercycle >> 16)
                                   4381 ;	../../../core/net/mac/xmac.c:977: rtimer_set(&rt, RTIMER_NOW() + xmac_config.off_time, 1,
      0012BC AB E2            [24] 4382 	mov	r3,_T1CNTL
      0012BE 7C 00            [12] 4383 	mov	r4,#0x00
      0012C0 A9 E3            [24] 4384 	mov	r1,_T1CNTH
      0012C2 89 02            [24] 4385 	mov	ar2,r1
      0012C4 E4               [12] 4386 	clr	a
      0012C5 2B               [12] 4387 	add	a,r3
      0012C6 FB               [12] 4388 	mov	r3,a
      0012C7 EA               [12] 4389 	mov	a,r2
      0012C8 3C               [12] 4390 	addc	a,r4
      0012C9 FC               [12] 4391 	mov	r4,a
      0012CA 90r00r02         [24] 4392 	mov	dptr,#(_xmac_config + 0x0002)
      0012CD E0               [24] 4393 	movx	a,@dptr
      0012CE F9               [12] 4394 	mov	r1,a
      0012CF A3               [24] 4395 	inc	dptr
      0012D0 E0               [24] 4396 	movx	a,@dptr
      0012D1 FA               [12] 4397 	mov	r2,a
      0012D2 E9               [12] 4398 	mov	a,r1
      0012D3 2B               [12] 4399 	add	a,r3
      0012D4 F9               [12] 4400 	mov	r1,a
      0012D5 EA               [12] 4401 	mov	a,r2
      0012D6 3C               [12] 4402 	addc	a,r4
      0012D7 FA               [12] 4403 	mov	r2,a
      0012D8 E4               [12] 4404 	clr	a
      0012D9 C0 E0            [24] 4405 	push	acc
      0012DB C0 E0            [24] 4406 	push	acc
      0012DD C0 E0            [24] 4407 	push	acc
      0012DF C0 05            [24] 4408 	push	ar5
      0012E1 C0 06            [24] 4409 	push	ar6
      0012E3 C0 07            [24] 4410 	push	ar7
      0012E5 04               [12] 4411 	inc	a
      0012E6 C0 E0            [24] 4412 	push	acc
      0012E8 E4               [12] 4413 	clr	a
      0012E9 C0 E0            [24] 4414 	push	acc
      0012EB C0 01            [24] 4415 	push	ar1
      0012ED C0 02            [24] 4416 	push	ar2
      0012EF 90r00r00         [24] 4417 	mov	dptr,#_rt
      0012F2 75 F0 00         [24] 4418 	mov	b,#0x00
      0012F5 78r00            [12] 4419 	mov	r0,#_rtimer_set
      0012F7 79s00            [12] 4420 	mov	r1,#(_rtimer_set >> 8)
      0012F9 7As00            [12] 4421 	mov	r2,#(_rtimer_set >> 16)
      0012FB 12r00r00         [24] 4422 	lcall	__sdcc_banked_call
      0012FE E5 81            [12] 4423 	mov	a,sp
      001300 24 F6            [12] 4424 	add	a,#0xf6
      001302 F5 81            [12] 4425 	mov	sp,a
                                   4426 ;	../../../core/net/mac/xmac.c:980: xmac_is_on = 1;
      001304 90r00r08         [24] 4427 	mov	dptr,#_xmac_is_on
      001307 74 01            [12] 4428 	mov	a,#0x01
      001309 F0               [24] 4429 	movx	@dptr,a
                                   4430 ;	../../../core/net/mac/xmac.c:983: list_init(encounter_list);
      00130A 90r00r10         [24] 4431 	mov	dptr,#_encounter_list
      00130D E0               [24] 4432 	movx	a,@dptr
      00130E FD               [12] 4433 	mov	r5,a
      00130F A3               [24] 4434 	inc	dptr
      001310 E0               [24] 4435 	movx	a,@dptr
      001311 FE               [12] 4436 	mov	r6,a
      001312 A3               [24] 4437 	inc	dptr
      001313 E0               [24] 4438 	movx	a,@dptr
      001314 FF               [12] 4439 	mov	r7,a
      001315 8D 82            [24] 4440 	mov	dpl,r5
      001317 8E 83            [24] 4441 	mov	dph,r6
      001319 8F F0            [24] 4442 	mov	b,r7
      00131B 78r00            [12] 4443 	mov	r0,#_list_init
      00131D 79s00            [12] 4444 	mov	r1,#(_list_init >> 8)
      00131F 7As00            [12] 4445 	mov	r2,#(_list_init >> 16)
      001321 12r00r00         [24] 4446 	lcall	__sdcc_banked_call
                                   4447 ;	../../../core/net/mac/xmac.c:984: memb_init(&encounter_memb);
      001324 90r00r13         [24] 4448 	mov	dptr,#_encounter_memb
      001327 75 F0 00         [24] 4449 	mov	b,#0x00
      00132A 78r00            [12] 4450 	mov	r0,#_memb_init
      00132C 79s00            [12] 4451 	mov	r1,#(_memb_init >> 8)
      00132E 7As00            [12] 4452 	mov	r2,#(_memb_init >> 16)
      001330 12r00r00         [24] 4453 	lcall	__sdcc_banked_call
                                   4454 ;	../../../core/net/mac/xmac.c:992: }
      001333 02r00r00         [24] 4455 	ljmp	__sdcc_banked_ret
                                   4456 ;------------------------------------------------------------
                                   4457 ;Allocation info for local variables in function 'turn_on'
                                   4458 ;------------------------------------------------------------
                                   4459 ;	../../../core/net/mac/xmac.c:995: turn_on(void)
                                   4460 ;	-----------------------------------------
                                   4461 ;	 function turn_on
                                   4462 ;	-----------------------------------------
      001336                       4463 _turn_on:
                                   4464 ;	../../../core/net/mac/xmac.c:997: xmac_is_on = 1;
      001336 90r00r08         [24] 4465 	mov	dptr,#_xmac_is_on
      001339 74 01            [12] 4466 	mov	a,#0x01
      00133B F0               [24] 4467 	movx	@dptr,a
                                   4468 ;	../../../core/net/mac/xmac.c:999: (void (*)(struct rtimer *, void *))powercycle, NULL);
      00133C 7Dr25            [12] 4469 	mov	r5,#_powercycle
      00133E 7Es01            [12] 4470 	mov	r6,#(_powercycle >> 8)
      001340 7Fs00            [12] 4471 	mov	r7,#(_powercycle >> 16)
                                   4472 ;	../../../core/net/mac/xmac.c:998: rtimer_set(&rt, RTIMER_NOW() + xmac_config.off_time, 1,
      001342 AB E2            [24] 4473 	mov	r3,_T1CNTL
      001344 7C 00            [12] 4474 	mov	r4,#0x00
      001346 A9 E3            [24] 4475 	mov	r1,_T1CNTH
      001348 89 02            [24] 4476 	mov	ar2,r1
      00134A E4               [12] 4477 	clr	a
      00134B 2B               [12] 4478 	add	a,r3
      00134C FB               [12] 4479 	mov	r3,a
      00134D EA               [12] 4480 	mov	a,r2
      00134E 3C               [12] 4481 	addc	a,r4
      00134F FC               [12] 4482 	mov	r4,a
      001350 90r00r02         [24] 4483 	mov	dptr,#(_xmac_config + 0x0002)
      001353 E0               [24] 4484 	movx	a,@dptr
      001354 F9               [12] 4485 	mov	r1,a
      001355 A3               [24] 4486 	inc	dptr
      001356 E0               [24] 4487 	movx	a,@dptr
      001357 FA               [12] 4488 	mov	r2,a
      001358 E9               [12] 4489 	mov	a,r1
      001359 2B               [12] 4490 	add	a,r3
      00135A F9               [12] 4491 	mov	r1,a
      00135B EA               [12] 4492 	mov	a,r2
      00135C 3C               [12] 4493 	addc	a,r4
      00135D FA               [12] 4494 	mov	r2,a
      00135E E4               [12] 4495 	clr	a
      00135F C0 E0            [24] 4496 	push	acc
      001361 C0 E0            [24] 4497 	push	acc
      001363 C0 E0            [24] 4498 	push	acc
      001365 C0 05            [24] 4499 	push	ar5
      001367 C0 06            [24] 4500 	push	ar6
      001369 C0 07            [24] 4501 	push	ar7
      00136B 04               [12] 4502 	inc	a
      00136C C0 E0            [24] 4503 	push	acc
      00136E E4               [12] 4504 	clr	a
      00136F C0 E0            [24] 4505 	push	acc
      001371 C0 01            [24] 4506 	push	ar1
      001373 C0 02            [24] 4507 	push	ar2
      001375 90r00r00         [24] 4508 	mov	dptr,#_rt
      001378 75 F0 00         [24] 4509 	mov	b,#0x00
      00137B 78r00            [12] 4510 	mov	r0,#_rtimer_set
      00137D 79s00            [12] 4511 	mov	r1,#(_rtimer_set >> 8)
      00137F 7As00            [12] 4512 	mov	r2,#(_rtimer_set >> 16)
      001381 12r00r00         [24] 4513 	lcall	__sdcc_banked_call
      001384 E5 81            [12] 4514 	mov	a,sp
      001386 24 F6            [12] 4515 	add	a,#0xf6
      001388 F5 81            [12] 4516 	mov	sp,a
                                   4517 ;	../../../core/net/mac/xmac.c:1000: return 1;
      00138A 90 00 01         [24] 4518 	mov	dptr,#0x0001
                                   4519 ;	../../../core/net/mac/xmac.c:1001: }
      00138D 02r00r00         [24] 4520 	ljmp	__sdcc_banked_ret
                                   4521 ;------------------------------------------------------------
                                   4522 ;Allocation info for local variables in function 'turn_off'
                                   4523 ;------------------------------------------------------------
                                   4524 ;keep_radio_on             Allocated to registers r6 r7 
                                   4525 ;------------------------------------------------------------
                                   4526 ;	../../../core/net/mac/xmac.c:1004: turn_off(int keep_radio_on)
                                   4527 ;	-----------------------------------------
                                   4528 ;	 function turn_off
                                   4529 ;	-----------------------------------------
      001390                       4530 _turn_off:
      001390 AE 82            [24] 4531 	mov	r6,dpl
      001392 AF 83            [24] 4532 	mov	r7,dph
                                   4533 ;	../../../core/net/mac/xmac.c:1006: xmac_is_on = 0;
      001394 90r00r08         [24] 4534 	mov	dptr,#_xmac_is_on
      001397 E4               [12] 4535 	clr	a
      001398 F0               [24] 4536 	movx	@dptr,a
                                   4537 ;	../../../core/net/mac/xmac.c:1007: if(keep_radio_on) {
      001399 EE               [12] 4538 	mov	a,r6
      00139A 4F               [12] 4539 	orl	a,r7
      00139B 60 2B            [24] 4540 	jz	00102$
                                   4541 ;	../../../core/net/mac/xmac.c:1008: return NETSTACK_RADIO.on();
      00139D 90r00r18         [24] 4542 	mov	dptr,#(_cc2530_rf_driver + 0x0018)
      0013A0 E4               [12] 4543 	clr	a
      0013A1 93               [24] 4544 	movc	a,@a+dptr
      0013A2 FD               [12] 4545 	mov	r5,a
      0013A3 A3               [24] 4546 	inc	dptr
      0013A4 E4               [12] 4547 	clr	a
      0013A5 93               [24] 4548 	movc	a,@a+dptr
      0013A6 FE               [12] 4549 	mov	r6,a
      0013A7 A3               [24] 4550 	inc	dptr
      0013A8 E4               [12] 4551 	clr	a
      0013A9 93               [24] 4552 	movc	a,@a+dptr
      0013AA FF               [12] 4553 	mov	r7,a
      0013AB C0 07            [24] 4554 	push	ar7
      0013AD C0 05            [24] 4555 	push	ar5
      0013AF C0 06            [24] 4556 	push	ar6
      0013B1 C0 07            [24] 4557 	push	ar7
      0013B3 D0 02            [24] 4558 	pop	ar2
      0013B5 D0 01            [24] 4559 	pop	ar1
      0013B7 D0 00            [24] 4560 	pop	ar0
      0013B9 12r00r00         [24] 4561 	lcall	__sdcc_banked_call
      0013BC AD 82            [24] 4562 	mov	r5,dpl
      0013BE AE 83            [24] 4563 	mov	r6,dph
      0013C0 D0 07            [24] 4564 	pop	ar7
      0013C2 8D 82            [24] 4565 	mov	dpl,r5
      0013C4 8E 83            [24] 4566 	mov	dph,r6
      0013C6 80 29            [24] 4567 	sjmp	00104$
      0013C8                       4568 00102$:
                                   4569 ;	../../../core/net/mac/xmac.c:1010: return NETSTACK_RADIO.off();
      0013C8 90r00r1B         [24] 4570 	mov	dptr,#(_cc2530_rf_driver + 0x001b)
      0013CB E4               [12] 4571 	clr	a
      0013CC 93               [24] 4572 	movc	a,@a+dptr
      0013CD FD               [12] 4573 	mov	r5,a
      0013CE A3               [24] 4574 	inc	dptr
      0013CF E4               [12] 4575 	clr	a
      0013D0 93               [24] 4576 	movc	a,@a+dptr
      0013D1 FE               [12] 4577 	mov	r6,a
      0013D2 A3               [24] 4578 	inc	dptr
      0013D3 E4               [12] 4579 	clr	a
      0013D4 93               [24] 4580 	movc	a,@a+dptr
      0013D5 FF               [12] 4581 	mov	r7,a
      0013D6 C0 07            [24] 4582 	push	ar7
      0013D8 C0 05            [24] 4583 	push	ar5
      0013DA C0 06            [24] 4584 	push	ar6
      0013DC C0 07            [24] 4585 	push	ar7
      0013DE D0 02            [24] 4586 	pop	ar2
      0013E0 D0 01            [24] 4587 	pop	ar1
      0013E2 D0 00            [24] 4588 	pop	ar0
      0013E4 12r00r00         [24] 4589 	lcall	__sdcc_banked_call
      0013E7 AD 82            [24] 4590 	mov	r5,dpl
      0013E9 AE 83            [24] 4591 	mov	r6,dph
      0013EB D0 07            [24] 4592 	pop	ar7
      0013ED 8D 82            [24] 4593 	mov	dpl,r5
      0013EF 8E 83            [24] 4594 	mov	dph,r6
      0013F1                       4595 00104$:
                                   4596 ;	../../../core/net/mac/xmac.c:1012: }
      0013F1 02r00r00         [24] 4597 	ljmp	__sdcc_banked_ret
                                   4598 ;------------------------------------------------------------
                                   4599 ;Allocation info for local variables in function 'channel_check_interval'
                                   4600 ;------------------------------------------------------------
                                   4601 ;	../../../core/net/mac/xmac.c:1015: channel_check_interval(void)
                                   4602 ;	-----------------------------------------
                                   4603 ;	 function channel_check_interval
                                   4604 ;	-----------------------------------------
      0013F4                       4605 _channel_check_interval:
                                   4606 ;	../../../core/net/mac/xmac.c:1017: return (1ul * CLOCK_SECOND * DEFAULT_PERIOD) / RTIMER_ARCH_SECOND;
      0013F4 90 00 0F         [24] 4607 	mov	dptr,#0x000f
                                   4608 ;	../../../core/net/mac/xmac.c:1018: }
      0013F7 02r00r00         [24] 4609 	ljmp	__sdcc_banked_ret
                                   4610 	.area CSEG    (CODE)
                                   4611 	.area CONST   (CODE)
      000000                       4612 _xmac_driver:
      000000r18s00 80              4613 	.byte __str_0, (__str_0 >> 8),#0x80
      000003rA7s12s00              4614 	.byte _init, (_init >> 8), (_init >> 16)
      000006r3Es0Es00              4615 	.byte _qsend_packet, (_qsend_packet >> 8), (_qsend_packet >> 16)
      000009rFCs0Es00              4616 	.byte _qsend_list, (_qsend_list >> 8), (_qsend_list >> 16)
      00000Cr77s0Fs00              4617 	.byte _input_packet, (_input_packet >> 8), (_input_packet >> 16)
      00000Fr36s13s00              4618 	.byte _turn_on, (_turn_on >> 8), (_turn_on >> 16)
      000012r90s13s00              4619 	.byte _turn_off, (_turn_off >> 8), (_turn_off >> 16)
      000015rF4s13s00              4620 	.byte _channel_check_interval, (_channel_check_interval >> 8), (_channel_check_interval >> 16)
                                   4621 	.area CONST   (CODE)
      000018                       4622 __str_0:
      000018 58 2D 4D 41 43        4623 	.ascii "X-MAC"
      00001D 00                    4624 	.db 0x00
                                   4625 	.area BANK1   (CODE)
                                   4626 	.area XINIT   (CODE)
      000000                       4627 __xinit__xmac_config:
      000000 61 00                 4628 	.byte #0x61, #0x00	; 97
      000002 40 07                 4629 	.byte #0x40, #0x07	; 1856
      000004 C4 08                 4630 	.byte #0xc4, #0x08	; 2244
      000006 3C 00                 4631 	.byte #0x3c, #0x00	; 60
      000008                       4632 __xinit__xmac_is_on:
      000008 00                    4633 	.db #0x00	; 0
      000009                       4634 __xinit__waiting_for_packet:
      000009 00                    4635 	.db #0x00	; 0
      00000A                       4636 __xinit__someone_is_sending:
      00000A 00                    4637 	.db #0x00	; 0
      00000B                       4638 __xinit__we_are_sending:
      00000B 00                    4639 	.db #0x00	; 0
      00000C                       4640 __xinit__radio_is_on:
      00000C 00                    4641 	.db #0x00	; 0
      00000D                       4642 __xinit__encounter_list_list:
                                   4643 ; generic printIvalPtr
      00000D 00 00 00              4644 	.byte #0x00,#0x00,#0x00
      000010                       4645 __xinit__encounter_list:
      000010r0Ds00 00              4646 	.byte _encounter_list_list, (_encounter_list_list >> 8),#0x00
      000013                       4647 __xinit__encounter_memb:
      000013 0D 00                 4648 	.byte #0x0d, #0x00	; 13
      000015 04 00                 4649 	.byte #0x04, #0x00	; 4
      000017r0Bs00 00              4650 	.byte _encounter_memb_memb_count, (_encounter_memb_memb_count >> 8),#0x00
      00001Ar0Fs00 00              4651 	.byte _encounter_memb_memb_mem, (_encounter_memb_memb_mem >> 8),#0x00
                                   4652 	.area CABS    (ABS,CODE)
