                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module neighbor_attr
                                      6 	.optsdcc -mmcs51 --model-huge
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _rimeaddr_cmp
                                     12 	.globl _rimeaddr_copy
                                     13 	.globl _list_remove
                                     14 	.globl _list_push
                                     15 	.globl _list_head
                                     16 	.globl _memb_inmemb
                                     17 	.globl _memb_free
                                     18 	.globl _memb_alloc
                                     19 	.globl _ctimer_stop
                                     20 	.globl _ctimer_set
                                     21 	.globl ___memcpy
                                     22 	.globl _memset
                                     23 	.globl _ACTIVE
                                     24 	.globl _TX_BYTE
                                     25 	.globl _RX_BYTE
                                     26 	.globl _ERR
                                     27 	.globl _FE
                                     28 	.globl _SLAVE
                                     29 	.globl _RE
                                     30 	.globl _MODE
                                     31 	.globl _T3OVFIF
                                     32 	.globl _T3CH0IF
                                     33 	.globl _T3CH1IF
                                     34 	.globl _T4OVFIF
                                     35 	.globl _T4CH0IF
                                     36 	.globl _T4CH1IF
                                     37 	.globl _OVFIM
                                     38 	.globl _B_0
                                     39 	.globl _B_1
                                     40 	.globl _B_2
                                     41 	.globl _B_3
                                     42 	.globl _B_4
                                     43 	.globl _B_5
                                     44 	.globl _B_6
                                     45 	.globl _B_7
                                     46 	.globl _P2IF
                                     47 	.globl _UTX0IF
                                     48 	.globl _UTX1IF
                                     49 	.globl _P1IF
                                     50 	.globl _WDTIF
                                     51 	.globl _ACC_0
                                     52 	.globl _ACC_1
                                     53 	.globl _ACC_2
                                     54 	.globl _ACC_3
                                     55 	.globl _ACC_4
                                     56 	.globl _ACC_5
                                     57 	.globl _ACC_6
                                     58 	.globl _ACC_7
                                     59 	.globl _P
                                     60 	.globl _F1
                                     61 	.globl _OV
                                     62 	.globl _RS0
                                     63 	.globl _RS1
                                     64 	.globl _F0
                                     65 	.globl _AC
                                     66 	.globl _CY
                                     67 	.globl _DMAIF
                                     68 	.globl _T1IF
                                     69 	.globl _T2IF
                                     70 	.globl _T3IF
                                     71 	.globl _T4IF
                                     72 	.globl _P0IF
                                     73 	.globl _STIF
                                     74 	.globl _DMAIE
                                     75 	.globl _T1IE
                                     76 	.globl _T2IE
                                     77 	.globl _T3IE
                                     78 	.globl _T4IE
                                     79 	.globl _P0IE
                                     80 	.globl _RFERRIE
                                     81 	.globl _ADCIE
                                     82 	.globl _URX0IE
                                     83 	.globl _URX1IE
                                     84 	.globl _ENCIE
                                     85 	.globl _STIE
                                     86 	.globl _EA
                                     87 	.globl _P2_0
                                     88 	.globl _P2_1
                                     89 	.globl _P2_2
                                     90 	.globl _P2_3
                                     91 	.globl _P2_4
                                     92 	.globl _P2_5
                                     93 	.globl _P2_6
                                     94 	.globl _P2_7
                                     95 	.globl _ENCIF_0
                                     96 	.globl _ENCIF_1
                                     97 	.globl _P1_0
                                     98 	.globl _P1_1
                                     99 	.globl _P1_2
                                    100 	.globl _P1_3
                                    101 	.globl _P1_4
                                    102 	.globl _P1_5
                                    103 	.globl _P1_6
                                    104 	.globl _P1_7
                                    105 	.globl _IT0
                                    106 	.globl _RFERRIF
                                    107 	.globl _IT1
                                    108 	.globl _URX0IF
                                    109 	.globl _ADCIF
                                    110 	.globl _URX1IF
                                    111 	.globl _P0_0
                                    112 	.globl _P0_1
                                    113 	.globl _P0_2
                                    114 	.globl _P0_3
                                    115 	.globl _P0_4
                                    116 	.globl _P0_5
                                    117 	.globl _P0_6
                                    118 	.globl _P0_7
                                    119 	.globl _WDCTL
                                    120 	.globl _U1GCR
                                    121 	.globl _U1UCR
                                    122 	.globl _U1BAUD
                                    123 	.globl _U1DBUF
                                    124 	.globl _U1CSR
                                    125 	.globl _U0GCR
                                    126 	.globl _U0UCR
                                    127 	.globl _U0BAUD
                                    128 	.globl _U0DBUF
                                    129 	.globl _U0CSR
                                    130 	.globl _TIMIF
                                    131 	.globl _T4CC1
                                    132 	.globl _T4CCTL1
                                    133 	.globl _T4CC0
                                    134 	.globl _T4CCTL0
                                    135 	.globl _T4CTL
                                    136 	.globl _T4CNT
                                    137 	.globl _T3CC1
                                    138 	.globl _T3CCTL1
                                    139 	.globl _T3CC0
                                    140 	.globl _T3CCTL0
                                    141 	.globl _T3CTL
                                    142 	.globl _T3CNT
                                    143 	.globl _T2MSEL
                                    144 	.globl _T2IRQM
                                    145 	.globl _T2MOVF2
                                    146 	.globl _T2MOVF1
                                    147 	.globl _T2MOVF0
                                    148 	.globl _T2M1
                                    149 	.globl _T2M0
                                    150 	.globl _T2IRQF
                                    151 	.globl _T2EVTCFG
                                    152 	.globl _T2CTRL
                                    153 	.globl _T1STAT
                                    154 	.globl _T1CCTL2
                                    155 	.globl _T1CCTL1
                                    156 	.globl _T1CCTL0
                                    157 	.globl _T1CTL
                                    158 	.globl _T1CNTH
                                    159 	.globl _T1CNTL
                                    160 	.globl _T1CC2H
                                    161 	.globl _T1CC2L
                                    162 	.globl _T1CC1H
                                    163 	.globl _T1CC1L
                                    164 	.globl _T1CC0H
                                    165 	.globl _T1CC0L
                                    166 	.globl _CLKCONSTA
                                    167 	.globl _CLKCONCMD
                                    168 	.globl _SLEEPSTA
                                    169 	.globl _SLEEPCMD
                                    170 	.globl _STLOAD
                                    171 	.globl _ST2
                                    172 	.globl _ST1
                                    173 	.globl _ST0
                                    174 	.globl _RFERRF
                                    175 	.globl _RFIRQF0
                                    176 	.globl _RFST
                                    177 	.globl _RFD
                                    178 	.globl _RFIRQF1
                                    179 	.globl _PSBANK
                                    180 	.globl _FMAP
                                    181 	.globl _MEMCTR
                                    182 	.globl __XPAGE
                                    183 	.globl _MPAGE
                                    184 	.globl _PMUX
                                    185 	.globl _P2DIR
                                    186 	.globl _P1DIR
                                    187 	.globl _P0DIR
                                    188 	.globl _P2INP
                                    189 	.globl _P1INP
                                    190 	.globl _P2SEL
                                    191 	.globl _P1SEL
                                    192 	.globl _P0SEL
                                    193 	.globl _APCFG
                                    194 	.globl _PERCFG
                                    195 	.globl _P0INP
                                    196 	.globl _P2IEN
                                    197 	.globl _P1IEN
                                    198 	.globl _P0IEN
                                    199 	.globl _PICTL
                                    200 	.globl _P2IFG
                                    201 	.globl _P1IFG
                                    202 	.globl _P0IFG
                                    203 	.globl _DMAREQ
                                    204 	.globl _DMAARM
                                    205 	.globl _DMA0CFGH
                                    206 	.globl _DMA0CFGL
                                    207 	.globl _DMA1CFGH
                                    208 	.globl _DMA1CFGL
                                    209 	.globl _DMAIRQ
                                    210 	.globl _ENCCS
                                    211 	.globl _ENCDO
                                    212 	.globl _ENCDI
                                    213 	.globl _RNDH
                                    214 	.globl _RNDL
                                    215 	.globl _ADCH
                                    216 	.globl _ADCL
                                    217 	.globl _ADCCON3
                                    218 	.globl _ADCCON2
                                    219 	.globl _ADCCON1
                                    220 	.globl _B
                                    221 	.globl _IRCON2
                                    222 	.globl _ACC
                                    223 	.globl _PSW
                                    224 	.globl _IRCON
                                    225 	.globl _IP1
                                    226 	.globl _IEN1
                                    227 	.globl _IP0
                                    228 	.globl _IEN0
                                    229 	.globl _P2
                                    230 	.globl _S1CON
                                    231 	.globl _IEN2
                                    232 	.globl _S0CON
                                    233 	.globl _DPS
                                    234 	.globl _P1
                                    235 	.globl _TCON
                                    236 	.globl _PCON
                                    237 	.globl _DPH1
                                    238 	.globl _DPL1
                                    239 	.globl _DPH0
                                    240 	.globl _DPL0
                                    241 	.globl _SP
                                    242 	.globl _P0
                                    243 	.globl _X_IEEE_ADDR
                                    244 	.globl _X_INFOPAGE
                                    245 	.globl _X_P2DIR
                                    246 	.globl _X_P1DIR
                                    247 	.globl _X_P0DIR
                                    248 	.globl _X_U1GCR
                                    249 	.globl _X_U1UCR
                                    250 	.globl _X_U1BAUD
                                    251 	.globl _X_U1DBUF
                                    252 	.globl _X_U1CSR
                                    253 	.globl _X_P2INP
                                    254 	.globl _X_P1INP
                                    255 	.globl _X_P2SEL
                                    256 	.globl _X_P1SEL
                                    257 	.globl _X_P0SEL
                                    258 	.globl _X_APCFG
                                    259 	.globl _X_PERCFG
                                    260 	.globl _X_T4CC1
                                    261 	.globl _X_T4CCTL1
                                    262 	.globl _X_T4CC0
                                    263 	.globl _X_T4CCTL0
                                    264 	.globl _X_T4CTL
                                    265 	.globl _X_T4CNT
                                    266 	.globl _X_RFIRQF0
                                    267 	.globl _X_T1CCTL2
                                    268 	.globl _X_T1CCTL1
                                    269 	.globl _X_T1CCTL0
                                    270 	.globl _X_T1CTL
                                    271 	.globl _X_T1CNTH
                                    272 	.globl _X_T1CNTL
                                    273 	.globl _X_RFST
                                    274 	.globl _X_T1CC2H
                                    275 	.globl _X_T1CC2L
                                    276 	.globl _X_T1CC1H
                                    277 	.globl _X_T1CC1L
                                    278 	.globl _X_T1CC0H
                                    279 	.globl _X_T1CC0L
                                    280 	.globl _X_RFD
                                    281 	.globl _X_TIMIF
                                    282 	.globl _X_DMAREQ
                                    283 	.globl _X_DMAARM
                                    284 	.globl _X_DMA0CFGH
                                    285 	.globl _X_DMA0CFGL
                                    286 	.globl _X_DMA1CFGH
                                    287 	.globl _X_DMA1CFGL
                                    288 	.globl _X_DMAIRQ
                                    289 	.globl _X_T3CC1
                                    290 	.globl _X_T3CCTL1
                                    291 	.globl _X_T3CC0
                                    292 	.globl _X_T3CCTL0
                                    293 	.globl _X_T3CTL
                                    294 	.globl _X_T3CNT
                                    295 	.globl _X_WDCTL
                                    296 	.globl _X_MEMCTR
                                    297 	.globl _X_CLKCONCMD
                                    298 	.globl _X_U0GCR
                                    299 	.globl _X_U0UCR
                                    300 	.globl _X_T2MSEL
                                    301 	.globl _X_U0BAUD
                                    302 	.globl _X_U0DBUF
                                    303 	.globl _X_RFERRF
                                    304 	.globl _X_SLEEPCMD
                                    305 	.globl _X_RNDH
                                    306 	.globl _X_RNDL
                                    307 	.globl _X_ADCH
                                    308 	.globl _X_ADCL
                                    309 	.globl _X_ADCCON3
                                    310 	.globl _X_ADCCON2
                                    311 	.globl _X_ADCCON1
                                    312 	.globl _X_ENCCS
                                    313 	.globl _X_ENCDO
                                    314 	.globl _X_ENCDI
                                    315 	.globl _X_T1STAT
                                    316 	.globl _X_PMUX
                                    317 	.globl _X_STLOAD
                                    318 	.globl _X_P2IEN
                                    319 	.globl _X_P0IEN
                                    320 	.globl _X_T2IRQM
                                    321 	.globl _X_T2MOVF2
                                    322 	.globl _X_T2MOVF1
                                    323 	.globl _X_T2MOVF0
                                    324 	.globl _X_T2M1
                                    325 	.globl _X_T2M0
                                    326 	.globl _X_T2IRQF
                                    327 	.globl _X_P2
                                    328 	.globl _X_PSBANK
                                    329 	.globl _X_FMAP
                                    330 	.globl _X_CLKCONSTA
                                    331 	.globl _X_SLEEPSTA
                                    332 	.globl _X_T2EVTCFG
                                    333 	.globl _X_ST2
                                    334 	.globl _X_ST1
                                    335 	.globl _X_ST0
                                    336 	.globl _X_T2CTRL
                                    337 	.globl _X__XPAGE
                                    338 	.globl _X_MPAGE
                                    339 	.globl _X_RFIRQF1
                                    340 	.globl _X_P1
                                    341 	.globl _X_P0INP
                                    342 	.globl _X_P1IEN
                                    343 	.globl _X_PICTL
                                    344 	.globl _X_P2IFG
                                    345 	.globl _X_P1IFG
                                    346 	.globl _X_P0IFG
                                    347 	.globl _X_U0CSR
                                    348 	.globl _X_P0
                                    349 	.globl _USBF5
                                    350 	.globl _USBF4
                                    351 	.globl _USBF3
                                    352 	.globl _USBF2
                                    353 	.globl _USBF1
                                    354 	.globl _USBF0
                                    355 	.globl _USBCNTH
                                    356 	.globl _USBCNTL
                                    357 	.globl _USBCNT0
                                    358 	.globl _USBCSOH
                                    359 	.globl _USBCSOL
                                    360 	.globl _USBMAXO
                                    361 	.globl _USBCSIH
                                    362 	.globl _USBCSIL
                                    363 	.globl _USBCS0
                                    364 	.globl _USBMAXI
                                    365 	.globl _USBCTRL
                                    366 	.globl _USBINDEX
                                    367 	.globl _USBFRMH
                                    368 	.globl _USBFRML
                                    369 	.globl _USBCIE
                                    370 	.globl _USBOIE
                                    371 	.globl _USBIIE
                                    372 	.globl _USBCIF
                                    373 	.globl _USBOIF
                                    374 	.globl _USBIIF
                                    375 	.globl _USBPOW
                                    376 	.globl _USBADDR
                                    377 	.globl _CSPT
                                    378 	.globl _CSPZ
                                    379 	.globl _CSPY
                                    380 	.globl _CSPX
                                    381 	.globl _CSPSTAT
                                    382 	.globl _CSPCTRL
                                    383 	.globl _CSPPROG23
                                    384 	.globl _CSPPROG22
                                    385 	.globl _CSPPROG21
                                    386 	.globl _CSPPROG20
                                    387 	.globl _CSPPROG19
                                    388 	.globl _CSPPROG18
                                    389 	.globl _CSPPROG17
                                    390 	.globl _CSPPROG16
                                    391 	.globl _CSPPROG15
                                    392 	.globl _CSPPROG14
                                    393 	.globl _CSPPROG13
                                    394 	.globl _CSPPROG12
                                    395 	.globl _CSPPROG11
                                    396 	.globl _CSPPROG10
                                    397 	.globl _CSPPROG9
                                    398 	.globl _CSPPROG8
                                    399 	.globl _CSPPROG7
                                    400 	.globl _CSPPROG6
                                    401 	.globl _CSPPROG5
                                    402 	.globl _CSPPROG4
                                    403 	.globl _CSPPROG3
                                    404 	.globl _CSPPROG2
                                    405 	.globl _CSPPROG1
                                    406 	.globl _CSPPROG0
                                    407 	.globl _RFC_OBS_CTRL2
                                    408 	.globl _RFC_OBS_CTRL1
                                    409 	.globl _RFC_OBS_CTRL0
                                    410 	.globl _TXFILTCFG
                                    411 	.globl _PTEST1
                                    412 	.globl _PTEST0
                                    413 	.globl _ATEST
                                    414 	.globl _DACTEST2
                                    415 	.globl _DACTEST1
                                    416 	.globl _DACTEST0
                                    417 	.globl _MDMTEST1
                                    418 	.globl _MDMTEST0
                                    419 	.globl _ADCTEST2
                                    420 	.globl _ADCTEST1
                                    421 	.globl _ADCTEST0
                                    422 	.globl _AGCCTRL3
                                    423 	.globl _AGCCTRL2
                                    424 	.globl _AGCCTRL1
                                    425 	.globl _AGCCTRL0
                                    426 	.globl _FSCAL3
                                    427 	.globl _FSCAL2
                                    428 	.globl _FSCAL1
                                    429 	.globl _FSCAL0
                                    430 	.globl _FSCTRL
                                    431 	.globl _RXCTRL
                                    432 	.globl _FREQEST
                                    433 	.globl _MDMCTRL1
                                    434 	.globl _MDMCTRL0
                                    435 	.globl _RFRND
                                    436 	.globl _RFERRM
                                    437 	.globl _RFIRQM1
                                    438 	.globl _RFIRQM0
                                    439 	.globl _TXLAST_PTR
                                    440 	.globl _TXFIRST_PTR
                                    441 	.globl _RXP1_PTR
                                    442 	.globl _RXLAST_PTR
                                    443 	.globl _RXFIRST_PTR
                                    444 	.globl _TXFIFOCNT
                                    445 	.globl _RXFIFOCNT
                                    446 	.globl _RXFIRST
                                    447 	.globl _RSSISTAT
                                    448 	.globl _RSSI
                                    449 	.globl _CCACTRL1
                                    450 	.globl _CCACTRL0
                                    451 	.globl _FSMCTRL
                                    452 	.globl _FIFOPCTRL
                                    453 	.globl _FSMSTAT1
                                    454 	.globl _FSMSTAT0
                                    455 	.globl _TXCTRL
                                    456 	.globl _TXPOWER
                                    457 	.globl _FREQCTRL
                                    458 	.globl _FREQTUNE
                                    459 	.globl _RXMASKCLR
                                    460 	.globl _RXMASKSET
                                    461 	.globl _RXENABLE
                                    462 	.globl _FRMCTRL1
                                    463 	.globl _FRMCTRL0
                                    464 	.globl _SRCEXTEN2
                                    465 	.globl _SRCEXTEN1
                                    466 	.globl _SRCEXTEN0
                                    467 	.globl _SRCSHORTEN2
                                    468 	.globl _SRCSHORTEN1
                                    469 	.globl _SRCSHORTEN0
                                    470 	.globl _SRCMATCH
                                    471 	.globl _FRMFILT1
                                    472 	.globl _FRMFILT0
                                    473 	.globl _SHORT_ADDR1
                                    474 	.globl _SHORT_ADDR0
                                    475 	.globl _PAN_ID1
                                    476 	.globl _PAN_ID0
                                    477 	.globl _EXT_ADDR7
                                    478 	.globl _EXT_ADDR6
                                    479 	.globl _EXT_ADDR5
                                    480 	.globl _EXT_ADDR4
                                    481 	.globl _EXT_ADDR3
                                    482 	.globl _EXT_ADDR2
                                    483 	.globl _EXT_ADDR1
                                    484 	.globl _EXT_ADDR0
                                    485 	.globl _SRCSHORTPENDEN2
                                    486 	.globl _SRCSHORTPENDEN1
                                    487 	.globl _SRCSHORTPENDEN0
                                    488 	.globl _SRCEXTPENDEN2
                                    489 	.globl _SRCEXTPENDEN1
                                    490 	.globl _SRCEXTPENDEN0
                                    491 	.globl _SRCRESINDEX
                                    492 	.globl _SRCRESMASK2
                                    493 	.globl _SRCRESMASK1
                                    494 	.globl _SRCRESMASK0
                                    495 	.globl _SRC_ADDR_TABLE
                                    496 	.globl _TXFIFO
                                    497 	.globl _RXFIFO
                                    498 	.globl _RFCORE_RAM
                                    499 	.globl _CMPCTL
                                    500 	.globl _OPAMPS
                                    501 	.globl _OPAMPC
                                    502 	.globl _STCV2
                                    503 	.globl _STCV1
                                    504 	.globl _STCV0
                                    505 	.globl _STCS
                                    506 	.globl _STCC
                                    507 	.globl _T1CC4H
                                    508 	.globl _T1CC4L
                                    509 	.globl _T1CC3H
                                    510 	.globl _T1CC3L
                                    511 	.globl _XX_T1CC2H
                                    512 	.globl _XX_T1CC2L
                                    513 	.globl _XX_T1CC1H
                                    514 	.globl _XX_T1CC1L
                                    515 	.globl _XX_T1CC0H
                                    516 	.globl _XX_T1CC0L
                                    517 	.globl _T1CCTL4
                                    518 	.globl _T1CCTL3
                                    519 	.globl _XX_T1CCTL2
                                    520 	.globl _XX_T1CCTL1
                                    521 	.globl _XX_T1CCTL0
                                    522 	.globl _CLD
                                    523 	.globl _IRCTL
                                    524 	.globl _CHIPINFO1
                                    525 	.globl _CHIPINFO0
                                    526 	.globl _FWDATA
                                    527 	.globl _FADDRH
                                    528 	.globl _FADDRL
                                    529 	.globl _FCTL
                                    530 	.globl _IVCTRL
                                    531 	.globl _BATTMON
                                    532 	.globl _SRCRC
                                    533 	.globl _DBGDATA
                                    534 	.globl _TESTREG0
                                    535 	.globl _CHIPID
                                    536 	.globl _CHVER
                                    537 	.globl _OBSSEL5
                                    538 	.globl _OBSSEL4
                                    539 	.globl _OBSSEL3
                                    540 	.globl _OBSSEL2
                                    541 	.globl _OBSSEL1
                                    542 	.globl _OBSSEL0
                                    543 	.globl _I2CIO
                                    544 	.globl _I2CWC
                                    545 	.globl _I2CADDR
                                    546 	.globl _I2CDATA
                                    547 	.globl _I2CSTAT
                                    548 	.globl _I2CCFG
                                    549 	.globl _OPAMPMC
                                    550 	.globl _MONMUX
                                    551 	.globl _neighbor_attr_list_neighbors
                                    552 	.globl _neighbor_attr_register
                                    553 	.globl _neighbor_attr_has_neighbor
                                    554 	.globl _neighbor_attr_add_neighbor
                                    555 	.globl _neighbor_attr_remove_neighbor
                                    556 	.globl _neighbor_attr_get_data
                                    557 	.globl _neighbor_attr_set_data
                                    558 	.globl _neighbor_attr_tick
                                    559 	.globl _neighbor_attr_get_timeout
                                    560 	.globl _neighbor_attr_set_timeout
                                    561 ;--------------------------------------------------------
                                    562 ; special function registers
                                    563 ;--------------------------------------------------------
                                    564 	.area RSEG    (ABS,DATA)
      000000                        565 	.org 0x0000
                           000080   566 _P0	=	0x0080
                           000081   567 _SP	=	0x0081
                           000082   568 _DPL0	=	0x0082
                           000083   569 _DPH0	=	0x0083
                           000084   570 _DPL1	=	0x0084
                           000085   571 _DPH1	=	0x0085
                           000087   572 _PCON	=	0x0087
                           000088   573 _TCON	=	0x0088
                           000090   574 _P1	=	0x0090
                           000092   575 _DPS	=	0x0092
                           000098   576 _S0CON	=	0x0098
                           00009A   577 _IEN2	=	0x009a
                           00009B   578 _S1CON	=	0x009b
                           0000A0   579 _P2	=	0x00a0
                           0000A8   580 _IEN0	=	0x00a8
                           0000A9   581 _IP0	=	0x00a9
                           0000B8   582 _IEN1	=	0x00b8
                           0000B9   583 _IP1	=	0x00b9
                           0000C0   584 _IRCON	=	0x00c0
                           0000D0   585 _PSW	=	0x00d0
                           0000E0   586 _ACC	=	0x00e0
                           0000E8   587 _IRCON2	=	0x00e8
                           0000F0   588 _B	=	0x00f0
                           0000B4   589 _ADCCON1	=	0x00b4
                           0000B5   590 _ADCCON2	=	0x00b5
                           0000B6   591 _ADCCON3	=	0x00b6
                           0000BA   592 _ADCL	=	0x00ba
                           0000BB   593 _ADCH	=	0x00bb
                           0000BC   594 _RNDL	=	0x00bc
                           0000BD   595 _RNDH	=	0x00bd
                           0000B1   596 _ENCDI	=	0x00b1
                           0000B2   597 _ENCDO	=	0x00b2
                           0000B3   598 _ENCCS	=	0x00b3
                           0000D1   599 _DMAIRQ	=	0x00d1
                           0000D2   600 _DMA1CFGL	=	0x00d2
                           0000D3   601 _DMA1CFGH	=	0x00d3
                           0000D4   602 _DMA0CFGL	=	0x00d4
                           0000D5   603 _DMA0CFGH	=	0x00d5
                           0000D6   604 _DMAARM	=	0x00d6
                           0000D7   605 _DMAREQ	=	0x00d7
                           000089   606 _P0IFG	=	0x0089
                           00008A   607 _P1IFG	=	0x008a
                           00008B   608 _P2IFG	=	0x008b
                           00008C   609 _PICTL	=	0x008c
                           0000AB   610 _P0IEN	=	0x00ab
                           00008D   611 _P1IEN	=	0x008d
                           0000AC   612 _P2IEN	=	0x00ac
                           00008F   613 _P0INP	=	0x008f
                           0000F1   614 _PERCFG	=	0x00f1
                           0000F2   615 _APCFG	=	0x00f2
                           0000F3   616 _P0SEL	=	0x00f3
                           0000F4   617 _P1SEL	=	0x00f4
                           0000F5   618 _P2SEL	=	0x00f5
                           0000F6   619 _P1INP	=	0x00f6
                           0000F7   620 _P2INP	=	0x00f7
                           0000FD   621 _P0DIR	=	0x00fd
                           0000FE   622 _P1DIR	=	0x00fe
                           0000FF   623 _P2DIR	=	0x00ff
                           0000AE   624 _PMUX	=	0x00ae
                           000093   625 _MPAGE	=	0x0093
                           000093   626 __XPAGE	=	0x0093
                           0000C7   627 _MEMCTR	=	0x00c7
                           00009F   628 _FMAP	=	0x009f
                           00009F   629 _PSBANK	=	0x009f
                           000091   630 _RFIRQF1	=	0x0091
                           0000D9   631 _RFD	=	0x00d9
                           0000E1   632 _RFST	=	0x00e1
                           0000E9   633 _RFIRQF0	=	0x00e9
                           0000BF   634 _RFERRF	=	0x00bf
                           000095   635 _ST0	=	0x0095
                           000096   636 _ST1	=	0x0096
                           000097   637 _ST2	=	0x0097
                           0000AD   638 _STLOAD	=	0x00ad
                           0000BE   639 _SLEEPCMD	=	0x00be
                           00009D   640 _SLEEPSTA	=	0x009d
                           0000C6   641 _CLKCONCMD	=	0x00c6
                           00009E   642 _CLKCONSTA	=	0x009e
                           0000DA   643 _T1CC0L	=	0x00da
                           0000DB   644 _T1CC0H	=	0x00db
                           0000DC   645 _T1CC1L	=	0x00dc
                           0000DD   646 _T1CC1H	=	0x00dd
                           0000DE   647 _T1CC2L	=	0x00de
                           0000DF   648 _T1CC2H	=	0x00df
                           0000E2   649 _T1CNTL	=	0x00e2
                           0000E3   650 _T1CNTH	=	0x00e3
                           0000E4   651 _T1CTL	=	0x00e4
                           0000E5   652 _T1CCTL0	=	0x00e5
                           0000E6   653 _T1CCTL1	=	0x00e6
                           0000E7   654 _T1CCTL2	=	0x00e7
                           0000AF   655 _T1STAT	=	0x00af
                           000094   656 _T2CTRL	=	0x0094
                           00009C   657 _T2EVTCFG	=	0x009c
                           0000A1   658 _T2IRQF	=	0x00a1
                           0000A2   659 _T2M0	=	0x00a2
                           0000A3   660 _T2M1	=	0x00a3
                           0000A4   661 _T2MOVF0	=	0x00a4
                           0000A5   662 _T2MOVF1	=	0x00a5
                           0000A6   663 _T2MOVF2	=	0x00a6
                           0000A7   664 _T2IRQM	=	0x00a7
                           0000C3   665 _T2MSEL	=	0x00c3
                           0000CA   666 _T3CNT	=	0x00ca
                           0000CB   667 _T3CTL	=	0x00cb
                           0000CC   668 _T3CCTL0	=	0x00cc
                           0000CD   669 _T3CC0	=	0x00cd
                           0000CE   670 _T3CCTL1	=	0x00ce
                           0000CF   671 _T3CC1	=	0x00cf
                           0000EA   672 _T4CNT	=	0x00ea
                           0000EB   673 _T4CTL	=	0x00eb
                           0000EC   674 _T4CCTL0	=	0x00ec
                           0000ED   675 _T4CC0	=	0x00ed
                           0000EE   676 _T4CCTL1	=	0x00ee
                           0000EF   677 _T4CC1	=	0x00ef
                           0000D8   678 _TIMIF	=	0x00d8
                           000086   679 _U0CSR	=	0x0086
                           0000C1   680 _U0DBUF	=	0x00c1
                           0000C2   681 _U0BAUD	=	0x00c2
                           0000C4   682 _U0UCR	=	0x00c4
                           0000C5   683 _U0GCR	=	0x00c5
                           0000F8   684 _U1CSR	=	0x00f8
                           0000F9   685 _U1DBUF	=	0x00f9
                           0000FA   686 _U1BAUD	=	0x00fa
                           0000FB   687 _U1UCR	=	0x00fb
                           0000FC   688 _U1GCR	=	0x00fc
                           0000C9   689 _WDCTL	=	0x00c9
                                    690 ;--------------------------------------------------------
                                    691 ; special function bits
                                    692 ;--------------------------------------------------------
                                    693 	.area RSEG    (ABS,DATA)
      000000                        694 	.org 0x0000
                           000087   695 _P0_7	=	0x0087
                           000086   696 _P0_6	=	0x0086
                           000085   697 _P0_5	=	0x0085
                           000084   698 _P0_4	=	0x0084
                           000083   699 _P0_3	=	0x0083
                           000082   700 _P0_2	=	0x0082
                           000081   701 _P0_1	=	0x0081
                           000080   702 _P0_0	=	0x0080
                           00008F   703 _URX1IF	=	0x008f
                           00008D   704 _ADCIF	=	0x008d
                           00008B   705 _URX0IF	=	0x008b
                           00008A   706 _IT1	=	0x008a
                           000089   707 _RFERRIF	=	0x0089
                           000088   708 _IT0	=	0x0088
                           000097   709 _P1_7	=	0x0097
                           000096   710 _P1_6	=	0x0096
                           000095   711 _P1_5	=	0x0095
                           000094   712 _P1_4	=	0x0094
                           000093   713 _P1_3	=	0x0093
                           000092   714 _P1_2	=	0x0092
                           000091   715 _P1_1	=	0x0091
                           000090   716 _P1_0	=	0x0090
                           000099   717 _ENCIF_1	=	0x0099
                           000098   718 _ENCIF_0	=	0x0098
                           0000A7   719 _P2_7	=	0x00a7
                           0000A6   720 _P2_6	=	0x00a6
                           0000A5   721 _P2_5	=	0x00a5
                           0000A4   722 _P2_4	=	0x00a4
                           0000A3   723 _P2_3	=	0x00a3
                           0000A2   724 _P2_2	=	0x00a2
                           0000A1   725 _P2_1	=	0x00a1
                           0000A0   726 _P2_0	=	0x00a0
                           0000AF   727 _EA	=	0x00af
                           0000AD   728 _STIE	=	0x00ad
                           0000AC   729 _ENCIE	=	0x00ac
                           0000AB   730 _URX1IE	=	0x00ab
                           0000AA   731 _URX0IE	=	0x00aa
                           0000A9   732 _ADCIE	=	0x00a9
                           0000A8   733 _RFERRIE	=	0x00a8
                           0000BD   734 _P0IE	=	0x00bd
                           0000BC   735 _T4IE	=	0x00bc
                           0000BB   736 _T3IE	=	0x00bb
                           0000BA   737 _T2IE	=	0x00ba
                           0000B9   738 _T1IE	=	0x00b9
                           0000B8   739 _DMAIE	=	0x00b8
                           0000C7   740 _STIF	=	0x00c7
                           0000C5   741 _P0IF	=	0x00c5
                           0000C4   742 _T4IF	=	0x00c4
                           0000C3   743 _T3IF	=	0x00c3
                           0000C2   744 _T2IF	=	0x00c2
                           0000C1   745 _T1IF	=	0x00c1
                           0000C0   746 _DMAIF	=	0x00c0
                           0000D7   747 _CY	=	0x00d7
                           0000D6   748 _AC	=	0x00d6
                           0000D5   749 _F0	=	0x00d5
                           0000D4   750 _RS1	=	0x00d4
                           0000D3   751 _RS0	=	0x00d3
                           0000D2   752 _OV	=	0x00d2
                           0000D1   753 _F1	=	0x00d1
                           0000D0   754 _P	=	0x00d0
                           0000E7   755 _ACC_7	=	0x00e7
                           0000E6   756 _ACC_6	=	0x00e6
                           0000E5   757 _ACC_5	=	0x00e5
                           0000E4   758 _ACC_4	=	0x00e4
                           0000E3   759 _ACC_3	=	0x00e3
                           0000E2   760 _ACC_2	=	0x00e2
                           0000E1   761 _ACC_1	=	0x00e1
                           0000E0   762 _ACC_0	=	0x00e0
                           0000EC   763 _WDTIF	=	0x00ec
                           0000EB   764 _P1IF	=	0x00eb
                           0000EA   765 _UTX1IF	=	0x00ea
                           0000E9   766 _UTX0IF	=	0x00e9
                           0000E8   767 _P2IF	=	0x00e8
                           0000F7   768 _B_7	=	0x00f7
                           0000F6   769 _B_6	=	0x00f6
                           0000F5   770 _B_5	=	0x00f5
                           0000F4   771 _B_4	=	0x00f4
                           0000F3   772 _B_3	=	0x00f3
                           0000F2   773 _B_2	=	0x00f2
                           0000F1   774 _B_1	=	0x00f1
                           0000F0   775 _B_0	=	0x00f0
                           0000DE   776 _OVFIM	=	0x00de
                           0000DD   777 _T4CH1IF	=	0x00dd
                           0000DC   778 _T4CH0IF	=	0x00dc
                           0000DB   779 _T4OVFIF	=	0x00db
                           0000DA   780 _T3CH1IF	=	0x00da
                           0000D9   781 _T3CH0IF	=	0x00d9
                           0000D8   782 _T3OVFIF	=	0x00d8
                           0000FF   783 _MODE	=	0x00ff
                           0000FE   784 _RE	=	0x00fe
                           0000FD   785 _SLAVE	=	0x00fd
                           0000FC   786 _FE	=	0x00fc
                           0000FB   787 _ERR	=	0x00fb
                           0000FA   788 _RX_BYTE	=	0x00fa
                           0000F9   789 _TX_BYTE	=	0x00f9
                           0000F8   790 _ACTIVE	=	0x00f8
                                    791 ;--------------------------------------------------------
                                    792 ; overlayable register banks
                                    793 ;--------------------------------------------------------
                                    794 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        795 	.ds 8
                                    796 ;--------------------------------------------------------
                                    797 ; overlayable bit register bank
                                    798 ;--------------------------------------------------------
                                    799 	.area BIT_BANK	(REL,OVR,DATA)
      000000                        800 bits:
      000000                        801 	.ds 1
                           008000   802 	b0 = bits[0]
                           008100   803 	b1 = bits[1]
                           008200   804 	b2 = bits[2]
                           008300   805 	b3 = bits[3]
                           008400   806 	b4 = bits[4]
                           008500   807 	b5 = bits[5]
                           008600   808 	b6 = bits[6]
                           008700   809 	b7 = bits[7]
                                    810 ;--------------------------------------------------------
                                    811 ; internal ram data
                                    812 ;--------------------------------------------------------
                                    813 	.area DSEG    (DATA)
                                    814 ;--------------------------------------------------------
                                    815 ; overlayable items in internal ram 
                                    816 ;--------------------------------------------------------
                                    817 ;--------------------------------------------------------
                                    818 ; indirectly addressable internal ram data
                                    819 ;--------------------------------------------------------
                                    820 	.area ISEG    (DATA)
                                    821 ;--------------------------------------------------------
                                    822 ; absolute internal ram data
                                    823 ;--------------------------------------------------------
                                    824 	.area IABS    (ABS,DATA)
                                    825 	.area IABS    (ABS,DATA)
                                    826 ;--------------------------------------------------------
                                    827 ; bit data
                                    828 ;--------------------------------------------------------
                                    829 	.area BSEG    (BIT)
                                    830 ;--------------------------------------------------------
                                    831 ; paged external ram data
                                    832 ;--------------------------------------------------------
                                    833 	.area PSEG    (PAG,XDATA)
                                    834 ;--------------------------------------------------------
                                    835 ; external ram data
                                    836 ;--------------------------------------------------------
                                    837 	.area XSEG    (XDATA)
                           0061A6   838 _MONMUX	=	0x61a6
                           0061A6   839 _OPAMPMC	=	0x61a6
                           006230   840 _I2CCFG	=	0x6230
                           006231   841 _I2CSTAT	=	0x6231
                           006232   842 _I2CDATA	=	0x6232
                           006233   843 _I2CADDR	=	0x6233
                           006234   844 _I2CWC	=	0x6234
                           006235   845 _I2CIO	=	0x6235
                           006243   846 _OBSSEL0	=	0x6243
                           006244   847 _OBSSEL1	=	0x6244
                           006245   848 _OBSSEL2	=	0x6245
                           006246   849 _OBSSEL3	=	0x6246
                           006247   850 _OBSSEL4	=	0x6247
                           006248   851 _OBSSEL5	=	0x6248
                           006249   852 _CHVER	=	0x6249
                           00624A   853 _CHIPID	=	0x624a
                           00624B   854 _TESTREG0	=	0x624b
                           006260   855 _DBGDATA	=	0x6260
                           006262   856 _SRCRC	=	0x6262
                           006264   857 _BATTMON	=	0x6264
                           006265   858 _IVCTRL	=	0x6265
                           006270   859 _FCTL	=	0x6270
                           006271   860 _FADDRL	=	0x6271
                           006272   861 _FADDRH	=	0x6272
                           006273   862 _FWDATA	=	0x6273
                           006276   863 _CHIPINFO0	=	0x6276
                           006277   864 _CHIPINFO1	=	0x6277
                           006281   865 _IRCTL	=	0x6281
                           006290   866 _CLD	=	0x6290
                           0062A0   867 _XX_T1CCTL0	=	0x62a0
                           0062A1   868 _XX_T1CCTL1	=	0x62a1
                           0062A2   869 _XX_T1CCTL2	=	0x62a2
                           0062A3   870 _T1CCTL3	=	0x62a3
                           0062A4   871 _T1CCTL4	=	0x62a4
                           0062A6   872 _XX_T1CC0L	=	0x62a6
                           0062A7   873 _XX_T1CC0H	=	0x62a7
                           0062A8   874 _XX_T1CC1L	=	0x62a8
                           0062A9   875 _XX_T1CC1H	=	0x62a9
                           0062AA   876 _XX_T1CC2L	=	0x62aa
                           0062AB   877 _XX_T1CC2H	=	0x62ab
                           0062AC   878 _T1CC3L	=	0x62ac
                           0062AD   879 _T1CC3H	=	0x62ad
                           0062AE   880 _T1CC4L	=	0x62ae
                           0062AF   881 _T1CC4H	=	0x62af
                           0062B0   882 _STCC	=	0x62b0
                           0062B1   883 _STCS	=	0x62b1
                           0062B2   884 _STCV0	=	0x62b2
                           0062B3   885 _STCV1	=	0x62b3
                           0062B4   886 _STCV2	=	0x62b4
                           0062C0   887 _OPAMPC	=	0x62c0
                           0062C1   888 _OPAMPS	=	0x62c1
                           0062D0   889 _CMPCTL	=	0x62d0
                           006000   890 _RFCORE_RAM	=	0x6000
                           006000   891 _RXFIFO	=	0x6000
                           006080   892 _TXFIFO	=	0x6080
                           006100   893 _SRC_ADDR_TABLE	=	0x6100
                           006160   894 _SRCRESMASK0	=	0x6160
                           006161   895 _SRCRESMASK1	=	0x6161
                           006162   896 _SRCRESMASK2	=	0x6162
                           006163   897 _SRCRESINDEX	=	0x6163
                           006164   898 _SRCEXTPENDEN0	=	0x6164
                           006165   899 _SRCEXTPENDEN1	=	0x6165
                           006166   900 _SRCEXTPENDEN2	=	0x6166
                           006167   901 _SRCSHORTPENDEN0	=	0x6167
                           006168   902 _SRCSHORTPENDEN1	=	0x6168
                           006169   903 _SRCSHORTPENDEN2	=	0x6169
                           00616A   904 _EXT_ADDR0	=	0x616a
                           00616B   905 _EXT_ADDR1	=	0x616b
                           00616C   906 _EXT_ADDR2	=	0x616c
                           00616D   907 _EXT_ADDR3	=	0x616d
                           00616E   908 _EXT_ADDR4	=	0x616e
                           00616F   909 _EXT_ADDR5	=	0x616f
                           006170   910 _EXT_ADDR6	=	0x6170
                           006171   911 _EXT_ADDR7	=	0x6171
                           006172   912 _PAN_ID0	=	0x6172
                           006173   913 _PAN_ID1	=	0x6173
                           006174   914 _SHORT_ADDR0	=	0x6174
                           006175   915 _SHORT_ADDR1	=	0x6175
                           006180   916 _FRMFILT0	=	0x6180
                           006181   917 _FRMFILT1	=	0x6181
                           006182   918 _SRCMATCH	=	0x6182
                           006183   919 _SRCSHORTEN0	=	0x6183
                           006184   920 _SRCSHORTEN1	=	0x6184
                           006185   921 _SRCSHORTEN2	=	0x6185
                           006186   922 _SRCEXTEN0	=	0x6186
                           006187   923 _SRCEXTEN1	=	0x6187
                           006188   924 _SRCEXTEN2	=	0x6188
                           006189   925 _FRMCTRL0	=	0x6189
                           00618A   926 _FRMCTRL1	=	0x618a
                           00618B   927 _RXENABLE	=	0x618b
                           00618C   928 _RXMASKSET	=	0x618c
                           00618D   929 _RXMASKCLR	=	0x618d
                           00618E   930 _FREQTUNE	=	0x618e
                           00618F   931 _FREQCTRL	=	0x618f
                           006190   932 _TXPOWER	=	0x6190
                           006191   933 _TXCTRL	=	0x6191
                           006192   934 _FSMSTAT0	=	0x6192
                           006193   935 _FSMSTAT1	=	0x6193
                           006194   936 _FIFOPCTRL	=	0x6194
                           006195   937 _FSMCTRL	=	0x6195
                           006196   938 _CCACTRL0	=	0x6196
                           006197   939 _CCACTRL1	=	0x6197
                           006198   940 _RSSI	=	0x6198
                           006199   941 _RSSISTAT	=	0x6199
                           00619A   942 _RXFIRST	=	0x619a
                           00619B   943 _RXFIFOCNT	=	0x619b
                           00619C   944 _TXFIFOCNT	=	0x619c
                           00619D   945 _RXFIRST_PTR	=	0x619d
                           00619E   946 _RXLAST_PTR	=	0x619e
                           00619F   947 _RXP1_PTR	=	0x619f
                           0061A1   948 _TXFIRST_PTR	=	0x61a1
                           0061A2   949 _TXLAST_PTR	=	0x61a2
                           0061A3   950 _RFIRQM0	=	0x61a3
                           0061A4   951 _RFIRQM1	=	0x61a4
                           0061A5   952 _RFERRM	=	0x61a5
                           0061A7   953 _RFRND	=	0x61a7
                           0061A8   954 _MDMCTRL0	=	0x61a8
                           0061A9   955 _MDMCTRL1	=	0x61a9
                           0061AA   956 _FREQEST	=	0x61aa
                           0061AB   957 _RXCTRL	=	0x61ab
                           0061AC   958 _FSCTRL	=	0x61ac
                           0061AD   959 _FSCAL0	=	0x61ad
                           0061AE   960 _FSCAL1	=	0x61ae
                           0061AF   961 _FSCAL2	=	0x61af
                           0061B0   962 _FSCAL3	=	0x61b0
                           0061B1   963 _AGCCTRL0	=	0x61b1
                           0061B2   964 _AGCCTRL1	=	0x61b2
                           0061B3   965 _AGCCTRL2	=	0x61b3
                           0061B4   966 _AGCCTRL3	=	0x61b4
                           0061B5   967 _ADCTEST0	=	0x61b5
                           0061B6   968 _ADCTEST1	=	0x61b6
                           0061B7   969 _ADCTEST2	=	0x61b7
                           0061B8   970 _MDMTEST0	=	0x61b8
                           0061B9   971 _MDMTEST1	=	0x61b9
                           0061BA   972 _DACTEST0	=	0x61ba
                           0061BB   973 _DACTEST1	=	0x61bb
                           0061BC   974 _DACTEST2	=	0x61bc
                           0061BD   975 _ATEST	=	0x61bd
                           0061BE   976 _PTEST0	=	0x61be
                           0061BF   977 _PTEST1	=	0x61bf
                           0061FA   978 _TXFILTCFG	=	0x61fa
                           0061EB   979 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   980 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   981 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   982 _CSPPROG0	=	0x61c0
                           0061C1   983 _CSPPROG1	=	0x61c1
                           0061C2   984 _CSPPROG2	=	0x61c2
                           0061C3   985 _CSPPROG3	=	0x61c3
                           0061C4   986 _CSPPROG4	=	0x61c4
                           0061C5   987 _CSPPROG5	=	0x61c5
                           0061C6   988 _CSPPROG6	=	0x61c6
                           0061C7   989 _CSPPROG7	=	0x61c7
                           0061C8   990 _CSPPROG8	=	0x61c8
                           0061C9   991 _CSPPROG9	=	0x61c9
                           0061CA   992 _CSPPROG10	=	0x61ca
                           0061CB   993 _CSPPROG11	=	0x61cb
                           0061CC   994 _CSPPROG12	=	0x61cc
                           0061CD   995 _CSPPROG13	=	0x61cd
                           0061CE   996 _CSPPROG14	=	0x61ce
                           0061CF   997 _CSPPROG15	=	0x61cf
                           0061D0   998 _CSPPROG16	=	0x61d0
                           0061D1   999 _CSPPROG17	=	0x61d1
                           0061D2  1000 _CSPPROG18	=	0x61d2
                           0061D3  1001 _CSPPROG19	=	0x61d3
                           0061D4  1002 _CSPPROG20	=	0x61d4
                           0061D5  1003 _CSPPROG21	=	0x61d5
                           0061D6  1004 _CSPPROG22	=	0x61d6
                           0061D7  1005 _CSPPROG23	=	0x61d7
                           0061E0  1006 _CSPCTRL	=	0x61e0
                           0061E1  1007 _CSPSTAT	=	0x61e1
                           0061E2  1008 _CSPX	=	0x61e2
                           0061E3  1009 _CSPY	=	0x61e3
                           0061E4  1010 _CSPZ	=	0x61e4
                           0061E5  1011 _CSPT	=	0x61e5
                           006200  1012 _USBADDR	=	0x6200
                           006201  1013 _USBPOW	=	0x6201
                           006202  1014 _USBIIF	=	0x6202
                           006204  1015 _USBOIF	=	0x6204
                           006206  1016 _USBCIF	=	0x6206
                           006207  1017 _USBIIE	=	0x6207
                           006209  1018 _USBOIE	=	0x6209
                           00620B  1019 _USBCIE	=	0x620b
                           00620C  1020 _USBFRML	=	0x620c
                           00620D  1021 _USBFRMH	=	0x620d
                           00620E  1022 _USBINDEX	=	0x620e
                           00620F  1023 _USBCTRL	=	0x620f
                           006210  1024 _USBMAXI	=	0x6210
                           006211  1025 _USBCS0	=	0x6211
                           006211  1026 _USBCSIL	=	0x6211
                           006212  1027 _USBCSIH	=	0x6212
                           006213  1028 _USBMAXO	=	0x6213
                           006214  1029 _USBCSOL	=	0x6214
                           006215  1030 _USBCSOH	=	0x6215
                           006216  1031 _USBCNT0	=	0x6216
                           006216  1032 _USBCNTL	=	0x6216
                           006217  1033 _USBCNTH	=	0x6217
                           006220  1034 _USBF0	=	0x6220
                           006222  1035 _USBF1	=	0x6222
                           006224  1036 _USBF2	=	0x6224
                           006226  1037 _USBF3	=	0x6226
                           006228  1038 _USBF4	=	0x6228
                           00622A  1039 _USBF5	=	0x622a
                           007080  1040 _X_P0	=	0x7080
                           007086  1041 _X_U0CSR	=	0x7086
                           007089  1042 _X_P0IFG	=	0x7089
                           00708A  1043 _X_P1IFG	=	0x708a
                           00708B  1044 _X_P2IFG	=	0x708b
                           00708C  1045 _X_PICTL	=	0x708c
                           00708D  1046 _X_P1IEN	=	0x708d
                           00708F  1047 _X_P0INP	=	0x708f
                           007090  1048 _X_P1	=	0x7090
                           007091  1049 _X_RFIRQF1	=	0x7091
                           007093  1050 _X_MPAGE	=	0x7093
                           007093  1051 _X__XPAGE	=	0x7093
                           007094  1052 _X_T2CTRL	=	0x7094
                           007095  1053 _X_ST0	=	0x7095
                           007096  1054 _X_ST1	=	0x7096
                           007097  1055 _X_ST2	=	0x7097
                           00709C  1056 _X_T2EVTCFG	=	0x709c
                           00709D  1057 _X_SLEEPSTA	=	0x709d
                           00709E  1058 _X_CLKCONSTA	=	0x709e
                           00709F  1059 _X_FMAP	=	0x709f
                           00709F  1060 _X_PSBANK	=	0x709f
                           0070A0  1061 _X_P2	=	0x70a0
                           0070A1  1062 _X_T2IRQF	=	0x70a1
                           0070A2  1063 _X_T2M0	=	0x70a2
                           0070A3  1064 _X_T2M1	=	0x70a3
                           0070A4  1065 _X_T2MOVF0	=	0x70a4
                           0070A5  1066 _X_T2MOVF1	=	0x70a5
                           0070A6  1067 _X_T2MOVF2	=	0x70a6
                           0070A7  1068 _X_T2IRQM	=	0x70a7
                           0070AB  1069 _X_P0IEN	=	0x70ab
                           0070AC  1070 _X_P2IEN	=	0x70ac
                           0070AD  1071 _X_STLOAD	=	0x70ad
                           0070AE  1072 _X_PMUX	=	0x70ae
                           0070AF  1073 _X_T1STAT	=	0x70af
                           0070B1  1074 _X_ENCDI	=	0x70b1
                           0070B2  1075 _X_ENCDO	=	0x70b2
                           0070B3  1076 _X_ENCCS	=	0x70b3
                           0070B4  1077 _X_ADCCON1	=	0x70b4
                           0070B5  1078 _X_ADCCON2	=	0x70b5
                           0070B6  1079 _X_ADCCON3	=	0x70b6
                           0070BA  1080 _X_ADCL	=	0x70ba
                           0070BB  1081 _X_ADCH	=	0x70bb
                           0070BC  1082 _X_RNDL	=	0x70bc
                           0070BD  1083 _X_RNDH	=	0x70bd
                           0070BE  1084 _X_SLEEPCMD	=	0x70be
                           0070BF  1085 _X_RFERRF	=	0x70bf
                           0070C1  1086 _X_U0DBUF	=	0x70c1
                           0070C2  1087 _X_U0BAUD	=	0x70c2
                           0070C3  1088 _X_T2MSEL	=	0x70c3
                           0070C4  1089 _X_U0UCR	=	0x70c4
                           0070C5  1090 _X_U0GCR	=	0x70c5
                           0070C6  1091 _X_CLKCONCMD	=	0x70c6
                           0070C7  1092 _X_MEMCTR	=	0x70c7
                           0070C9  1093 _X_WDCTL	=	0x70c9
                           0070CA  1094 _X_T3CNT	=	0x70ca
                           0070CB  1095 _X_T3CTL	=	0x70cb
                           0070CC  1096 _X_T3CCTL0	=	0x70cc
                           0070CD  1097 _X_T3CC0	=	0x70cd
                           0070CE  1098 _X_T3CCTL1	=	0x70ce
                           0070CF  1099 _X_T3CC1	=	0x70cf
                           0070D1  1100 _X_DMAIRQ	=	0x70d1
                           0070D2  1101 _X_DMA1CFGL	=	0x70d2
                           0070D3  1102 _X_DMA1CFGH	=	0x70d3
                           0070D4  1103 _X_DMA0CFGL	=	0x70d4
                           0070D5  1104 _X_DMA0CFGH	=	0x70d5
                           0070D6  1105 _X_DMAARM	=	0x70d6
                           0070D7  1106 _X_DMAREQ	=	0x70d7
                           0070D8  1107 _X_TIMIF	=	0x70d8
                           0070D9  1108 _X_RFD	=	0x70d9
                           0070DA  1109 _X_T1CC0L	=	0x70da
                           0070DB  1110 _X_T1CC0H	=	0x70db
                           0070DC  1111 _X_T1CC1L	=	0x70dc
                           0070DD  1112 _X_T1CC1H	=	0x70dd
                           0070DE  1113 _X_T1CC2L	=	0x70de
                           0070DF  1114 _X_T1CC2H	=	0x70df
                           0070E1  1115 _X_RFST	=	0x70e1
                           0070E2  1116 _X_T1CNTL	=	0x70e2
                           0070E3  1117 _X_T1CNTH	=	0x70e3
                           0070E4  1118 _X_T1CTL	=	0x70e4
                           0070E5  1119 _X_T1CCTL0	=	0x70e5
                           0070E6  1120 _X_T1CCTL1	=	0x70e6
                           0070E7  1121 _X_T1CCTL2	=	0x70e7
                           0070E9  1122 _X_RFIRQF0	=	0x70e9
                           0070EA  1123 _X_T4CNT	=	0x70ea
                           0070EB  1124 _X_T4CTL	=	0x70eb
                           0070EC  1125 _X_T4CCTL0	=	0x70ec
                           0070ED  1126 _X_T4CC0	=	0x70ed
                           0070EE  1127 _X_T4CCTL1	=	0x70ee
                           0070EF  1128 _X_T4CC1	=	0x70ef
                           0070F1  1129 _X_PERCFG	=	0x70f1
                           0070F2  1130 _X_APCFG	=	0x70f2
                           0070F3  1131 _X_P0SEL	=	0x70f3
                           0070F4  1132 _X_P1SEL	=	0x70f4
                           0070F5  1133 _X_P2SEL	=	0x70f5
                           0070F6  1134 _X_P1INP	=	0x70f6
                           0070F7  1135 _X_P2INP	=	0x70f7
                           0070F8  1136 _X_U1CSR	=	0x70f8
                           0070F9  1137 _X_U1DBUF	=	0x70f9
                           0070FA  1138 _X_U1BAUD	=	0x70fa
                           0070FB  1139 _X_U1UCR	=	0x70fb
                           0070FC  1140 _X_U1GCR	=	0x70fc
                           0070FD  1141 _X_P0DIR	=	0x70fd
                           0070FE  1142 _X_P1DIR	=	0x70fe
                           0070FF  1143 _X_P2DIR	=	0x70ff
                           007800  1144 _X_INFOPAGE	=	0x7800
                           00780C  1145 _X_IEEE_ADDR	=	0x780c
      000000                       1146 _neighbor_addr_mem_memb_count:
      000000                       1147 	.ds 12
      00000C                       1148 _neighbor_addr_mem_memb_mem:
      00000C                       1149 	.ds 180
      0000C0                       1150 _ct:
      0000C0                       1151 	.ds 22
                                   1152 ;--------------------------------------------------------
                                   1153 ; absolute external ram data
                                   1154 ;--------------------------------------------------------
                                   1155 	.area XABS    (ABS,XDATA)
                                   1156 ;--------------------------------------------------------
                                   1157 ; external initialized ram data
                                   1158 ;--------------------------------------------------------
                                   1159 	.area XISEG   (XDATA)
      000000                       1160 _timeout:
      000000                       1161 	.ds 2
      000002                       1162 _neighbor_addr_mem:
      000002                       1163 	.ds 10
      00000C                       1164 _neighbor_addrs_list:
      00000C                       1165 	.ds 3
      00000F                       1166 _neighbor_addrs:
      00000F                       1167 	.ds 3
      000012                       1168 _neighbor_attrs_list:
      000012                       1169 	.ds 3
      000015                       1170 _neighbor_attrs:
      000015                       1171 	.ds 3
                                   1172 	.area HOME    (CODE)
                                   1173 	.area GSINIT0 (CODE)
                                   1174 	.area GSINIT1 (CODE)
                                   1175 	.area GSINIT2 (CODE)
                                   1176 	.area GSINIT3 (CODE)
                                   1177 	.area GSINIT4 (CODE)
                                   1178 	.area GSINIT5 (CODE)
                                   1179 	.area GSINIT  (CODE)
                                   1180 	.area GSFINAL (CODE)
                                   1181 	.area CSEG    (CODE)
                                   1182 ;--------------------------------------------------------
                                   1183 ; global & static initialisations
                                   1184 ;--------------------------------------------------------
                                   1185 	.area HOME    (CODE)
                                   1186 	.area GSINIT  (CODE)
                                   1187 	.area GSFINAL (CODE)
                                   1188 	.area GSINIT  (CODE)
                                   1189 ;--------------------------------------------------------
                                   1190 ; Home
                                   1191 ;--------------------------------------------------------
                                   1192 	.area HOME    (CODE)
                                   1193 	.area HOME    (CODE)
                                   1194 ;--------------------------------------------------------
                                   1195 ; code
                                   1196 ;--------------------------------------------------------
                                   1197 	.area BANK1   (CODE)
                                   1198 ;------------------------------------------------------------
                                   1199 ;Allocation info for local variables in function 'neighbor_addr_get'
                                   1200 ;------------------------------------------------------------
                                   1201 ;addr                      Allocated to stack - sp -2
                                   1202 ;item                      Allocated to registers r5 r6 r7 
                                   1203 ;------------------------------------------------------------
                                   1204 ;	../../../core/net/neighbor-attr.c:59: neighbor_addr_get(const rimeaddr_t *addr)
                                   1205 ;	-----------------------------------------
                                   1206 ;	 function neighbor_addr_get
                                   1207 ;	-----------------------------------------
      000000                       1208 _neighbor_addr_get:
                           000007  1209 	ar7 = 0x07
                           000006  1210 	ar6 = 0x06
                           000005  1211 	ar5 = 0x05
                           000004  1212 	ar4 = 0x04
                           000003  1213 	ar3 = 0x03
                           000002  1214 	ar2 = 0x02
                           000001  1215 	ar1 = 0x01
                           000000  1216 	ar0 = 0x00
      000000 C0 82            [24] 1217 	push	dpl
      000002 C0 83            [24] 1218 	push	dph
      000004 C0 F0            [24] 1219 	push	b
                                   1220 ;	../../../core/net/neighbor-attr.c:64: if(memb_inmemb(&neighbor_addr_mem, (char *)addr)) {
      000006 A8 81            [24] 1221 	mov	r0,sp
      000008 18               [12] 1222 	dec	r0
      000009 18               [12] 1223 	dec	r0
      00000A 86 02            [24] 1224 	mov	ar2,@r0
      00000C 08               [12] 1225 	inc	r0
      00000D 86 03            [24] 1226 	mov	ar3,@r0
      00000F 08               [12] 1227 	inc	r0
      000010 86 04            [24] 1228 	mov	ar4,@r0
      000012 8A 05            [24] 1229 	mov	ar5,r2
      000014 8B 06            [24] 1230 	mov	ar6,r3
      000016 8C 07            [24] 1231 	mov	ar7,r4
      000018 C0 04            [24] 1232 	push	ar4
      00001A C0 03            [24] 1233 	push	ar3
      00001C C0 02            [24] 1234 	push	ar2
      00001E C0 05            [24] 1235 	push	ar5
      000020 C0 06            [24] 1236 	push	ar6
      000022 C0 07            [24] 1237 	push	ar7
      000024 90r00r02         [24] 1238 	mov	dptr,#_neighbor_addr_mem
      000027 75 F0 00         [24] 1239 	mov	b,#0x00
      00002A 78r00            [12] 1240 	mov	r0,#_memb_inmemb
      00002C 79s00            [12] 1241 	mov	r1,#(_memb_inmemb >> 8)
      00002E 7As00            [12] 1242 	mov	r2,#(_memb_inmemb >> 16)
      000030 12r00r00         [24] 1243 	lcall	__sdcc_banked_call
      000033 AE 82            [24] 1244 	mov	r6,dpl
      000035 AF 83            [24] 1245 	mov	r7,dph
      000037 15 81            [12] 1246 	dec	sp
      000039 15 81            [12] 1247 	dec	sp
      00003B 15 81            [12] 1248 	dec	sp
      00003D D0 02            [24] 1249 	pop	ar2
      00003F D0 03            [24] 1250 	pop	ar3
      000041 D0 04            [24] 1251 	pop	ar4
      000043 EE               [12] 1252 	mov	a,r6
      000044 4F               [12] 1253 	orl	a,r7
      000045 60 11            [24] 1254 	jz	00102$
                                   1255 ;	../../../core/net/neighbor-attr.c:66: (((char *)addr) - offsetof(struct neighbor_addr, addr));
      000047 EA               [12] 1256 	mov	a,r2
      000048 24 FD            [12] 1257 	add	a,#0xfd
      00004A FA               [12] 1258 	mov	r2,a
      00004B EB               [12] 1259 	mov	a,r3
      00004C 34 FF            [12] 1260 	addc	a,#0xff
      00004E FB               [12] 1261 	mov	r3,a
      00004F 8A 82            [24] 1262 	mov	dpl,r2
      000051 8B 83            [24] 1263 	mov	dph,r3
      000053 8C F0            [24] 1264 	mov	b,r4
      000055 02r00rDF         [24] 1265 	ljmp	00108$
      000058                       1266 00102$:
                                   1267 ;	../../../core/net/neighbor-attr.c:69: item = list_head(neighbor_addrs);
      000058 90r00r0F         [24] 1268 	mov	dptr,#_neighbor_addrs
      00005B E0               [24] 1269 	movx	a,@dptr
      00005C FD               [12] 1270 	mov	r5,a
      00005D A3               [24] 1271 	inc	dptr
      00005E E0               [24] 1272 	movx	a,@dptr
      00005F FE               [12] 1273 	mov	r6,a
      000060 A3               [24] 1274 	inc	dptr
      000061 E0               [24] 1275 	movx	a,@dptr
      000062 FF               [12] 1276 	mov	r7,a
      000063 8D 82            [24] 1277 	mov	dpl,r5
      000065 8E 83            [24] 1278 	mov	dph,r6
      000067 8F F0            [24] 1279 	mov	b,r7
      000069 78r00            [12] 1280 	mov	r0,#_list_head
      00006B 79s00            [12] 1281 	mov	r1,#(_list_head >> 8)
      00006D 7As00            [12] 1282 	mov	r2,#(_list_head >> 16)
      00006F 12r00r00         [24] 1283 	lcall	__sdcc_banked_call
      000072 AD 82            [24] 1284 	mov	r5,dpl
      000074 AE 83            [24] 1285 	mov	r6,dph
      000076 AF F0            [24] 1286 	mov	r7,b
                                   1287 ;	../../../core/net/neighbor-attr.c:70: while(item != NULL) {
      000078                       1288 00105$:
      000078 ED               [12] 1289 	mov	a,r5
      000079 4E               [12] 1290 	orl	a,r6
      00007A 60 5D            [24] 1291 	jz	00107$
                                   1292 ;	../../../core/net/neighbor-attr.c:71: if(rimeaddr_cmp(addr, &item->addr)) {
      00007C 74 03            [12] 1293 	mov	a,#0x03
      00007E 2D               [12] 1294 	add	a,r5
      00007F FA               [12] 1295 	mov	r2,a
      000080 E4               [12] 1296 	clr	a
      000081 3E               [12] 1297 	addc	a,r6
      000082 FB               [12] 1298 	mov	r3,a
      000083 8F 04            [24] 1299 	mov	ar4,r7
      000085 C0 07            [24] 1300 	push	ar7
      000087 C0 06            [24] 1301 	push	ar6
      000089 C0 05            [24] 1302 	push	ar5
      00008B C0 02            [24] 1303 	push	ar2
      00008D C0 03            [24] 1304 	push	ar3
      00008F C0 04            [24] 1305 	push	ar4
      000091 E5 81            [12] 1306 	mov	a,sp
      000093 24 F8            [12] 1307 	add	a,#0xf8
      000095 F8               [12] 1308 	mov	r0,a
      000096 86 82            [24] 1309 	mov	dpl,@r0
      000098 08               [12] 1310 	inc	r0
      000099 86 83            [24] 1311 	mov	dph,@r0
      00009B 08               [12] 1312 	inc	r0
      00009C 86 F0            [24] 1313 	mov	b,@r0
      00009E 78r00            [12] 1314 	mov	r0,#_rimeaddr_cmp
      0000A0 79s00            [12] 1315 	mov	r1,#(_rimeaddr_cmp >> 8)
      0000A2 7As00            [12] 1316 	mov	r2,#(_rimeaddr_cmp >> 16)
      0000A4 12r00r00         [24] 1317 	lcall	__sdcc_banked_call
      0000A7 AB 82            [24] 1318 	mov	r3,dpl
      0000A9 AC 83            [24] 1319 	mov	r4,dph
      0000AB 15 81            [12] 1320 	dec	sp
      0000AD 15 81            [12] 1321 	dec	sp
      0000AF 15 81            [12] 1322 	dec	sp
      0000B1 D0 05            [24] 1323 	pop	ar5
      0000B3 D0 06            [24] 1324 	pop	ar6
      0000B5 D0 07            [24] 1325 	pop	ar7
      0000B7 EB               [12] 1326 	mov	a,r3
      0000B8 4C               [12] 1327 	orl	a,r4
      0000B9 60 08            [24] 1328 	jz	00104$
                                   1329 ;	../../../core/net/neighbor-attr.c:72: return item;
      0000BB 8D 82            [24] 1330 	mov	dpl,r5
      0000BD 8E 83            [24] 1331 	mov	dph,r6
      0000BF 8F F0            [24] 1332 	mov	b,r7
      0000C1 80 1C            [24] 1333 	sjmp	00108$
      0000C3                       1334 00104$:
                                   1335 ;	../../../core/net/neighbor-attr.c:74: item = item->next;
      0000C3 8D 82            [24] 1336 	mov	dpl,r5
      0000C5 8E 83            [24] 1337 	mov	dph,r6
      0000C7 8F F0            [24] 1338 	mov	b,r7
      0000C9 12r00r00         [24] 1339 	lcall	__gptrget
      0000CC FD               [12] 1340 	mov	r5,a
      0000CD A3               [24] 1341 	inc	dptr
      0000CE 12r00r00         [24] 1342 	lcall	__gptrget
      0000D1 FE               [12] 1343 	mov	r6,a
      0000D2 A3               [24] 1344 	inc	dptr
      0000D3 12r00r00         [24] 1345 	lcall	__gptrget
      0000D6 FF               [12] 1346 	mov	r7,a
      0000D7 80 9F            [24] 1347 	sjmp	00105$
      0000D9                       1348 00107$:
                                   1349 ;	../../../core/net/neighbor-attr.c:76: return NULL;
      0000D9 90 00 00         [24] 1350 	mov	dptr,#0x0000
      0000DC 75 F0 00         [24] 1351 	mov	b,#0x00
      0000DF                       1352 00108$:
                                   1353 ;	../../../core/net/neighbor-attr.c:77: }
      0000DF 15 81            [12] 1354 	dec	sp
      0000E1 15 81            [12] 1355 	dec	sp
      0000E3 15 81            [12] 1356 	dec	sp
      0000E5 02r00r00         [24] 1357 	ljmp	__sdcc_banked_ret
                                   1358 ;------------------------------------------------------------
                                   1359 ;Allocation info for local variables in function 'neighbor_attr_list_neighbors'
                                   1360 ;------------------------------------------------------------
                                   1361 ;	../../../core/net/neighbor-attr.c:80: neighbor_attr_list_neighbors(void)
                                   1362 ;	-----------------------------------------
                                   1363 ;	 function neighbor_attr_list_neighbors
                                   1364 ;	-----------------------------------------
      0000E8                       1365 _neighbor_attr_list_neighbors:
                                   1366 ;	../../../core/net/neighbor-attr.c:82: return list_head(neighbor_addrs);
      0000E8 90r00r0F         [24] 1367 	mov	dptr,#_neighbor_addrs
      0000EB E0               [24] 1368 	movx	a,@dptr
      0000EC FD               [12] 1369 	mov	r5,a
      0000ED A3               [24] 1370 	inc	dptr
      0000EE E0               [24] 1371 	movx	a,@dptr
      0000EF FE               [12] 1372 	mov	r6,a
      0000F0 A3               [24] 1373 	inc	dptr
      0000F1 E0               [24] 1374 	movx	a,@dptr
      0000F2 FF               [12] 1375 	mov	r7,a
      0000F3 8D 82            [24] 1376 	mov	dpl,r5
      0000F5 8E 83            [24] 1377 	mov	dph,r6
      0000F7 8F F0            [24] 1378 	mov	b,r7
      0000F9 78r00            [12] 1379 	mov	r0,#_list_head
      0000FB 79s00            [12] 1380 	mov	r1,#(_list_head >> 8)
      0000FD 7As00            [12] 1381 	mov	r2,#(_list_head >> 16)
      0000FF 12r00r00         [24] 1382 	lcall	__sdcc_banked_call
      000102 AD 82            [24] 1383 	mov	r5,dpl
      000104 AE 83            [24] 1384 	mov	r6,dph
      000106 AF F0            [24] 1385 	mov	r7,b
                                   1386 ;	../../../core/net/neighbor-attr.c:83: }
      000108 02r00r00         [24] 1387 	ljmp	__sdcc_banked_ret
                                   1388 ;------------------------------------------------------------
                                   1389 ;Allocation info for local variables in function 'set_attr'
                                   1390 ;------------------------------------------------------------
                                   1391 ;index                     Allocated to stack - sp -14
                                   1392 ;attr                      Allocated to stack - sp -9
                                   1393 ;sloc0                     Allocated to stack - sp -6
                                   1394 ;sloc1                     Allocated to stack - sp -4
                                   1395 ;sloc2                     Allocated to stack - sp -2
                                   1396 ;------------------------------------------------------------
                                   1397 ;	../../../core/net/neighbor-attr.c:86: set_attr(struct neighbor_attr *attr, uint16_t index)
                                   1398 ;	-----------------------------------------
                                   1399 ;	 function set_attr
                                   1400 ;	-----------------------------------------
      00010B                       1401 _set_attr:
      00010B C0 82            [24] 1402 	push	dpl
      00010D C0 83            [24] 1403 	push	dph
      00010F C0 F0            [24] 1404 	push	b
      000111 E5 81            [12] 1405 	mov	a,sp
      000113 24 07            [12] 1406 	add	a,#0x07
                                   1407 ;	../../../core/net/neighbor-attr.c:88: if(attr->default_value != NULL) {
      000115 F5 81            [12] 1408 	mov	sp,a
      000117 24 F7            [12] 1409 	add	a,#0xf7
      000119 F8               [12] 1410 	mov	r0,a
      00011A 74 05            [12] 1411 	mov	a,#0x05
      00011C 26               [12] 1412 	add	a,@r0
      00011D FA               [12] 1413 	mov	r2,a
      00011E E4               [12] 1414 	clr	a
      00011F 08               [12] 1415 	inc	r0
      000120 36               [12] 1416 	addc	a,@r0
      000121 FB               [12] 1417 	mov	r3,a
      000122 08               [12] 1418 	inc	r0
      000123 86 04            [24] 1419 	mov	ar4,@r0
      000125 8A 82            [24] 1420 	mov	dpl,r2
      000127 8B 83            [24] 1421 	mov	dph,r3
      000129 8C F0            [24] 1422 	mov	b,r4
      00012B 12r00r00         [24] 1423 	lcall	__gptrget
      00012E FA               [12] 1424 	mov	r2,a
      00012F A3               [24] 1425 	inc	dptr
      000130 12r00r00         [24] 1426 	lcall	__gptrget
      000133 FB               [12] 1427 	mov	r3,a
      000134 A3               [24] 1428 	inc	dptr
      000135 12r00r00         [24] 1429 	lcall	__gptrget
      000138 FC               [12] 1430 	mov	r4,a
      000139 EA               [12] 1431 	mov	a,r2
      00013A 4B               [12] 1432 	orl	a,r3
      00013B 70 03            [24] 1433 	jnz	00110$
      00013D 02r02r0A         [24] 1434 	ljmp	00102$
      000140                       1435 00110$:
                                   1436 ;	../../../core/net/neighbor-attr.c:89: memcpy((char *)attr->data + index * attr->size,
      000140 E5 81            [12] 1437 	mov	a,sp
      000142 24 F7            [12] 1438 	add	a,#0xf7
      000144 F8               [12] 1439 	mov	r0,a
      000145 74 03            [12] 1440 	mov	a,#0x03
      000147 26               [12] 1441 	add	a,@r0
      000148 FD               [12] 1442 	mov	r5,a
      000149 E4               [12] 1443 	clr	a
      00014A 08               [12] 1444 	inc	r0
      00014B 36               [12] 1445 	addc	a,@r0
      00014C FE               [12] 1446 	mov	r6,a
      00014D 08               [12] 1447 	inc	r0
      00014E 86 07            [24] 1448 	mov	ar7,@r0
      000150 8D 82            [24] 1449 	mov	dpl,r5
      000152 8E 83            [24] 1450 	mov	dph,r6
      000154 8F F0            [24] 1451 	mov	b,r7
      000156 E5 81            [12] 1452 	mov	a,sp
      000158 24 FA            [12] 1453 	add	a,#0xfa
      00015A F8               [12] 1454 	mov	r0,a
      00015B 12r00r00         [24] 1455 	lcall	__gptrget
      00015E F6               [12] 1456 	mov	@r0,a
      00015F A3               [24] 1457 	inc	dptr
      000160 12r00r00         [24] 1458 	lcall	__gptrget
      000163 08               [12] 1459 	inc	r0
      000164 F6               [12] 1460 	mov	@r0,a
      000165 E5 81            [12] 1461 	mov	a,sp
      000167 24 FA            [12] 1462 	add	a,#0xfa
      000169 F8               [12] 1463 	mov	r0,a
      00016A E5 81            [12] 1464 	mov	a,sp
      00016C 24 FC            [12] 1465 	add	a,#0xfc
      00016E F9               [12] 1466 	mov	r1,a
      00016F E6               [12] 1467 	mov	a,@r0
      000170 F7               [12] 1468 	mov	@r1,a
      000171 08               [12] 1469 	inc	r0
      000172 09               [12] 1470 	inc	r1
      000173 E6               [12] 1471 	mov	a,@r0
      000174 F7               [12] 1472 	mov	@r1,a
      000175 E5 81            [12] 1473 	mov	a,sp
      000177 24 F7            [12] 1474 	add	a,#0xf7
      000179 F8               [12] 1475 	mov	r0,a
      00017A 74 08            [12] 1476 	mov	a,#0x08
      00017C 26               [12] 1477 	add	a,@r0
      00017D FD               [12] 1478 	mov	r5,a
      00017E E4               [12] 1479 	clr	a
      00017F 08               [12] 1480 	inc	r0
      000180 36               [12] 1481 	addc	a,@r0
      000181 FE               [12] 1482 	mov	r6,a
      000182 08               [12] 1483 	inc	r0
      000183 86 07            [24] 1484 	mov	ar7,@r0
      000185 8D 82            [24] 1485 	mov	dpl,r5
      000187 8E 83            [24] 1486 	mov	dph,r6
      000189 8F F0            [24] 1487 	mov	b,r7
      00018B 12r00r00         [24] 1488 	lcall	__gptrget
      00018E FD               [12] 1489 	mov	r5,a
      00018F A3               [24] 1490 	inc	dptr
      000190 12r00r00         [24] 1491 	lcall	__gptrget
      000193 FE               [12] 1492 	mov	r6,a
      000194 A3               [24] 1493 	inc	dptr
      000195 12r00r00         [24] 1494 	lcall	__gptrget
      000198 FF               [12] 1495 	mov	r7,a
      000199 A8 81            [24] 1496 	mov	r0,sp
      00019B 18               [12] 1497 	dec	r0
      00019C 18               [12] 1498 	dec	r0
      00019D A6 05            [24] 1499 	mov	@r0,ar5
      00019F 08               [12] 1500 	inc	r0
      0001A0 A6 06            [24] 1501 	mov	@r0,ar6
      0001A2 08               [12] 1502 	inc	r0
      0001A3 A6 07            [24] 1503 	mov	@r0,ar7
      0001A5 C0 04            [24] 1504 	push	ar4
      0001A7 C0 03            [24] 1505 	push	ar3
      0001A9 C0 02            [24] 1506 	push	ar2
      0001AB E5 81            [12] 1507 	mov	a,sp
      0001AD 24 F7            [12] 1508 	add	a,#0xf7
      0001AF F8               [12] 1509 	mov	r0,a
      0001B0 E6               [12] 1510 	mov	a,@r0
      0001B1 C0 E0            [24] 1511 	push	acc
      0001B3 08               [12] 1512 	inc	r0
      0001B4 E6               [12] 1513 	mov	a,@r0
      0001B5 C0 E0            [24] 1514 	push	acc
      0001B7 E5 81            [12] 1515 	mov	a,sp
      0001B9 24 ED            [12] 1516 	add	a,#0xed
      0001BB F8               [12] 1517 	mov	r0,a
      0001BC 86 82            [24] 1518 	mov	dpl,@r0
      0001BE 08               [12] 1519 	inc	r0
      0001BF 86 83            [24] 1520 	mov	dph,@r0
      0001C1 12r00r00         [24] 1521 	lcall	__mulint
      0001C4 AE 82            [24] 1522 	mov	r6,dpl
      0001C6 AF 83            [24] 1523 	mov	r7,dph
      0001C8 15 81            [12] 1524 	dec	sp
      0001CA 15 81            [12] 1525 	dec	sp
      0001CC D0 02            [24] 1526 	pop	ar2
      0001CE D0 03            [24] 1527 	pop	ar3
      0001D0 D0 04            [24] 1528 	pop	ar4
      0001D2 A8 81            [24] 1529 	mov	r0,sp
      0001D4 18               [12] 1530 	dec	r0
      0001D5 18               [12] 1531 	dec	r0
      0001D6 EE               [12] 1532 	mov	a,r6
      0001D7 26               [12] 1533 	add	a,@r0
      0001D8 FE               [12] 1534 	mov	r6,a
      0001D9 EF               [12] 1535 	mov	a,r7
      0001DA 08               [12] 1536 	inc	r0
      0001DB 36               [12] 1537 	addc	a,@r0
      0001DC FF               [12] 1538 	mov	r7,a
      0001DD 08               [12] 1539 	inc	r0
      0001DE 86 05            [24] 1540 	mov	ar5,@r0
      0001E0 E5 81            [12] 1541 	mov	a,sp
      0001E2 24 FC            [12] 1542 	add	a,#0xfc
      0001E4 F8               [12] 1543 	mov	r0,a
      0001E5 E6               [12] 1544 	mov	a,@r0
      0001E6 C0 E0            [24] 1545 	push	acc
      0001E8 08               [12] 1546 	inc	r0
      0001E9 E6               [12] 1547 	mov	a,@r0
      0001EA C0 E0            [24] 1548 	push	acc
      0001EC C0 02            [24] 1549 	push	ar2
      0001EE C0 03            [24] 1550 	push	ar3
      0001F0 C0 04            [24] 1551 	push	ar4
      0001F2 8E 82            [24] 1552 	mov	dpl,r6
      0001F4 8F 83            [24] 1553 	mov	dph,r7
      0001F6 8D F0            [24] 1554 	mov	b,r5
      0001F8 78r00            [12] 1555 	mov	r0,#___memcpy
      0001FA 79s00            [12] 1556 	mov	r1,#(___memcpy >> 8)
      0001FC 7As00            [12] 1557 	mov	r2,#(___memcpy >> 16)
      0001FE 12r00r00         [24] 1558 	lcall	__sdcc_banked_call
      000201 E5 81            [12] 1559 	mov	a,sp
      000203 24 FB            [12] 1560 	add	a,#0xfb
      000205 F5 81            [12] 1561 	mov	sp,a
      000207 02r02rA4         [24] 1562 	ljmp	00104$
      00020A                       1563 00102$:
                                   1564 ;	../../../core/net/neighbor-attr.c:93: memset((char *)attr->data + index * attr->size, 0, attr->size);
      00020A E5 81            [12] 1565 	mov	a,sp
      00020C 24 F7            [12] 1566 	add	a,#0xf7
      00020E F8               [12] 1567 	mov	r0,a
      00020F 74 03            [12] 1568 	mov	a,#0x03
      000211 26               [12] 1569 	add	a,@r0
      000212 FD               [12] 1570 	mov	r5,a
      000213 E4               [12] 1571 	clr	a
      000214 08               [12] 1572 	inc	r0
      000215 36               [12] 1573 	addc	a,@r0
      000216 FE               [12] 1574 	mov	r6,a
      000217 08               [12] 1575 	inc	r0
      000218 86 07            [24] 1576 	mov	ar7,@r0
      00021A 8D 82            [24] 1577 	mov	dpl,r5
      00021C 8E 83            [24] 1578 	mov	dph,r6
      00021E 8F F0            [24] 1579 	mov	b,r7
      000220 12r00r00         [24] 1580 	lcall	__gptrget
      000223 FD               [12] 1581 	mov	r5,a
      000224 A3               [24] 1582 	inc	dptr
      000225 12r00r00         [24] 1583 	lcall	__gptrget
      000228 FE               [12] 1584 	mov	r6,a
      000229 A8 81            [24] 1585 	mov	r0,sp
      00022B 18               [12] 1586 	dec	r0
      00022C 18               [12] 1587 	dec	r0
      00022D A6 05            [24] 1588 	mov	@r0,ar5
      00022F 08               [12] 1589 	inc	r0
      000230 A6 06            [24] 1590 	mov	@r0,ar6
      000232 E5 81            [12] 1591 	mov	a,sp
      000234 24 F7            [12] 1592 	add	a,#0xf7
      000236 F8               [12] 1593 	mov	r0,a
      000237 74 08            [12] 1594 	mov	a,#0x08
      000239 26               [12] 1595 	add	a,@r0
      00023A FA               [12] 1596 	mov	r2,a
      00023B E4               [12] 1597 	clr	a
      00023C 08               [12] 1598 	inc	r0
      00023D 36               [12] 1599 	addc	a,@r0
      00023E FB               [12] 1600 	mov	r3,a
      00023F 08               [12] 1601 	inc	r0
      000240 86 07            [24] 1602 	mov	ar7,@r0
      000242 8A 82            [24] 1603 	mov	dpl,r2
      000244 8B 83            [24] 1604 	mov	dph,r3
      000246 8F F0            [24] 1605 	mov	b,r7
      000248 12r00r00         [24] 1606 	lcall	__gptrget
      00024B FA               [12] 1607 	mov	r2,a
      00024C A3               [24] 1608 	inc	dptr
      00024D 12r00r00         [24] 1609 	lcall	__gptrget
      000250 FB               [12] 1610 	mov	r3,a
      000251 A3               [24] 1611 	inc	dptr
      000252 12r00r00         [24] 1612 	lcall	__gptrget
      000255 FF               [12] 1613 	mov	r7,a
      000256 C0 07            [24] 1614 	push	ar7
      000258 C0 03            [24] 1615 	push	ar3
      00025A C0 02            [24] 1616 	push	ar2
      00025C C0 05            [24] 1617 	push	ar5
      00025E C0 06            [24] 1618 	push	ar6
      000260 E5 81            [12] 1619 	mov	a,sp
      000262 24 ED            [12] 1620 	add	a,#0xed
      000264 F8               [12] 1621 	mov	r0,a
      000265 86 82            [24] 1622 	mov	dpl,@r0
      000267 08               [12] 1623 	inc	r0
      000268 86 83            [24] 1624 	mov	dph,@r0
      00026A 12r00r00         [24] 1625 	lcall	__mulint
      00026D AD 82            [24] 1626 	mov	r5,dpl
      00026F AE 83            [24] 1627 	mov	r6,dph
      000271 15 81            [12] 1628 	dec	sp
      000273 15 81            [12] 1629 	dec	sp
      000275 D0 02            [24] 1630 	pop	ar2
      000277 D0 03            [24] 1631 	pop	ar3
      000279 D0 07            [24] 1632 	pop	ar7
      00027B ED               [12] 1633 	mov	a,r5
      00027C 2A               [12] 1634 	add	a,r2
      00027D FA               [12] 1635 	mov	r2,a
      00027E EE               [12] 1636 	mov	a,r6
      00027F 3B               [12] 1637 	addc	a,r3
      000280 FB               [12] 1638 	mov	r3,a
      000281 A8 81            [24] 1639 	mov	r0,sp
      000283 18               [12] 1640 	dec	r0
      000284 18               [12] 1641 	dec	r0
      000285 E6               [12] 1642 	mov	a,@r0
      000286 C0 E0            [24] 1643 	push	acc
      000288 08               [12] 1644 	inc	r0
      000289 E6               [12] 1645 	mov	a,@r0
      00028A C0 E0            [24] 1646 	push	acc
      00028C E4               [12] 1647 	clr	a
      00028D C0 E0            [24] 1648 	push	acc
      00028F 8A 82            [24] 1649 	mov	dpl,r2
      000291 8B 83            [24] 1650 	mov	dph,r3
      000293 8F F0            [24] 1651 	mov	b,r7
      000295 78r00            [12] 1652 	mov	r0,#_memset
      000297 79s00            [12] 1653 	mov	r1,#(_memset >> 8)
      000299 7As00            [12] 1654 	mov	r2,#(_memset >> 16)
      00029B 12r00r00         [24] 1655 	lcall	__sdcc_banked_call
      00029E 15 81            [12] 1656 	dec	sp
      0002A0 15 81            [12] 1657 	dec	sp
      0002A2 15 81            [12] 1658 	dec	sp
      0002A4                       1659 00104$:
                                   1660 ;	../../../core/net/neighbor-attr.c:95: }
      0002A4 E5 81            [12] 1661 	mov	a,sp
      0002A6 24 F6            [12] 1662 	add	a,#0xf6
      0002A8 F5 81            [12] 1663 	mov	sp,a
      0002AA 02r00r00         [24] 1664 	ljmp	__sdcc_banked_ret
                                   1665 ;------------------------------------------------------------
                                   1666 ;Allocation info for local variables in function 'neighbor_attr_register'
                                   1667 ;------------------------------------------------------------
                                   1668 ;def                       Allocated to stack - sp -2
                                   1669 ;addr                      Allocated to registers r5 r6 r7 
                                   1670 ;------------------------------------------------------------
                                   1671 ;	../../../core/net/neighbor-attr.c:98: neighbor_attr_register(struct neighbor_attr *def)
                                   1672 ;	-----------------------------------------
                                   1673 ;	 function neighbor_attr_register
                                   1674 ;	-----------------------------------------
      0002AD                       1675 _neighbor_attr_register:
      0002AD C0 82            [24] 1676 	push	dpl
      0002AF C0 83            [24] 1677 	push	dph
      0002B1 C0 F0            [24] 1678 	push	b
                                   1679 ;	../../../core/net/neighbor-attr.c:102: list_push(neighbor_attrs, def);
      0002B3 A8 81            [24] 1680 	mov	r0,sp
      0002B5 18               [12] 1681 	dec	r0
      0002B6 18               [12] 1682 	dec	r0
      0002B7 86 02            [24] 1683 	mov	ar2,@r0
      0002B9 08               [12] 1684 	inc	r0
      0002BA 86 03            [24] 1685 	mov	ar3,@r0
      0002BC 08               [12] 1686 	inc	r0
      0002BD 86 04            [24] 1687 	mov	ar4,@r0
      0002BF 90r00r15         [24] 1688 	mov	dptr,#_neighbor_attrs
      0002C2 E0               [24] 1689 	movx	a,@dptr
      0002C3 FD               [12] 1690 	mov	r5,a
      0002C4 A3               [24] 1691 	inc	dptr
      0002C5 E0               [24] 1692 	movx	a,@dptr
      0002C6 FE               [12] 1693 	mov	r6,a
      0002C7 A3               [24] 1694 	inc	dptr
      0002C8 E0               [24] 1695 	movx	a,@dptr
      0002C9 FF               [12] 1696 	mov	r7,a
      0002CA C0 02            [24] 1697 	push	ar2
      0002CC C0 03            [24] 1698 	push	ar3
      0002CE C0 04            [24] 1699 	push	ar4
      0002D0 8D 82            [24] 1700 	mov	dpl,r5
      0002D2 8E 83            [24] 1701 	mov	dph,r6
      0002D4 8F F0            [24] 1702 	mov	b,r7
      0002D6 78r00            [12] 1703 	mov	r0,#_list_push
      0002D8 79s00            [12] 1704 	mov	r1,#(_list_push >> 8)
      0002DA 7As00            [12] 1705 	mov	r2,#(_list_push >> 16)
      0002DC 12r00r00         [24] 1706 	lcall	__sdcc_banked_call
      0002DF 15 81            [12] 1707 	dec	sp
      0002E1 15 81            [12] 1708 	dec	sp
      0002E3 15 81            [12] 1709 	dec	sp
                                   1710 ;	../../../core/net/neighbor-attr.c:105: for(addr = list_head(neighbor_addrs); addr != NULL; addr = addr->next) {
      0002E5 90r00r0F         [24] 1711 	mov	dptr,#_neighbor_addrs
      0002E8 E0               [24] 1712 	movx	a,@dptr
      0002E9 FD               [12] 1713 	mov	r5,a
      0002EA A3               [24] 1714 	inc	dptr
      0002EB E0               [24] 1715 	movx	a,@dptr
      0002EC FE               [12] 1716 	mov	r6,a
      0002ED A3               [24] 1717 	inc	dptr
      0002EE E0               [24] 1718 	movx	a,@dptr
      0002EF FF               [12] 1719 	mov	r7,a
      0002F0 8D 82            [24] 1720 	mov	dpl,r5
      0002F2 8E 83            [24] 1721 	mov	dph,r6
      0002F4 8F F0            [24] 1722 	mov	b,r7
      0002F6 78r00            [12] 1723 	mov	r0,#_list_head
      0002F8 79s00            [12] 1724 	mov	r1,#(_list_head >> 8)
      0002FA 7As00            [12] 1725 	mov	r2,#(_list_head >> 16)
      0002FC 12r00r00         [24] 1726 	lcall	__sdcc_banked_call
      0002FF AD 82            [24] 1727 	mov	r5,dpl
      000301 AE 83            [24] 1728 	mov	r6,dph
      000303 AF F0            [24] 1729 	mov	r7,b
      000305                       1730 00103$:
      000305 ED               [12] 1731 	mov	a,r5
      000306 4E               [12] 1732 	orl	a,r6
      000307 60 58            [24] 1733 	jz	00101$
                                   1734 ;	../../../core/net/neighbor-attr.c:106: set_attr(def, addr->index);
      000309 74 0D            [12] 1735 	mov	a,#0x0d
      00030B 2D               [12] 1736 	add	a,r5
      00030C FA               [12] 1737 	mov	r2,a
      00030D E4               [12] 1738 	clr	a
      00030E 3E               [12] 1739 	addc	a,r6
      00030F FB               [12] 1740 	mov	r3,a
      000310 8F 04            [24] 1741 	mov	ar4,r7
      000312 8A 82            [24] 1742 	mov	dpl,r2
      000314 8B 83            [24] 1743 	mov	dph,r3
      000316 8C F0            [24] 1744 	mov	b,r4
      000318 12r00r00         [24] 1745 	lcall	__gptrget
      00031B FA               [12] 1746 	mov	r2,a
      00031C A3               [24] 1747 	inc	dptr
      00031D 12r00r00         [24] 1748 	lcall	__gptrget
      000320 FB               [12] 1749 	mov	r3,a
      000321 C0 07            [24] 1750 	push	ar7
      000323 C0 06            [24] 1751 	push	ar6
      000325 C0 05            [24] 1752 	push	ar5
      000327 C0 02            [24] 1753 	push	ar2
      000329 C0 03            [24] 1754 	push	ar3
      00032B E5 81            [12] 1755 	mov	a,sp
      00032D 24 F9            [12] 1756 	add	a,#0xf9
      00032F F8               [12] 1757 	mov	r0,a
      000330 86 82            [24] 1758 	mov	dpl,@r0
      000332 08               [12] 1759 	inc	r0
      000333 86 83            [24] 1760 	mov	dph,@r0
      000335 08               [12] 1761 	inc	r0
      000336 86 F0            [24] 1762 	mov	b,@r0
      000338 78r0B            [12] 1763 	mov	r0,#_set_attr
      00033A 79s01            [12] 1764 	mov	r1,#(_set_attr >> 8)
      00033C 7As00            [12] 1765 	mov	r2,#(_set_attr >> 16)
      00033E 12r00r00         [24] 1766 	lcall	__sdcc_banked_call
      000341 15 81            [12] 1767 	dec	sp
      000343 15 81            [12] 1768 	dec	sp
      000345 D0 05            [24] 1769 	pop	ar5
      000347 D0 06            [24] 1770 	pop	ar6
      000349 D0 07            [24] 1771 	pop	ar7
                                   1772 ;	../../../core/net/neighbor-attr.c:105: for(addr = list_head(neighbor_addrs); addr != NULL; addr = addr->next) {
      00034B 8D 82            [24] 1773 	mov	dpl,r5
      00034D 8E 83            [24] 1774 	mov	dph,r6
      00034F 8F F0            [24] 1775 	mov	b,r7
      000351 12r00r00         [24] 1776 	lcall	__gptrget
      000354 FD               [12] 1777 	mov	r5,a
      000355 A3               [24] 1778 	inc	dptr
      000356 12r00r00         [24] 1779 	lcall	__gptrget
      000359 FE               [12] 1780 	mov	r6,a
      00035A A3               [24] 1781 	inc	dptr
      00035B 12r00r00         [24] 1782 	lcall	__gptrget
      00035E FF               [12] 1783 	mov	r7,a
      00035F 80 A4            [24] 1784 	sjmp	00103$
      000361                       1785 00101$:
                                   1786 ;	../../../core/net/neighbor-attr.c:108: return 1;
      000361 90 00 01         [24] 1787 	mov	dptr,#0x0001
                                   1788 ;	../../../core/net/neighbor-attr.c:109: }
      000364 15 81            [12] 1789 	dec	sp
      000366 15 81            [12] 1790 	dec	sp
      000368 15 81            [12] 1791 	dec	sp
      00036A 02r00r00         [24] 1792 	ljmp	__sdcc_banked_ret
                                   1793 ;------------------------------------------------------------
                                   1794 ;Allocation info for local variables in function 'neighbor_attr_has_neighbor'
                                   1795 ;------------------------------------------------------------
                                   1796 ;addr                      Allocated to registers r5 r6 r7 
                                   1797 ;------------------------------------------------------------
                                   1798 ;	../../../core/net/neighbor-attr.c:112: neighbor_attr_has_neighbor(const rimeaddr_t *addr)
                                   1799 ;	-----------------------------------------
                                   1800 ;	 function neighbor_attr_has_neighbor
                                   1801 ;	-----------------------------------------
      00036D                       1802 _neighbor_attr_has_neighbor:
                                   1803 ;	../../../core/net/neighbor-attr.c:114: return neighbor_addr_get(addr) != NULL;
      00036D 78r00            [12] 1804 	mov	r0,#_neighbor_addr_get
      00036F 79s00            [12] 1805 	mov	r1,#(_neighbor_addr_get >> 8)
      000371 7As00            [12] 1806 	mov	r2,#(_neighbor_addr_get >> 16)
      000373 12r00r00         [24] 1807 	lcall	__sdcc_banked_call
      000376 AD 82            [24] 1808 	mov	r5,dpl
      000378 AE 83            [24] 1809 	mov	r6,dph
      00037A ED               [12] 1810 	mov	a,r5
      00037B 4E               [12] 1811 	orl	a,r6
      00037C B4 01 00         [24] 1812 	cjne	a,#0x01,00103$
      00037F                       1813 00103$:
      00037F B3               [12] 1814 	cpl	c
      000380 92*00            [24] 1815 	mov	b0,c
      000382 E4               [12] 1816 	clr	a
      000383 33               [12] 1817 	rlc	a
      000384 FE               [12] 1818 	mov	r6,a
      000385 7F 00            [12] 1819 	mov	r7,#0x00
      000387 8E 82            [24] 1820 	mov	dpl,r6
      000389 8F 83            [24] 1821 	mov	dph,r7
                                   1822 ;	../../../core/net/neighbor-attr.c:115: }
      00038B 02r00r00         [24] 1823 	ljmp	__sdcc_banked_ret
                                   1824 ;------------------------------------------------------------
                                   1825 ;Allocation info for local variables in function 'neighbor_attr_add_neighbor'
                                   1826 ;------------------------------------------------------------
                                   1827 ;addr                      Allocated to stack - sp -8
                                   1828 ;def                       Allocated to registers r5 r6 r7 
                                   1829 ;item                      Allocated to stack - sp -5
                                   1830 ;ptr                       Allocated to stack - sp -2
                                   1831 ;i                         Allocated to registers 
                                   1832 ;------------------------------------------------------------
                                   1833 ;	../../../core/net/neighbor-attr.c:118: neighbor_attr_add_neighbor(const rimeaddr_t *addr)
                                   1834 ;	-----------------------------------------
                                   1835 ;	 function neighbor_attr_add_neighbor
                                   1836 ;	-----------------------------------------
      00038E                       1837 _neighbor_attr_add_neighbor:
      00038E C0 82            [24] 1838 	push	dpl
      000390 C0 83            [24] 1839 	push	dph
      000392 C0 F0            [24] 1840 	push	b
      000394 E5 81            [12] 1841 	mov	a,sp
      000396 24 06            [12] 1842 	add	a,#0x06
                                   1843 ;	../../../core/net/neighbor-attr.c:125: if(neighbor_attr_has_neighbor(addr)) {
      000398 F5 81            [12] 1844 	mov	sp,a
      00039A 24 F8            [12] 1845 	add	a,#0xf8
      00039C F8               [12] 1846 	mov	r0,a
      00039D 86 82            [24] 1847 	mov	dpl,@r0
      00039F 08               [12] 1848 	inc	r0
      0003A0 86 83            [24] 1849 	mov	dph,@r0
      0003A2 08               [12] 1850 	inc	r0
      0003A3 86 F0            [24] 1851 	mov	b,@r0
      0003A5 78r6D            [12] 1852 	mov	r0,#_neighbor_attr_has_neighbor
      0003A7 79s03            [12] 1853 	mov	r1,#(_neighbor_attr_has_neighbor >> 8)
      0003A9 7As00            [12] 1854 	mov	r2,#(_neighbor_attr_has_neighbor >> 16)
      0003AB 12r00r00         [24] 1855 	lcall	__sdcc_banked_call
      0003AE E5 82            [12] 1856 	mov	a,dpl
      0003B0 85 83 F0         [24] 1857 	mov	b,dph
      0003B3 45 F0            [12] 1858 	orl	a,b
      0003B5 60 06            [24] 1859 	jz	00102$
                                   1860 ;	../../../core/net/neighbor-attr.c:126: return 0;
      0003B7 90 00 00         [24] 1861 	mov	dptr,#0x0000
      0003BA 02r05r7B         [24] 1862 	ljmp	00115$
      0003BD                       1863 00102$:
                                   1864 ;	../../../core/net/neighbor-attr.c:129: item = memb_alloc(&neighbor_addr_mem);
      0003BD 90r00r02         [24] 1865 	mov	dptr,#_neighbor_addr_mem
      0003C0 75 F0 00         [24] 1866 	mov	b,#0x00
      0003C3 78r00            [12] 1867 	mov	r0,#_memb_alloc
      0003C5 79s00            [12] 1868 	mov	r1,#(_memb_alloc >> 8)
      0003C7 7As00            [12] 1869 	mov	r2,#(_memb_alloc >> 16)
      0003C9 12r00r00         [24] 1870 	lcall	__sdcc_banked_call
      0003CC AA 82            [24] 1871 	mov	r2,dpl
      0003CE AB 83            [24] 1872 	mov	r3,dph
      0003D0 AC F0            [24] 1873 	mov	r4,b
      0003D2 E5 81            [12] 1874 	mov	a,sp
      0003D4 24 FB            [12] 1875 	add	a,#0xfb
      0003D6 F8               [12] 1876 	mov	r0,a
      0003D7 A6 02            [24] 1877 	mov	@r0,ar2
      0003D9 08               [12] 1878 	inc	r0
      0003DA A6 03            [24] 1879 	mov	@r0,ar3
      0003DC 08               [12] 1880 	inc	r0
      0003DD A6 04            [24] 1881 	mov	@r0,ar4
                                   1882 ;	../../../core/net/neighbor-attr.c:130: if(item == NULL) {
      0003DF E5 81            [12] 1883 	mov	a,sp
      0003E1 24 FB            [12] 1884 	add	a,#0xfb
      0003E3 F8               [12] 1885 	mov	r0,a
      0003E4 E6               [12] 1886 	mov	a,@r0
      0003E5 08               [12] 1887 	inc	r0
      0003E6 46               [12] 1888 	orl	a,@r0
      0003E7 70 06            [24] 1889 	jnz	00104$
                                   1890 ;	../../../core/net/neighbor-attr.c:131: return -1;
      0003E9 90 FF FF         [24] 1891 	mov	dptr,#0xffff
      0003EC 02r05r7B         [24] 1892 	ljmp	00115$
      0003EF                       1893 00104$:
                                   1894 ;	../../../core/net/neighbor-attr.c:134: list_push(neighbor_addrs, item);
      0003EF E5 81            [12] 1895 	mov	a,sp
      0003F1 24 FB            [12] 1896 	add	a,#0xfb
      0003F3 F8               [12] 1897 	mov	r0,a
      0003F4 86 05            [24] 1898 	mov	ar5,@r0
      0003F6 08               [12] 1899 	inc	r0
      0003F7 86 06            [24] 1900 	mov	ar6,@r0
      0003F9 08               [12] 1901 	inc	r0
      0003FA 86 07            [24] 1902 	mov	ar7,@r0
      0003FC 90r00r0F         [24] 1903 	mov	dptr,#_neighbor_addrs
      0003FF E0               [24] 1904 	movx	a,@dptr
      000400 FA               [12] 1905 	mov	r2,a
      000401 A3               [24] 1906 	inc	dptr
      000402 E0               [24] 1907 	movx	a,@dptr
      000403 FB               [12] 1908 	mov	r3,a
      000404 A3               [24] 1909 	inc	dptr
      000405 E0               [24] 1910 	movx	a,@dptr
      000406 FC               [12] 1911 	mov	r4,a
      000407 C0 05            [24] 1912 	push	ar5
      000409 C0 06            [24] 1913 	push	ar6
      00040B C0 07            [24] 1914 	push	ar7
      00040D 8A 82            [24] 1915 	mov	dpl,r2
      00040F 8B 83            [24] 1916 	mov	dph,r3
      000411 8C F0            [24] 1917 	mov	b,r4
      000413 78r00            [12] 1918 	mov	r0,#_list_push
      000415 79s00            [12] 1919 	mov	r1,#(_list_push >> 8)
      000417 7As00            [12] 1920 	mov	r2,#(_list_push >> 16)
      000419 12r00r00         [24] 1921 	lcall	__sdcc_banked_call
      00041C 15 81            [12] 1922 	dec	sp
      00041E 15 81            [12] 1923 	dec	sp
      000420 15 81            [12] 1924 	dec	sp
                                   1925 ;	../../../core/net/neighbor-attr.c:136: item->time = 0;
      000422 E5 81            [12] 1926 	mov	a,sp
      000424 24 FB            [12] 1927 	add	a,#0xfb
      000426 F8               [12] 1928 	mov	r0,a
      000427 74 0B            [12] 1929 	mov	a,#0x0b
      000429 26               [12] 1930 	add	a,@r0
      00042A FD               [12] 1931 	mov	r5,a
      00042B E4               [12] 1932 	clr	a
      00042C 08               [12] 1933 	inc	r0
      00042D 36               [12] 1934 	addc	a,@r0
      00042E FE               [12] 1935 	mov	r6,a
      00042F 08               [12] 1936 	inc	r0
      000430 86 07            [24] 1937 	mov	ar7,@r0
      000432 8D 82            [24] 1938 	mov	dpl,r5
      000434 8E 83            [24] 1939 	mov	dph,r6
      000436 8F F0            [24] 1940 	mov	b,r7
      000438 E4               [12] 1941 	clr	a
      000439 12r00r00         [24] 1942 	lcall	__gptrput
      00043C A3               [24] 1943 	inc	dptr
      00043D 12r00r00         [24] 1944 	lcall	__gptrput
                                   1945 ;	../../../core/net/neighbor-attr.c:137: rimeaddr_copy(&item->addr, addr);
      000440 E5 81            [12] 1946 	mov	a,sp
      000442 24 FB            [12] 1947 	add	a,#0xfb
      000444 F8               [12] 1948 	mov	r0,a
      000445 74 03            [12] 1949 	mov	a,#0x03
      000447 26               [12] 1950 	add	a,@r0
      000448 FD               [12] 1951 	mov	r5,a
      000449 E4               [12] 1952 	clr	a
      00044A 08               [12] 1953 	inc	r0
      00044B 36               [12] 1954 	addc	a,@r0
      00044C FE               [12] 1955 	mov	r6,a
      00044D 08               [12] 1956 	inc	r0
      00044E 86 07            [24] 1957 	mov	ar7,@r0
      000450 E5 81            [12] 1958 	mov	a,sp
      000452 24 F8            [12] 1959 	add	a,#0xf8
      000454 F8               [12] 1960 	mov	r0,a
      000455 E6               [12] 1961 	mov	a,@r0
      000456 C0 E0            [24] 1962 	push	acc
      000458 08               [12] 1963 	inc	r0
      000459 E6               [12] 1964 	mov	a,@r0
      00045A C0 E0            [24] 1965 	push	acc
      00045C 08               [12] 1966 	inc	r0
      00045D E6               [12] 1967 	mov	a,@r0
      00045E C0 E0            [24] 1968 	push	acc
      000460 8D 82            [24] 1969 	mov	dpl,r5
      000462 8E 83            [24] 1970 	mov	dph,r6
      000464 8F F0            [24] 1971 	mov	b,r7
      000466 78r00            [12] 1972 	mov	r0,#_rimeaddr_copy
      000468 79s00            [12] 1973 	mov	r1,#(_rimeaddr_copy >> 8)
      00046A 7As00            [12] 1974 	mov	r2,#(_rimeaddr_copy >> 16)
      00046C 12r00r00         [24] 1975 	lcall	__sdcc_banked_call
      00046F 15 81            [12] 1976 	dec	sp
      000471 15 81            [12] 1977 	dec	sp
      000473 15 81            [12] 1978 	dec	sp
                                   1979 ;	../../../core/net/neighbor-attr.c:140: ptr = neighbor_addr_mem.mem;
      000475 90r00r09         [24] 1980 	mov	dptr,#(_neighbor_addr_mem + 0x0007)
      000478 E0               [24] 1981 	movx	a,@dptr
      000479 FD               [12] 1982 	mov	r5,a
      00047A A3               [24] 1983 	inc	dptr
      00047B E0               [24] 1984 	movx	a,@dptr
      00047C FE               [12] 1985 	mov	r6,a
      00047D A3               [24] 1986 	inc	dptr
      00047E E0               [24] 1987 	movx	a,@dptr
      00047F FF               [12] 1988 	mov	r7,a
      000480 A8 81            [24] 1989 	mov	r0,sp
      000482 18               [12] 1990 	dec	r0
      000483 18               [12] 1991 	dec	r0
      000484 A6 05            [24] 1992 	mov	@r0,ar5
      000486 08               [12] 1993 	inc	r0
      000487 A6 06            [24] 1994 	mov	@r0,ar6
      000489 08               [12] 1995 	inc	r0
      00048A A6 07            [24] 1996 	mov	@r0,ar7
                                   1997 ;	../../../core/net/neighbor-attr.c:141: for(i = 0; i < neighbor_addr_mem.num; ++i) {
      00048C 7B 00            [12] 1998 	mov	r3,#0x00
      00048E 7C 00            [12] 1999 	mov	r4,#0x00
      000490 7A 00            [12] 2000 	mov	r2,#0x00
      000492 7F 00            [12] 2001 	mov	r7,#0x00
      000494                       2002 00110$:
      000494 90r00r04         [24] 2003 	mov	dptr,#(_neighbor_addr_mem + 0x0002)
      000497 E0               [24] 2004 	movx	a,@dptr
      000498 FD               [12] 2005 	mov	r5,a
      000499 A3               [24] 2006 	inc	dptr
      00049A E0               [24] 2007 	movx	a,@dptr
      00049B FE               [12] 2008 	mov	r6,a
      00049C C3               [12] 2009 	clr	c
      00049D EB               [12] 2010 	mov	a,r3
      00049E 9D               [12] 2011 	subb	a,r5
      00049F EC               [12] 2012 	mov	a,r4
      0004A0 9E               [12] 2013 	subb	a,r6
      0004A1 50 49            [24] 2014 	jnc	00124$
                                   2015 ;	../../../core/net/neighbor-attr.c:142: if(&ptr[i] == item) {
      0004A3 C0 03            [24] 2016 	push	ar3
      0004A5 C0 04            [24] 2017 	push	ar4
      0004A7 E5 81            [12] 2018 	mov	a,sp
      0004A9 24 FC            [12] 2019 	add	a,#0xfc
      0004AB F8               [12] 2020 	mov	r0,a
      0004AC EA               [12] 2021 	mov	a,r2
      0004AD 26               [12] 2022 	add	a,@r0
      0004AE FC               [12] 2023 	mov	r4,a
      0004AF EF               [12] 2024 	mov	a,r7
      0004B0 08               [12] 2025 	inc	r0
      0004B1 36               [12] 2026 	addc	a,@r0
      0004B2 FD               [12] 2027 	mov	r5,a
      0004B3 08               [12] 2028 	inc	r0
      0004B4 86 06            [24] 2029 	mov	ar6,@r0
      0004B6 E5 81            [12] 2030 	mov	a,sp
      0004B8 24 F9            [12] 2031 	add	a,#0xf9
      0004BA F8               [12] 2032 	mov	r0,a
      0004BB C0 04            [24] 2033 	push	ar4
      0004BD C0 05            [24] 2034 	push	ar5
      0004BF C0 06            [24] 2035 	push	ar6
      0004C1 86 82            [24] 2036 	mov	dpl,@r0
      0004C3 08               [12] 2037 	inc	r0
      0004C4 86 83            [24] 2038 	mov	dph,@r0
      0004C6 08               [12] 2039 	inc	r0
      0004C7 86 F0            [24] 2040 	mov	b,@r0
      0004C9 12r00r00         [24] 2041 	lcall	___gptr_cmp
      0004CC 15 81            [12] 2042 	dec	sp
      0004CE 15 81            [12] 2043 	dec	sp
      0004D0 15 81            [12] 2044 	dec	sp
      0004D2 70 06            [24] 2045 	jnz	00149$
      0004D4 D0 04            [24] 2046 	pop	ar4
      0004D6 D0 03            [24] 2047 	pop	ar3
      0004D8 80 12            [24] 2048 	sjmp	00124$
      0004DA                       2049 00149$:
      0004DA D0 04            [24] 2050 	pop	ar4
      0004DC D0 03            [24] 2051 	pop	ar3
                                   2052 ;	../../../core/net/neighbor-attr.c:141: for(i = 0; i < neighbor_addr_mem.num; ++i) {
      0004DE 74 0F            [12] 2053 	mov	a,#0x0f
      0004E0 2A               [12] 2054 	add	a,r2
      0004E1 FA               [12] 2055 	mov	r2,a
      0004E2 E4               [12] 2056 	clr	a
      0004E3 3F               [12] 2057 	addc	a,r7
      0004E4 FF               [12] 2058 	mov	r7,a
      0004E5 0B               [12] 2059 	inc	r3
      0004E6 BB 00 AB         [24] 2060 	cjne	r3,#0x00,00110$
      0004E9 0C               [12] 2061 	inc	r4
      0004EA 80 A8            [24] 2062 	sjmp	00110$
      0004EC                       2063 00124$:
                                   2064 ;	../../../core/net/neighbor-attr.c:147: item->index = i;
      0004EC E5 81            [12] 2065 	mov	a,sp
      0004EE 24 FB            [12] 2066 	add	a,#0xfb
      0004F0 F8               [12] 2067 	mov	r0,a
      0004F1 74 0D            [12] 2068 	mov	a,#0x0d
      0004F3 26               [12] 2069 	add	a,@r0
      0004F4 FD               [12] 2070 	mov	r5,a
      0004F5 E4               [12] 2071 	clr	a
      0004F6 08               [12] 2072 	inc	r0
      0004F7 36               [12] 2073 	addc	a,@r0
      0004F8 FE               [12] 2074 	mov	r6,a
      0004F9 08               [12] 2075 	inc	r0
      0004FA 86 07            [24] 2076 	mov	ar7,@r0
      0004FC 8D 82            [24] 2077 	mov	dpl,r5
      0004FE 8E 83            [24] 2078 	mov	dph,r6
      000500 8F F0            [24] 2079 	mov	b,r7
      000502 EB               [12] 2080 	mov	a,r3
      000503 12r00r00         [24] 2081 	lcall	__gptrput
      000506 A3               [24] 2082 	inc	dptr
      000507 EC               [12] 2083 	mov	a,r4
      000508 12r00r00         [24] 2084 	lcall	__gptrput
                                   2085 ;	../../../core/net/neighbor-attr.c:149: for(def = list_head(neighbor_attrs); def != NULL; def = def->next) {
      00050B 90r00r15         [24] 2086 	mov	dptr,#_neighbor_attrs
      00050E E0               [24] 2087 	movx	a,@dptr
      00050F FD               [12] 2088 	mov	r5,a
      000510 A3               [24] 2089 	inc	dptr
      000511 E0               [24] 2090 	movx	a,@dptr
      000512 FE               [12] 2091 	mov	r6,a
      000513 A3               [24] 2092 	inc	dptr
      000514 E0               [24] 2093 	movx	a,@dptr
      000515 FF               [12] 2094 	mov	r7,a
      000516 8D 82            [24] 2095 	mov	dpl,r5
      000518 8E 83            [24] 2096 	mov	dph,r6
      00051A 8F F0            [24] 2097 	mov	b,r7
      00051C C0 04            [24] 2098 	push	ar4
      00051E C0 03            [24] 2099 	push	ar3
      000520 78r00            [12] 2100 	mov	r0,#_list_head
      000522 79s00            [12] 2101 	mov	r1,#(_list_head >> 8)
      000524 7As00            [12] 2102 	mov	r2,#(_list_head >> 16)
      000526 12r00r00         [24] 2103 	lcall	__sdcc_banked_call
      000529 AD 82            [24] 2104 	mov	r5,dpl
      00052B AE 83            [24] 2105 	mov	r6,dph
      00052D AF F0            [24] 2106 	mov	r7,b
      00052F D0 03            [24] 2107 	pop	ar3
      000531 D0 04            [24] 2108 	pop	ar4
      000533                       2109 00113$:
      000533 ED               [12] 2110 	mov	a,r5
      000534 4E               [12] 2111 	orl	a,r6
      000535 60 41            [24] 2112 	jz	00108$
                                   2113 ;	../../../core/net/neighbor-attr.c:150: set_attr(def, i);
      000537 C0 07            [24] 2114 	push	ar7
      000539 C0 06            [24] 2115 	push	ar6
      00053B C0 05            [24] 2116 	push	ar5
      00053D C0 04            [24] 2117 	push	ar4
      00053F C0 03            [24] 2118 	push	ar3
      000541 C0 03            [24] 2119 	push	ar3
      000543 C0 04            [24] 2120 	push	ar4
      000545 8D 82            [24] 2121 	mov	dpl,r5
      000547 8E 83            [24] 2122 	mov	dph,r6
      000549 8F F0            [24] 2123 	mov	b,r7
      00054B 78r0B            [12] 2124 	mov	r0,#_set_attr
      00054D 79s01            [12] 2125 	mov	r1,#(_set_attr >> 8)
      00054F 7As00            [12] 2126 	mov	r2,#(_set_attr >> 16)
      000551 12r00r00         [24] 2127 	lcall	__sdcc_banked_call
      000554 15 81            [12] 2128 	dec	sp
      000556 15 81            [12] 2129 	dec	sp
      000558 D0 03            [24] 2130 	pop	ar3
      00055A D0 04            [24] 2131 	pop	ar4
      00055C D0 05            [24] 2132 	pop	ar5
      00055E D0 06            [24] 2133 	pop	ar6
      000560 D0 07            [24] 2134 	pop	ar7
                                   2135 ;	../../../core/net/neighbor-attr.c:149: for(def = list_head(neighbor_attrs); def != NULL; def = def->next) {
      000562 8D 82            [24] 2136 	mov	dpl,r5
      000564 8E 83            [24] 2137 	mov	dph,r6
      000566 8F F0            [24] 2138 	mov	b,r7
      000568 12r00r00         [24] 2139 	lcall	__gptrget
      00056B FD               [12] 2140 	mov	r5,a
      00056C A3               [24] 2141 	inc	dptr
      00056D 12r00r00         [24] 2142 	lcall	__gptrget
      000570 FE               [12] 2143 	mov	r6,a
      000571 A3               [24] 2144 	inc	dptr
      000572 12r00r00         [24] 2145 	lcall	__gptrget
      000575 FF               [12] 2146 	mov	r7,a
      000576 80 BB            [24] 2147 	sjmp	00113$
      000578                       2148 00108$:
                                   2149 ;	../../../core/net/neighbor-attr.c:153: return 1;
      000578 90 00 01         [24] 2150 	mov	dptr,#0x0001
      00057B                       2151 00115$:
                                   2152 ;	../../../core/net/neighbor-attr.c:154: }
      00057B E5 81            [12] 2153 	mov	a,sp
      00057D 24 F7            [12] 2154 	add	a,#0xf7
      00057F F5 81            [12] 2155 	mov	sp,a
      000581 02r00r00         [24] 2156 	ljmp	__sdcc_banked_ret
                                   2157 ;------------------------------------------------------------
                                   2158 ;Allocation info for local variables in function 'neighbor_attr_remove_neighbor'
                                   2159 ;------------------------------------------------------------
                                   2160 ;addr                      Allocated to registers r5 r6 r7 
                                   2161 ;item                      Allocated to stack - sp -2
                                   2162 ;------------------------------------------------------------
                                   2163 ;	../../../core/net/neighbor-attr.c:157: neighbor_attr_remove_neighbor(const rimeaddr_t *addr)
                                   2164 ;	-----------------------------------------
                                   2165 ;	 function neighbor_attr_remove_neighbor
                                   2166 ;	-----------------------------------------
      000584                       2167 _neighbor_attr_remove_neighbor:
      000584 05 81            [12] 2168 	inc	sp
      000586 05 81            [12] 2169 	inc	sp
      000588 05 81            [12] 2170 	inc	sp
                                   2171 ;	../../../core/net/neighbor-attr.c:159: struct neighbor_addr *item = neighbor_addr_get(addr);
      00058A 78r00            [12] 2172 	mov	r0,#_neighbor_addr_get
      00058C 79s00            [12] 2173 	mov	r1,#(_neighbor_addr_get >> 8)
      00058E 7As00            [12] 2174 	mov	r2,#(_neighbor_addr_get >> 16)
      000590 12r00r00         [24] 2175 	lcall	__sdcc_banked_call
      000593 AD 82            [24] 2176 	mov	r5,dpl
      000595 AE 83            [24] 2177 	mov	r6,dph
      000597 AF F0            [24] 2178 	mov	r7,b
      000599 A8 81            [24] 2179 	mov	r0,sp
      00059B 18               [12] 2180 	dec	r0
      00059C 18               [12] 2181 	dec	r0
      00059D A6 05            [24] 2182 	mov	@r0,ar5
      00059F 08               [12] 2183 	inc	r0
      0005A0 A6 06            [24] 2184 	mov	@r0,ar6
      0005A2 08               [12] 2185 	inc	r0
      0005A3 A6 07            [24] 2186 	mov	@r0,ar7
                                   2187 ;	../../../core/net/neighbor-attr.c:161: if(item != NULL) {
      0005A5 A8 81            [24] 2188 	mov	r0,sp
      0005A7 18               [12] 2189 	dec	r0
      0005A8 18               [12] 2190 	dec	r0
      0005A9 E6               [12] 2191 	mov	a,@r0
      0005AA 08               [12] 2192 	inc	r0
      0005AB 46               [12] 2193 	orl	a,@r0
      0005AC 60 5E            [24] 2194 	jz	00102$
                                   2195 ;	../../../core/net/neighbor-attr.c:162: list_remove(neighbor_addrs, item);
      0005AE A8 81            [24] 2196 	mov	r0,sp
      0005B0 18               [12] 2197 	dec	r0
      0005B1 18               [12] 2198 	dec	r0
      0005B2 86 02            [24] 2199 	mov	ar2,@r0
      0005B4 08               [12] 2200 	inc	r0
      0005B5 86 03            [24] 2201 	mov	ar3,@r0
      0005B7 08               [12] 2202 	inc	r0
      0005B8 86 04            [24] 2203 	mov	ar4,@r0
      0005BA 90r00r0F         [24] 2204 	mov	dptr,#_neighbor_addrs
      0005BD E0               [24] 2205 	movx	a,@dptr
      0005BE FD               [12] 2206 	mov	r5,a
      0005BF A3               [24] 2207 	inc	dptr
      0005C0 E0               [24] 2208 	movx	a,@dptr
      0005C1 FE               [12] 2209 	mov	r6,a
      0005C2 A3               [24] 2210 	inc	dptr
      0005C3 E0               [24] 2211 	movx	a,@dptr
      0005C4 FF               [12] 2212 	mov	r7,a
      0005C5 C0 02            [24] 2213 	push	ar2
      0005C7 C0 03            [24] 2214 	push	ar3
      0005C9 C0 04            [24] 2215 	push	ar4
      0005CB 8D 82            [24] 2216 	mov	dpl,r5
      0005CD 8E 83            [24] 2217 	mov	dph,r6
      0005CF 8F F0            [24] 2218 	mov	b,r7
      0005D1 78r00            [12] 2219 	mov	r0,#_list_remove
      0005D3 79s00            [12] 2220 	mov	r1,#(_list_remove >> 8)
      0005D5 7As00            [12] 2221 	mov	r2,#(_list_remove >> 16)
      0005D7 12r00r00         [24] 2222 	lcall	__sdcc_banked_call
      0005DA 15 81            [12] 2223 	dec	sp
      0005DC 15 81            [12] 2224 	dec	sp
      0005DE 15 81            [12] 2225 	dec	sp
                                   2226 ;	../../../core/net/neighbor-attr.c:163: memb_free(&neighbor_addr_mem, item);
      0005E0 A8 81            [24] 2227 	mov	r0,sp
      0005E2 18               [12] 2228 	dec	r0
      0005E3 18               [12] 2229 	dec	r0
      0005E4 86 05            [24] 2230 	mov	ar5,@r0
      0005E6 08               [12] 2231 	inc	r0
      0005E7 86 06            [24] 2232 	mov	ar6,@r0
      0005E9 08               [12] 2233 	inc	r0
      0005EA 86 07            [24] 2234 	mov	ar7,@r0
      0005EC C0 05            [24] 2235 	push	ar5
      0005EE C0 06            [24] 2236 	push	ar6
      0005F0 C0 07            [24] 2237 	push	ar7
      0005F2 90r00r02         [24] 2238 	mov	dptr,#_neighbor_addr_mem
      0005F5 75 F0 00         [24] 2239 	mov	b,#0x00
      0005F8 78r00            [12] 2240 	mov	r0,#_memb_free
      0005FA 79s00            [12] 2241 	mov	r1,#(_memb_free >> 8)
      0005FC 7As00            [12] 2242 	mov	r2,#(_memb_free >> 16)
      0005FE 12r00r00         [24] 2243 	lcall	__sdcc_banked_call
      000601 15 81            [12] 2244 	dec	sp
      000603 15 81            [12] 2245 	dec	sp
      000605 15 81            [12] 2246 	dec	sp
                                   2247 ;	../../../core/net/neighbor-attr.c:164: return 0;
      000607 90 00 00         [24] 2248 	mov	dptr,#0x0000
      00060A 80 03            [24] 2249 	sjmp	00103$
      00060C                       2250 00102$:
                                   2251 ;	../../../core/net/neighbor-attr.c:166: return -1;
      00060C 90 FF FF         [24] 2252 	mov	dptr,#0xffff
      00060F                       2253 00103$:
                                   2254 ;	../../../core/net/neighbor-attr.c:167: }
      00060F 15 81            [12] 2255 	dec	sp
      000611 15 81            [12] 2256 	dec	sp
      000613 15 81            [12] 2257 	dec	sp
      000615 02r00r00         [24] 2258 	ljmp	__sdcc_banked_ret
                                   2259 ;------------------------------------------------------------
                                   2260 ;Allocation info for local variables in function 'neighbor_attr_get_data'
                                   2261 ;------------------------------------------------------------
                                   2262 ;addr                      Allocated to stack - sp -10
                                   2263 ;def                       Allocated to stack - sp -4
                                   2264 ;attr                      Allocated to registers r2 r3 r4 
                                   2265 ;sloc0                     Allocated to stack - sp -1
                                   2266 ;------------------------------------------------------------
                                   2267 ;	../../../core/net/neighbor-attr.c:170: neighbor_attr_get_data(struct neighbor_attr *def, const rimeaddr_t *addr)
                                   2268 ;	-----------------------------------------
                                   2269 ;	 function neighbor_attr_get_data
                                   2270 ;	-----------------------------------------
      000618                       2271 _neighbor_attr_get_data:
      000618 C0 82            [24] 2272 	push	dpl
      00061A C0 83            [24] 2273 	push	dph
      00061C C0 F0            [24] 2274 	push	b
      00061E 05 81            [12] 2275 	inc	sp
      000620 05 81            [12] 2276 	inc	sp
                                   2277 ;	../../../core/net/neighbor-attr.c:172: struct neighbor_addr *attr = neighbor_addr_get(addr);
      000622 E5 81            [12] 2278 	mov	a,sp
      000624 24 F6            [12] 2279 	add	a,#0xf6
      000626 F8               [12] 2280 	mov	r0,a
      000627 86 82            [24] 2281 	mov	dpl,@r0
      000629 08               [12] 2282 	inc	r0
      00062A 86 83            [24] 2283 	mov	dph,@r0
      00062C 08               [12] 2284 	inc	r0
      00062D 86 F0            [24] 2285 	mov	b,@r0
      00062F 78r00            [12] 2286 	mov	r0,#_neighbor_addr_get
      000631 79s00            [12] 2287 	mov	r1,#(_neighbor_addr_get >> 8)
      000633 7As00            [12] 2288 	mov	r2,#(_neighbor_addr_get >> 16)
      000635 12r00r00         [24] 2289 	lcall	__sdcc_banked_call
      000638 AF 82            [24] 2290 	mov	r7,dpl
      00063A AE 83            [24] 2291 	mov	r6,dph
      00063C AD F0            [24] 2292 	mov	r5,b
      00063E 8F 02            [24] 2293 	mov	ar2,r7
      000640 8E 03            [24] 2294 	mov	ar3,r6
      000642 8D 04            [24] 2295 	mov	ar4,r5
                                   2296 ;	../../../core/net/neighbor-attr.c:174: if(attr != NULL) {
      000644 EF               [12] 2297 	mov	a,r7
      000645 4E               [12] 2298 	orl	a,r6
      000646 70 03            [24] 2299 	jnz	00109$
      000648 02r06rDB         [24] 2300 	ljmp	00102$
      00064B                       2301 00109$:
                                   2302 ;	../../../core/net/neighbor-attr.c:175: return (char *)def->data + attr->index * def->size;
      00064B E5 81            [12] 2303 	mov	a,sp
      00064D 24 FC            [12] 2304 	add	a,#0xfc
      00064F F8               [12] 2305 	mov	r0,a
      000650 74 08            [12] 2306 	mov	a,#0x08
      000652 26               [12] 2307 	add	a,@r0
      000653 FD               [12] 2308 	mov	r5,a
      000654 E4               [12] 2309 	clr	a
      000655 08               [12] 2310 	inc	r0
      000656 36               [12] 2311 	addc	a,@r0
      000657 FE               [12] 2312 	mov	r6,a
      000658 08               [12] 2313 	inc	r0
      000659 86 07            [24] 2314 	mov	ar7,@r0
      00065B 8D 82            [24] 2315 	mov	dpl,r5
      00065D 8E 83            [24] 2316 	mov	dph,r6
      00065F 8F F0            [24] 2317 	mov	b,r7
      000661 12r00r00         [24] 2318 	lcall	__gptrget
      000664 FD               [12] 2319 	mov	r5,a
      000665 A3               [24] 2320 	inc	dptr
      000666 12r00r00         [24] 2321 	lcall	__gptrget
      000669 FE               [12] 2322 	mov	r6,a
      00066A A3               [24] 2323 	inc	dptr
      00066B 12r00r00         [24] 2324 	lcall	__gptrget
      00066E FF               [12] 2325 	mov	r7,a
      00066F 74 0D            [12] 2326 	mov	a,#0x0d
      000671 2A               [12] 2327 	add	a,r2
      000672 FA               [12] 2328 	mov	r2,a
      000673 E4               [12] 2329 	clr	a
      000674 3B               [12] 2330 	addc	a,r3
      000675 FB               [12] 2331 	mov	r3,a
      000676 8A 82            [24] 2332 	mov	dpl,r2
      000678 8B 83            [24] 2333 	mov	dph,r3
      00067A 8C F0            [24] 2334 	mov	b,r4
      00067C A8 81            [24] 2335 	mov	r0,sp
      00067E 18               [12] 2336 	dec	r0
      00067F 12r00r00         [24] 2337 	lcall	__gptrget
      000682 F6               [12] 2338 	mov	@r0,a
      000683 A3               [24] 2339 	inc	dptr
      000684 12r00r00         [24] 2340 	lcall	__gptrget
      000687 08               [12] 2341 	inc	r0
      000688 F6               [12] 2342 	mov	@r0,a
      000689 E5 81            [12] 2343 	mov	a,sp
      00068B 24 FC            [12] 2344 	add	a,#0xfc
      00068D F8               [12] 2345 	mov	r0,a
      00068E 74 03            [12] 2346 	mov	a,#0x03
      000690 26               [12] 2347 	add	a,@r0
      000691 FA               [12] 2348 	mov	r2,a
      000692 E4               [12] 2349 	clr	a
      000693 08               [12] 2350 	inc	r0
      000694 36               [12] 2351 	addc	a,@r0
      000695 FB               [12] 2352 	mov	r3,a
      000696 08               [12] 2353 	inc	r0
      000697 86 04            [24] 2354 	mov	ar4,@r0
      000699 8A 82            [24] 2355 	mov	dpl,r2
      00069B 8B 83            [24] 2356 	mov	dph,r3
      00069D 8C F0            [24] 2357 	mov	b,r4
      00069F 12r00r00         [24] 2358 	lcall	__gptrget
      0006A2 FA               [12] 2359 	mov	r2,a
      0006A3 A3               [24] 2360 	inc	dptr
      0006A4 12r00r00         [24] 2361 	lcall	__gptrget
      0006A7 FB               [12] 2362 	mov	r3,a
      0006A8 C0 07            [24] 2363 	push	ar7
      0006AA C0 06            [24] 2364 	push	ar6
      0006AC C0 05            [24] 2365 	push	ar5
      0006AE C0 02            [24] 2366 	push	ar2
      0006B0 C0 03            [24] 2367 	push	ar3
      0006B2 E5 81            [12] 2368 	mov	a,sp
      0006B4 24 FA            [12] 2369 	add	a,#0xfa
      0006B6 F8               [12] 2370 	mov	r0,a
      0006B7 86 82            [24] 2371 	mov	dpl,@r0
      0006B9 08               [12] 2372 	inc	r0
      0006BA 86 83            [24] 2373 	mov	dph,@r0
      0006BC 12r00r00         [24] 2374 	lcall	__mulint
      0006BF AB 82            [24] 2375 	mov	r3,dpl
      0006C1 AC 83            [24] 2376 	mov	r4,dph
      0006C3 15 81            [12] 2377 	dec	sp
      0006C5 15 81            [12] 2378 	dec	sp
      0006C7 D0 05            [24] 2379 	pop	ar5
      0006C9 D0 06            [24] 2380 	pop	ar6
      0006CB D0 07            [24] 2381 	pop	ar7
      0006CD EB               [12] 2382 	mov	a,r3
      0006CE 2D               [12] 2383 	add	a,r5
      0006CF FD               [12] 2384 	mov	r5,a
      0006D0 EC               [12] 2385 	mov	a,r4
      0006D1 3E               [12] 2386 	addc	a,r6
      0006D2 FE               [12] 2387 	mov	r6,a
      0006D3 8D 82            [24] 2388 	mov	dpl,r5
      0006D5 8E 83            [24] 2389 	mov	dph,r6
      0006D7 8F F0            [24] 2390 	mov	b,r7
      0006D9 80 06            [24] 2391 	sjmp	00103$
      0006DB                       2392 00102$:
                                   2393 ;	../../../core/net/neighbor-attr.c:177: return NULL;
      0006DB 90 00 00         [24] 2394 	mov	dptr,#0x0000
      0006DE 75 F0 00         [24] 2395 	mov	b,#0x00
      0006E1                       2396 00103$:
                                   2397 ;	../../../core/net/neighbor-attr.c:178: }
      0006E1 E5 81            [12] 2398 	mov	a,sp
      0006E3 24 FB            [12] 2399 	add	a,#0xfb
      0006E5 F5 81            [12] 2400 	mov	sp,a
      0006E7 02r00r00         [24] 2401 	ljmp	__sdcc_banked_ret
                                   2402 ;------------------------------------------------------------
                                   2403 ;Allocation info for local variables in function 'neighbor_attr_set_data'
                                   2404 ;------------------------------------------------------------
                                   2405 ;addr                      Allocated to stack - sp -16
                                   2406 ;data                      Allocated to stack - sp -19
                                   2407 ;def                       Allocated to stack - sp -10
                                   2408 ;attr                      Allocated to stack - sp -2
                                   2409 ;sloc0                     Allocated to stack - sp -7
                                   2410 ;sloc1                     Allocated to stack - sp -5
                                   2411 ;------------------------------------------------------------
                                   2412 ;	../../../core/net/neighbor-attr.c:181: neighbor_attr_set_data(struct neighbor_attr *def, const rimeaddr_t *addr,
                                   2413 ;	-----------------------------------------
                                   2414 ;	 function neighbor_attr_set_data
                                   2415 ;	-----------------------------------------
      0006EA                       2416 _neighbor_attr_set_data:
      0006EA C0 82            [24] 2417 	push	dpl
      0006EC C0 83            [24] 2418 	push	dph
      0006EE C0 F0            [24] 2419 	push	b
      0006F0 E5 81            [12] 2420 	mov	a,sp
      0006F2 24 08            [12] 2421 	add	a,#0x08
                                   2422 ;	../../../core/net/neighbor-attr.c:184: struct neighbor_addr *attr = neighbor_addr_get(addr);
      0006F4 F5 81            [12] 2423 	mov	sp,a
      0006F6 24 F0            [12] 2424 	add	a,#0xf0
      0006F8 F8               [12] 2425 	mov	r0,a
      0006F9 86 82            [24] 2426 	mov	dpl,@r0
      0006FB 08               [12] 2427 	inc	r0
      0006FC 86 83            [24] 2428 	mov	dph,@r0
      0006FE 08               [12] 2429 	inc	r0
      0006FF 86 F0            [24] 2430 	mov	b,@r0
      000701 78r00            [12] 2431 	mov	r0,#_neighbor_addr_get
      000703 79s00            [12] 2432 	mov	r1,#(_neighbor_addr_get >> 8)
      000705 7As00            [12] 2433 	mov	r2,#(_neighbor_addr_get >> 16)
      000707 12r00r00         [24] 2434 	lcall	__sdcc_banked_call
      00070A AA 82            [24] 2435 	mov	r2,dpl
      00070C AB 83            [24] 2436 	mov	r3,dph
      00070E AC F0            [24] 2437 	mov	r4,b
      000710 A8 81            [24] 2438 	mov	r0,sp
      000712 18               [12] 2439 	dec	r0
      000713 18               [12] 2440 	dec	r0
      000714 A6 02            [24] 2441 	mov	@r0,ar2
      000716 08               [12] 2442 	inc	r0
      000717 A6 03            [24] 2443 	mov	@r0,ar3
      000719 08               [12] 2444 	inc	r0
      00071A A6 04            [24] 2445 	mov	@r0,ar4
                                   2446 ;	../../../core/net/neighbor-attr.c:186: if(attr == NULL) {
      00071C A8 81            [24] 2447 	mov	r0,sp
      00071E 18               [12] 2448 	dec	r0
      00071F 18               [12] 2449 	dec	r0
      000720 E6               [12] 2450 	mov	a,@r0
      000721 08               [12] 2451 	inc	r0
      000722 46               [12] 2452 	orl	a,@r0
      000723 70 47            [24] 2453 	jnz	00104$
                                   2454 ;	../../../core/net/neighbor-attr.c:187: if(neighbor_attr_add_neighbor(addr)) {
      000725 E5 81            [12] 2455 	mov	a,sp
      000727 24 F0            [12] 2456 	add	a,#0xf0
      000729 F8               [12] 2457 	mov	r0,a
      00072A 86 82            [24] 2458 	mov	dpl,@r0
      00072C 08               [12] 2459 	inc	r0
      00072D 86 83            [24] 2460 	mov	dph,@r0
      00072F 08               [12] 2461 	inc	r0
      000730 86 F0            [24] 2462 	mov	b,@r0
      000732 78r8E            [12] 2463 	mov	r0,#_neighbor_attr_add_neighbor
      000734 79s03            [12] 2464 	mov	r1,#(_neighbor_attr_add_neighbor >> 8)
      000736 7As00            [12] 2465 	mov	r2,#(_neighbor_attr_add_neighbor >> 16)
      000738 12r00r00         [24] 2466 	lcall	__sdcc_banked_call
      00073B E5 82            [12] 2467 	mov	a,dpl
      00073D 85 83 F0         [24] 2468 	mov	b,dph
      000740 45 F0            [12] 2469 	orl	a,b
      000742 60 28            [24] 2470 	jz	00104$
                                   2471 ;	../../../core/net/neighbor-attr.c:188: attr = neighbor_addr_get(addr);
      000744 E5 81            [12] 2472 	mov	a,sp
      000746 24 F0            [12] 2473 	add	a,#0xf0
      000748 F8               [12] 2474 	mov	r0,a
      000749 86 82            [24] 2475 	mov	dpl,@r0
      00074B 08               [12] 2476 	inc	r0
      00074C 86 83            [24] 2477 	mov	dph,@r0
      00074E 08               [12] 2478 	inc	r0
      00074F 86 F0            [24] 2479 	mov	b,@r0
      000751 78r00            [12] 2480 	mov	r0,#_neighbor_addr_get
      000753 79s00            [12] 2481 	mov	r1,#(_neighbor_addr_get >> 8)
      000755 7As00            [12] 2482 	mov	r2,#(_neighbor_addr_get >> 16)
      000757 12r00r00         [24] 2483 	lcall	__sdcc_banked_call
      00075A AD 82            [24] 2484 	mov	r5,dpl
      00075C AE 83            [24] 2485 	mov	r6,dph
      00075E AF F0            [24] 2486 	mov	r7,b
      000760 A8 81            [24] 2487 	mov	r0,sp
      000762 18               [12] 2488 	dec	r0
      000763 18               [12] 2489 	dec	r0
      000764 A6 05            [24] 2490 	mov	@r0,ar5
      000766 08               [12] 2491 	inc	r0
      000767 A6 06            [24] 2492 	mov	@r0,ar6
      000769 08               [12] 2493 	inc	r0
      00076A A6 07            [24] 2494 	mov	@r0,ar7
      00076C                       2495 00104$:
                                   2496 ;	../../../core/net/neighbor-attr.c:191: if(attr != NULL) {
      00076C A8 81            [24] 2497 	mov	r0,sp
      00076E 18               [12] 2498 	dec	r0
      00076F 18               [12] 2499 	dec	r0
      000770 E6               [12] 2500 	mov	a,@r0
      000771 08               [12] 2501 	inc	r0
      000772 46               [12] 2502 	orl	a,@r0
      000773 70 03            [24] 2503 	jnz	00123$
      000775 02r08r65         [24] 2504 	ljmp	00106$
      000778                       2505 00123$:
                                   2506 ;	../../../core/net/neighbor-attr.c:192: attr->time = 0;
      000778 A8 81            [24] 2507 	mov	r0,sp
      00077A 18               [12] 2508 	dec	r0
      00077B 18               [12] 2509 	dec	r0
      00077C 74 0B            [12] 2510 	mov	a,#0x0b
      00077E 26               [12] 2511 	add	a,@r0
      00077F FD               [12] 2512 	mov	r5,a
      000780 E4               [12] 2513 	clr	a
      000781 08               [12] 2514 	inc	r0
      000782 36               [12] 2515 	addc	a,@r0
      000783 FE               [12] 2516 	mov	r6,a
      000784 08               [12] 2517 	inc	r0
      000785 86 07            [24] 2518 	mov	ar7,@r0
      000787 8D 82            [24] 2519 	mov	dpl,r5
      000789 8E 83            [24] 2520 	mov	dph,r6
      00078B 8F F0            [24] 2521 	mov	b,r7
      00078D E4               [12] 2522 	clr	a
      00078E 12r00r00         [24] 2523 	lcall	__gptrput
      000791 A3               [24] 2524 	inc	dptr
      000792 12r00r00         [24] 2525 	lcall	__gptrput
                                   2526 ;	../../../core/net/neighbor-attr.c:193: memcpy((char *)def->data + attr->index * def->size, data, def->size);
      000795 E5 81            [12] 2527 	mov	a,sp
      000797 24 F6            [12] 2528 	add	a,#0xf6
      000799 F8               [12] 2529 	mov	r0,a
      00079A 74 03            [12] 2530 	mov	a,#0x03
      00079C 26               [12] 2531 	add	a,@r0
      00079D FD               [12] 2532 	mov	r5,a
      00079E E4               [12] 2533 	clr	a
      00079F 08               [12] 2534 	inc	r0
      0007A0 36               [12] 2535 	addc	a,@r0
      0007A1 FE               [12] 2536 	mov	r6,a
      0007A2 08               [12] 2537 	inc	r0
      0007A3 86 07            [24] 2538 	mov	ar7,@r0
      0007A5 8D 82            [24] 2539 	mov	dpl,r5
      0007A7 8E 83            [24] 2540 	mov	dph,r6
      0007A9 8F F0            [24] 2541 	mov	b,r7
      0007AB 12r00r00         [24] 2542 	lcall	__gptrget
      0007AE FD               [12] 2543 	mov	r5,a
      0007AF A3               [24] 2544 	inc	dptr
      0007B0 12r00r00         [24] 2545 	lcall	__gptrget
      0007B3 FE               [12] 2546 	mov	r6,a
      0007B4 E5 81            [12] 2547 	mov	a,sp
      0007B6 24 F9            [12] 2548 	add	a,#0xf9
      0007B8 F8               [12] 2549 	mov	r0,a
      0007B9 A6 05            [24] 2550 	mov	@r0,ar5
      0007BB 08               [12] 2551 	inc	r0
      0007BC A6 06            [24] 2552 	mov	@r0,ar6
      0007BE E5 81            [12] 2553 	mov	a,sp
      0007C0 24 F6            [12] 2554 	add	a,#0xf6
      0007C2 F8               [12] 2555 	mov	r0,a
      0007C3 74 08            [12] 2556 	mov	a,#0x08
      0007C5 26               [12] 2557 	add	a,@r0
      0007C6 FA               [12] 2558 	mov	r2,a
      0007C7 E4               [12] 2559 	clr	a
      0007C8 08               [12] 2560 	inc	r0
      0007C9 36               [12] 2561 	addc	a,@r0
      0007CA FB               [12] 2562 	mov	r3,a
      0007CB 08               [12] 2563 	inc	r0
      0007CC 86 07            [24] 2564 	mov	ar7,@r0
      0007CE 8A 82            [24] 2565 	mov	dpl,r2
      0007D0 8B 83            [24] 2566 	mov	dph,r3
      0007D2 8F F0            [24] 2567 	mov	b,r7
      0007D4 12r00r00         [24] 2568 	lcall	__gptrget
      0007D7 FA               [12] 2569 	mov	r2,a
      0007D8 A3               [24] 2570 	inc	dptr
      0007D9 12r00r00         [24] 2571 	lcall	__gptrget
      0007DC FB               [12] 2572 	mov	r3,a
      0007DD A3               [24] 2573 	inc	dptr
      0007DE 12r00r00         [24] 2574 	lcall	__gptrget
      0007E1 FF               [12] 2575 	mov	r7,a
      0007E2 E5 81            [12] 2576 	mov	a,sp
      0007E4 24 FB            [12] 2577 	add	a,#0xfb
      0007E6 F8               [12] 2578 	mov	r0,a
      0007E7 A6 02            [24] 2579 	mov	@r0,ar2
      0007E9 08               [12] 2580 	inc	r0
      0007EA A6 03            [24] 2581 	mov	@r0,ar3
      0007EC 08               [12] 2582 	inc	r0
      0007ED A6 07            [24] 2583 	mov	@r0,ar7
      0007EF A8 81            [24] 2584 	mov	r0,sp
      0007F1 18               [12] 2585 	dec	r0
      0007F2 18               [12] 2586 	dec	r0
      0007F3 74 0D            [12] 2587 	mov	a,#0x0d
      0007F5 26               [12] 2588 	add	a,@r0
      0007F6 FB               [12] 2589 	mov	r3,a
      0007F7 E4               [12] 2590 	clr	a
      0007F8 08               [12] 2591 	inc	r0
      0007F9 36               [12] 2592 	addc	a,@r0
      0007FA FC               [12] 2593 	mov	r4,a
      0007FB 08               [12] 2594 	inc	r0
      0007FC 86 07            [24] 2595 	mov	ar7,@r0
      0007FE 8B 82            [24] 2596 	mov	dpl,r3
      000800 8C 83            [24] 2597 	mov	dph,r4
      000802 8F F0            [24] 2598 	mov	b,r7
      000804 12r00r00         [24] 2599 	lcall	__gptrget
      000807 FB               [12] 2600 	mov	r3,a
      000808 A3               [24] 2601 	inc	dptr
      000809 12r00r00         [24] 2602 	lcall	__gptrget
      00080C FC               [12] 2603 	mov	r4,a
      00080D C0 05            [24] 2604 	push	ar5
      00080F C0 06            [24] 2605 	push	ar6
      000811 8B 82            [24] 2606 	mov	dpl,r3
      000813 8C 83            [24] 2607 	mov	dph,r4
      000815 12r00r00         [24] 2608 	lcall	__mulint
      000818 AE 82            [24] 2609 	mov	r6,dpl
      00081A AF 83            [24] 2610 	mov	r7,dph
      00081C 15 81            [12] 2611 	dec	sp
      00081E 15 81            [12] 2612 	dec	sp
      000820 E5 81            [12] 2613 	mov	a,sp
      000822 24 FB            [12] 2614 	add	a,#0xfb
      000824 F8               [12] 2615 	mov	r0,a
      000825 EE               [12] 2616 	mov	a,r6
      000826 26               [12] 2617 	add	a,@r0
      000827 FE               [12] 2618 	mov	r6,a
      000828 EF               [12] 2619 	mov	a,r7
      000829 08               [12] 2620 	inc	r0
      00082A 36               [12] 2621 	addc	a,@r0
      00082B FF               [12] 2622 	mov	r7,a
      00082C 08               [12] 2623 	inc	r0
      00082D 86 05            [24] 2624 	mov	ar5,@r0
      00082F E5 81            [12] 2625 	mov	a,sp
      000831 24 F9            [12] 2626 	add	a,#0xf9
      000833 F8               [12] 2627 	mov	r0,a
      000834 E6               [12] 2628 	mov	a,@r0
      000835 C0 E0            [24] 2629 	push	acc
      000837 08               [12] 2630 	inc	r0
      000838 E6               [12] 2631 	mov	a,@r0
      000839 C0 E0            [24] 2632 	push	acc
      00083B E5 81            [12] 2633 	mov	a,sp
      00083D 24 EB            [12] 2634 	add	a,#0xeb
      00083F F8               [12] 2635 	mov	r0,a
      000840 E6               [12] 2636 	mov	a,@r0
      000841 C0 E0            [24] 2637 	push	acc
      000843 08               [12] 2638 	inc	r0
      000844 E6               [12] 2639 	mov	a,@r0
      000845 C0 E0            [24] 2640 	push	acc
      000847 08               [12] 2641 	inc	r0
      000848 E6               [12] 2642 	mov	a,@r0
      000849 C0 E0            [24] 2643 	push	acc
      00084B 8E 82            [24] 2644 	mov	dpl,r6
      00084D 8F 83            [24] 2645 	mov	dph,r7
      00084F 8D F0            [24] 2646 	mov	b,r5
      000851 78r00            [12] 2647 	mov	r0,#___memcpy
      000853 79s00            [12] 2648 	mov	r1,#(___memcpy >> 8)
      000855 7As00            [12] 2649 	mov	r2,#(___memcpy >> 16)
      000857 12r00r00         [24] 2650 	lcall	__sdcc_banked_call
      00085A E5 81            [12] 2651 	mov	a,sp
      00085C 24 FB            [12] 2652 	add	a,#0xfb
      00085E F5 81            [12] 2653 	mov	sp,a
                                   2654 ;	../../../core/net/neighbor-attr.c:194: return 1;
      000860 90 00 01         [24] 2655 	mov	dptr,#0x0001
      000863 80 03            [24] 2656 	sjmp	00107$
      000865                       2657 00106$:
                                   2658 ;	../../../core/net/neighbor-attr.c:196: return 0;
      000865 90 00 00         [24] 2659 	mov	dptr,#0x0000
      000868                       2660 00107$:
                                   2661 ;	../../../core/net/neighbor-attr.c:197: }
      000868 E5 81            [12] 2662 	mov	a,sp
      00086A 24 F5            [12] 2663 	add	a,#0xf5
      00086C F5 81            [12] 2664 	mov	sp,a
      00086E 02r00r00         [24] 2665 	ljmp	__sdcc_banked_ret
                                   2666 ;------------------------------------------------------------
                                   2667 ;Allocation info for local variables in function 'neighbor_attr_tick'
                                   2668 ;------------------------------------------------------------
                                   2669 ;addr                      Allocated to registers r5 r6 r7 
                                   2670 ;attr                      Allocated to registers r2 r3 r4 
                                   2671 ;------------------------------------------------------------
                                   2672 ;	../../../core/net/neighbor-attr.c:200: neighbor_attr_tick(const rimeaddr_t * addr)
                                   2673 ;	-----------------------------------------
                                   2674 ;	 function neighbor_attr_tick
                                   2675 ;	-----------------------------------------
      000871                       2676 _neighbor_attr_tick:
                                   2677 ;	../../../core/net/neighbor-attr.c:202: struct neighbor_addr *attr = neighbor_addr_get(addr);
      000871 78r00            [12] 2678 	mov	r0,#_neighbor_addr_get
      000873 79s00            [12] 2679 	mov	r1,#(_neighbor_addr_get >> 8)
      000875 7As00            [12] 2680 	mov	r2,#(_neighbor_addr_get >> 16)
      000877 12r00r00         [24] 2681 	lcall	__sdcc_banked_call
      00087A AD 82            [24] 2682 	mov	r5,dpl
      00087C AE 83            [24] 2683 	mov	r6,dph
      00087E AF F0            [24] 2684 	mov	r7,b
      000880 8D 02            [24] 2685 	mov	ar2,r5
      000882 8E 03            [24] 2686 	mov	ar3,r6
      000884 8F 04            [24] 2687 	mov	ar4,r7
                                   2688 ;	../../../core/net/neighbor-attr.c:204: if(attr != NULL) {
      000886 ED               [12] 2689 	mov	a,r5
      000887 4E               [12] 2690 	orl	a,r6
      000888 60 15            [24] 2691 	jz	00103$
                                   2692 ;	../../../core/net/neighbor-attr.c:205: attr->time = 0;
      00088A 74 0B            [12] 2693 	mov	a,#0x0b
      00088C 2A               [12] 2694 	add	a,r2
      00088D FA               [12] 2695 	mov	r2,a
      00088E E4               [12] 2696 	clr	a
      00088F 3B               [12] 2697 	addc	a,r3
      000890 FB               [12] 2698 	mov	r3,a
      000891 8A 82            [24] 2699 	mov	dpl,r2
      000893 8B 83            [24] 2700 	mov	dph,r3
      000895 8C F0            [24] 2701 	mov	b,r4
      000897 E4               [12] 2702 	clr	a
      000898 12r00r00         [24] 2703 	lcall	__gptrput
      00089B A3               [24] 2704 	inc	dptr
      00089C 12r00r00         [24] 2705 	lcall	__gptrput
      00089F                       2706 00103$:
                                   2707 ;	../../../core/net/neighbor-attr.c:207: }
      00089F 02r00r00         [24] 2708 	ljmp	__sdcc_banked_ret
                                   2709 ;------------------------------------------------------------
                                   2710 ;Allocation info for local variables in function 'neighbor_attr_get_timeout'
                                   2711 ;------------------------------------------------------------
                                   2712 ;	../../../core/net/neighbor-attr.c:210: neighbor_attr_get_timeout(void)
                                   2713 ;	-----------------------------------------
                                   2714 ;	 function neighbor_attr_get_timeout
                                   2715 ;	-----------------------------------------
      0008A2                       2716 _neighbor_attr_get_timeout:
                                   2717 ;	../../../core/net/neighbor-attr.c:212: return timeout;
      0008A2 90r00r00         [24] 2718 	mov	dptr,#_timeout
      0008A5 E0               [24] 2719 	movx	a,@dptr
      0008A6 FE               [12] 2720 	mov	r6,a
      0008A7 A3               [24] 2721 	inc	dptr
      0008A8 E0               [24] 2722 	movx	a,@dptr
      0008A9 FF               [12] 2723 	mov	r7,a
      0008AA 8E 82            [24] 2724 	mov	dpl,r6
      0008AC 8F 83            [24] 2725 	mov	dph,r7
                                   2726 ;	../../../core/net/neighbor-attr.c:213: }
      0008AE 02r00r00         [24] 2727 	ljmp	__sdcc_banked_ret
                                   2728 ;------------------------------------------------------------
                                   2729 ;Allocation info for local variables in function 'timeout_check'
                                   2730 ;------------------------------------------------------------
                                   2731 ;ptr                       Allocated to registers r5 r6 r7 
                                   2732 ;item                      Allocated to stack - sp -5
                                   2733 ;next_item                 Allocated to stack - sp -2
                                   2734 ;------------------------------------------------------------
                                   2735 ;	../../../core/net/neighbor-attr.c:219: timeout_check(void *ptr)
                                   2736 ;	-----------------------------------------
                                   2737 ;	 function timeout_check
                                   2738 ;	-----------------------------------------
      0008B1                       2739 _timeout_check:
      0008B1 E5 81            [12] 2740 	mov	a,sp
      0008B3 24 06            [12] 2741 	add	a,#0x06
      0008B5 F5 81            [12] 2742 	mov	sp,a
      0008B7 AD 82            [24] 2743 	mov	r5,dpl
      0008B9 AE 83            [24] 2744 	mov	r6,dph
      0008BB AF F0            [24] 2745 	mov	r7,b
                                   2746 ;	../../../core/net/neighbor-attr.c:221: if(timeout > 0) {
      0008BD 90r00r00         [24] 2747 	mov	dptr,#_timeout
      0008C0 E0               [24] 2748 	movx	a,@dptr
      0008C1 F5 F0            [12] 2749 	mov	b,a
      0008C3 A3               [24] 2750 	inc	dptr
      0008C4 E0               [24] 2751 	movx	a,@dptr
      0008C5 45 F0            [12] 2752 	orl	a,b
      0008C7 70 03            [24] 2753 	jnz	00127$
      0008C9 02r0Ar5D         [24] 2754 	ljmp	00109$
      0008CC                       2755 00127$:
                                   2756 ;	../../../core/net/neighbor-attr.c:222: struct neighbor_addr *item = neighbor_attr_list_neighbors();
      0008CC C0 07            [24] 2757 	push	ar7
      0008CE C0 06            [24] 2758 	push	ar6
      0008D0 C0 05            [24] 2759 	push	ar5
      0008D2 78rE8            [12] 2760 	mov	r0,#_neighbor_attr_list_neighbors
      0008D4 79s00            [12] 2761 	mov	r1,#(_neighbor_attr_list_neighbors >> 8)
      0008D6 7As00            [12] 2762 	mov	r2,#(_neighbor_attr_list_neighbors >> 16)
      0008D8 12r00r00         [24] 2763 	lcall	__sdcc_banked_call
      0008DB AA 82            [24] 2764 	mov	r2,dpl
      0008DD AB 83            [24] 2765 	mov	r3,dph
      0008DF AC F0            [24] 2766 	mov	r4,b
      0008E1 D0 05            [24] 2767 	pop	ar5
      0008E3 D0 06            [24] 2768 	pop	ar6
      0008E5 D0 07            [24] 2769 	pop	ar7
      0008E7 E5 81            [12] 2770 	mov	a,sp
      0008E9 24 FB            [12] 2771 	add	a,#0xfb
      0008EB F8               [12] 2772 	mov	r0,a
      0008EC A6 02            [24] 2773 	mov	@r0,ar2
      0008EE 08               [12] 2774 	inc	r0
      0008EF A6 03            [24] 2775 	mov	@r0,ar3
      0008F1 08               [12] 2776 	inc	r0
      0008F2 A6 04            [24] 2777 	mov	@r0,ar4
                                   2778 ;	../../../core/net/neighbor-attr.c:224: while(item != NULL) {
      0008F4                       2779 00104$:
      0008F4 E5 81            [12] 2780 	mov	a,sp
      0008F6 24 FB            [12] 2781 	add	a,#0xfb
      0008F8 F8               [12] 2782 	mov	r0,a
      0008F9 E6               [12] 2783 	mov	a,@r0
      0008FA 08               [12] 2784 	inc	r0
      0008FB 46               [12] 2785 	orl	a,@r0
      0008FC 70 03            [24] 2786 	jnz	00128$
      0008FE 02r0Ar2E         [24] 2787 	ljmp	00106$
      000901                       2788 00128$:
                                   2789 ;	../../../core/net/neighbor-attr.c:225: item->time += TIMEOUT_SECONDS;
      000901 C0 05            [24] 2790 	push	ar5
      000903 C0 06            [24] 2791 	push	ar6
      000905 C0 07            [24] 2792 	push	ar7
      000907 E5 81            [12] 2793 	mov	a,sp
      000909 24 F8            [12] 2794 	add	a,#0xf8
      00090B F8               [12] 2795 	mov	r0,a
      00090C 74 0B            [12] 2796 	mov	a,#0x0b
      00090E 26               [12] 2797 	add	a,@r0
      00090F FD               [12] 2798 	mov	r5,a
      000910 E4               [12] 2799 	clr	a
      000911 08               [12] 2800 	inc	r0
      000912 36               [12] 2801 	addc	a,@r0
      000913 FE               [12] 2802 	mov	r6,a
      000914 08               [12] 2803 	inc	r0
      000915 86 07            [24] 2804 	mov	ar7,@r0
      000917 8D 82            [24] 2805 	mov	dpl,r5
      000919 8E 83            [24] 2806 	mov	dph,r6
      00091B 8F F0            [24] 2807 	mov	b,r7
      00091D 12r00r00         [24] 2808 	lcall	__gptrget
      000920 FB               [12] 2809 	mov	r3,a
      000921 A3               [24] 2810 	inc	dptr
      000922 12r00r00         [24] 2811 	lcall	__gptrget
      000925 FC               [12] 2812 	mov	r4,a
      000926 74 05            [12] 2813 	mov	a,#0x05
      000928 2B               [12] 2814 	add	a,r3
      000929 FB               [12] 2815 	mov	r3,a
      00092A E4               [12] 2816 	clr	a
      00092B 3C               [12] 2817 	addc	a,r4
      00092C FC               [12] 2818 	mov	r4,a
      00092D 8D 82            [24] 2819 	mov	dpl,r5
      00092F 8E 83            [24] 2820 	mov	dph,r6
      000931 8F F0            [24] 2821 	mov	b,r7
      000933 EB               [12] 2822 	mov	a,r3
      000934 12r00r00         [24] 2823 	lcall	__gptrput
      000937 A3               [24] 2824 	inc	dptr
      000938 EC               [12] 2825 	mov	a,r4
      000939 12r00r00         [24] 2826 	lcall	__gptrput
                                   2827 ;	../../../core/net/neighbor-attr.c:226: if(item->time >= timeout) {
      00093C 90r00r00         [24] 2828 	mov	dptr,#_timeout
      00093F E0               [24] 2829 	movx	a,@dptr
      000940 FE               [12] 2830 	mov	r6,a
      000941 A3               [24] 2831 	inc	dptr
      000942 E0               [24] 2832 	movx	a,@dptr
      000943 FF               [12] 2833 	mov	r7,a
      000944 C3               [12] 2834 	clr	c
      000945 EB               [12] 2835 	mov	a,r3
      000946 9E               [12] 2836 	subb	a,r6
      000947 EC               [12] 2837 	mov	a,r4
      000948 9F               [12] 2838 	subb	a,r7
      000949 D0 07            [24] 2839 	pop	ar7
      00094B D0 06            [24] 2840 	pop	ar6
      00094D D0 05            [24] 2841 	pop	ar5
      00094F 50 03            [24] 2842 	jnc	00129$
      000951 02r0Ar0C         [24] 2843 	ljmp	00102$
      000954                       2844 00129$:
                                   2845 ;	../../../core/net/neighbor-attr.c:227: struct neighbor_addr *next_item = item->next;
      000954 C0 05            [24] 2846 	push	ar5
      000956 C0 06            [24] 2847 	push	ar6
      000958 C0 07            [24] 2848 	push	ar7
      00095A E5 81            [12] 2849 	mov	a,sp
      00095C 24 F8            [12] 2850 	add	a,#0xf8
      00095E F8               [12] 2851 	mov	r0,a
      00095F 86 82            [24] 2852 	mov	dpl,@r0
      000961 08               [12] 2853 	inc	r0
      000962 86 83            [24] 2854 	mov	dph,@r0
      000964 08               [12] 2855 	inc	r0
      000965 86 F0            [24] 2856 	mov	b,@r0
      000967 E5 81            [12] 2857 	mov	a,sp
      000969 24 FB            [12] 2858 	add	a,#0xfb
      00096B F9               [12] 2859 	mov	r1,a
      00096C 12r00r00         [24] 2860 	lcall	__gptrget
      00096F F7               [12] 2861 	mov	@r1,a
      000970 A3               [24] 2862 	inc	dptr
      000971 12r00r00         [24] 2863 	lcall	__gptrget
      000974 09               [12] 2864 	inc	r1
      000975 F7               [12] 2865 	mov	@r1,a
      000976 A3               [24] 2866 	inc	dptr
      000977 12r00r00         [24] 2867 	lcall	__gptrget
      00097A 09               [12] 2868 	inc	r1
      00097B F7               [12] 2869 	mov	@r1,a
                                   2870 ;	../../../core/net/neighbor-attr.c:229: list_remove(neighbor_addrs, item);
      00097C E5 81            [12] 2871 	mov	a,sp
      00097E 24 F8            [12] 2872 	add	a,#0xf8
      000980 F8               [12] 2873 	mov	r0,a
      000981 86 05            [24] 2874 	mov	ar5,@r0
      000983 08               [12] 2875 	inc	r0
      000984 86 06            [24] 2876 	mov	ar6,@r0
      000986 08               [12] 2877 	inc	r0
      000987 86 07            [24] 2878 	mov	ar7,@r0
      000989 90r00r0F         [24] 2879 	mov	dptr,#_neighbor_addrs
      00098C E0               [24] 2880 	movx	a,@dptr
      00098D FA               [12] 2881 	mov	r2,a
      00098E A3               [24] 2882 	inc	dptr
      00098F E0               [24] 2883 	movx	a,@dptr
      000990 FB               [12] 2884 	mov	r3,a
      000991 A3               [24] 2885 	inc	dptr
      000992 E0               [24] 2886 	movx	a,@dptr
      000993 FC               [12] 2887 	mov	r4,a
      000994 C0 07            [24] 2888 	push	ar7
      000996 C0 06            [24] 2889 	push	ar6
      000998 C0 05            [24] 2890 	push	ar5
      00099A C0 05            [24] 2891 	push	ar5
      00099C C0 06            [24] 2892 	push	ar6
      00099E C0 07            [24] 2893 	push	ar7
      0009A0 8A 82            [24] 2894 	mov	dpl,r2
      0009A2 8B 83            [24] 2895 	mov	dph,r3
      0009A4 8C F0            [24] 2896 	mov	b,r4
      0009A6 78r00            [12] 2897 	mov	r0,#_list_remove
      0009A8 79s00            [12] 2898 	mov	r1,#(_list_remove >> 8)
      0009AA 7As00            [12] 2899 	mov	r2,#(_list_remove >> 16)
      0009AC 12r00r00         [24] 2900 	lcall	__sdcc_banked_call
      0009AF 15 81            [12] 2901 	dec	sp
      0009B1 15 81            [12] 2902 	dec	sp
      0009B3 15 81            [12] 2903 	dec	sp
      0009B5 D0 05            [24] 2904 	pop	ar5
      0009B7 D0 06            [24] 2905 	pop	ar6
      0009B9 D0 07            [24] 2906 	pop	ar7
                                   2907 ;	../../../core/net/neighbor-attr.c:230: memb_free(&neighbor_addr_mem, item);
      0009BB E5 81            [12] 2908 	mov	a,sp
      0009BD 24 F8            [12] 2909 	add	a,#0xf8
      0009BF F8               [12] 2910 	mov	r0,a
      0009C0 86 02            [24] 2911 	mov	ar2,@r0
      0009C2 08               [12] 2912 	inc	r0
      0009C3 86 03            [24] 2913 	mov	ar3,@r0
      0009C5 08               [12] 2914 	inc	r0
      0009C6 86 04            [24] 2915 	mov	ar4,@r0
      0009C8 C0 07            [24] 2916 	push	ar7
      0009CA C0 06            [24] 2917 	push	ar6
      0009CC C0 05            [24] 2918 	push	ar5
      0009CE C0 02            [24] 2919 	push	ar2
      0009D0 C0 03            [24] 2920 	push	ar3
      0009D2 C0 04            [24] 2921 	push	ar4
      0009D4 90r00r02         [24] 2922 	mov	dptr,#_neighbor_addr_mem
      0009D7 75 F0 00         [24] 2923 	mov	b,#0x00
      0009DA 78r00            [12] 2924 	mov	r0,#_memb_free
      0009DC 79s00            [12] 2925 	mov	r1,#(_memb_free >> 8)
      0009DE 7As00            [12] 2926 	mov	r2,#(_memb_free >> 16)
      0009E0 12r00r00         [24] 2927 	lcall	__sdcc_banked_call
      0009E3 15 81            [12] 2928 	dec	sp
      0009E5 15 81            [12] 2929 	dec	sp
      0009E7 15 81            [12] 2930 	dec	sp
      0009E9 D0 05            [24] 2931 	pop	ar5
      0009EB D0 06            [24] 2932 	pop	ar6
      0009ED D0 07            [24] 2933 	pop	ar7
                                   2934 ;	../../../core/net/neighbor-attr.c:231: item = next_item;
      0009EF E5 81            [12] 2935 	mov	a,sp
      0009F1 24 FB            [12] 2936 	add	a,#0xfb
      0009F3 F8               [12] 2937 	mov	r0,a
      0009F4 E5 81            [12] 2938 	mov	a,sp
      0009F6 24 F8            [12] 2939 	add	a,#0xf8
      0009F8 F9               [12] 2940 	mov	r1,a
      0009F9 E6               [12] 2941 	mov	a,@r0
      0009FA F7               [12] 2942 	mov	@r1,a
      0009FB 08               [12] 2943 	inc	r0
      0009FC 09               [12] 2944 	inc	r1
      0009FD E6               [12] 2945 	mov	a,@r0
      0009FE F7               [12] 2946 	mov	@r1,a
      0009FF 08               [12] 2947 	inc	r0
      000A00 09               [12] 2948 	inc	r1
      000A01 E6               [12] 2949 	mov	a,@r0
      000A02 F7               [12] 2950 	mov	@r1,a
      000A03 D0 07            [24] 2951 	pop	ar7
      000A05 D0 06            [24] 2952 	pop	ar6
      000A07 D0 05            [24] 2953 	pop	ar5
      000A09 02r08rF4         [24] 2954 	ljmp	00104$
      000A0C                       2955 00102$:
                                   2956 ;	../../../core/net/neighbor-attr.c:233: item = item->next;
      000A0C E5 81            [12] 2957 	mov	a,sp
      000A0E 24 FB            [12] 2958 	add	a,#0xfb
      000A10 F8               [12] 2959 	mov	r0,a
      000A11 86 82            [24] 2960 	mov	dpl,@r0
      000A13 08               [12] 2961 	inc	r0
      000A14 86 83            [24] 2962 	mov	dph,@r0
      000A16 08               [12] 2963 	inc	r0
      000A17 86 F0            [24] 2964 	mov	b,@r0
      000A19 12r00r00         [24] 2965 	lcall	__gptrget
      000A1C 18               [12] 2966 	dec	r0
      000A1D 18               [12] 2967 	dec	r0
      000A1E F6               [12] 2968 	mov	@r0,a
      000A1F A3               [24] 2969 	inc	dptr
      000A20 12r00r00         [24] 2970 	lcall	__gptrget
      000A23 08               [12] 2971 	inc	r0
      000A24 F6               [12] 2972 	mov	@r0,a
      000A25 A3               [24] 2973 	inc	dptr
      000A26 12r00r00         [24] 2974 	lcall	__gptrget
      000A29 08               [12] 2975 	inc	r0
      000A2A F6               [12] 2976 	mov	@r0,a
      000A2B 02r08rF4         [24] 2977 	ljmp	00104$
      000A2E                       2978 00106$:
                                   2979 ;	../../../core/net/neighbor-attr.c:236: ctimer_set(&ct, TIMEOUT_SECONDS * CLOCK_SECOND, timeout_check, ptr);
      000A2E C0 05            [24] 2980 	push	ar5
      000A30 C0 06            [24] 2981 	push	ar6
      000A32 C0 07            [24] 2982 	push	ar7
      000A34 74rB1            [12] 2983 	mov	a,#_timeout_check
      000A36 C0 E0            [24] 2984 	push	acc
      000A38 74s08            [12] 2985 	mov	a,#(_timeout_check >> 8)
      000A3A C0 E0            [24] 2986 	push	acc
      000A3C 74s00            [12] 2987 	mov	a,#(_timeout_check >> 16)
      000A3E C0 E0            [24] 2988 	push	acc
      000A40 74 80            [12] 2989 	mov	a,#0x80
      000A42 C0 E0            [24] 2990 	push	acc
      000A44 74 02            [12] 2991 	mov	a,#0x02
      000A46 C0 E0            [24] 2992 	push	acc
      000A48 90r00rC0         [24] 2993 	mov	dptr,#_ct
      000A4B 75 F0 00         [24] 2994 	mov	b,#0x00
      000A4E 78r00            [12] 2995 	mov	r0,#_ctimer_set
      000A50 79s00            [12] 2996 	mov	r1,#(_ctimer_set >> 8)
      000A52 7As00            [12] 2997 	mov	r2,#(_ctimer_set >> 16)
      000A54 12r00r00         [24] 2998 	lcall	__sdcc_banked_call
      000A57 E5 81            [12] 2999 	mov	a,sp
      000A59 24 F8            [12] 3000 	add	a,#0xf8
      000A5B F5 81            [12] 3001 	mov	sp,a
      000A5D                       3002 00109$:
                                   3003 ;	../../../core/net/neighbor-attr.c:238: }
      000A5D E5 81            [12] 3004 	mov	a,sp
      000A5F 24 FA            [12] 3005 	add	a,#0xfa
      000A61 F5 81            [12] 3006 	mov	sp,a
      000A63 02r00r00         [24] 3007 	ljmp	__sdcc_banked_ret
                                   3008 ;------------------------------------------------------------
                                   3009 ;Allocation info for local variables in function 'neighbor_attr_set_timeout'
                                   3010 ;------------------------------------------------------------
                                   3011 ;time                      Allocated to registers r6 r7 
                                   3012 ;------------------------------------------------------------
                                   3013 ;	../../../core/net/neighbor-attr.c:241: neighbor_attr_set_timeout(uint16_t time)
                                   3014 ;	-----------------------------------------
                                   3015 ;	 function neighbor_attr_set_timeout
                                   3016 ;	-----------------------------------------
      000A66                       3017 _neighbor_attr_set_timeout:
      000A66 AE 82            [24] 3018 	mov	r6,dpl
      000A68 AF 83            [24] 3019 	mov	r7,dph
                                   3020 ;	../../../core/net/neighbor-attr.c:243: if(timeout == 0 && time > 0) {
      000A6A 90r00r00         [24] 3021 	mov	dptr,#_timeout
      000A6D E0               [24] 3022 	movx	a,@dptr
      000A6E FC               [12] 3023 	mov	r4,a
      000A6F A3               [24] 3024 	inc	dptr
      000A70 E0               [24] 3025 	movx	a,@dptr
      000A71 FD               [12] 3026 	mov	r5,a
      000A72 90r00r00         [24] 3027 	mov	dptr,#_timeout
      000A75 E0               [24] 3028 	movx	a,@dptr
      000A76 F5 F0            [12] 3029 	mov	b,a
      000A78 A3               [24] 3030 	inc	dptr
      000A79 E0               [24] 3031 	movx	a,@dptr
      000A7A 45 F0            [12] 3032 	orl	a,b
      000A7C 70 3E            [24] 3033 	jnz	00105$
      000A7E EE               [12] 3034 	mov	a,r6
      000A7F 4F               [12] 3035 	orl	a,r7
      000A80 60 3A            [24] 3036 	jz	00105$
                                   3037 ;	../../../core/net/neighbor-attr.c:244: ctimer_set(&ct, TIMEOUT_SECONDS * CLOCK_SECOND, timeout_check, NULL);
      000A82 C0 07            [24] 3038 	push	ar7
      000A84 C0 06            [24] 3039 	push	ar6
      000A86 E4               [12] 3040 	clr	a
      000A87 C0 E0            [24] 3041 	push	acc
      000A89 C0 E0            [24] 3042 	push	acc
      000A8B C0 E0            [24] 3043 	push	acc
      000A8D 74rB1            [12] 3044 	mov	a,#_timeout_check
      000A8F C0 E0            [24] 3045 	push	acc
      000A91 74s08            [12] 3046 	mov	a,#(_timeout_check >> 8)
      000A93 C0 E0            [24] 3047 	push	acc
      000A95 74s00            [12] 3048 	mov	a,#(_timeout_check >> 16)
      000A97 C0 E0            [24] 3049 	push	acc
      000A99 74 80            [12] 3050 	mov	a,#0x80
      000A9B C0 E0            [24] 3051 	push	acc
      000A9D 74 02            [12] 3052 	mov	a,#0x02
      000A9F C0 E0            [24] 3053 	push	acc
      000AA1 90r00rC0         [24] 3054 	mov	dptr,#_ct
      000AA4 75 F0 00         [24] 3055 	mov	b,#0x00
      000AA7 78r00            [12] 3056 	mov	r0,#_ctimer_set
      000AA9 79s00            [12] 3057 	mov	r1,#(_ctimer_set >> 8)
      000AAB 7As00            [12] 3058 	mov	r2,#(_ctimer_set >> 16)
      000AAD 12r00r00         [24] 3059 	lcall	__sdcc_banked_call
      000AB0 E5 81            [12] 3060 	mov	a,sp
      000AB2 24 F8            [12] 3061 	add	a,#0xf8
      000AB4 F5 81            [12] 3062 	mov	sp,a
      000AB6 D0 06            [24] 3063 	pop	ar6
      000AB8 D0 07            [24] 3064 	pop	ar7
      000ABA 80 1E            [24] 3065 	sjmp	00106$
      000ABC                       3066 00105$:
                                   3067 ;	../../../core/net/neighbor-attr.c:245: } else if(timeout > 0 && time == 0) {
      000ABC EC               [12] 3068 	mov	a,r4
      000ABD 4D               [12] 3069 	orl	a,r5
      000ABE 60 1A            [24] 3070 	jz	00106$
      000AC0 EE               [12] 3071 	mov	a,r6
      000AC1 4F               [12] 3072 	orl	a,r7
                                   3073 ;	../../../core/net/neighbor-attr.c:246: ctimer_stop(&ct);
      000AC2 70 16            [24] 3074 	jnz	00106$
      000AC4 90r00rC0         [24] 3075 	mov	dptr,#_ct
      000AC7 F5 F0            [12] 3076 	mov	b,a
      000AC9 C0 07            [24] 3077 	push	ar7
      000ACB C0 06            [24] 3078 	push	ar6
      000ACD 78r00            [12] 3079 	mov	r0,#_ctimer_stop
      000ACF 79s00            [12] 3080 	mov	r1,#(_ctimer_stop >> 8)
      000AD1 7As00            [12] 3081 	mov	r2,#(_ctimer_stop >> 16)
      000AD3 12r00r00         [24] 3082 	lcall	__sdcc_banked_call
      000AD6 D0 06            [24] 3083 	pop	ar6
      000AD8 D0 07            [24] 3084 	pop	ar7
      000ADA                       3085 00106$:
                                   3086 ;	../../../core/net/neighbor-attr.c:248: timeout = time;
      000ADA 90r00r00         [24] 3087 	mov	dptr,#_timeout
      000ADD EE               [12] 3088 	mov	a,r6
      000ADE F0               [24] 3089 	movx	@dptr,a
      000ADF EF               [12] 3090 	mov	a,r7
      000AE0 A3               [24] 3091 	inc	dptr
      000AE1 F0               [24] 3092 	movx	@dptr,a
                                   3093 ;	../../../core/net/neighbor-attr.c:249: }
      000AE2 02r00r00         [24] 3094 	ljmp	__sdcc_banked_ret
                                   3095 	.area CSEG    (CODE)
                                   3096 	.area CONST   (CODE)
                                   3097 	.area XINIT   (CODE)
      000000                       3098 __xinit__timeout:
      000000 00 00                 3099 	.byte #0x00, #0x00	; 0
      000002                       3100 __xinit__neighbor_addr_mem:
      000002 0F 00                 3101 	.byte #0x0f, #0x00	; 15
      000004 0C 00                 3102 	.byte #0x0c, #0x00	; 12
      000006r00s00 00              3103 	.byte _neighbor_addr_mem_memb_count, (_neighbor_addr_mem_memb_count >> 8),#0x00
      000009r0Cs00 00              3104 	.byte _neighbor_addr_mem_memb_mem, (_neighbor_addr_mem_memb_mem >> 8),#0x00
      00000C                       3105 __xinit__neighbor_addrs_list:
                                   3106 ; generic printIvalPtr
      00000C 00 00 00              3107 	.byte #0x00,#0x00,#0x00
      00000F                       3108 __xinit__neighbor_addrs:
      00000Fr0Cs00 00              3109 	.byte _neighbor_addrs_list, (_neighbor_addrs_list >> 8),#0x00
      000012                       3110 __xinit__neighbor_attrs_list:
                                   3111 ; generic printIvalPtr
      000012 00 00 00              3112 	.byte #0x00,#0x00,#0x00
      000015                       3113 __xinit__neighbor_attrs:
      000015r12s00 00              3114 	.byte _neighbor_attrs_list, (_neighbor_attrs_list >> 8),#0x00
                                   3115 	.area CABS    (ABS,CODE)
