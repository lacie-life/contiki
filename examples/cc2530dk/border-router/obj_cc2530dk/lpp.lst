                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module lpp
                                      6 	.optsdcc -mmcs51 --model-huge
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _lpp_driver
                                     12 	.globl _printf
                                     13 	.globl _compower_attrconv
                                     14 	.globl _compower_clear
                                     15 	.globl _compower_accumulate
                                     16 	.globl _queuebuf_addr
                                     17 	.globl _queuebuf_datalen
                                     18 	.globl _queuebuf_dataptr
                                     19 	.globl _queuebuf_free
                                     20 	.globl _queuebuf_to_packetbuf
                                     21 	.globl _queuebuf_new_from_packetbuf
                                     22 	.globl _packetbuf_addr
                                     23 	.globl _packetbuf_set_addr
                                     24 	.globl _packetbuf_attr
                                     25 	.globl _packetbuf_set_attr
                                     26 	.globl _packetbuf_hdrreduce
                                     27 	.globl _packetbuf_hdralloc
                                     28 	.globl _packetbuf_compact
                                     29 	.globl _packetbuf_set_datalen
                                     30 	.globl _packetbuf_totlen
                                     31 	.globl _packetbuf_datalen
                                     32 	.globl _packetbuf_hdrptr
                                     33 	.globl _packetbuf_dataptr
                                     34 	.globl _packetbuf_clear
                                     35 	.globl _ctimer_stop
                                     36 	.globl _ctimer_set
                                     37 	.globl _clock_time
                                     38 	.globl _announcement_register_listen_callback
                                     39 	.globl _announcement_list
                                     40 	.globl _rimeaddr_cmp
                                     41 	.globl _rimeaddr_copy
                                     42 	.globl _random_rand
                                     43 	.globl _memb_free
                                     44 	.globl _memb_alloc
                                     45 	.globl _memb_init
                                     46 	.globl ___memcpy
                                     47 	.globl _list_item_next
                                     48 	.globl _list_length
                                     49 	.globl _list_remove
                                     50 	.globl _list_add
                                     51 	.globl _list_head
                                     52 	.globl _list_init
                                     53 	.globl _leds_toggle
                                     54 	.globl _leds_off
                                     55 	.globl _leds_on
                                     56 	.globl _ACTIVE
                                     57 	.globl _TX_BYTE
                                     58 	.globl _RX_BYTE
                                     59 	.globl _ERR
                                     60 	.globl _FE
                                     61 	.globl _SLAVE
                                     62 	.globl _RE
                                     63 	.globl _MODE
                                     64 	.globl _T3OVFIF
                                     65 	.globl _T3CH0IF
                                     66 	.globl _T3CH1IF
                                     67 	.globl _T4OVFIF
                                     68 	.globl _T4CH0IF
                                     69 	.globl _T4CH1IF
                                     70 	.globl _OVFIM
                                     71 	.globl _B_0
                                     72 	.globl _B_1
                                     73 	.globl _B_2
                                     74 	.globl _B_3
                                     75 	.globl _B_4
                                     76 	.globl _B_5
                                     77 	.globl _B_6
                                     78 	.globl _B_7
                                     79 	.globl _P2IF
                                     80 	.globl _UTX0IF
                                     81 	.globl _UTX1IF
                                     82 	.globl _P1IF
                                     83 	.globl _WDTIF
                                     84 	.globl _ACC_0
                                     85 	.globl _ACC_1
                                     86 	.globl _ACC_2
                                     87 	.globl _ACC_3
                                     88 	.globl _ACC_4
                                     89 	.globl _ACC_5
                                     90 	.globl _ACC_6
                                     91 	.globl _ACC_7
                                     92 	.globl _P
                                     93 	.globl _F1
                                     94 	.globl _OV
                                     95 	.globl _RS0
                                     96 	.globl _RS1
                                     97 	.globl _F0
                                     98 	.globl _AC
                                     99 	.globl _CY
                                    100 	.globl _DMAIF
                                    101 	.globl _T1IF
                                    102 	.globl _T2IF
                                    103 	.globl _T3IF
                                    104 	.globl _T4IF
                                    105 	.globl _P0IF
                                    106 	.globl _STIF
                                    107 	.globl _DMAIE
                                    108 	.globl _T1IE
                                    109 	.globl _T2IE
                                    110 	.globl _T3IE
                                    111 	.globl _T4IE
                                    112 	.globl _P0IE
                                    113 	.globl _RFERRIE
                                    114 	.globl _ADCIE
                                    115 	.globl _URX0IE
                                    116 	.globl _URX1IE
                                    117 	.globl _ENCIE
                                    118 	.globl _STIE
                                    119 	.globl _EA
                                    120 	.globl _P2_0
                                    121 	.globl _P2_1
                                    122 	.globl _P2_2
                                    123 	.globl _P2_3
                                    124 	.globl _P2_4
                                    125 	.globl _P2_5
                                    126 	.globl _P2_6
                                    127 	.globl _P2_7
                                    128 	.globl _ENCIF_0
                                    129 	.globl _ENCIF_1
                                    130 	.globl _P1_0
                                    131 	.globl _P1_1
                                    132 	.globl _P1_2
                                    133 	.globl _P1_3
                                    134 	.globl _P1_4
                                    135 	.globl _P1_5
                                    136 	.globl _P1_6
                                    137 	.globl _P1_7
                                    138 	.globl _IT0
                                    139 	.globl _RFERRIF
                                    140 	.globl _IT1
                                    141 	.globl _URX0IF
                                    142 	.globl _ADCIF
                                    143 	.globl _URX1IF
                                    144 	.globl _P0_0
                                    145 	.globl _P0_1
                                    146 	.globl _P0_2
                                    147 	.globl _P0_3
                                    148 	.globl _P0_4
                                    149 	.globl _P0_5
                                    150 	.globl _P0_6
                                    151 	.globl _P0_7
                                    152 	.globl _WDCTL
                                    153 	.globl _U1GCR
                                    154 	.globl _U1UCR
                                    155 	.globl _U1BAUD
                                    156 	.globl _U1DBUF
                                    157 	.globl _U1CSR
                                    158 	.globl _U0GCR
                                    159 	.globl _U0UCR
                                    160 	.globl _U0BAUD
                                    161 	.globl _U0DBUF
                                    162 	.globl _U0CSR
                                    163 	.globl _TIMIF
                                    164 	.globl _T4CC1
                                    165 	.globl _T4CCTL1
                                    166 	.globl _T4CC0
                                    167 	.globl _T4CCTL0
                                    168 	.globl _T4CTL
                                    169 	.globl _T4CNT
                                    170 	.globl _T3CC1
                                    171 	.globl _T3CCTL1
                                    172 	.globl _T3CC0
                                    173 	.globl _T3CCTL0
                                    174 	.globl _T3CTL
                                    175 	.globl _T3CNT
                                    176 	.globl _T2MSEL
                                    177 	.globl _T2IRQM
                                    178 	.globl _T2MOVF2
                                    179 	.globl _T2MOVF1
                                    180 	.globl _T2MOVF0
                                    181 	.globl _T2M1
                                    182 	.globl _T2M0
                                    183 	.globl _T2IRQF
                                    184 	.globl _T2EVTCFG
                                    185 	.globl _T2CTRL
                                    186 	.globl _T1STAT
                                    187 	.globl _T1CCTL2
                                    188 	.globl _T1CCTL1
                                    189 	.globl _T1CCTL0
                                    190 	.globl _T1CTL
                                    191 	.globl _T1CNTH
                                    192 	.globl _T1CNTL
                                    193 	.globl _T1CC2H
                                    194 	.globl _T1CC2L
                                    195 	.globl _T1CC1H
                                    196 	.globl _T1CC1L
                                    197 	.globl _T1CC0H
                                    198 	.globl _T1CC0L
                                    199 	.globl _CLKCONSTA
                                    200 	.globl _CLKCONCMD
                                    201 	.globl _SLEEPSTA
                                    202 	.globl _SLEEPCMD
                                    203 	.globl _STLOAD
                                    204 	.globl _ST2
                                    205 	.globl _ST1
                                    206 	.globl _ST0
                                    207 	.globl _RFERRF
                                    208 	.globl _RFIRQF0
                                    209 	.globl _RFST
                                    210 	.globl _RFD
                                    211 	.globl _RFIRQF1
                                    212 	.globl _PSBANK
                                    213 	.globl _FMAP
                                    214 	.globl _MEMCTR
                                    215 	.globl __XPAGE
                                    216 	.globl _MPAGE
                                    217 	.globl _PMUX
                                    218 	.globl _P2DIR
                                    219 	.globl _P1DIR
                                    220 	.globl _P0DIR
                                    221 	.globl _P2INP
                                    222 	.globl _P1INP
                                    223 	.globl _P2SEL
                                    224 	.globl _P1SEL
                                    225 	.globl _P0SEL
                                    226 	.globl _APCFG
                                    227 	.globl _PERCFG
                                    228 	.globl _P0INP
                                    229 	.globl _P2IEN
                                    230 	.globl _P1IEN
                                    231 	.globl _P0IEN
                                    232 	.globl _PICTL
                                    233 	.globl _P2IFG
                                    234 	.globl _P1IFG
                                    235 	.globl _P0IFG
                                    236 	.globl _DMAREQ
                                    237 	.globl _DMAARM
                                    238 	.globl _DMA0CFGH
                                    239 	.globl _DMA0CFGL
                                    240 	.globl _DMA1CFGH
                                    241 	.globl _DMA1CFGL
                                    242 	.globl _DMAIRQ
                                    243 	.globl _ENCCS
                                    244 	.globl _ENCDO
                                    245 	.globl _ENCDI
                                    246 	.globl _RNDH
                                    247 	.globl _RNDL
                                    248 	.globl _ADCH
                                    249 	.globl _ADCL
                                    250 	.globl _ADCCON3
                                    251 	.globl _ADCCON2
                                    252 	.globl _ADCCON1
                                    253 	.globl _B
                                    254 	.globl _IRCON2
                                    255 	.globl _ACC
                                    256 	.globl _PSW
                                    257 	.globl _IRCON
                                    258 	.globl _IP1
                                    259 	.globl _IEN1
                                    260 	.globl _IP0
                                    261 	.globl _IEN0
                                    262 	.globl _P2
                                    263 	.globl _S1CON
                                    264 	.globl _IEN2
                                    265 	.globl _S0CON
                                    266 	.globl _DPS
                                    267 	.globl _P1
                                    268 	.globl _TCON
                                    269 	.globl _PCON
                                    270 	.globl _DPH1
                                    271 	.globl _DPL1
                                    272 	.globl _DPH0
                                    273 	.globl _DPL0
                                    274 	.globl _SP
                                    275 	.globl _P0
                                    276 	.globl _X_IEEE_ADDR
                                    277 	.globl _X_INFOPAGE
                                    278 	.globl _X_P2DIR
                                    279 	.globl _X_P1DIR
                                    280 	.globl _X_P0DIR
                                    281 	.globl _X_U1GCR
                                    282 	.globl _X_U1UCR
                                    283 	.globl _X_U1BAUD
                                    284 	.globl _X_U1DBUF
                                    285 	.globl _X_U1CSR
                                    286 	.globl _X_P2INP
                                    287 	.globl _X_P1INP
                                    288 	.globl _X_P2SEL
                                    289 	.globl _X_P1SEL
                                    290 	.globl _X_P0SEL
                                    291 	.globl _X_APCFG
                                    292 	.globl _X_PERCFG
                                    293 	.globl _X_T4CC1
                                    294 	.globl _X_T4CCTL1
                                    295 	.globl _X_T4CC0
                                    296 	.globl _X_T4CCTL0
                                    297 	.globl _X_T4CTL
                                    298 	.globl _X_T4CNT
                                    299 	.globl _X_RFIRQF0
                                    300 	.globl _X_T1CCTL2
                                    301 	.globl _X_T1CCTL1
                                    302 	.globl _X_T1CCTL0
                                    303 	.globl _X_T1CTL
                                    304 	.globl _X_T1CNTH
                                    305 	.globl _X_T1CNTL
                                    306 	.globl _X_RFST
                                    307 	.globl _X_T1CC2H
                                    308 	.globl _X_T1CC2L
                                    309 	.globl _X_T1CC1H
                                    310 	.globl _X_T1CC1L
                                    311 	.globl _X_T1CC0H
                                    312 	.globl _X_T1CC0L
                                    313 	.globl _X_RFD
                                    314 	.globl _X_TIMIF
                                    315 	.globl _X_DMAREQ
                                    316 	.globl _X_DMAARM
                                    317 	.globl _X_DMA0CFGH
                                    318 	.globl _X_DMA0CFGL
                                    319 	.globl _X_DMA1CFGH
                                    320 	.globl _X_DMA1CFGL
                                    321 	.globl _X_DMAIRQ
                                    322 	.globl _X_T3CC1
                                    323 	.globl _X_T3CCTL1
                                    324 	.globl _X_T3CC0
                                    325 	.globl _X_T3CCTL0
                                    326 	.globl _X_T3CTL
                                    327 	.globl _X_T3CNT
                                    328 	.globl _X_WDCTL
                                    329 	.globl _X_MEMCTR
                                    330 	.globl _X_CLKCONCMD
                                    331 	.globl _X_U0GCR
                                    332 	.globl _X_U0UCR
                                    333 	.globl _X_T2MSEL
                                    334 	.globl _X_U0BAUD
                                    335 	.globl _X_U0DBUF
                                    336 	.globl _X_RFERRF
                                    337 	.globl _X_SLEEPCMD
                                    338 	.globl _X_RNDH
                                    339 	.globl _X_RNDL
                                    340 	.globl _X_ADCH
                                    341 	.globl _X_ADCL
                                    342 	.globl _X_ADCCON3
                                    343 	.globl _X_ADCCON2
                                    344 	.globl _X_ADCCON1
                                    345 	.globl _X_ENCCS
                                    346 	.globl _X_ENCDO
                                    347 	.globl _X_ENCDI
                                    348 	.globl _X_T1STAT
                                    349 	.globl _X_PMUX
                                    350 	.globl _X_STLOAD
                                    351 	.globl _X_P2IEN
                                    352 	.globl _X_P0IEN
                                    353 	.globl _X_T2IRQM
                                    354 	.globl _X_T2MOVF2
                                    355 	.globl _X_T2MOVF1
                                    356 	.globl _X_T2MOVF0
                                    357 	.globl _X_T2M1
                                    358 	.globl _X_T2M0
                                    359 	.globl _X_T2IRQF
                                    360 	.globl _X_P2
                                    361 	.globl _X_PSBANK
                                    362 	.globl _X_FMAP
                                    363 	.globl _X_CLKCONSTA
                                    364 	.globl _X_SLEEPSTA
                                    365 	.globl _X_T2EVTCFG
                                    366 	.globl _X_ST2
                                    367 	.globl _X_ST1
                                    368 	.globl _X_ST0
                                    369 	.globl _X_T2CTRL
                                    370 	.globl _X__XPAGE
                                    371 	.globl _X_MPAGE
                                    372 	.globl _X_RFIRQF1
                                    373 	.globl _X_P1
                                    374 	.globl _X_P0INP
                                    375 	.globl _X_P1IEN
                                    376 	.globl _X_PICTL
                                    377 	.globl _X_P2IFG
                                    378 	.globl _X_P1IFG
                                    379 	.globl _X_P0IFG
                                    380 	.globl _X_U0CSR
                                    381 	.globl _X_P0
                                    382 	.globl _USBF5
                                    383 	.globl _USBF4
                                    384 	.globl _USBF3
                                    385 	.globl _USBF2
                                    386 	.globl _USBF1
                                    387 	.globl _USBF0
                                    388 	.globl _USBCNTH
                                    389 	.globl _USBCNTL
                                    390 	.globl _USBCNT0
                                    391 	.globl _USBCSOH
                                    392 	.globl _USBCSOL
                                    393 	.globl _USBMAXO
                                    394 	.globl _USBCSIH
                                    395 	.globl _USBCSIL
                                    396 	.globl _USBCS0
                                    397 	.globl _USBMAXI
                                    398 	.globl _USBCTRL
                                    399 	.globl _USBINDEX
                                    400 	.globl _USBFRMH
                                    401 	.globl _USBFRML
                                    402 	.globl _USBCIE
                                    403 	.globl _USBOIE
                                    404 	.globl _USBIIE
                                    405 	.globl _USBCIF
                                    406 	.globl _USBOIF
                                    407 	.globl _USBIIF
                                    408 	.globl _USBPOW
                                    409 	.globl _USBADDR
                                    410 	.globl _CSPT
                                    411 	.globl _CSPZ
                                    412 	.globl _CSPY
                                    413 	.globl _CSPX
                                    414 	.globl _CSPSTAT
                                    415 	.globl _CSPCTRL
                                    416 	.globl _CSPPROG23
                                    417 	.globl _CSPPROG22
                                    418 	.globl _CSPPROG21
                                    419 	.globl _CSPPROG20
                                    420 	.globl _CSPPROG19
                                    421 	.globl _CSPPROG18
                                    422 	.globl _CSPPROG17
                                    423 	.globl _CSPPROG16
                                    424 	.globl _CSPPROG15
                                    425 	.globl _CSPPROG14
                                    426 	.globl _CSPPROG13
                                    427 	.globl _CSPPROG12
                                    428 	.globl _CSPPROG11
                                    429 	.globl _CSPPROG10
                                    430 	.globl _CSPPROG9
                                    431 	.globl _CSPPROG8
                                    432 	.globl _CSPPROG7
                                    433 	.globl _CSPPROG6
                                    434 	.globl _CSPPROG5
                                    435 	.globl _CSPPROG4
                                    436 	.globl _CSPPROG3
                                    437 	.globl _CSPPROG2
                                    438 	.globl _CSPPROG1
                                    439 	.globl _CSPPROG0
                                    440 	.globl _RFC_OBS_CTRL2
                                    441 	.globl _RFC_OBS_CTRL1
                                    442 	.globl _RFC_OBS_CTRL0
                                    443 	.globl _TXFILTCFG
                                    444 	.globl _PTEST1
                                    445 	.globl _PTEST0
                                    446 	.globl _ATEST
                                    447 	.globl _DACTEST2
                                    448 	.globl _DACTEST1
                                    449 	.globl _DACTEST0
                                    450 	.globl _MDMTEST1
                                    451 	.globl _MDMTEST0
                                    452 	.globl _ADCTEST2
                                    453 	.globl _ADCTEST1
                                    454 	.globl _ADCTEST0
                                    455 	.globl _AGCCTRL3
                                    456 	.globl _AGCCTRL2
                                    457 	.globl _AGCCTRL1
                                    458 	.globl _AGCCTRL0
                                    459 	.globl _FSCAL3
                                    460 	.globl _FSCAL2
                                    461 	.globl _FSCAL1
                                    462 	.globl _FSCAL0
                                    463 	.globl _FSCTRL
                                    464 	.globl _RXCTRL
                                    465 	.globl _FREQEST
                                    466 	.globl _MDMCTRL1
                                    467 	.globl _MDMCTRL0
                                    468 	.globl _RFRND
                                    469 	.globl _RFERRM
                                    470 	.globl _RFIRQM1
                                    471 	.globl _RFIRQM0
                                    472 	.globl _TXLAST_PTR
                                    473 	.globl _TXFIRST_PTR
                                    474 	.globl _RXP1_PTR
                                    475 	.globl _RXLAST_PTR
                                    476 	.globl _RXFIRST_PTR
                                    477 	.globl _TXFIFOCNT
                                    478 	.globl _RXFIFOCNT
                                    479 	.globl _RXFIRST
                                    480 	.globl _RSSISTAT
                                    481 	.globl _RSSI
                                    482 	.globl _CCACTRL1
                                    483 	.globl _CCACTRL0
                                    484 	.globl _FSMCTRL
                                    485 	.globl _FIFOPCTRL
                                    486 	.globl _FSMSTAT1
                                    487 	.globl _FSMSTAT0
                                    488 	.globl _TXCTRL
                                    489 	.globl _TXPOWER
                                    490 	.globl _FREQCTRL
                                    491 	.globl _FREQTUNE
                                    492 	.globl _RXMASKCLR
                                    493 	.globl _RXMASKSET
                                    494 	.globl _RXENABLE
                                    495 	.globl _FRMCTRL1
                                    496 	.globl _FRMCTRL0
                                    497 	.globl _SRCEXTEN2
                                    498 	.globl _SRCEXTEN1
                                    499 	.globl _SRCEXTEN0
                                    500 	.globl _SRCSHORTEN2
                                    501 	.globl _SRCSHORTEN1
                                    502 	.globl _SRCSHORTEN0
                                    503 	.globl _SRCMATCH
                                    504 	.globl _FRMFILT1
                                    505 	.globl _FRMFILT0
                                    506 	.globl _SHORT_ADDR1
                                    507 	.globl _SHORT_ADDR0
                                    508 	.globl _PAN_ID1
                                    509 	.globl _PAN_ID0
                                    510 	.globl _EXT_ADDR7
                                    511 	.globl _EXT_ADDR6
                                    512 	.globl _EXT_ADDR5
                                    513 	.globl _EXT_ADDR4
                                    514 	.globl _EXT_ADDR3
                                    515 	.globl _EXT_ADDR2
                                    516 	.globl _EXT_ADDR1
                                    517 	.globl _EXT_ADDR0
                                    518 	.globl _SRCSHORTPENDEN2
                                    519 	.globl _SRCSHORTPENDEN1
                                    520 	.globl _SRCSHORTPENDEN0
                                    521 	.globl _SRCEXTPENDEN2
                                    522 	.globl _SRCEXTPENDEN1
                                    523 	.globl _SRCEXTPENDEN0
                                    524 	.globl _SRCRESINDEX
                                    525 	.globl _SRCRESMASK2
                                    526 	.globl _SRCRESMASK1
                                    527 	.globl _SRCRESMASK0
                                    528 	.globl _SRC_ADDR_TABLE
                                    529 	.globl _TXFIFO
                                    530 	.globl _RXFIFO
                                    531 	.globl _RFCORE_RAM
                                    532 	.globl _CMPCTL
                                    533 	.globl _OPAMPS
                                    534 	.globl _OPAMPC
                                    535 	.globl _STCV2
                                    536 	.globl _STCV1
                                    537 	.globl _STCV0
                                    538 	.globl _STCS
                                    539 	.globl _STCC
                                    540 	.globl _T1CC4H
                                    541 	.globl _T1CC4L
                                    542 	.globl _T1CC3H
                                    543 	.globl _T1CC3L
                                    544 	.globl _XX_T1CC2H
                                    545 	.globl _XX_T1CC2L
                                    546 	.globl _XX_T1CC1H
                                    547 	.globl _XX_T1CC1L
                                    548 	.globl _XX_T1CC0H
                                    549 	.globl _XX_T1CC0L
                                    550 	.globl _T1CCTL4
                                    551 	.globl _T1CCTL3
                                    552 	.globl _XX_T1CCTL2
                                    553 	.globl _XX_T1CCTL1
                                    554 	.globl _XX_T1CCTL0
                                    555 	.globl _CLD
                                    556 	.globl _IRCTL
                                    557 	.globl _CHIPINFO1
                                    558 	.globl _CHIPINFO0
                                    559 	.globl _FWDATA
                                    560 	.globl _FADDRH
                                    561 	.globl _FADDRL
                                    562 	.globl _FCTL
                                    563 	.globl _IVCTRL
                                    564 	.globl _BATTMON
                                    565 	.globl _SRCRC
                                    566 	.globl _DBGDATA
                                    567 	.globl _TESTREG0
                                    568 	.globl _CHIPID
                                    569 	.globl _CHVER
                                    570 	.globl _OBSSEL5
                                    571 	.globl _OBSSEL4
                                    572 	.globl _OBSSEL3
                                    573 	.globl _OBSSEL2
                                    574 	.globl _OBSSEL1
                                    575 	.globl _OBSSEL0
                                    576 	.globl _I2CIO
                                    577 	.globl _I2CWC
                                    578 	.globl _I2CADDR
                                    579 	.globl _I2CDATA
                                    580 	.globl _I2CSTAT
                                    581 	.globl _I2CCFG
                                    582 	.globl _OPAMPMC
                                    583 	.globl _MONMUX
                                    584 ;--------------------------------------------------------
                                    585 ; special function registers
                                    586 ;--------------------------------------------------------
                                    587 	.area RSEG    (ABS,DATA)
      000000                        588 	.org 0x0000
                           000080   589 _P0	=	0x0080
                           000081   590 _SP	=	0x0081
                           000082   591 _DPL0	=	0x0082
                           000083   592 _DPH0	=	0x0083
                           000084   593 _DPL1	=	0x0084
                           000085   594 _DPH1	=	0x0085
                           000087   595 _PCON	=	0x0087
                           000088   596 _TCON	=	0x0088
                           000090   597 _P1	=	0x0090
                           000092   598 _DPS	=	0x0092
                           000098   599 _S0CON	=	0x0098
                           00009A   600 _IEN2	=	0x009a
                           00009B   601 _S1CON	=	0x009b
                           0000A0   602 _P2	=	0x00a0
                           0000A8   603 _IEN0	=	0x00a8
                           0000A9   604 _IP0	=	0x00a9
                           0000B8   605 _IEN1	=	0x00b8
                           0000B9   606 _IP1	=	0x00b9
                           0000C0   607 _IRCON	=	0x00c0
                           0000D0   608 _PSW	=	0x00d0
                           0000E0   609 _ACC	=	0x00e0
                           0000E8   610 _IRCON2	=	0x00e8
                           0000F0   611 _B	=	0x00f0
                           0000B4   612 _ADCCON1	=	0x00b4
                           0000B5   613 _ADCCON2	=	0x00b5
                           0000B6   614 _ADCCON3	=	0x00b6
                           0000BA   615 _ADCL	=	0x00ba
                           0000BB   616 _ADCH	=	0x00bb
                           0000BC   617 _RNDL	=	0x00bc
                           0000BD   618 _RNDH	=	0x00bd
                           0000B1   619 _ENCDI	=	0x00b1
                           0000B2   620 _ENCDO	=	0x00b2
                           0000B3   621 _ENCCS	=	0x00b3
                           0000D1   622 _DMAIRQ	=	0x00d1
                           0000D2   623 _DMA1CFGL	=	0x00d2
                           0000D3   624 _DMA1CFGH	=	0x00d3
                           0000D4   625 _DMA0CFGL	=	0x00d4
                           0000D5   626 _DMA0CFGH	=	0x00d5
                           0000D6   627 _DMAARM	=	0x00d6
                           0000D7   628 _DMAREQ	=	0x00d7
                           000089   629 _P0IFG	=	0x0089
                           00008A   630 _P1IFG	=	0x008a
                           00008B   631 _P2IFG	=	0x008b
                           00008C   632 _PICTL	=	0x008c
                           0000AB   633 _P0IEN	=	0x00ab
                           00008D   634 _P1IEN	=	0x008d
                           0000AC   635 _P2IEN	=	0x00ac
                           00008F   636 _P0INP	=	0x008f
                           0000F1   637 _PERCFG	=	0x00f1
                           0000F2   638 _APCFG	=	0x00f2
                           0000F3   639 _P0SEL	=	0x00f3
                           0000F4   640 _P1SEL	=	0x00f4
                           0000F5   641 _P2SEL	=	0x00f5
                           0000F6   642 _P1INP	=	0x00f6
                           0000F7   643 _P2INP	=	0x00f7
                           0000FD   644 _P0DIR	=	0x00fd
                           0000FE   645 _P1DIR	=	0x00fe
                           0000FF   646 _P2DIR	=	0x00ff
                           0000AE   647 _PMUX	=	0x00ae
                           000093   648 _MPAGE	=	0x0093
                           000093   649 __XPAGE	=	0x0093
                           0000C7   650 _MEMCTR	=	0x00c7
                           00009F   651 _FMAP	=	0x009f
                           00009F   652 _PSBANK	=	0x009f
                           000091   653 _RFIRQF1	=	0x0091
                           0000D9   654 _RFD	=	0x00d9
                           0000E1   655 _RFST	=	0x00e1
                           0000E9   656 _RFIRQF0	=	0x00e9
                           0000BF   657 _RFERRF	=	0x00bf
                           000095   658 _ST0	=	0x0095
                           000096   659 _ST1	=	0x0096
                           000097   660 _ST2	=	0x0097
                           0000AD   661 _STLOAD	=	0x00ad
                           0000BE   662 _SLEEPCMD	=	0x00be
                           00009D   663 _SLEEPSTA	=	0x009d
                           0000C6   664 _CLKCONCMD	=	0x00c6
                           00009E   665 _CLKCONSTA	=	0x009e
                           0000DA   666 _T1CC0L	=	0x00da
                           0000DB   667 _T1CC0H	=	0x00db
                           0000DC   668 _T1CC1L	=	0x00dc
                           0000DD   669 _T1CC1H	=	0x00dd
                           0000DE   670 _T1CC2L	=	0x00de
                           0000DF   671 _T1CC2H	=	0x00df
                           0000E2   672 _T1CNTL	=	0x00e2
                           0000E3   673 _T1CNTH	=	0x00e3
                           0000E4   674 _T1CTL	=	0x00e4
                           0000E5   675 _T1CCTL0	=	0x00e5
                           0000E6   676 _T1CCTL1	=	0x00e6
                           0000E7   677 _T1CCTL2	=	0x00e7
                           0000AF   678 _T1STAT	=	0x00af
                           000094   679 _T2CTRL	=	0x0094
                           00009C   680 _T2EVTCFG	=	0x009c
                           0000A1   681 _T2IRQF	=	0x00a1
                           0000A2   682 _T2M0	=	0x00a2
                           0000A3   683 _T2M1	=	0x00a3
                           0000A4   684 _T2MOVF0	=	0x00a4
                           0000A5   685 _T2MOVF1	=	0x00a5
                           0000A6   686 _T2MOVF2	=	0x00a6
                           0000A7   687 _T2IRQM	=	0x00a7
                           0000C3   688 _T2MSEL	=	0x00c3
                           0000CA   689 _T3CNT	=	0x00ca
                           0000CB   690 _T3CTL	=	0x00cb
                           0000CC   691 _T3CCTL0	=	0x00cc
                           0000CD   692 _T3CC0	=	0x00cd
                           0000CE   693 _T3CCTL1	=	0x00ce
                           0000CF   694 _T3CC1	=	0x00cf
                           0000EA   695 _T4CNT	=	0x00ea
                           0000EB   696 _T4CTL	=	0x00eb
                           0000EC   697 _T4CCTL0	=	0x00ec
                           0000ED   698 _T4CC0	=	0x00ed
                           0000EE   699 _T4CCTL1	=	0x00ee
                           0000EF   700 _T4CC1	=	0x00ef
                           0000D8   701 _TIMIF	=	0x00d8
                           000086   702 _U0CSR	=	0x0086
                           0000C1   703 _U0DBUF	=	0x00c1
                           0000C2   704 _U0BAUD	=	0x00c2
                           0000C4   705 _U0UCR	=	0x00c4
                           0000C5   706 _U0GCR	=	0x00c5
                           0000F8   707 _U1CSR	=	0x00f8
                           0000F9   708 _U1DBUF	=	0x00f9
                           0000FA   709 _U1BAUD	=	0x00fa
                           0000FB   710 _U1UCR	=	0x00fb
                           0000FC   711 _U1GCR	=	0x00fc
                           0000C9   712 _WDCTL	=	0x00c9
                                    713 ;--------------------------------------------------------
                                    714 ; special function bits
                                    715 ;--------------------------------------------------------
                                    716 	.area RSEG    (ABS,DATA)
      000000                        717 	.org 0x0000
                           000087   718 _P0_7	=	0x0087
                           000086   719 _P0_6	=	0x0086
                           000085   720 _P0_5	=	0x0085
                           000084   721 _P0_4	=	0x0084
                           000083   722 _P0_3	=	0x0083
                           000082   723 _P0_2	=	0x0082
                           000081   724 _P0_1	=	0x0081
                           000080   725 _P0_0	=	0x0080
                           00008F   726 _URX1IF	=	0x008f
                           00008D   727 _ADCIF	=	0x008d
                           00008B   728 _URX0IF	=	0x008b
                           00008A   729 _IT1	=	0x008a
                           000089   730 _RFERRIF	=	0x0089
                           000088   731 _IT0	=	0x0088
                           000097   732 _P1_7	=	0x0097
                           000096   733 _P1_6	=	0x0096
                           000095   734 _P1_5	=	0x0095
                           000094   735 _P1_4	=	0x0094
                           000093   736 _P1_3	=	0x0093
                           000092   737 _P1_2	=	0x0092
                           000091   738 _P1_1	=	0x0091
                           000090   739 _P1_0	=	0x0090
                           000099   740 _ENCIF_1	=	0x0099
                           000098   741 _ENCIF_0	=	0x0098
                           0000A7   742 _P2_7	=	0x00a7
                           0000A6   743 _P2_6	=	0x00a6
                           0000A5   744 _P2_5	=	0x00a5
                           0000A4   745 _P2_4	=	0x00a4
                           0000A3   746 _P2_3	=	0x00a3
                           0000A2   747 _P2_2	=	0x00a2
                           0000A1   748 _P2_1	=	0x00a1
                           0000A0   749 _P2_0	=	0x00a0
                           0000AF   750 _EA	=	0x00af
                           0000AD   751 _STIE	=	0x00ad
                           0000AC   752 _ENCIE	=	0x00ac
                           0000AB   753 _URX1IE	=	0x00ab
                           0000AA   754 _URX0IE	=	0x00aa
                           0000A9   755 _ADCIE	=	0x00a9
                           0000A8   756 _RFERRIE	=	0x00a8
                           0000BD   757 _P0IE	=	0x00bd
                           0000BC   758 _T4IE	=	0x00bc
                           0000BB   759 _T3IE	=	0x00bb
                           0000BA   760 _T2IE	=	0x00ba
                           0000B9   761 _T1IE	=	0x00b9
                           0000B8   762 _DMAIE	=	0x00b8
                           0000C7   763 _STIF	=	0x00c7
                           0000C5   764 _P0IF	=	0x00c5
                           0000C4   765 _T4IF	=	0x00c4
                           0000C3   766 _T3IF	=	0x00c3
                           0000C2   767 _T2IF	=	0x00c2
                           0000C1   768 _T1IF	=	0x00c1
                           0000C0   769 _DMAIF	=	0x00c0
                           0000D7   770 _CY	=	0x00d7
                           0000D6   771 _AC	=	0x00d6
                           0000D5   772 _F0	=	0x00d5
                           0000D4   773 _RS1	=	0x00d4
                           0000D3   774 _RS0	=	0x00d3
                           0000D2   775 _OV	=	0x00d2
                           0000D1   776 _F1	=	0x00d1
                           0000D0   777 _P	=	0x00d0
                           0000E7   778 _ACC_7	=	0x00e7
                           0000E6   779 _ACC_6	=	0x00e6
                           0000E5   780 _ACC_5	=	0x00e5
                           0000E4   781 _ACC_4	=	0x00e4
                           0000E3   782 _ACC_3	=	0x00e3
                           0000E2   783 _ACC_2	=	0x00e2
                           0000E1   784 _ACC_1	=	0x00e1
                           0000E0   785 _ACC_0	=	0x00e0
                           0000EC   786 _WDTIF	=	0x00ec
                           0000EB   787 _P1IF	=	0x00eb
                           0000EA   788 _UTX1IF	=	0x00ea
                           0000E9   789 _UTX0IF	=	0x00e9
                           0000E8   790 _P2IF	=	0x00e8
                           0000F7   791 _B_7	=	0x00f7
                           0000F6   792 _B_6	=	0x00f6
                           0000F5   793 _B_5	=	0x00f5
                           0000F4   794 _B_4	=	0x00f4
                           0000F3   795 _B_3	=	0x00f3
                           0000F2   796 _B_2	=	0x00f2
                           0000F1   797 _B_1	=	0x00f1
                           0000F0   798 _B_0	=	0x00f0
                           0000DE   799 _OVFIM	=	0x00de
                           0000DD   800 _T4CH1IF	=	0x00dd
                           0000DC   801 _T4CH0IF	=	0x00dc
                           0000DB   802 _T4OVFIF	=	0x00db
                           0000DA   803 _T3CH1IF	=	0x00da
                           0000D9   804 _T3CH0IF	=	0x00d9
                           0000D8   805 _T3OVFIF	=	0x00d8
                           0000FF   806 _MODE	=	0x00ff
                           0000FE   807 _RE	=	0x00fe
                           0000FD   808 _SLAVE	=	0x00fd
                           0000FC   809 _FE	=	0x00fc
                           0000FB   810 _ERR	=	0x00fb
                           0000FA   811 _RX_BYTE	=	0x00fa
                           0000F9   812 _TX_BYTE	=	0x00f9
                           0000F8   813 _ACTIVE	=	0x00f8
                                    814 ;--------------------------------------------------------
                                    815 ; overlayable register banks
                                    816 ;--------------------------------------------------------
                                    817 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        818 	.ds 8
                                    819 ;--------------------------------------------------------
                                    820 ; internal ram data
                                    821 ;--------------------------------------------------------
                                    822 	.area DSEG    (DATA)
                                    823 ;--------------------------------------------------------
                                    824 ; overlayable items in internal ram 
                                    825 ;--------------------------------------------------------
                                    826 ;--------------------------------------------------------
                                    827 ; indirectly addressable internal ram data
                                    828 ;--------------------------------------------------------
                                    829 	.area ISEG    (DATA)
                                    830 ;--------------------------------------------------------
                                    831 ; absolute internal ram data
                                    832 ;--------------------------------------------------------
                                    833 	.area IABS    (ABS,DATA)
                                    834 	.area IABS    (ABS,DATA)
                                    835 ;--------------------------------------------------------
                                    836 ; bit data
                                    837 ;--------------------------------------------------------
                                    838 	.area BSEG    (BIT)
                                    839 ;--------------------------------------------------------
                                    840 ; paged external ram data
                                    841 ;--------------------------------------------------------
                                    842 	.area PSEG    (PAG,XDATA)
                                    843 ;--------------------------------------------------------
                                    844 ; external ram data
                                    845 ;--------------------------------------------------------
                                    846 	.area XSEG    (XDATA)
                           0061A6   847 _MONMUX	=	0x61a6
                           0061A6   848 _OPAMPMC	=	0x61a6
                           006230   849 _I2CCFG	=	0x6230
                           006231   850 _I2CSTAT	=	0x6231
                           006232   851 _I2CDATA	=	0x6232
                           006233   852 _I2CADDR	=	0x6233
                           006234   853 _I2CWC	=	0x6234
                           006235   854 _I2CIO	=	0x6235
                           006243   855 _OBSSEL0	=	0x6243
                           006244   856 _OBSSEL1	=	0x6244
                           006245   857 _OBSSEL2	=	0x6245
                           006246   858 _OBSSEL3	=	0x6246
                           006247   859 _OBSSEL4	=	0x6247
                           006248   860 _OBSSEL5	=	0x6248
                           006249   861 _CHVER	=	0x6249
                           00624A   862 _CHIPID	=	0x624a
                           00624B   863 _TESTREG0	=	0x624b
                           006260   864 _DBGDATA	=	0x6260
                           006262   865 _SRCRC	=	0x6262
                           006264   866 _BATTMON	=	0x6264
                           006265   867 _IVCTRL	=	0x6265
                           006270   868 _FCTL	=	0x6270
                           006271   869 _FADDRL	=	0x6271
                           006272   870 _FADDRH	=	0x6272
                           006273   871 _FWDATA	=	0x6273
                           006276   872 _CHIPINFO0	=	0x6276
                           006277   873 _CHIPINFO1	=	0x6277
                           006281   874 _IRCTL	=	0x6281
                           006290   875 _CLD	=	0x6290
                           0062A0   876 _XX_T1CCTL0	=	0x62a0
                           0062A1   877 _XX_T1CCTL1	=	0x62a1
                           0062A2   878 _XX_T1CCTL2	=	0x62a2
                           0062A3   879 _T1CCTL3	=	0x62a3
                           0062A4   880 _T1CCTL4	=	0x62a4
                           0062A6   881 _XX_T1CC0L	=	0x62a6
                           0062A7   882 _XX_T1CC0H	=	0x62a7
                           0062A8   883 _XX_T1CC1L	=	0x62a8
                           0062A9   884 _XX_T1CC1H	=	0x62a9
                           0062AA   885 _XX_T1CC2L	=	0x62aa
                           0062AB   886 _XX_T1CC2H	=	0x62ab
                           0062AC   887 _T1CC3L	=	0x62ac
                           0062AD   888 _T1CC3H	=	0x62ad
                           0062AE   889 _T1CC4L	=	0x62ae
                           0062AF   890 _T1CC4H	=	0x62af
                           0062B0   891 _STCC	=	0x62b0
                           0062B1   892 _STCS	=	0x62b1
                           0062B2   893 _STCV0	=	0x62b2
                           0062B3   894 _STCV1	=	0x62b3
                           0062B4   895 _STCV2	=	0x62b4
                           0062C0   896 _OPAMPC	=	0x62c0
                           0062C1   897 _OPAMPS	=	0x62c1
                           0062D0   898 _CMPCTL	=	0x62d0
                           006000   899 _RFCORE_RAM	=	0x6000
                           006000   900 _RXFIFO	=	0x6000
                           006080   901 _TXFIFO	=	0x6080
                           006100   902 _SRC_ADDR_TABLE	=	0x6100
                           006160   903 _SRCRESMASK0	=	0x6160
                           006161   904 _SRCRESMASK1	=	0x6161
                           006162   905 _SRCRESMASK2	=	0x6162
                           006163   906 _SRCRESINDEX	=	0x6163
                           006164   907 _SRCEXTPENDEN0	=	0x6164
                           006165   908 _SRCEXTPENDEN1	=	0x6165
                           006166   909 _SRCEXTPENDEN2	=	0x6166
                           006167   910 _SRCSHORTPENDEN0	=	0x6167
                           006168   911 _SRCSHORTPENDEN1	=	0x6168
                           006169   912 _SRCSHORTPENDEN2	=	0x6169
                           00616A   913 _EXT_ADDR0	=	0x616a
                           00616B   914 _EXT_ADDR1	=	0x616b
                           00616C   915 _EXT_ADDR2	=	0x616c
                           00616D   916 _EXT_ADDR3	=	0x616d
                           00616E   917 _EXT_ADDR4	=	0x616e
                           00616F   918 _EXT_ADDR5	=	0x616f
                           006170   919 _EXT_ADDR6	=	0x6170
                           006171   920 _EXT_ADDR7	=	0x6171
                           006172   921 _PAN_ID0	=	0x6172
                           006173   922 _PAN_ID1	=	0x6173
                           006174   923 _SHORT_ADDR0	=	0x6174
                           006175   924 _SHORT_ADDR1	=	0x6175
                           006180   925 _FRMFILT0	=	0x6180
                           006181   926 _FRMFILT1	=	0x6181
                           006182   927 _SRCMATCH	=	0x6182
                           006183   928 _SRCSHORTEN0	=	0x6183
                           006184   929 _SRCSHORTEN1	=	0x6184
                           006185   930 _SRCSHORTEN2	=	0x6185
                           006186   931 _SRCEXTEN0	=	0x6186
                           006187   932 _SRCEXTEN1	=	0x6187
                           006188   933 _SRCEXTEN2	=	0x6188
                           006189   934 _FRMCTRL0	=	0x6189
                           00618A   935 _FRMCTRL1	=	0x618a
                           00618B   936 _RXENABLE	=	0x618b
                           00618C   937 _RXMASKSET	=	0x618c
                           00618D   938 _RXMASKCLR	=	0x618d
                           00618E   939 _FREQTUNE	=	0x618e
                           00618F   940 _FREQCTRL	=	0x618f
                           006190   941 _TXPOWER	=	0x6190
                           006191   942 _TXCTRL	=	0x6191
                           006192   943 _FSMSTAT0	=	0x6192
                           006193   944 _FSMSTAT1	=	0x6193
                           006194   945 _FIFOPCTRL	=	0x6194
                           006195   946 _FSMCTRL	=	0x6195
                           006196   947 _CCACTRL0	=	0x6196
                           006197   948 _CCACTRL1	=	0x6197
                           006198   949 _RSSI	=	0x6198
                           006199   950 _RSSISTAT	=	0x6199
                           00619A   951 _RXFIRST	=	0x619a
                           00619B   952 _RXFIFOCNT	=	0x619b
                           00619C   953 _TXFIFOCNT	=	0x619c
                           00619D   954 _RXFIRST_PTR	=	0x619d
                           00619E   955 _RXLAST_PTR	=	0x619e
                           00619F   956 _RXP1_PTR	=	0x619f
                           0061A1   957 _TXFIRST_PTR	=	0x61a1
                           0061A2   958 _TXLAST_PTR	=	0x61a2
                           0061A3   959 _RFIRQM0	=	0x61a3
                           0061A4   960 _RFIRQM1	=	0x61a4
                           0061A5   961 _RFERRM	=	0x61a5
                           0061A7   962 _RFRND	=	0x61a7
                           0061A8   963 _MDMCTRL0	=	0x61a8
                           0061A9   964 _MDMCTRL1	=	0x61a9
                           0061AA   965 _FREQEST	=	0x61aa
                           0061AB   966 _RXCTRL	=	0x61ab
                           0061AC   967 _FSCTRL	=	0x61ac
                           0061AD   968 _FSCAL0	=	0x61ad
                           0061AE   969 _FSCAL1	=	0x61ae
                           0061AF   970 _FSCAL2	=	0x61af
                           0061B0   971 _FSCAL3	=	0x61b0
                           0061B1   972 _AGCCTRL0	=	0x61b1
                           0061B2   973 _AGCCTRL1	=	0x61b2
                           0061B3   974 _AGCCTRL2	=	0x61b3
                           0061B4   975 _AGCCTRL3	=	0x61b4
                           0061B5   976 _ADCTEST0	=	0x61b5
                           0061B6   977 _ADCTEST1	=	0x61b6
                           0061B7   978 _ADCTEST2	=	0x61b7
                           0061B8   979 _MDMTEST0	=	0x61b8
                           0061B9   980 _MDMTEST1	=	0x61b9
                           0061BA   981 _DACTEST0	=	0x61ba
                           0061BB   982 _DACTEST1	=	0x61bb
                           0061BC   983 _DACTEST2	=	0x61bc
                           0061BD   984 _ATEST	=	0x61bd
                           0061BE   985 _PTEST0	=	0x61be
                           0061BF   986 _PTEST1	=	0x61bf
                           0061FA   987 _TXFILTCFG	=	0x61fa
                           0061EB   988 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   989 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   990 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   991 _CSPPROG0	=	0x61c0
                           0061C1   992 _CSPPROG1	=	0x61c1
                           0061C2   993 _CSPPROG2	=	0x61c2
                           0061C3   994 _CSPPROG3	=	0x61c3
                           0061C4   995 _CSPPROG4	=	0x61c4
                           0061C5   996 _CSPPROG5	=	0x61c5
                           0061C6   997 _CSPPROG6	=	0x61c6
                           0061C7   998 _CSPPROG7	=	0x61c7
                           0061C8   999 _CSPPROG8	=	0x61c8
                           0061C9  1000 _CSPPROG9	=	0x61c9
                           0061CA  1001 _CSPPROG10	=	0x61ca
                           0061CB  1002 _CSPPROG11	=	0x61cb
                           0061CC  1003 _CSPPROG12	=	0x61cc
                           0061CD  1004 _CSPPROG13	=	0x61cd
                           0061CE  1005 _CSPPROG14	=	0x61ce
                           0061CF  1006 _CSPPROG15	=	0x61cf
                           0061D0  1007 _CSPPROG16	=	0x61d0
                           0061D1  1008 _CSPPROG17	=	0x61d1
                           0061D2  1009 _CSPPROG18	=	0x61d2
                           0061D3  1010 _CSPPROG19	=	0x61d3
                           0061D4  1011 _CSPPROG20	=	0x61d4
                           0061D5  1012 _CSPPROG21	=	0x61d5
                           0061D6  1013 _CSPPROG22	=	0x61d6
                           0061D7  1014 _CSPPROG23	=	0x61d7
                           0061E0  1015 _CSPCTRL	=	0x61e0
                           0061E1  1016 _CSPSTAT	=	0x61e1
                           0061E2  1017 _CSPX	=	0x61e2
                           0061E3  1018 _CSPY	=	0x61e3
                           0061E4  1019 _CSPZ	=	0x61e4
                           0061E5  1020 _CSPT	=	0x61e5
                           006200  1021 _USBADDR	=	0x6200
                           006201  1022 _USBPOW	=	0x6201
                           006202  1023 _USBIIF	=	0x6202
                           006204  1024 _USBOIF	=	0x6204
                           006206  1025 _USBCIF	=	0x6206
                           006207  1026 _USBIIE	=	0x6207
                           006209  1027 _USBOIE	=	0x6209
                           00620B  1028 _USBCIE	=	0x620b
                           00620C  1029 _USBFRML	=	0x620c
                           00620D  1030 _USBFRMH	=	0x620d
                           00620E  1031 _USBINDEX	=	0x620e
                           00620F  1032 _USBCTRL	=	0x620f
                           006210  1033 _USBMAXI	=	0x6210
                           006211  1034 _USBCS0	=	0x6211
                           006211  1035 _USBCSIL	=	0x6211
                           006212  1036 _USBCSIH	=	0x6212
                           006213  1037 _USBMAXO	=	0x6213
                           006214  1038 _USBCSOL	=	0x6214
                           006215  1039 _USBCSOH	=	0x6215
                           006216  1040 _USBCNT0	=	0x6216
                           006216  1041 _USBCNTL	=	0x6216
                           006217  1042 _USBCNTH	=	0x6217
                           006220  1043 _USBF0	=	0x6220
                           006222  1044 _USBF1	=	0x6222
                           006224  1045 _USBF2	=	0x6224
                           006226  1046 _USBF3	=	0x6226
                           006228  1047 _USBF4	=	0x6228
                           00622A  1048 _USBF5	=	0x622a
                           007080  1049 _X_P0	=	0x7080
                           007086  1050 _X_U0CSR	=	0x7086
                           007089  1051 _X_P0IFG	=	0x7089
                           00708A  1052 _X_P1IFG	=	0x708a
                           00708B  1053 _X_P2IFG	=	0x708b
                           00708C  1054 _X_PICTL	=	0x708c
                           00708D  1055 _X_P1IEN	=	0x708d
                           00708F  1056 _X_P0INP	=	0x708f
                           007090  1057 _X_P1	=	0x7090
                           007091  1058 _X_RFIRQF1	=	0x7091
                           007093  1059 _X_MPAGE	=	0x7093
                           007093  1060 _X__XPAGE	=	0x7093
                           007094  1061 _X_T2CTRL	=	0x7094
                           007095  1062 _X_ST0	=	0x7095
                           007096  1063 _X_ST1	=	0x7096
                           007097  1064 _X_ST2	=	0x7097
                           00709C  1065 _X_T2EVTCFG	=	0x709c
                           00709D  1066 _X_SLEEPSTA	=	0x709d
                           00709E  1067 _X_CLKCONSTA	=	0x709e
                           00709F  1068 _X_FMAP	=	0x709f
                           00709F  1069 _X_PSBANK	=	0x709f
                           0070A0  1070 _X_P2	=	0x70a0
                           0070A1  1071 _X_T2IRQF	=	0x70a1
                           0070A2  1072 _X_T2M0	=	0x70a2
                           0070A3  1073 _X_T2M1	=	0x70a3
                           0070A4  1074 _X_T2MOVF0	=	0x70a4
                           0070A5  1075 _X_T2MOVF1	=	0x70a5
                           0070A6  1076 _X_T2MOVF2	=	0x70a6
                           0070A7  1077 _X_T2IRQM	=	0x70a7
                           0070AB  1078 _X_P0IEN	=	0x70ab
                           0070AC  1079 _X_P2IEN	=	0x70ac
                           0070AD  1080 _X_STLOAD	=	0x70ad
                           0070AE  1081 _X_PMUX	=	0x70ae
                           0070AF  1082 _X_T1STAT	=	0x70af
                           0070B1  1083 _X_ENCDI	=	0x70b1
                           0070B2  1084 _X_ENCDO	=	0x70b2
                           0070B3  1085 _X_ENCCS	=	0x70b3
                           0070B4  1086 _X_ADCCON1	=	0x70b4
                           0070B5  1087 _X_ADCCON2	=	0x70b5
                           0070B6  1088 _X_ADCCON3	=	0x70b6
                           0070BA  1089 _X_ADCL	=	0x70ba
                           0070BB  1090 _X_ADCH	=	0x70bb
                           0070BC  1091 _X_RNDL	=	0x70bc
                           0070BD  1092 _X_RNDH	=	0x70bd
                           0070BE  1093 _X_SLEEPCMD	=	0x70be
                           0070BF  1094 _X_RFERRF	=	0x70bf
                           0070C1  1095 _X_U0DBUF	=	0x70c1
                           0070C2  1096 _X_U0BAUD	=	0x70c2
                           0070C3  1097 _X_T2MSEL	=	0x70c3
                           0070C4  1098 _X_U0UCR	=	0x70c4
                           0070C5  1099 _X_U0GCR	=	0x70c5
                           0070C6  1100 _X_CLKCONCMD	=	0x70c6
                           0070C7  1101 _X_MEMCTR	=	0x70c7
                           0070C9  1102 _X_WDCTL	=	0x70c9
                           0070CA  1103 _X_T3CNT	=	0x70ca
                           0070CB  1104 _X_T3CTL	=	0x70cb
                           0070CC  1105 _X_T3CCTL0	=	0x70cc
                           0070CD  1106 _X_T3CC0	=	0x70cd
                           0070CE  1107 _X_T3CCTL1	=	0x70ce
                           0070CF  1108 _X_T3CC1	=	0x70cf
                           0070D1  1109 _X_DMAIRQ	=	0x70d1
                           0070D2  1110 _X_DMA1CFGL	=	0x70d2
                           0070D3  1111 _X_DMA1CFGH	=	0x70d3
                           0070D4  1112 _X_DMA0CFGL	=	0x70d4
                           0070D5  1113 _X_DMA0CFGH	=	0x70d5
                           0070D6  1114 _X_DMAARM	=	0x70d6
                           0070D7  1115 _X_DMAREQ	=	0x70d7
                           0070D8  1116 _X_TIMIF	=	0x70d8
                           0070D9  1117 _X_RFD	=	0x70d9
                           0070DA  1118 _X_T1CC0L	=	0x70da
                           0070DB  1119 _X_T1CC0H	=	0x70db
                           0070DC  1120 _X_T1CC1L	=	0x70dc
                           0070DD  1121 _X_T1CC1H	=	0x70dd
                           0070DE  1122 _X_T1CC2L	=	0x70de
                           0070DF  1123 _X_T1CC2H	=	0x70df
                           0070E1  1124 _X_RFST	=	0x70e1
                           0070E2  1125 _X_T1CNTL	=	0x70e2
                           0070E3  1126 _X_T1CNTH	=	0x70e3
                           0070E4  1127 _X_T1CTL	=	0x70e4
                           0070E5  1128 _X_T1CCTL0	=	0x70e5
                           0070E6  1129 _X_T1CCTL1	=	0x70e6
                           0070E7  1130 _X_T1CCTL2	=	0x70e7
                           0070E9  1131 _X_RFIRQF0	=	0x70e9
                           0070EA  1132 _X_T4CNT	=	0x70ea
                           0070EB  1133 _X_T4CTL	=	0x70eb
                           0070EC  1134 _X_T4CCTL0	=	0x70ec
                           0070ED  1135 _X_T4CC0	=	0x70ed
                           0070EE  1136 _X_T4CCTL1	=	0x70ee
                           0070EF  1137 _X_T4CC1	=	0x70ef
                           0070F1  1138 _X_PERCFG	=	0x70f1
                           0070F2  1139 _X_APCFG	=	0x70f2
                           0070F3  1140 _X_P0SEL	=	0x70f3
                           0070F4  1141 _X_P1SEL	=	0x70f4
                           0070F5  1142 _X_P2SEL	=	0x70f5
                           0070F6  1143 _X_P1INP	=	0x70f6
                           0070F7  1144 _X_P2INP	=	0x70f7
                           0070F8  1145 _X_U1CSR	=	0x70f8
                           0070F9  1146 _X_U1DBUF	=	0x70f9
                           0070FA  1147 _X_U1BAUD	=	0x70fa
                           0070FB  1148 _X_U1UCR	=	0x70fb
                           0070FC  1149 _X_U1GCR	=	0x70fc
                           0070FD  1150 _X_P0DIR	=	0x70fd
                           0070FE  1151 _X_P1DIR	=	0x70fe
                           0070FF  1152 _X_P2DIR	=	0x70ff
                           007800  1153 _X_INFOPAGE	=	0x7800
                           00780C  1154 _X_IEEE_ADDR	=	0x780c
      000000                       1155 _lpp_is_on:
      000000                       1156 	.ds 1
      000001                       1157 _current_packet:
      000001                       1158 	.ds 8
      000009                       1159 _dutycycle_pt:
      000009                       1160 	.ds 2
      00000B                       1161 _timer:
      00000B                       1162 	.ds 22
      000021                       1163 _queued_packets_memb_memb_count:
      000021                       1164 	.ds 3
      000024                       1165 _queued_packets_memb_memb_mem:
      000024                       1166 	.ds 129
      0000A5                       1167 _encounter_memb_memb_count:
      0000A5                       1168 	.ds 4
      0000A9                       1169 _encounter_memb_memb_mem:
      0000A9                       1170 	.ds 228
      00018D                       1171 _stream_probe_timer:
      00018D                       1172 	.ds 22
      0001A3                       1173 _stream_off_timer:
      0001A3                       1174 	.ds 22
                                   1175 ;--------------------------------------------------------
                                   1176 ; absolute external ram data
                                   1177 ;--------------------------------------------------------
                                   1178 	.area XABS    (ABS,XDATA)
                                   1179 ;--------------------------------------------------------
                                   1180 ; external initialized ram data
                                   1181 ;--------------------------------------------------------
                                   1182 	.area XISEG   (XDATA)
      000000                       1183 _is_listening:
      000000                       1184 	.ds 1
      000001                       1185 _off_time_adjustment:
      000001                       1186 	.ds 2
      000003                       1187 _off_time:
      000003                       1188 	.ds 2
      000005                       1189 _pending_packets_list_list:
      000005                       1190 	.ds 3
      000008                       1191 _pending_packets_list:
      000008                       1192 	.ds 3
      00000B                       1193 _queued_packets_list_list:
      00000B                       1194 	.ds 3
      00000E                       1195 _queued_packets_list:
      00000E                       1196 	.ds 3
      000011                       1197 _queued_packets_memb:
      000011                       1198 	.ds 10
      00001B                       1199 _encounter_list_list:
      00001B                       1200 	.ds 3
      00001E                       1201 _encounter_list:
      00001E                       1202 	.ds 3
      000021                       1203 _encounter_memb:
      000021                       1204 	.ds 10
      00002B                       1205 _is_streaming:
      00002B                       1206 	.ds 1
                                   1207 	.area HOME    (CODE)
                                   1208 	.area GSINIT0 (CODE)
                                   1209 	.area GSINIT1 (CODE)
                                   1210 	.area GSINIT2 (CODE)
                                   1211 	.area GSINIT3 (CODE)
                                   1212 	.area GSINIT4 (CODE)
                                   1213 	.area GSINIT5 (CODE)
                                   1214 	.area GSINIT  (CODE)
                                   1215 	.area GSFINAL (CODE)
                                   1216 	.area CSEG    (CODE)
                                   1217 ;--------------------------------------------------------
                                   1218 ; global & static initialisations
                                   1219 ;--------------------------------------------------------
                                   1220 	.area HOME    (CODE)
                                   1221 	.area GSINIT  (CODE)
                                   1222 	.area GSFINAL (CODE)
                                   1223 	.area GSINIT  (CODE)
                                   1224 ;--------------------------------------------------------
                                   1225 ; Home
                                   1226 ;--------------------------------------------------------
                                   1227 	.area HOME    (CODE)
                                   1228 	.area HOME    (CODE)
                                   1229 ;--------------------------------------------------------
                                   1230 ; code
                                   1231 ;--------------------------------------------------------
                                   1232 	.area BANK1   (CODE)
                                   1233 ;------------------------------------------------------------
                                   1234 ;Allocation info for local variables in function 'turn_radio_on'
                                   1235 ;------------------------------------------------------------
                                   1236 ;	../../../core/net/mac/lpp.c:191: turn_radio_on(void)
                                   1237 ;	-----------------------------------------
                                   1238 ;	 function turn_radio_on
                                   1239 ;	-----------------------------------------
      000000                       1240 _turn_radio_on:
                           000007  1241 	ar7 = 0x07
                           000006  1242 	ar6 = 0x06
                           000005  1243 	ar5 = 0x05
                           000004  1244 	ar4 = 0x04
                           000003  1245 	ar3 = 0x03
                           000002  1246 	ar2 = 0x02
                           000001  1247 	ar1 = 0x01
                           000000  1248 	ar0 = 0x00
                                   1249 ;	../../../core/net/mac/lpp.c:193: NETSTACK_RADIO.on();
      000000 90r00r18         [24] 1250 	mov	dptr,#(_cc2530_rf_driver + 0x0018)
      000003 E4               [12] 1251 	clr	a
      000004 93               [24] 1252 	movc	a,@a+dptr
      000005 FD               [12] 1253 	mov	r5,a
      000006 A3               [24] 1254 	inc	dptr
      000007 E4               [12] 1255 	clr	a
      000008 93               [24] 1256 	movc	a,@a+dptr
      000009 FE               [12] 1257 	mov	r6,a
      00000A A3               [24] 1258 	inc	dptr
      00000B E4               [12] 1259 	clr	a
      00000C 93               [24] 1260 	movc	a,@a+dptr
      00000D FF               [12] 1261 	mov	r7,a
      00000E C0 07            [24] 1262 	push	ar7
      000010 C0 06            [24] 1263 	push	ar6
      000012 C0 05            [24] 1264 	push	ar5
      000014 C0 05            [24] 1265 	push	ar5
      000016 C0 06            [24] 1266 	push	ar6
      000018 C0 07            [24] 1267 	push	ar7
      00001A D0 02            [24] 1268 	pop	ar2
      00001C D0 01            [24] 1269 	pop	ar1
      00001E D0 00            [24] 1270 	pop	ar0
      000020 12r00r00         [24] 1271 	lcall	__sdcc_banked_call
      000023 D0 05            [24] 1272 	pop	ar5
      000025 D0 06            [24] 1273 	pop	ar6
      000027 D0 07            [24] 1274 	pop	ar7
                                   1275 ;	../../../core/net/mac/lpp.c:195: }
      000029 02r00r00         [24] 1276 	ljmp	__sdcc_banked_ret
                                   1277 ;------------------------------------------------------------
                                   1278 ;Allocation info for local variables in function 'turn_radio_off'
                                   1279 ;------------------------------------------------------------
                                   1280 ;	../../../core/net/mac/lpp.c:198: turn_radio_off(void)
                                   1281 ;	-----------------------------------------
                                   1282 ;	 function turn_radio_off
                                   1283 ;	-----------------------------------------
      00002C                       1284 _turn_radio_off:
                                   1285 ;	../../../core/net/mac/lpp.c:200: if(lpp_is_on && is_streaming == 0) {
      00002C 90r00r00         [24] 1286 	mov	dptr,#_lpp_is_on
      00002F E0               [24] 1287 	movx	a,@dptr
      000030 60 2F            [24] 1288 	jz	00104$
      000032 90r00r2B         [24] 1289 	mov	dptr,#_is_streaming
      000035 E0               [24] 1290 	movx	a,@dptr
      000036 70 29            [24] 1291 	jnz	00104$
                                   1292 ;	../../../core/net/mac/lpp.c:201: NETSTACK_RADIO.off();
      000038 90r00r1B         [24] 1293 	mov	dptr,#(_cc2530_rf_driver + 0x001b)
      00003B E4               [12] 1294 	clr	a
      00003C 93               [24] 1295 	movc	a,@a+dptr
      00003D FD               [12] 1296 	mov	r5,a
      00003E A3               [24] 1297 	inc	dptr
      00003F E4               [12] 1298 	clr	a
      000040 93               [24] 1299 	movc	a,@a+dptr
      000041 FE               [12] 1300 	mov	r6,a
      000042 A3               [24] 1301 	inc	dptr
      000043 E4               [12] 1302 	clr	a
      000044 93               [24] 1303 	movc	a,@a+dptr
      000045 FF               [12] 1304 	mov	r7,a
      000046 C0 07            [24] 1305 	push	ar7
      000048 C0 06            [24] 1306 	push	ar6
      00004A C0 05            [24] 1307 	push	ar5
      00004C C0 05            [24] 1308 	push	ar5
      00004E C0 06            [24] 1309 	push	ar6
      000050 C0 07            [24] 1310 	push	ar7
      000052 D0 02            [24] 1311 	pop	ar2
      000054 D0 01            [24] 1312 	pop	ar1
      000056 D0 00            [24] 1313 	pop	ar0
      000058 12r00r00         [24] 1314 	lcall	__sdcc_banked_call
      00005B D0 05            [24] 1315 	pop	ar5
      00005D D0 06            [24] 1316 	pop	ar6
      00005F D0 07            [24] 1317 	pop	ar7
      000061                       1318 00104$:
                                   1319 ;	../../../core/net/mac/lpp.c:204: }
      000061 02r00r00         [24] 1320 	ljmp	__sdcc_banked_ret
                                   1321 ;------------------------------------------------------------
                                   1322 ;Allocation info for local variables in function 'remove_encounter'
                                   1323 ;------------------------------------------------------------
                                   1324 ;encounter                 Allocated to registers r5 r6 r7 
                                   1325 ;e                         Allocated to stack - sp -2
                                   1326 ;------------------------------------------------------------
                                   1327 ;	../../../core/net/mac/lpp.c:207: remove_encounter(void *encounter)
                                   1328 ;	-----------------------------------------
                                   1329 ;	 function remove_encounter
                                   1330 ;	-----------------------------------------
      000064                       1331 _remove_encounter:
      000064 05 81            [12] 1332 	inc	sp
      000066 05 81            [12] 1333 	inc	sp
      000068 05 81            [12] 1334 	inc	sp
      00006A AD 82            [24] 1335 	mov	r5,dpl
      00006C AE 83            [24] 1336 	mov	r6,dph
      00006E AF F0            [24] 1337 	mov	r7,b
                                   1338 ;	../../../core/net/mac/lpp.c:209: struct encounter *e = encounter;
      000070 A8 81            [24] 1339 	mov	r0,sp
      000072 18               [12] 1340 	dec	r0
      000073 18               [12] 1341 	dec	r0
      000074 A6 05            [24] 1342 	mov	@r0,ar5
      000076 08               [12] 1343 	inc	r0
      000077 A6 06            [24] 1344 	mov	@r0,ar6
      000079 08               [12] 1345 	inc	r0
      00007A A6 07            [24] 1346 	mov	@r0,ar7
                                   1347 ;	../../../core/net/mac/lpp.c:211: ctimer_stop(&e->remove_timer);
      00007C A8 81            [24] 1348 	mov	r0,sp
      00007E 18               [12] 1349 	dec	r0
      00007F 18               [12] 1350 	dec	r0
      000080 74 0D            [12] 1351 	mov	a,#0x0d
      000082 26               [12] 1352 	add	a,@r0
      000083 FA               [12] 1353 	mov	r2,a
      000084 E4               [12] 1354 	clr	a
      000085 08               [12] 1355 	inc	r0
      000086 36               [12] 1356 	addc	a,@r0
      000087 FB               [12] 1357 	mov	r3,a
      000088 08               [12] 1358 	inc	r0
      000089 86 04            [24] 1359 	mov	ar4,@r0
      00008B 8A 82            [24] 1360 	mov	dpl,r2
      00008D 8B 83            [24] 1361 	mov	dph,r3
      00008F 8C F0            [24] 1362 	mov	b,r4
      000091 78r00            [12] 1363 	mov	r0,#_ctimer_stop
      000093 79s00            [12] 1364 	mov	r1,#(_ctimer_stop >> 8)
      000095 7As00            [12] 1365 	mov	r2,#(_ctimer_stop >> 16)
      000097 12r00r00         [24] 1366 	lcall	__sdcc_banked_call
                                   1367 ;	../../../core/net/mac/lpp.c:212: ctimer_stop(&e->turn_on_radio_timer);
      00009A A8 81            [24] 1368 	mov	r0,sp
      00009C 18               [12] 1369 	dec	r0
      00009D 18               [12] 1370 	dec	r0
      00009E 74 23            [12] 1371 	mov	a,#0x23
      0000A0 26               [12] 1372 	add	a,@r0
      0000A1 FA               [12] 1373 	mov	r2,a
      0000A2 E4               [12] 1374 	clr	a
      0000A3 08               [12] 1375 	inc	r0
      0000A4 36               [12] 1376 	addc	a,@r0
      0000A5 FB               [12] 1377 	mov	r3,a
      0000A6 08               [12] 1378 	inc	r0
      0000A7 86 04            [24] 1379 	mov	ar4,@r0
      0000A9 8A 82            [24] 1380 	mov	dpl,r2
      0000AB 8B 83            [24] 1381 	mov	dph,r3
      0000AD 8C F0            [24] 1382 	mov	b,r4
      0000AF 78r00            [12] 1383 	mov	r0,#_ctimer_stop
      0000B1 79s00            [12] 1384 	mov	r1,#(_ctimer_stop >> 8)
      0000B3 7As00            [12] 1385 	mov	r2,#(_ctimer_stop >> 16)
      0000B5 12r00r00         [24] 1386 	lcall	__sdcc_banked_call
                                   1387 ;	../../../core/net/mac/lpp.c:213: list_remove(encounter_list, e);
      0000B8 A8 81            [24] 1388 	mov	r0,sp
      0000BA 18               [12] 1389 	dec	r0
      0000BB 18               [12] 1390 	dec	r0
      0000BC 86 02            [24] 1391 	mov	ar2,@r0
      0000BE 08               [12] 1392 	inc	r0
      0000BF 86 03            [24] 1393 	mov	ar3,@r0
      0000C1 08               [12] 1394 	inc	r0
      0000C2 86 04            [24] 1395 	mov	ar4,@r0
      0000C4 90r00r1E         [24] 1396 	mov	dptr,#_encounter_list
      0000C7 E0               [24] 1397 	movx	a,@dptr
      0000C8 FD               [12] 1398 	mov	r5,a
      0000C9 A3               [24] 1399 	inc	dptr
      0000CA E0               [24] 1400 	movx	a,@dptr
      0000CB FE               [12] 1401 	mov	r6,a
      0000CC A3               [24] 1402 	inc	dptr
      0000CD E0               [24] 1403 	movx	a,@dptr
      0000CE FF               [12] 1404 	mov	r7,a
      0000CF C0 02            [24] 1405 	push	ar2
      0000D1 C0 03            [24] 1406 	push	ar3
      0000D3 C0 04            [24] 1407 	push	ar4
      0000D5 8D 82            [24] 1408 	mov	dpl,r5
      0000D7 8E 83            [24] 1409 	mov	dph,r6
      0000D9 8F F0            [24] 1410 	mov	b,r7
      0000DB 78r00            [12] 1411 	mov	r0,#_list_remove
      0000DD 79s00            [12] 1412 	mov	r1,#(_list_remove >> 8)
      0000DF 7As00            [12] 1413 	mov	r2,#(_list_remove >> 16)
      0000E1 12r00r00         [24] 1414 	lcall	__sdcc_banked_call
      0000E4 15 81            [12] 1415 	dec	sp
      0000E6 15 81            [12] 1416 	dec	sp
      0000E8 15 81            [12] 1417 	dec	sp
                                   1418 ;	../../../core/net/mac/lpp.c:214: memb_free(&encounter_memb, e);
      0000EA A8 81            [24] 1419 	mov	r0,sp
      0000EC 18               [12] 1420 	dec	r0
      0000ED 18               [12] 1421 	dec	r0
      0000EE 86 05            [24] 1422 	mov	ar5,@r0
      0000F0 08               [12] 1423 	inc	r0
      0000F1 86 06            [24] 1424 	mov	ar6,@r0
      0000F3 08               [12] 1425 	inc	r0
      0000F4 86 07            [24] 1426 	mov	ar7,@r0
      0000F6 C0 05            [24] 1427 	push	ar5
      0000F8 C0 06            [24] 1428 	push	ar6
      0000FA C0 07            [24] 1429 	push	ar7
      0000FC 90r00r21         [24] 1430 	mov	dptr,#_encounter_memb
      0000FF 75 F0 00         [24] 1431 	mov	b,#0x00
      000102 78r00            [12] 1432 	mov	r0,#_memb_free
      000104 79s00            [12] 1433 	mov	r1,#(_memb_free >> 8)
      000106 7As00            [12] 1434 	mov	r2,#(_memb_free >> 16)
      000108 12r00r00         [24] 1435 	lcall	__sdcc_banked_call
      00010B 15 81            [12] 1436 	dec	sp
      00010D 15 81            [12] 1437 	dec	sp
      00010F 15 81            [12] 1438 	dec	sp
                                   1439 ;	../../../core/net/mac/lpp.c:215: }
      000111 15 81            [12] 1440 	dec	sp
      000113 15 81            [12] 1441 	dec	sp
      000115 15 81            [12] 1442 	dec	sp
      000117 02r00r00         [24] 1443 	ljmp	__sdcc_banked_ret
                                   1444 ;------------------------------------------------------------
                                   1445 ;Allocation info for local variables in function 'register_encounter'
                                   1446 ;------------------------------------------------------------
                                   1447 ;time                      Allocated to stack - sp -13
                                   1448 ;neighbor                  Allocated to stack - sp -8
                                   1449 ;e                         Allocated to stack - sp -2
                                   1450 ;sloc0                     Allocated to stack - sp -5
                                   1451 ;------------------------------------------------------------
                                   1452 ;	../../../core/net/mac/lpp.c:218: register_encounter(rimeaddr_t *neighbor, clock_time_t time)
                                   1453 ;	-----------------------------------------
                                   1454 ;	 function register_encounter
                                   1455 ;	-----------------------------------------
      00011A                       1456 _register_encounter:
      00011A C0 82            [24] 1457 	push	dpl
      00011C C0 83            [24] 1458 	push	dph
      00011E C0 F0            [24] 1459 	push	b
      000120 E5 81            [12] 1460 	mov	a,sp
      000122 24 06            [12] 1461 	add	a,#0x06
      000124 F5 81            [12] 1462 	mov	sp,a
                                   1463 ;	../../../core/net/mac/lpp.c:223: for(e = list_head(encounter_list); e != NULL; e = list_item_next(e)) {
      000126 90r00r1E         [24] 1464 	mov	dptr,#_encounter_list
      000129 E0               [24] 1465 	movx	a,@dptr
      00012A FA               [12] 1466 	mov	r2,a
      00012B A3               [24] 1467 	inc	dptr
      00012C E0               [24] 1468 	movx	a,@dptr
      00012D FB               [12] 1469 	mov	r3,a
      00012E A3               [24] 1470 	inc	dptr
      00012F E0               [24] 1471 	movx	a,@dptr
      000130 FC               [12] 1472 	mov	r4,a
      000131 8A 82            [24] 1473 	mov	dpl,r2
      000133 8B 83            [24] 1474 	mov	dph,r3
      000135 8C F0            [24] 1475 	mov	b,r4
      000137 78r00            [12] 1476 	mov	r0,#_list_head
      000139 79s00            [12] 1477 	mov	r1,#(_list_head >> 8)
      00013B 7As00            [12] 1478 	mov	r2,#(_list_head >> 16)
      00013D 12r00r00         [24] 1479 	lcall	__sdcc_banked_call
      000140 AA 82            [24] 1480 	mov	r2,dpl
      000142 AB 83            [24] 1481 	mov	r3,dph
      000144 AC F0            [24] 1482 	mov	r4,b
      000146                       1483 00109$:
      000146 EA               [12] 1484 	mov	a,r2
      000147 4B               [12] 1485 	orl	a,r3
      000148 70 03            [24] 1486 	jnz	00138$
      00014A 02r02r2D         [24] 1487 	ljmp	00103$
      00014D                       1488 00138$:
                                   1489 ;	../../../core/net/mac/lpp.c:224: if(rimeaddr_cmp(neighbor, &e->neighbor)) {
      00014D 74 03            [12] 1490 	mov	a,#0x03
      00014F 2A               [12] 1491 	add	a,r2
      000150 FD               [12] 1492 	mov	r5,a
      000151 E4               [12] 1493 	clr	a
      000152 3B               [12] 1494 	addc	a,r3
      000153 FE               [12] 1495 	mov	r6,a
      000154 8C 07            [24] 1496 	mov	ar7,r4
      000156 C0 04            [24] 1497 	push	ar4
      000158 C0 03            [24] 1498 	push	ar3
      00015A C0 02            [24] 1499 	push	ar2
      00015C C0 05            [24] 1500 	push	ar5
      00015E C0 06            [24] 1501 	push	ar6
      000160 C0 07            [24] 1502 	push	ar7
      000162 E5 81            [12] 1503 	mov	a,sp
      000164 24 F2            [12] 1504 	add	a,#0xf2
      000166 F8               [12] 1505 	mov	r0,a
      000167 86 82            [24] 1506 	mov	dpl,@r0
      000169 08               [12] 1507 	inc	r0
      00016A 86 83            [24] 1508 	mov	dph,@r0
      00016C 08               [12] 1509 	inc	r0
      00016D 86 F0            [24] 1510 	mov	b,@r0
      00016F 78r00            [12] 1511 	mov	r0,#_rimeaddr_cmp
      000171 79s00            [12] 1512 	mov	r1,#(_rimeaddr_cmp >> 8)
      000173 7As00            [12] 1513 	mov	r2,#(_rimeaddr_cmp >> 16)
      000175 12r00r00         [24] 1514 	lcall	__sdcc_banked_call
      000178 AE 82            [24] 1515 	mov	r6,dpl
      00017A AF 83            [24] 1516 	mov	r7,dph
      00017C 15 81            [12] 1517 	dec	sp
      00017E 15 81            [12] 1518 	dec	sp
      000180 15 81            [12] 1519 	dec	sp
      000182 D0 02            [24] 1520 	pop	ar2
      000184 D0 03            [24] 1521 	pop	ar3
      000186 D0 04            [24] 1522 	pop	ar4
      000188 EE               [12] 1523 	mov	a,r6
      000189 4F               [12] 1524 	orl	a,r7
      00018A 70 03            [24] 1525 	jnz	00139$
      00018C 02r02r09         [24] 1526 	ljmp	00110$
      00018F                       1527 00139$:
                                   1528 ;	../../../core/net/mac/lpp.c:225: e->time = time;
      00018F 74 0B            [12] 1529 	mov	a,#0x0b
      000191 2A               [12] 1530 	add	a,r2
      000192 FD               [12] 1531 	mov	r5,a
      000193 E4               [12] 1532 	clr	a
      000194 3B               [12] 1533 	addc	a,r3
      000195 FE               [12] 1534 	mov	r6,a
      000196 8C 07            [24] 1535 	mov	ar7,r4
      000198 8D 82            [24] 1536 	mov	dpl,r5
      00019A 8E 83            [24] 1537 	mov	dph,r6
      00019C 8F F0            [24] 1538 	mov	b,r7
      00019E E5 81            [12] 1539 	mov	a,sp
      0001A0 24 F3            [12] 1540 	add	a,#0xf3
      0001A2 F8               [12] 1541 	mov	r0,a
      0001A3 E6               [12] 1542 	mov	a,@r0
      0001A4 12r00r00         [24] 1543 	lcall	__gptrput
      0001A7 A3               [24] 1544 	inc	dptr
      0001A8 08               [12] 1545 	inc	r0
      0001A9 E6               [12] 1546 	mov	a,@r0
      0001AA 12r00r00         [24] 1547 	lcall	__gptrput
                                   1548 ;	../../../core/net/mac/lpp.c:226: ctimer_set(&e->remove_timer, ENCOUNTER_LIFETIME, remove_encounter, e);
      0001AD E5 81            [12] 1549 	mov	a,sp
      0001AF 24 FB            [12] 1550 	add	a,#0xfb
      0001B1 F8               [12] 1551 	mov	r0,a
      0001B2 A6 02            [24] 1552 	mov	@r0,ar2
      0001B4 08               [12] 1553 	inc	r0
      0001B5 A6 03            [24] 1554 	mov	@r0,ar3
      0001B7 08               [12] 1555 	inc	r0
      0001B8 A6 04            [24] 1556 	mov	@r0,ar4
      0001BA 74 0D            [12] 1557 	mov	a,#0x0d
      0001BC 2A               [12] 1558 	add	a,r2
      0001BD FD               [12] 1559 	mov	r5,a
      0001BE E4               [12] 1560 	clr	a
      0001BF 3B               [12] 1561 	addc	a,r3
      0001C0 FE               [12] 1562 	mov	r6,a
      0001C1 8C 07            [24] 1563 	mov	ar7,r4
      0001C3 C0 04            [24] 1564 	push	ar4
      0001C5 C0 03            [24] 1565 	push	ar3
      0001C7 C0 02            [24] 1566 	push	ar2
      0001C9 E5 81            [12] 1567 	mov	a,sp
      0001CB 24 F8            [12] 1568 	add	a,#0xf8
      0001CD F8               [12] 1569 	mov	r0,a
      0001CE E6               [12] 1570 	mov	a,@r0
      0001CF C0 E0            [24] 1571 	push	acc
      0001D1 08               [12] 1572 	inc	r0
      0001D2 E6               [12] 1573 	mov	a,@r0
      0001D3 C0 E0            [24] 1574 	push	acc
      0001D5 08               [12] 1575 	inc	r0
      0001D6 E6               [12] 1576 	mov	a,@r0
      0001D7 C0 E0            [24] 1577 	push	acc
      0001D9 74r64            [12] 1578 	mov	a,#_remove_encounter
      0001DB C0 E0            [24] 1579 	push	acc
      0001DD 74s00            [12] 1580 	mov	a,#(_remove_encounter >> 8)
      0001DF C0 E0            [24] 1581 	push	acc
      0001E1 74s00            [12] 1582 	mov	a,#(_remove_encounter >> 16)
      0001E3 C0 E0            [24] 1583 	push	acc
      0001E5 74 F0            [12] 1584 	mov	a,#0xf0
      0001E7 C0 E0            [24] 1585 	push	acc
      0001E9 E4               [12] 1586 	clr	a
      0001EA C0 E0            [24] 1587 	push	acc
      0001EC 8D 82            [24] 1588 	mov	dpl,r5
      0001EE 8E 83            [24] 1589 	mov	dph,r6
      0001F0 8F F0            [24] 1590 	mov	b,r7
      0001F2 78r00            [12] 1591 	mov	r0,#_ctimer_set
      0001F4 79s00            [12] 1592 	mov	r1,#(_ctimer_set >> 8)
      0001F6 7As00            [12] 1593 	mov	r2,#(_ctimer_set >> 16)
      0001F8 12r00r00         [24] 1594 	lcall	__sdcc_banked_call
      0001FB E5 81            [12] 1595 	mov	a,sp
      0001FD 24 F8            [12] 1596 	add	a,#0xf8
      0001FF F5 81            [12] 1597 	mov	sp,a
      000201 D0 02            [24] 1598 	pop	ar2
      000203 D0 03            [24] 1599 	pop	ar3
      000205 D0 04            [24] 1600 	pop	ar4
                                   1601 ;	../../../core/net/mac/lpp.c:227: break;
      000207 80 24            [24] 1602 	sjmp	00103$
      000209                       1603 00110$:
                                   1604 ;	../../../core/net/mac/lpp.c:223: for(e = list_head(encounter_list); e != NULL; e = list_item_next(e)) {
      000209 8A 05            [24] 1605 	mov	ar5,r2
      00020B 8B 06            [24] 1606 	mov	ar6,r3
      00020D 8C 07            [24] 1607 	mov	ar7,r4
      00020F 8D 82            [24] 1608 	mov	dpl,r5
      000211 8E 83            [24] 1609 	mov	dph,r6
      000213 8F F0            [24] 1610 	mov	b,r7
      000215 78r00            [12] 1611 	mov	r0,#_list_item_next
      000217 79s00            [12] 1612 	mov	r1,#(_list_item_next >> 8)
      000219 7As00            [12] 1613 	mov	r2,#(_list_item_next >> 16)
      00021B 12r00r00         [24] 1614 	lcall	__sdcc_banked_call
      00021E AD 82            [24] 1615 	mov	r5,dpl
      000220 AE 83            [24] 1616 	mov	r6,dph
      000222 AF F0            [24] 1617 	mov	r7,b
      000224 8D 02            [24] 1618 	mov	ar2,r5
      000226 8E 03            [24] 1619 	mov	ar3,r6
      000228 8F 04            [24] 1620 	mov	ar4,r7
      00022A 02r01r46         [24] 1621 	ljmp	00109$
      00022D                       1622 00103$:
                                   1623 ;	../../../core/net/mac/lpp.c:231: if(e == NULL) {
      00022D EA               [12] 1624 	mov	a,r2
      00022E 4B               [12] 1625 	orl	a,r3
      00022F 60 03            [24] 1626 	jz	00140$
      000231 02r03r34         [24] 1627 	ljmp	00111$
      000234                       1628 00140$:
                                   1629 ;	../../../core/net/mac/lpp.c:232: e = memb_alloc(&encounter_memb);
      000234 90r00r21         [24] 1630 	mov	dptr,#_encounter_memb
      000237 75 F0 00         [24] 1631 	mov	b,#0x00
      00023A 78r00            [12] 1632 	mov	r0,#_memb_alloc
      00023C 79s00            [12] 1633 	mov	r1,#(_memb_alloc >> 8)
      00023E 7As00            [12] 1634 	mov	r2,#(_memb_alloc >> 16)
      000240 12r00r00         [24] 1635 	lcall	__sdcc_banked_call
      000243 AD 82            [24] 1636 	mov	r5,dpl
      000245 AE 83            [24] 1637 	mov	r6,dph
      000247 AF F0            [24] 1638 	mov	r7,b
      000249 A8 81            [24] 1639 	mov	r0,sp
      00024B 18               [12] 1640 	dec	r0
      00024C 18               [12] 1641 	dec	r0
      00024D A6 05            [24] 1642 	mov	@r0,ar5
      00024F 08               [12] 1643 	inc	r0
      000250 A6 06            [24] 1644 	mov	@r0,ar6
      000252 08               [12] 1645 	inc	r0
      000253 A6 07            [24] 1646 	mov	@r0,ar7
                                   1647 ;	../../../core/net/mac/lpp.c:233: if(e == NULL) {
      000255 A8 81            [24] 1648 	mov	r0,sp
      000257 18               [12] 1649 	dec	r0
      000258 18               [12] 1650 	dec	r0
      000259 E6               [12] 1651 	mov	a,@r0
      00025A 08               [12] 1652 	inc	r0
      00025B 46               [12] 1653 	orl	a,@r0
      00025C 70 03            [24] 1654 	jnz	00105$
                                   1655 ;	../../../core/net/mac/lpp.c:235: return;
      00025E 02r03r34         [24] 1656 	ljmp	00111$
      000261                       1657 00105$:
                                   1658 ;	../../../core/net/mac/lpp.c:237: rimeaddr_copy(&e->neighbor, neighbor);
      000261 A8 81            [24] 1659 	mov	r0,sp
      000263 18               [12] 1660 	dec	r0
      000264 18               [12] 1661 	dec	r0
      000265 74 03            [12] 1662 	mov	a,#0x03
      000267 26               [12] 1663 	add	a,@r0
      000268 FA               [12] 1664 	mov	r2,a
      000269 E4               [12] 1665 	clr	a
      00026A 08               [12] 1666 	inc	r0
      00026B 36               [12] 1667 	addc	a,@r0
      00026C FB               [12] 1668 	mov	r3,a
      00026D 08               [12] 1669 	inc	r0
      00026E 86 04            [24] 1670 	mov	ar4,@r0
      000270 E5 81            [12] 1671 	mov	a,sp
      000272 24 F8            [12] 1672 	add	a,#0xf8
      000274 F8               [12] 1673 	mov	r0,a
      000275 E6               [12] 1674 	mov	a,@r0
      000276 C0 E0            [24] 1675 	push	acc
      000278 08               [12] 1676 	inc	r0
      000279 E6               [12] 1677 	mov	a,@r0
      00027A C0 E0            [24] 1678 	push	acc
      00027C 08               [12] 1679 	inc	r0
      00027D E6               [12] 1680 	mov	a,@r0
      00027E C0 E0            [24] 1681 	push	acc
      000280 8A 82            [24] 1682 	mov	dpl,r2
      000282 8B 83            [24] 1683 	mov	dph,r3
      000284 8C F0            [24] 1684 	mov	b,r4
      000286 78r00            [12] 1685 	mov	r0,#_rimeaddr_copy
      000288 79s00            [12] 1686 	mov	r1,#(_rimeaddr_copy >> 8)
      00028A 7As00            [12] 1687 	mov	r2,#(_rimeaddr_copy >> 16)
      00028C 12r00r00         [24] 1688 	lcall	__sdcc_banked_call
      00028F 15 81            [12] 1689 	dec	sp
      000291 15 81            [12] 1690 	dec	sp
      000293 15 81            [12] 1691 	dec	sp
                                   1692 ;	../../../core/net/mac/lpp.c:238: e->time = time;
      000295 A8 81            [24] 1693 	mov	r0,sp
      000297 18               [12] 1694 	dec	r0
      000298 18               [12] 1695 	dec	r0
      000299 74 0B            [12] 1696 	mov	a,#0x0b
      00029B 26               [12] 1697 	add	a,@r0
      00029C FA               [12] 1698 	mov	r2,a
      00029D E4               [12] 1699 	clr	a
      00029E 08               [12] 1700 	inc	r0
      00029F 36               [12] 1701 	addc	a,@r0
      0002A0 FB               [12] 1702 	mov	r3,a
      0002A1 08               [12] 1703 	inc	r0
      0002A2 86 04            [24] 1704 	mov	ar4,@r0
      0002A4 8A 82            [24] 1705 	mov	dpl,r2
      0002A6 8B 83            [24] 1706 	mov	dph,r3
      0002A8 8C F0            [24] 1707 	mov	b,r4
      0002AA E5 81            [12] 1708 	mov	a,sp
      0002AC 24 F3            [12] 1709 	add	a,#0xf3
      0002AE F8               [12] 1710 	mov	r0,a
      0002AF E6               [12] 1711 	mov	a,@r0
      0002B0 12r00r00         [24] 1712 	lcall	__gptrput
      0002B3 A3               [24] 1713 	inc	dptr
      0002B4 08               [12] 1714 	inc	r0
      0002B5 E6               [12] 1715 	mov	a,@r0
      0002B6 12r00r00         [24] 1716 	lcall	__gptrput
                                   1717 ;	../../../core/net/mac/lpp.c:239: ctimer_set(&e->remove_timer, ENCOUNTER_LIFETIME, remove_encounter, e);
      0002B9 A8 81            [24] 1718 	mov	r0,sp
      0002BB 18               [12] 1719 	dec	r0
      0002BC 18               [12] 1720 	dec	r0
      0002BD 86 02            [24] 1721 	mov	ar2,@r0
      0002BF 08               [12] 1722 	inc	r0
      0002C0 86 03            [24] 1723 	mov	ar3,@r0
      0002C2 08               [12] 1724 	inc	r0
      0002C3 86 04            [24] 1725 	mov	ar4,@r0
      0002C5 A8 81            [24] 1726 	mov	r0,sp
      0002C7 18               [12] 1727 	dec	r0
      0002C8 18               [12] 1728 	dec	r0
      0002C9 74 0D            [12] 1729 	mov	a,#0x0d
      0002CB 26               [12] 1730 	add	a,@r0
      0002CC FD               [12] 1731 	mov	r5,a
      0002CD E4               [12] 1732 	clr	a
      0002CE 08               [12] 1733 	inc	r0
      0002CF 36               [12] 1734 	addc	a,@r0
      0002D0 FE               [12] 1735 	mov	r6,a
      0002D1 08               [12] 1736 	inc	r0
      0002D2 86 07            [24] 1737 	mov	ar7,@r0
      0002D4 C0 02            [24] 1738 	push	ar2
      0002D6 C0 03            [24] 1739 	push	ar3
      0002D8 C0 04            [24] 1740 	push	ar4
      0002DA 74r64            [12] 1741 	mov	a,#_remove_encounter
      0002DC C0 E0            [24] 1742 	push	acc
      0002DE 74s00            [12] 1743 	mov	a,#(_remove_encounter >> 8)
      0002E0 C0 E0            [24] 1744 	push	acc
      0002E2 74s00            [12] 1745 	mov	a,#(_remove_encounter >> 16)
      0002E4 C0 E0            [24] 1746 	push	acc
      0002E6 74 F0            [12] 1747 	mov	a,#0xf0
      0002E8 C0 E0            [24] 1748 	push	acc
      0002EA E4               [12] 1749 	clr	a
      0002EB C0 E0            [24] 1750 	push	acc
      0002ED 8D 82            [24] 1751 	mov	dpl,r5
      0002EF 8E 83            [24] 1752 	mov	dph,r6
      0002F1 8F F0            [24] 1753 	mov	b,r7
      0002F3 78r00            [12] 1754 	mov	r0,#_ctimer_set
      0002F5 79s00            [12] 1755 	mov	r1,#(_ctimer_set >> 8)
      0002F7 7As00            [12] 1756 	mov	r2,#(_ctimer_set >> 16)
      0002F9 12r00r00         [24] 1757 	lcall	__sdcc_banked_call
      0002FC E5 81            [12] 1758 	mov	a,sp
      0002FE 24 F8            [12] 1759 	add	a,#0xf8
      000300 F5 81            [12] 1760 	mov	sp,a
                                   1761 ;	../../../core/net/mac/lpp.c:240: list_add(encounter_list, e);
      000302 A8 81            [24] 1762 	mov	r0,sp
      000304 18               [12] 1763 	dec	r0
      000305 18               [12] 1764 	dec	r0
      000306 86 05            [24] 1765 	mov	ar5,@r0
      000308 08               [12] 1766 	inc	r0
      000309 86 06            [24] 1767 	mov	ar6,@r0
      00030B 08               [12] 1768 	inc	r0
      00030C 86 07            [24] 1769 	mov	ar7,@r0
      00030E 90r00r1E         [24] 1770 	mov	dptr,#_encounter_list
      000311 E0               [24] 1771 	movx	a,@dptr
      000312 FA               [12] 1772 	mov	r2,a
      000313 A3               [24] 1773 	inc	dptr
      000314 E0               [24] 1774 	movx	a,@dptr
      000315 FB               [12] 1775 	mov	r3,a
      000316 A3               [24] 1776 	inc	dptr
      000317 E0               [24] 1777 	movx	a,@dptr
      000318 FC               [12] 1778 	mov	r4,a
      000319 C0 05            [24] 1779 	push	ar5
      00031B C0 06            [24] 1780 	push	ar6
      00031D C0 07            [24] 1781 	push	ar7
      00031F 8A 82            [24] 1782 	mov	dpl,r2
      000321 8B 83            [24] 1783 	mov	dph,r3
      000323 8C F0            [24] 1784 	mov	b,r4
      000325 78r00            [12] 1785 	mov	r0,#_list_add
      000327 79s00            [12] 1786 	mov	r1,#(_list_add >> 8)
      000329 7As00            [12] 1787 	mov	r2,#(_list_add >> 16)
      00032B 12r00r00         [24] 1788 	lcall	__sdcc_banked_call
      00032E 15 81            [12] 1789 	dec	sp
      000330 15 81            [12] 1790 	dec	sp
      000332 15 81            [12] 1791 	dec	sp
      000334                       1792 00111$:
                                   1793 ;	../../../core/net/mac/lpp.c:242: }
      000334 E5 81            [12] 1794 	mov	a,sp
      000336 24 F7            [12] 1795 	add	a,#0xf7
      000338 F5 81            [12] 1796 	mov	sp,a
      00033A 02r00r00         [24] 1797 	ljmp	__sdcc_banked_ret
                                   1798 ;------------------------------------------------------------
                                   1799 ;Allocation info for local variables in function 'stream_off'
                                   1800 ;------------------------------------------------------------
                                   1801 ;dummy                     Allocated to registers 
                                   1802 ;------------------------------------------------------------
                                   1803 ;	../../../core/net/mac/lpp.c:261: stream_off(void *dummy)
                                   1804 ;	-----------------------------------------
                                   1805 ;	 function stream_off
                                   1806 ;	-----------------------------------------
      00033D                       1807 _stream_off:
                                   1808 ;	../../../core/net/mac/lpp.c:263: is_streaming = 0;
      00033D 90r00r2B         [24] 1809 	mov	dptr,#_is_streaming
      000340 E4               [12] 1810 	clr	a
      000341 F0               [24] 1811 	movx	@dptr,a
                                   1812 ;	../../../core/net/mac/lpp.c:264: }
      000342 02r00r00         [24] 1813 	ljmp	__sdcc_banked_ret
                                   1814 ;------------------------------------------------------------
                                   1815 ;Allocation info for local variables in function 'turn_radio_on_for_neighbor'
                                   1816 ;------------------------------------------------------------
                                   1817 ;i                         Allocated to stack - sp -5
                                   1818 ;neighbor                  Allocated to registers r5 r6 r7 
                                   1819 ;sloc0                     Allocated to stack - sp +4
                                   1820 ;------------------------------------------------------------
                                   1821 ;	../../../core/net/mac/lpp.c:276: turn_radio_on_for_neighbor(rimeaddr_t *neighbor, struct queue_list_item *i)
                                   1822 ;	-----------------------------------------
                                   1823 ;	 function turn_radio_on_for_neighbor
                                   1824 ;	-----------------------------------------
      000345                       1825 _turn_radio_on_for_neighbor:
      000345 AD 82            [24] 1826 	mov	r5,dpl
      000347 AE 83            [24] 1827 	mov	r6,dph
      000349 AF F0            [24] 1828 	mov	r7,b
                                   1829 ;	../../../core/net/mac/lpp.c:280: if(packetbuf_attr(PACKETBUF_ATTR_PACKET_TYPE) ==
      00034B 75 82 0E         [24] 1830 	mov	dpl,#0x0e
      00034E C0 07            [24] 1831 	push	ar7
      000350 C0 06            [24] 1832 	push	ar6
      000352 C0 05            [24] 1833 	push	ar5
      000354 78r00            [12] 1834 	mov	r0,#_packetbuf_attr
      000356 79s00            [12] 1835 	mov	r1,#(_packetbuf_attr >> 8)
      000358 7As00            [12] 1836 	mov	r2,#(_packetbuf_attr >> 16)
      00035A 12r00r00         [24] 1837 	lcall	__sdcc_banked_call
      00035D AB 82            [24] 1838 	mov	r3,dpl
      00035F AC 83            [24] 1839 	mov	r4,dph
      000361 D0 05            [24] 1840 	pop	ar5
      000363 D0 06            [24] 1841 	pop	ar6
      000365 D0 07            [24] 1842 	pop	ar7
      000367 BB 02 77         [24] 1843 	cjne	r3,#0x02,00102$
      00036A BC 00 74         [24] 1844 	cjne	r4,#0x00,00102$
                                   1845 ;	../../../core/net/mac/lpp.c:282: is_streaming = 1;
      00036D 90r00r2B         [24] 1846 	mov	dptr,#_is_streaming
      000370 74 01            [12] 1847 	mov	a,#0x01
      000372 F0               [24] 1848 	movx	@dptr,a
                                   1849 ;	../../../core/net/mac/lpp.c:283: turn_radio_on();
      000373 78r00            [12] 1850 	mov	r0,#_turn_radio_on
      000375 79s00            [12] 1851 	mov	r1,#(_turn_radio_on >> 8)
      000377 7As00            [12] 1852 	mov	r2,#(_turn_radio_on >> 16)
      000379 12r00r00         [24] 1853 	lcall	__sdcc_banked_call
                                   1854 ;	../../../core/net/mac/lpp.c:284: list_add(queued_packets_list, i);
      00037C E5 81            [12] 1855 	mov	a,sp
      00037E 24 FB            [12] 1856 	add	a,#0xfb
      000380 F8               [12] 1857 	mov	r0,a
      000381 86 07            [24] 1858 	mov	ar7,@r0
      000383 08               [12] 1859 	inc	r0
      000384 86 06            [24] 1860 	mov	ar6,@r0
      000386 08               [12] 1861 	inc	r0
      000387 86 05            [24] 1862 	mov	ar5,@r0
      000389 90r00r0E         [24] 1863 	mov	dptr,#_queued_packets_list
      00038C E0               [24] 1864 	movx	a,@dptr
      00038D FA               [12] 1865 	mov	r2,a
      00038E A3               [24] 1866 	inc	dptr
      00038F E0               [24] 1867 	movx	a,@dptr
      000390 FB               [12] 1868 	mov	r3,a
      000391 A3               [24] 1869 	inc	dptr
      000392 E0               [24] 1870 	movx	a,@dptr
      000393 FC               [12] 1871 	mov	r4,a
      000394 C0 07            [24] 1872 	push	ar7
      000396 C0 06            [24] 1873 	push	ar6
      000398 C0 05            [24] 1874 	push	ar5
      00039A 8A 82            [24] 1875 	mov	dpl,r2
      00039C 8B 83            [24] 1876 	mov	dph,r3
      00039E 8C F0            [24] 1877 	mov	b,r4
      0003A0 78r00            [12] 1878 	mov	r0,#_list_add
      0003A2 79s00            [12] 1879 	mov	r1,#(_list_add >> 8)
      0003A4 7As00            [12] 1880 	mov	r2,#(_list_add >> 16)
      0003A6 12r00r00         [24] 1881 	lcall	__sdcc_banked_call
      0003A9 15 81            [12] 1882 	dec	sp
      0003AB 15 81            [12] 1883 	dec	sp
      0003AD 15 81            [12] 1884 	dec	sp
                                   1885 ;	../../../core/net/mac/lpp.c:285: ctimer_set(&stream_off_timer, STREAM_OFF_TIME,
      0003AF E4               [12] 1886 	clr	a
      0003B0 C0 E0            [24] 1887 	push	acc
      0003B2 C0 E0            [24] 1888 	push	acc
      0003B4 C0 E0            [24] 1889 	push	acc
      0003B6 74r3D            [12] 1890 	mov	a,#_stream_off
      0003B8 C0 E0            [24] 1891 	push	acc
      0003BA 74s03            [12] 1892 	mov	a,#(_stream_off >> 8)
      0003BC C0 E0            [24] 1893 	push	acc
      0003BE 74s00            [12] 1894 	mov	a,#(_stream_off >> 16)
      0003C0 C0 E0            [24] 1895 	push	acc
      0003C2 74 40            [12] 1896 	mov	a,#0x40
      0003C4 C0 E0            [24] 1897 	push	acc
      0003C6 E4               [12] 1898 	clr	a
      0003C7 C0 E0            [24] 1899 	push	acc
      0003C9 90r01rA3         [24] 1900 	mov	dptr,#_stream_off_timer
      0003CC 75 F0 00         [24] 1901 	mov	b,#0x00
      0003CF 78r00            [12] 1902 	mov	r0,#_ctimer_set
      0003D1 79s00            [12] 1903 	mov	r1,#(_ctimer_set >> 8)
      0003D3 7As00            [12] 1904 	mov	r2,#(_ctimer_set >> 16)
      0003D5 12r00r00         [24] 1905 	lcall	__sdcc_banked_call
      0003D8 E5 81            [12] 1906 	mov	a,sp
      0003DA 24 F8            [12] 1907 	add	a,#0xf8
      0003DC F5 81            [12] 1908 	mov	sp,a
                                   1909 ;	../../../core/net/mac/lpp.c:287: return;
      0003DE 02r00r00         [24] 1910 	ljmp	__sdcc_banked_ret
      0003E1                       1911 00102$:
                                   1912 ;	../../../core/net/mac/lpp.c:291: if(rimeaddr_cmp(neighbor, &rimeaddr_null)) {
      0003E1 74r00            [12] 1913 	mov	a,#_rimeaddr_null
      0003E3 C0 E0            [24] 1914 	push	acc
      0003E5 74s00            [12] 1915 	mov	a,#(_rimeaddr_null >> 8)
      0003E7 C0 E0            [24] 1916 	push	acc
      0003E9 74 80            [12] 1917 	mov	a,#0x80
      0003EB C0 E0            [24] 1918 	push	acc
      0003ED 8D 82            [24] 1919 	mov	dpl,r5
      0003EF 8E 83            [24] 1920 	mov	dph,r6
      0003F1 8F F0            [24] 1921 	mov	b,r7
      0003F3 78r00            [12] 1922 	mov	r0,#_rimeaddr_cmp
      0003F5 79s00            [12] 1923 	mov	r1,#(_rimeaddr_cmp >> 8)
      0003F7 7As00            [12] 1924 	mov	r2,#(_rimeaddr_cmp >> 16)
      0003F9 12r00r00         [24] 1925 	lcall	__sdcc_banked_call
      0003FC AE 82            [24] 1926 	mov	r6,dpl
      0003FE AF 83            [24] 1927 	mov	r7,dph
      000400 15 81            [12] 1928 	dec	sp
      000402 15 81            [12] 1929 	dec	sp
      000404 15 81            [12] 1930 	dec	sp
      000406 EE               [12] 1931 	mov	a,r6
      000407 4F               [12] 1932 	orl	a,r7
      000408 60 3E            [24] 1933 	jz	00104$
                                   1934 ;	../../../core/net/mac/lpp.c:295: turn_radio_on();
      00040A 78r00            [12] 1935 	mov	r0,#_turn_radio_on
      00040C 79s00            [12] 1936 	mov	r1,#(_turn_radio_on >> 8)
      00040E 7As00            [12] 1937 	mov	r2,#(_turn_radio_on >> 16)
      000410 12r00r00         [24] 1938 	lcall	__sdcc_banked_call
                                   1939 ;	../../../core/net/mac/lpp.c:297: list_add(queued_packets_list, i);
      000413 E5 81            [12] 1940 	mov	a,sp
      000415 24 FB            [12] 1941 	add	a,#0xfb
      000417 F8               [12] 1942 	mov	r0,a
      000418 86 05            [24] 1943 	mov	ar5,@r0
      00041A 08               [12] 1944 	inc	r0
      00041B 86 06            [24] 1945 	mov	ar6,@r0
      00041D 08               [12] 1946 	inc	r0
      00041E 86 07            [24] 1947 	mov	ar7,@r0
      000420 90r00r0E         [24] 1948 	mov	dptr,#_queued_packets_list
      000423 E0               [24] 1949 	movx	a,@dptr
      000424 FA               [12] 1950 	mov	r2,a
      000425 A3               [24] 1951 	inc	dptr
      000426 E0               [24] 1952 	movx	a,@dptr
      000427 FB               [12] 1953 	mov	r3,a
      000428 A3               [24] 1954 	inc	dptr
      000429 E0               [24] 1955 	movx	a,@dptr
      00042A FC               [12] 1956 	mov	r4,a
      00042B C0 05            [24] 1957 	push	ar5
      00042D C0 06            [24] 1958 	push	ar6
      00042F C0 07            [24] 1959 	push	ar7
      000431 8A 82            [24] 1960 	mov	dpl,r2
      000433 8B 83            [24] 1961 	mov	dph,r3
      000435 8C F0            [24] 1962 	mov	b,r4
      000437 78r00            [12] 1963 	mov	r0,#_list_add
      000439 79s00            [12] 1964 	mov	r1,#(_list_add >> 8)
      00043B 7As00            [12] 1965 	mov	r2,#(_list_add >> 16)
      00043D 12r00r00         [24] 1966 	lcall	__sdcc_banked_call
      000440 15 81            [12] 1967 	dec	sp
      000442 15 81            [12] 1968 	dec	sp
      000444 15 81            [12] 1969 	dec	sp
                                   1970 ;	../../../core/net/mac/lpp.c:298: return;
      000446 80 3C            [24] 1971 	sjmp	00105$
      000448                       1972 00104$:
                                   1973 ;	../../../core/net/mac/lpp.c:346: turn_radio_on();
      000448 78r00            [12] 1974 	mov	r0,#_turn_radio_on
      00044A 79s00            [12] 1975 	mov	r1,#(_turn_radio_on >> 8)
      00044C 7As00            [12] 1976 	mov	r2,#(_turn_radio_on >> 16)
      00044E 12r00r00         [24] 1977 	lcall	__sdcc_banked_call
                                   1978 ;	../../../core/net/mac/lpp.c:347: list_add(queued_packets_list, i);
      000451 E5 81            [12] 1979 	mov	a,sp
      000453 24 FB            [12] 1980 	add	a,#0xfb
      000455 F8               [12] 1981 	mov	r0,a
      000456 86 05            [24] 1982 	mov	ar5,@r0
      000458 08               [12] 1983 	inc	r0
      000459 86 06            [24] 1984 	mov	ar6,@r0
      00045B 08               [12] 1985 	inc	r0
      00045C 86 07            [24] 1986 	mov	ar7,@r0
      00045E 90r00r0E         [24] 1987 	mov	dptr,#_queued_packets_list
      000461 E0               [24] 1988 	movx	a,@dptr
      000462 FA               [12] 1989 	mov	r2,a
      000463 A3               [24] 1990 	inc	dptr
      000464 E0               [24] 1991 	movx	a,@dptr
      000465 FB               [12] 1992 	mov	r3,a
      000466 A3               [24] 1993 	inc	dptr
      000467 E0               [24] 1994 	movx	a,@dptr
      000468 FC               [12] 1995 	mov	r4,a
      000469 C0 05            [24] 1996 	push	ar5
      00046B C0 06            [24] 1997 	push	ar6
      00046D C0 07            [24] 1998 	push	ar7
      00046F 8A 82            [24] 1999 	mov	dpl,r2
      000471 8B 83            [24] 2000 	mov	dph,r3
      000473 8C F0            [24] 2001 	mov	b,r4
      000475 78r00            [12] 2002 	mov	r0,#_list_add
      000477 79s00            [12] 2003 	mov	r1,#(_list_add >> 8)
      000479 7As00            [12] 2004 	mov	r2,#(_list_add >> 16)
      00047B 12r00r00         [24] 2005 	lcall	__sdcc_banked_call
      00047E 15 81            [12] 2006 	dec	sp
      000480 15 81            [12] 2007 	dec	sp
      000482 15 81            [12] 2008 	dec	sp
                                   2009 ;	../../../core/net/mac/lpp.c:348: return;
      000484                       2010 00105$:
                                   2011 ;	../../../core/net/mac/lpp.c:349: }
      000484 02r00r00         [24] 2012 	ljmp	__sdcc_banked_ret
                                   2013 ;------------------------------------------------------------
                                   2014 ;Allocation info for local variables in function 'remove_queued_packet'
                                   2015 ;------------------------------------------------------------
                                   2016 ;tx_ok                     Allocated to stack - sp -11
                                   2017 ;i                         Allocated to stack - sp -7
                                   2018 ;sent                      Allocated to registers r5 r6 r7 
                                   2019 ;ptr                       Allocated to stack - sp -4
                                   2020 ;num_transmissions         Allocated to stack - sp -1
                                   2021 ;status                    Allocated to registers r3 r4 
                                   2022 ;------------------------------------------------------------
                                   2023 ;	../../../core/net/mac/lpp.c:352: remove_queued_packet(struct queue_list_item *i, uint8_t tx_ok)
                                   2024 ;	-----------------------------------------
                                   2025 ;	 function remove_queued_packet
                                   2026 ;	-----------------------------------------
      000487                       2027 _remove_queued_packet:
      000487 C0 82            [24] 2028 	push	dpl
      000489 C0 83            [24] 2029 	push	dph
      00048B C0 F0            [24] 2030 	push	b
      00048D E5 81            [12] 2031 	mov	a,sp
      00048F 24 05            [12] 2032 	add	a,#0x05
                                   2033 ;	../../../core/net/mac/lpp.c:363: queuebuf_to_packetbuf(i->packet);
      000491 F5 81            [12] 2034 	mov	sp,a
      000493 24 F9            [12] 2035 	add	a,#0xf9
      000495 F8               [12] 2036 	mov	r0,a
      000496 74 03            [12] 2037 	mov	a,#0x03
      000498 26               [12] 2038 	add	a,@r0
      000499 FA               [12] 2039 	mov	r2,a
      00049A E4               [12] 2040 	clr	a
      00049B 08               [12] 2041 	inc	r0
      00049C 36               [12] 2042 	addc	a,@r0
      00049D FB               [12] 2043 	mov	r3,a
      00049E 08               [12] 2044 	inc	r0
      00049F 86 04            [24] 2045 	mov	ar4,@r0
      0004A1 8A 82            [24] 2046 	mov	dpl,r2
      0004A3 8B 83            [24] 2047 	mov	dph,r3
      0004A5 8C F0            [24] 2048 	mov	b,r4
      0004A7 12r00r00         [24] 2049 	lcall	__gptrget
      0004AA FD               [12] 2050 	mov	r5,a
      0004AB A3               [24] 2051 	inc	dptr
      0004AC 12r00r00         [24] 2052 	lcall	__gptrget
      0004AF FE               [12] 2053 	mov	r6,a
      0004B0 A3               [24] 2054 	inc	dptr
      0004B1 12r00r00         [24] 2055 	lcall	__gptrget
      0004B4 FF               [12] 2056 	mov	r7,a
      0004B5 8D 82            [24] 2057 	mov	dpl,r5
      0004B7 8E 83            [24] 2058 	mov	dph,r6
      0004B9 8F F0            [24] 2059 	mov	b,r7
      0004BB C0 04            [24] 2060 	push	ar4
      0004BD C0 03            [24] 2061 	push	ar3
      0004BF C0 02            [24] 2062 	push	ar2
      0004C1 78r00            [12] 2063 	mov	r0,#_queuebuf_to_packetbuf
      0004C3 79s00            [12] 2064 	mov	r1,#(_queuebuf_to_packetbuf >> 8)
      0004C5 7As00            [12] 2065 	mov	r2,#(_queuebuf_to_packetbuf >> 16)
      0004C7 12r00r00         [24] 2066 	lcall	__sdcc_banked_call
      0004CA D0 02            [24] 2067 	pop	ar2
      0004CC D0 03            [24] 2068 	pop	ar3
      0004CE D0 04            [24] 2069 	pop	ar4
                                   2070 ;	../../../core/net/mac/lpp.c:365: ctimer_stop(&i->removal_timer);
      0004D0 E5 81            [12] 2071 	mov	a,sp
      0004D2 24 F9            [12] 2072 	add	a,#0xf9
      0004D4 F8               [12] 2073 	mov	r0,a
      0004D5 74 06            [12] 2074 	mov	a,#0x06
      0004D7 26               [12] 2075 	add	a,@r0
      0004D8 FD               [12] 2076 	mov	r5,a
      0004D9 E4               [12] 2077 	clr	a
      0004DA 08               [12] 2078 	inc	r0
      0004DB 36               [12] 2079 	addc	a,@r0
      0004DC FE               [12] 2080 	mov	r6,a
      0004DD 08               [12] 2081 	inc	r0
      0004DE 86 07            [24] 2082 	mov	ar7,@r0
      0004E0 8D 82            [24] 2083 	mov	dpl,r5
      0004E2 8E 83            [24] 2084 	mov	dph,r6
      0004E4 8F F0            [24] 2085 	mov	b,r7
      0004E6 C0 04            [24] 2086 	push	ar4
      0004E8 C0 03            [24] 2087 	push	ar3
      0004EA C0 02            [24] 2088 	push	ar2
      0004EC 78r00            [12] 2089 	mov	r0,#_ctimer_stop
      0004EE 79s00            [12] 2090 	mov	r1,#(_ctimer_stop >> 8)
      0004F0 7As00            [12] 2091 	mov	r2,#(_ctimer_stop >> 16)
      0004F2 12r00r00         [24] 2092 	lcall	__sdcc_banked_call
      0004F5 D0 02            [24] 2093 	pop	ar2
      0004F7 D0 03            [24] 2094 	pop	ar3
      0004F9 D0 04            [24] 2095 	pop	ar4
                                   2096 ;	../../../core/net/mac/lpp.c:366: queuebuf_free(i->packet);
      0004FB 8A 82            [24] 2097 	mov	dpl,r2
      0004FD 8B 83            [24] 2098 	mov	dph,r3
      0004FF 8C F0            [24] 2099 	mov	b,r4
      000501 12r00r00         [24] 2100 	lcall	__gptrget
      000504 FA               [12] 2101 	mov	r2,a
      000505 A3               [24] 2102 	inc	dptr
      000506 12r00r00         [24] 2103 	lcall	__gptrget
      000509 FB               [12] 2104 	mov	r3,a
      00050A A3               [24] 2105 	inc	dptr
      00050B 12r00r00         [24] 2106 	lcall	__gptrget
      00050E FC               [12] 2107 	mov	r4,a
      00050F 8A 82            [24] 2108 	mov	dpl,r2
      000511 8B 83            [24] 2109 	mov	dph,r3
      000513 8C F0            [24] 2110 	mov	b,r4
      000515 78r00            [12] 2111 	mov	r0,#_queuebuf_free
      000517 79s00            [12] 2112 	mov	r1,#(_queuebuf_free >> 8)
      000519 7As00            [12] 2113 	mov	r2,#(_queuebuf_free >> 16)
      00051B 12r00r00         [24] 2114 	lcall	__sdcc_banked_call
                                   2115 ;	../../../core/net/mac/lpp.c:367: list_remove(pending_packets_list, i);
      00051E E5 81            [12] 2116 	mov	a,sp
      000520 24 F9            [12] 2117 	add	a,#0xf9
      000522 F8               [12] 2118 	mov	r0,a
      000523 86 05            [24] 2119 	mov	ar5,@r0
      000525 08               [12] 2120 	inc	r0
      000526 86 06            [24] 2121 	mov	ar6,@r0
      000528 08               [12] 2122 	inc	r0
      000529 86 07            [24] 2123 	mov	ar7,@r0
      00052B 90r00r08         [24] 2124 	mov	dptr,#_pending_packets_list
      00052E E0               [24] 2125 	movx	a,@dptr
      00052F FA               [12] 2126 	mov	r2,a
      000530 A3               [24] 2127 	inc	dptr
      000531 E0               [24] 2128 	movx	a,@dptr
      000532 FB               [12] 2129 	mov	r3,a
      000533 A3               [24] 2130 	inc	dptr
      000534 E0               [24] 2131 	movx	a,@dptr
      000535 FC               [12] 2132 	mov	r4,a
      000536 C0 05            [24] 2133 	push	ar5
      000538 C0 06            [24] 2134 	push	ar6
      00053A C0 07            [24] 2135 	push	ar7
      00053C 8A 82            [24] 2136 	mov	dpl,r2
      00053E 8B 83            [24] 2137 	mov	dph,r3
      000540 8C F0            [24] 2138 	mov	b,r4
      000542 78r00            [12] 2139 	mov	r0,#_list_remove
      000544 79s00            [12] 2140 	mov	r1,#(_list_remove >> 8)
      000546 7As00            [12] 2141 	mov	r2,#(_list_remove >> 16)
      000548 12r00r00         [24] 2142 	lcall	__sdcc_banked_call
      00054B 15 81            [12] 2143 	dec	sp
      00054D 15 81            [12] 2144 	dec	sp
      00054F 15 81            [12] 2145 	dec	sp
                                   2146 ;	../../../core/net/mac/lpp.c:368: list_remove(queued_packets_list, i);
      000551 E5 81            [12] 2147 	mov	a,sp
      000553 24 F9            [12] 2148 	add	a,#0xf9
      000555 F8               [12] 2149 	mov	r0,a
      000556 86 05            [24] 2150 	mov	ar5,@r0
      000558 08               [12] 2151 	inc	r0
      000559 86 06            [24] 2152 	mov	ar6,@r0
      00055B 08               [12] 2153 	inc	r0
      00055C 86 07            [24] 2154 	mov	ar7,@r0
      00055E 90r00r0E         [24] 2155 	mov	dptr,#_queued_packets_list
      000561 E0               [24] 2156 	movx	a,@dptr
      000562 FA               [12] 2157 	mov	r2,a
      000563 A3               [24] 2158 	inc	dptr
      000564 E0               [24] 2159 	movx	a,@dptr
      000565 FB               [12] 2160 	mov	r3,a
      000566 A3               [24] 2161 	inc	dptr
      000567 E0               [24] 2162 	movx	a,@dptr
      000568 FC               [12] 2163 	mov	r4,a
      000569 C0 05            [24] 2164 	push	ar5
      00056B C0 06            [24] 2165 	push	ar6
      00056D C0 07            [24] 2166 	push	ar7
      00056F 8A 82            [24] 2167 	mov	dpl,r2
      000571 8B 83            [24] 2168 	mov	dph,r3
      000573 8C F0            [24] 2169 	mov	b,r4
      000575 78r00            [12] 2170 	mov	r0,#_list_remove
      000577 79s00            [12] 2171 	mov	r1,#(_list_remove >> 8)
      000579 7As00            [12] 2172 	mov	r2,#(_list_remove >> 16)
      00057B 12r00r00         [24] 2173 	lcall	__sdcc_banked_call
      00057E 15 81            [12] 2174 	dec	sp
      000580 15 81            [12] 2175 	dec	sp
      000582 15 81            [12] 2176 	dec	sp
                                   2177 ;	../../../core/net/mac/lpp.c:371: if(list_length(queued_packets_list) == 0 && is_listening == 0) {
      000584 90r00r0E         [24] 2178 	mov	dptr,#_queued_packets_list
      000587 E0               [24] 2179 	movx	a,@dptr
      000588 FD               [12] 2180 	mov	r5,a
      000589 A3               [24] 2181 	inc	dptr
      00058A E0               [24] 2182 	movx	a,@dptr
      00058B FE               [12] 2183 	mov	r6,a
      00058C A3               [24] 2184 	inc	dptr
      00058D E0               [24] 2185 	movx	a,@dptr
      00058E FF               [12] 2186 	mov	r7,a
      00058F 8D 82            [24] 2187 	mov	dpl,r5
      000591 8E 83            [24] 2188 	mov	dph,r6
      000593 8F F0            [24] 2189 	mov	b,r7
      000595 78r00            [12] 2190 	mov	r0,#_list_length
      000597 79s00            [12] 2191 	mov	r1,#(_list_length >> 8)
      000599 7As00            [12] 2192 	mov	r2,#(_list_length >> 16)
      00059B 12r00r00         [24] 2193 	lcall	__sdcc_banked_call
      00059E E5 82            [12] 2194 	mov	a,dpl
      0005A0 85 83 F0         [24] 2195 	mov	b,dph
      0005A3 45 F0            [12] 2196 	orl	a,b
      0005A5 70 2E            [24] 2197 	jnz	00102$
      0005A7 90r00r00         [24] 2198 	mov	dptr,#_is_listening
      0005AA E0               [24] 2199 	movx	a,@dptr
      0005AB 70 28            [24] 2200 	jnz	00102$
                                   2201 ;	../../../core/net/mac/lpp.c:372: turn_radio_off();
      0005AD 78r2C            [12] 2202 	mov	r0,#_turn_radio_off
      0005AF 79s00            [12] 2203 	mov	r1,#(_turn_radio_off >> 8)
      0005B1 7As00            [12] 2204 	mov	r2,#(_turn_radio_off >> 16)
      0005B3 12r00r00         [24] 2205 	lcall	__sdcc_banked_call
                                   2206 ;	../../../core/net/mac/lpp.c:373: compower_accumulate(&i->compower);
      0005B6 E5 81            [12] 2207 	mov	a,sp
      0005B8 24 F9            [12] 2208 	add	a,#0xf9
      0005BA F8               [12] 2209 	mov	r0,a
      0005BB 74 1C            [12] 2210 	mov	a,#0x1c
      0005BD 26               [12] 2211 	add	a,@r0
      0005BE FD               [12] 2212 	mov	r5,a
      0005BF E4               [12] 2213 	clr	a
      0005C0 08               [12] 2214 	inc	r0
      0005C1 36               [12] 2215 	addc	a,@r0
      0005C2 FE               [12] 2216 	mov	r6,a
      0005C3 08               [12] 2217 	inc	r0
      0005C4 86 07            [24] 2218 	mov	ar7,@r0
      0005C6 8D 82            [24] 2219 	mov	dpl,r5
      0005C8 8E 83            [24] 2220 	mov	dph,r6
      0005CA 8F F0            [24] 2221 	mov	b,r7
      0005CC 78r00            [12] 2222 	mov	r0,#_compower_accumulate
      0005CE 79s00            [12] 2223 	mov	r1,#(_compower_accumulate >> 8)
      0005D0 7As00            [12] 2224 	mov	r2,#(_compower_accumulate >> 16)
      0005D2 12r00r00         [24] 2225 	lcall	__sdcc_banked_call
      0005D5                       2226 00102$:
                                   2227 ;	../../../core/net/mac/lpp.c:376: sent = i->sent_callback;
      0005D5 E5 81            [12] 2228 	mov	a,sp
      0005D7 24 F9            [12] 2229 	add	a,#0xf9
      0005D9 F8               [12] 2230 	mov	r0,a
      0005DA 74 24            [12] 2231 	mov	a,#0x24
      0005DC 26               [12] 2232 	add	a,@r0
      0005DD FD               [12] 2233 	mov	r5,a
      0005DE E4               [12] 2234 	clr	a
      0005DF 08               [12] 2235 	inc	r0
      0005E0 36               [12] 2236 	addc	a,@r0
      0005E1 FE               [12] 2237 	mov	r6,a
      0005E2 08               [12] 2238 	inc	r0
      0005E3 86 07            [24] 2239 	mov	ar7,@r0
      0005E5 8D 82            [24] 2240 	mov	dpl,r5
      0005E7 8E 83            [24] 2241 	mov	dph,r6
      0005E9 8F F0            [24] 2242 	mov	b,r7
      0005EB 12r00r00         [24] 2243 	lcall	__gptrget
      0005EE FD               [12] 2244 	mov	r5,a
      0005EF A3               [24] 2245 	inc	dptr
      0005F0 12r00r00         [24] 2246 	lcall	__gptrget
      0005F3 FE               [12] 2247 	mov	r6,a
      0005F4 A3               [24] 2248 	inc	dptr
      0005F5 12r00r00         [24] 2249 	lcall	__gptrget
      0005F8 FF               [12] 2250 	mov	r7,a
                                   2251 ;	../../../core/net/mac/lpp.c:377: ptr = i->sent_callback_ptr;
      0005F9 E5 81            [12] 2252 	mov	a,sp
      0005FB 24 F9            [12] 2253 	add	a,#0xf9
      0005FD F8               [12] 2254 	mov	r0,a
      0005FE 74 27            [12] 2255 	mov	a,#0x27
      000600 26               [12] 2256 	add	a,@r0
      000601 FA               [12] 2257 	mov	r2,a
      000602 E4               [12] 2258 	clr	a
      000603 08               [12] 2259 	inc	r0
      000604 36               [12] 2260 	addc	a,@r0
      000605 FB               [12] 2261 	mov	r3,a
      000606 08               [12] 2262 	inc	r0
      000607 86 04            [24] 2263 	mov	ar4,@r0
      000609 8A 82            [24] 2264 	mov	dpl,r2
      00060B 8B 83            [24] 2265 	mov	dph,r3
      00060D 8C F0            [24] 2266 	mov	b,r4
      00060F E5 81            [12] 2267 	mov	a,sp
      000611 24 FC            [12] 2268 	add	a,#0xfc
      000613 F8               [12] 2269 	mov	r0,a
      000614 12r00r00         [24] 2270 	lcall	__gptrget
      000617 F6               [12] 2271 	mov	@r0,a
      000618 A3               [24] 2272 	inc	dptr
      000619 12r00r00         [24] 2273 	lcall	__gptrget
      00061C 08               [12] 2274 	inc	r0
      00061D F6               [12] 2275 	mov	@r0,a
      00061E A3               [24] 2276 	inc	dptr
      00061F 12r00r00         [24] 2277 	lcall	__gptrget
      000622 08               [12] 2278 	inc	r0
      000623 F6               [12] 2279 	mov	@r0,a
                                   2280 ;	../../../core/net/mac/lpp.c:378: num_transmissions = i->num_transmissions;
      000624 E5 81            [12] 2281 	mov	a,sp
      000626 24 F9            [12] 2282 	add	a,#0xf9
      000628 F8               [12] 2283 	mov	r0,a
      000629 74 2A            [12] 2284 	mov	a,#0x2a
      00062B 26               [12] 2285 	add	a,@r0
      00062C FA               [12] 2286 	mov	r2,a
      00062D E4               [12] 2287 	clr	a
      00062E 08               [12] 2288 	inc	r0
      00062F 36               [12] 2289 	addc	a,@r0
      000630 FB               [12] 2290 	mov	r3,a
      000631 08               [12] 2291 	inc	r0
      000632 86 04            [24] 2292 	mov	ar4,@r0
      000634 8A 82            [24] 2293 	mov	dpl,r2
      000636 8B 83            [24] 2294 	mov	dph,r3
      000638 8C F0            [24] 2295 	mov	b,r4
      00063A 12r00r00         [24] 2296 	lcall	__gptrget
      00063D FA               [12] 2297 	mov	r2,a
      00063E A8 81            [24] 2298 	mov	r0,sp
      000640 18               [12] 2299 	dec	r0
      000641 A6 02            [24] 2300 	mov	@r0,ar2
      000643 08               [12] 2301 	inc	r0
      000644 76 00            [12] 2302 	mov	@r0,#0x00
                                   2303 ;	../../../core/net/mac/lpp.c:379: memb_free(&queued_packets_memb, i);
      000646 E5 81            [12] 2304 	mov	a,sp
      000648 24 F9            [12] 2305 	add	a,#0xf9
      00064A F8               [12] 2306 	mov	r0,a
      00064B 86 02            [24] 2307 	mov	ar2,@r0
      00064D 08               [12] 2308 	inc	r0
      00064E 86 03            [24] 2309 	mov	ar3,@r0
      000650 08               [12] 2310 	inc	r0
      000651 86 04            [24] 2311 	mov	ar4,@r0
      000653 C0 07            [24] 2312 	push	ar7
      000655 C0 06            [24] 2313 	push	ar6
      000657 C0 05            [24] 2314 	push	ar5
      000659 C0 02            [24] 2315 	push	ar2
      00065B C0 03            [24] 2316 	push	ar3
      00065D C0 04            [24] 2317 	push	ar4
      00065F 90r00r11         [24] 2318 	mov	dptr,#_queued_packets_memb
      000662 75 F0 00         [24] 2319 	mov	b,#0x00
      000665 78r00            [12] 2320 	mov	r0,#_memb_free
      000667 79s00            [12] 2321 	mov	r1,#(_memb_free >> 8)
      000669 7As00            [12] 2322 	mov	r2,#(_memb_free >> 16)
      00066B 12r00r00         [24] 2323 	lcall	__sdcc_banked_call
      00066E 15 81            [12] 2324 	dec	sp
      000670 15 81            [12] 2325 	dec	sp
      000672 15 81            [12] 2326 	dec	sp
      000674 D0 05            [24] 2327 	pop	ar5
      000676 D0 06            [24] 2328 	pop	ar6
      000678 D0 07            [24] 2329 	pop	ar7
                                   2330 ;	../../../core/net/mac/lpp.c:380: if(num_transmissions == 0 || tx_ok == 0) {
      00067A A8 81            [24] 2331 	mov	r0,sp
      00067C 18               [12] 2332 	dec	r0
      00067D E6               [12] 2333 	mov	a,@r0
      00067E 08               [12] 2334 	inc	r0
      00067F 46               [12] 2335 	orl	a,@r0
      000680 60 08            [24] 2336 	jz	00104$
      000682 E5 81            [12] 2337 	mov	a,sp
      000684 24 F5            [12] 2338 	add	a,#0xf5
      000686 F8               [12] 2339 	mov	r0,a
      000687 E6               [12] 2340 	mov	a,@r0
      000688 70 06            [24] 2341 	jnz	00105$
      00068A                       2342 00104$:
                                   2343 ;	../../../core/net/mac/lpp.c:381: status = MAC_TX_NOACK;
      00068A 7B 02            [12] 2344 	mov	r3,#0x02
      00068C 7C 00            [12] 2345 	mov	r4,#0x00
      00068E 80 04            [24] 2346 	sjmp	00110$
      000690                       2347 00105$:
                                   2348 ;	../../../core/net/mac/lpp.c:383: status = MAC_TX_OK;
      000690 7B 00            [12] 2349 	mov	r3,#0x00
      000692 7C 00            [12] 2350 	mov	r4,#0x00
                                   2351 ;	../../../core/net/mac/lpp.c:385: mac_call_sent_callback(sent, ptr, status, num_transmissions);
      000694                       2352 00110$:
      000694 ED               [12] 2353 	mov	a,r5
      000695 4E               [12] 2354 	orl	a,r6
      000696 60 3E            [24] 2355 	jz	00113$
      000698 C0 07            [24] 2356 	push	ar7
      00069A C0 06            [24] 2357 	push	ar6
      00069C C0 05            [24] 2358 	push	ar5
      00069E E5 81            [12] 2359 	mov	a,sp
      0006A0 24 FC            [12] 2360 	add	a,#0xfc
      0006A2 F8               [12] 2361 	mov	r0,a
      0006A3 E6               [12] 2362 	mov	a,@r0
      0006A4 C0 E0            [24] 2363 	push	acc
      0006A6 08               [12] 2364 	inc	r0
      0006A7 E6               [12] 2365 	mov	a,@r0
      0006A8 C0 E0            [24] 2366 	push	acc
      0006AA C0 03            [24] 2367 	push	ar3
      0006AC C0 04            [24] 2368 	push	ar4
      0006AE C0 05            [24] 2369 	push	ar5
      0006B0 C0 06            [24] 2370 	push	ar6
      0006B2 C0 07            [24] 2371 	push	ar7
      0006B4 E5 81            [12] 2372 	mov	a,sp
      0006B6 24 F2            [12] 2373 	add	a,#0xf2
      0006B8 F8               [12] 2374 	mov	r0,a
      0006B9 86 82            [24] 2375 	mov	dpl,@r0
      0006BB 08               [12] 2376 	inc	r0
      0006BC 86 83            [24] 2377 	mov	dph,@r0
      0006BE 08               [12] 2378 	inc	r0
      0006BF 86 F0            [24] 2379 	mov	b,@r0
      0006C1 D0 02            [24] 2380 	pop	ar2
      0006C3 D0 01            [24] 2381 	pop	ar1
      0006C5 D0 00            [24] 2382 	pop	ar0
      0006C7 12r00r00         [24] 2383 	lcall	__sdcc_banked_call
      0006CA E5 81            [12] 2384 	mov	a,sp
      0006CC 24 FC            [12] 2385 	add	a,#0xfc
      0006CE F5 81            [12] 2386 	mov	sp,a
      0006D0 D0 05            [24] 2387 	pop	ar5
      0006D2 D0 06            [24] 2388 	pop	ar6
      0006D4 D0 07            [24] 2389 	pop	ar7
      0006D6                       2390 00113$:
                                   2391 ;	../../../core/net/mac/lpp.c:386: }
      0006D6 E5 81            [12] 2392 	mov	a,sp
      0006D8 24 F8            [12] 2393 	add	a,#0xf8
      0006DA F5 81            [12] 2394 	mov	sp,a
      0006DC 02r00r00         [24] 2395 	ljmp	__sdcc_banked_ret
                                   2396 ;------------------------------------------------------------
                                   2397 ;Allocation info for local variables in function 'remove_queued_old_packet_callback'
                                   2398 ;------------------------------------------------------------
                                   2399 ;item                      Allocated to registers r5 r6 r7 
                                   2400 ;------------------------------------------------------------
                                   2401 ;	../../../core/net/mac/lpp.c:389: remove_queued_old_packet_callback(void *item)
                                   2402 ;	-----------------------------------------
                                   2403 ;	 function remove_queued_old_packet_callback
                                   2404 ;	-----------------------------------------
      0006DF                       2405 _remove_queued_old_packet_callback:
      0006DF AD 82            [24] 2406 	mov	r5,dpl
      0006E1 AE 83            [24] 2407 	mov	r6,dph
      0006E3 AF F0            [24] 2408 	mov	r7,b
                                   2409 ;	../../../core/net/mac/lpp.c:391: remove_queued_packet(item, 0);
      0006E5 E4               [12] 2410 	clr	a
      0006E6 C0 E0            [24] 2411 	push	acc
      0006E8 8D 82            [24] 2412 	mov	dpl,r5
      0006EA 8E 83            [24] 2413 	mov	dph,r6
      0006EC 8F F0            [24] 2414 	mov	b,r7
      0006EE 78r87            [12] 2415 	mov	r0,#_remove_queued_packet
      0006F0 79s04            [12] 2416 	mov	r1,#(_remove_queued_packet >> 8)
      0006F2 7As00            [12] 2417 	mov	r2,#(_remove_queued_packet >> 16)
      0006F4 12r00r00         [24] 2418 	lcall	__sdcc_banked_call
      0006F7 15 81            [12] 2419 	dec	sp
                                   2420 ;	../../../core/net/mac/lpp.c:392: }
      0006F9 02r00r00         [24] 2421 	ljmp	__sdcc_banked_ret
                                   2422 ;------------------------------------------------------------
                                   2423 ;Allocation info for local variables in function 'listen_callback'
                                   2424 ;------------------------------------------------------------
                                   2425 ;periods                   Allocated to registers r6 r7 
                                   2426 ;------------------------------------------------------------
                                   2427 ;	../../../core/net/mac/lpp.c:412: listen_callback(int periods)
                                   2428 ;	-----------------------------------------
                                   2429 ;	 function listen_callback
                                   2430 ;	-----------------------------------------
      0006FC                       2431 _listen_callback:
      0006FC AE 82            [24] 2432 	mov	r6,dpl
                                   2433 ;	../../../core/net/mac/lpp.c:414: is_listening = periods;
      0006FE 90r00r00         [24] 2434 	mov	dptr,#_is_listening
      000701 EE               [12] 2435 	mov	a,r6
      000702 F0               [24] 2436 	movx	@dptr,a
                                   2437 ;	../../../core/net/mac/lpp.c:415: turn_radio_on();
      000703 78r00            [12] 2438 	mov	r0,#_turn_radio_on
      000705 79s00            [12] 2439 	mov	r1,#(_turn_radio_on >> 8)
      000707 7As00            [12] 2440 	mov	r2,#(_turn_radio_on >> 16)
      000709 12r00r00         [24] 2441 	lcall	__sdcc_banked_call
                                   2442 ;	../../../core/net/mac/lpp.c:416: }
      00070C 02r00r00         [24] 2443 	ljmp	__sdcc_banked_ret
                                   2444 ;------------------------------------------------------------
                                   2445 ;Allocation info for local variables in function 'send_probe'
                                   2446 ;------------------------------------------------------------
                                   2447 ;hdr                       Allocated to registers r5 r6 r7 
                                   2448 ;adata                     Allocated to stack - sp -5
                                   2449 ;a                         Allocated to stack - sp -2
                                   2450 ;hdrlen                    Allocated to registers r2 r3 
                                   2451 ;sloc0                     Allocated to stack - sp -8
                                   2452 ;------------------------------------------------------------
                                   2453 ;	../../../core/net/mac/lpp.c:422: send_probe(void)
                                   2454 ;	-----------------------------------------
                                   2455 ;	 function send_probe
                                   2456 ;	-----------------------------------------
      00070F                       2457 _send_probe:
      00070F E5 81            [12] 2458 	mov	a,sp
      000711 24 09            [12] 2459 	add	a,#0x09
      000713 F5 81            [12] 2460 	mov	sp,a
                                   2461 ;	../../../core/net/mac/lpp.c:429: packetbuf_clear();
      000715 78r00            [12] 2462 	mov	r0,#_packetbuf_clear
      000717 79s00            [12] 2463 	mov	r1,#(_packetbuf_clear >> 8)
      000719 7As00            [12] 2464 	mov	r2,#(_packetbuf_clear >> 16)
      00071B 12r00r00         [24] 2465 	lcall	__sdcc_banked_call
                                   2466 ;	../../../core/net/mac/lpp.c:430: packetbuf_set_datalen(sizeof(struct lpp_hdr));
      00071E 90 00 12         [24] 2467 	mov	dptr,#0x0012
      000721 78r00            [12] 2468 	mov	r0,#_packetbuf_set_datalen
      000723 79s00            [12] 2469 	mov	r1,#(_packetbuf_set_datalen >> 8)
      000725 7As00            [12] 2470 	mov	r2,#(_packetbuf_set_datalen >> 16)
      000727 12r00r00         [24] 2471 	lcall	__sdcc_banked_call
                                   2472 ;	../../../core/net/mac/lpp.c:431: hdr = packetbuf_dataptr();
      00072A 78r00            [12] 2473 	mov	r0,#_packetbuf_dataptr
      00072C 79s00            [12] 2474 	mov	r1,#(_packetbuf_dataptr >> 8)
      00072E 7As00            [12] 2475 	mov	r2,#(_packetbuf_dataptr >> 16)
      000730 12r00r00         [24] 2476 	lcall	__sdcc_banked_call
                                   2477 ;	../../../core/net/mac/lpp.c:432: hdr->type = TYPE_PROBE;
      000733 AD 82            [24] 2478 	mov	r5,dpl
      000735 AE 83            [24] 2479 	mov	r6,dph
      000737 AF F0            [24] 2480 	mov	r7,b
      000739 74 01            [12] 2481 	mov	a,#0x01
      00073B 12r00r00         [24] 2482 	lcall	__gptrput
      00073E A3               [24] 2483 	inc	dptr
      00073F E4               [12] 2484 	clr	a
      000740 12r00r00         [24] 2485 	lcall	__gptrput
                                   2486 ;	../../../core/net/mac/lpp.c:433: rimeaddr_copy(&hdr->sender, &rimeaddr_node_addr);
      000743 74 02            [12] 2487 	mov	a,#0x02
      000745 2D               [12] 2488 	add	a,r5
      000746 FA               [12] 2489 	mov	r2,a
      000747 E4               [12] 2490 	clr	a
      000748 3E               [12] 2491 	addc	a,r6
      000749 FB               [12] 2492 	mov	r3,a
      00074A 8F 04            [24] 2493 	mov	ar4,r7
      00074C C0 07            [24] 2494 	push	ar7
      00074E C0 06            [24] 2495 	push	ar6
      000750 C0 05            [24] 2496 	push	ar5
      000752 74r00            [12] 2497 	mov	a,#_rimeaddr_node_addr
      000754 C0 E0            [24] 2498 	push	acc
      000756 74s00            [12] 2499 	mov	a,#(_rimeaddr_node_addr >> 8)
      000758 C0 E0            [24] 2500 	push	acc
      00075A E4               [12] 2501 	clr	a
      00075B C0 E0            [24] 2502 	push	acc
      00075D 8A 82            [24] 2503 	mov	dpl,r2
      00075F 8B 83            [24] 2504 	mov	dph,r3
      000761 8C F0            [24] 2505 	mov	b,r4
      000763 78r00            [12] 2506 	mov	r0,#_rimeaddr_copy
      000765 79s00            [12] 2507 	mov	r1,#(_rimeaddr_copy >> 8)
      000767 7As00            [12] 2508 	mov	r2,#(_rimeaddr_copy >> 16)
      000769 12r00r00         [24] 2509 	lcall	__sdcc_banked_call
      00076C 15 81            [12] 2510 	dec	sp
      00076E 15 81            [12] 2511 	dec	sp
      000770 15 81            [12] 2512 	dec	sp
      000772 D0 05            [24] 2513 	pop	ar5
      000774 D0 06            [24] 2514 	pop	ar6
      000776 D0 07            [24] 2515 	pop	ar7
                                   2516 ;	../../../core/net/mac/lpp.c:435: rimeaddr_copy(&hdr->receiver, &rimeaddr_null);
      000778 74 0A            [12] 2517 	mov	a,#0x0a
      00077A 2D               [12] 2518 	add	a,r5
      00077B FA               [12] 2519 	mov	r2,a
      00077C E4               [12] 2520 	clr	a
      00077D 3E               [12] 2521 	addc	a,r6
      00077E FB               [12] 2522 	mov	r3,a
      00077F 8F 04            [24] 2523 	mov	ar4,r7
      000781 C0 07            [24] 2524 	push	ar7
      000783 C0 06            [24] 2525 	push	ar6
      000785 C0 05            [24] 2526 	push	ar5
      000787 74r00            [12] 2527 	mov	a,#_rimeaddr_null
      000789 C0 E0            [24] 2528 	push	acc
      00078B 74s00            [12] 2529 	mov	a,#(_rimeaddr_null >> 8)
      00078D C0 E0            [24] 2530 	push	acc
      00078F 74 80            [12] 2531 	mov	a,#0x80
      000791 C0 E0            [24] 2532 	push	acc
      000793 8A 82            [24] 2533 	mov	dpl,r2
      000795 8B 83            [24] 2534 	mov	dph,r3
      000797 8C F0            [24] 2535 	mov	b,r4
      000799 78r00            [12] 2536 	mov	r0,#_rimeaddr_copy
      00079B 79s00            [12] 2537 	mov	r1,#(_rimeaddr_copy >> 8)
      00079D 7As00            [12] 2538 	mov	r2,#(_rimeaddr_copy >> 16)
      00079F 12r00r00         [24] 2539 	lcall	__sdcc_banked_call
      0007A2 15 81            [12] 2540 	dec	sp
      0007A4 15 81            [12] 2541 	dec	sp
      0007A6 15 81            [12] 2542 	dec	sp
                                   2543 ;	../../../core/net/mac/lpp.c:437: packetbuf_set_addr(PACKETBUF_ADDR_RECEIVER, &rimeaddr_null);
      0007A8 74r00            [12] 2544 	mov	a,#_rimeaddr_null
      0007AA C0 E0            [24] 2545 	push	acc
      0007AC 74s00            [12] 2546 	mov	a,#(_rimeaddr_null >> 8)
      0007AE C0 E0            [24] 2547 	push	acc
      0007B0 74 80            [12] 2548 	mov	a,#0x80
      0007B2 C0 E0            [24] 2549 	push	acc
      0007B4 75 82 19         [24] 2550 	mov	dpl,#0x19
      0007B7 78r00            [12] 2551 	mov	r0,#_packetbuf_set_addr
      0007B9 79s00            [12] 2552 	mov	r1,#(_packetbuf_set_addr >> 8)
      0007BB 7As00            [12] 2553 	mov	r2,#(_packetbuf_set_addr >> 16)
      0007BD 12r00r00         [24] 2554 	lcall	__sdcc_banked_call
      0007C0 15 81            [12] 2555 	dec	sp
      0007C2 15 81            [12] 2556 	dec	sp
      0007C4 15 81            [12] 2557 	dec	sp
                                   2558 ;	../../../core/net/mac/lpp.c:439: int hdrlen = NETSTACK_FRAMER.create();
      0007C6 90r00r00         [24] 2559 	mov	dptr,#_framer_802154
      0007C9 E4               [12] 2560 	clr	a
      0007CA 93               [24] 2561 	movc	a,@a+dptr
      0007CB FA               [12] 2562 	mov	r2,a
      0007CC A3               [24] 2563 	inc	dptr
      0007CD E4               [12] 2564 	clr	a
      0007CE 93               [24] 2565 	movc	a,@a+dptr
      0007CF FB               [12] 2566 	mov	r3,a
      0007D0 A3               [24] 2567 	inc	dptr
      0007D1 E4               [12] 2568 	clr	a
      0007D2 93               [24] 2569 	movc	a,@a+dptr
      0007D3 FC               [12] 2570 	mov	r4,a
      0007D4 C0 04            [24] 2571 	push	ar4
      0007D6 C0 02            [24] 2572 	push	ar2
      0007D8 C0 03            [24] 2573 	push	ar3
      0007DA C0 04            [24] 2574 	push	ar4
      0007DC D0 02            [24] 2575 	pop	ar2
      0007DE D0 01            [24] 2576 	pop	ar1
      0007E0 D0 00            [24] 2577 	pop	ar0
      0007E2 12r00r00         [24] 2578 	lcall	__sdcc_banked_call
      0007E5 AA 82            [24] 2579 	mov	r2,dpl
      0007E7 AB 83            [24] 2580 	mov	r3,dph
      0007E9 D0 04            [24] 2581 	pop	ar4
      0007EB D0 05            [24] 2582 	pop	ar5
      0007ED D0 06            [24] 2583 	pop	ar6
      0007EF D0 07            [24] 2584 	pop	ar7
                                   2585 ;	../../../core/net/mac/lpp.c:440: if(hdrlen < 0) {
      0007F1 EB               [12] 2586 	mov	a,r3
      0007F2 30 E7 03         [24] 2587 	jnb	acc.7,00102$
                                   2588 ;	../../../core/net/mac/lpp.c:442: return;
      0007F5 02r0ArA0         [24] 2589 	ljmp	00110$
      0007F8                       2590 00102$:
                                   2591 ;	../../../core/net/mac/lpp.c:447: adata = (struct announcement_msg *)((char *)hdr + sizeof(struct lpp_hdr));
      0007F8 74 12            [12] 2592 	mov	a,#0x12
      0007FA 2D               [12] 2593 	add	a,r5
      0007FB FD               [12] 2594 	mov	r5,a
      0007FC E4               [12] 2595 	clr	a
      0007FD 3E               [12] 2596 	addc	a,r6
      0007FE FE               [12] 2597 	mov	r6,a
      0007FF E5 81            [12] 2598 	mov	a,sp
      000801 24 FB            [12] 2599 	add	a,#0xfb
      000803 F8               [12] 2600 	mov	r0,a
      000804 A6 05            [24] 2601 	mov	@r0,ar5
      000806 08               [12] 2602 	inc	r0
      000807 A6 06            [24] 2603 	mov	@r0,ar6
      000809 08               [12] 2604 	inc	r0
      00080A A6 07            [24] 2605 	mov	@r0,ar7
                                   2606 ;	../../../core/net/mac/lpp.c:449: adata->num = 0;
      00080C E5 81            [12] 2607 	mov	a,sp
      00080E 24 FB            [12] 2608 	add	a,#0xfb
      000810 F8               [12] 2609 	mov	r0,a
      000811 86 82            [24] 2610 	mov	dpl,@r0
      000813 08               [12] 2611 	inc	r0
      000814 86 83            [24] 2612 	mov	dph,@r0
      000816 08               [12] 2613 	inc	r0
      000817 86 F0            [24] 2614 	mov	b,@r0
      000819 E4               [12] 2615 	clr	a
      00081A 12r00r00         [24] 2616 	lcall	__gptrput
      00081D A3               [24] 2617 	inc	dptr
      00081E 12r00r00         [24] 2618 	lcall	__gptrput
                                   2619 ;	../../../core/net/mac/lpp.c:450: for(a = announcement_list(); a != NULL; a = list_item_next(a)) {
      000821 78r00            [12] 2620 	mov	r0,#_announcement_list
      000823 79s00            [12] 2621 	mov	r1,#(_announcement_list >> 8)
      000825 7As00            [12] 2622 	mov	r2,#(_announcement_list >> 16)
      000827 12r00r00         [24] 2623 	lcall	__sdcc_banked_call
      00082A AA 82            [24] 2624 	mov	r2,dpl
      00082C AB 83            [24] 2625 	mov	r3,dph
      00082E AC F0            [24] 2626 	mov	r4,b
      000830 A8 81            [24] 2627 	mov	r0,sp
      000832 18               [12] 2628 	dec	r0
      000833 18               [12] 2629 	dec	r0
      000834 A6 02            [24] 2630 	mov	@r0,ar2
      000836 08               [12] 2631 	inc	r0
      000837 A6 03            [24] 2632 	mov	@r0,ar3
      000839 08               [12] 2633 	inc	r0
      00083A A6 04            [24] 2634 	mov	@r0,ar4
      00083C E5 81            [12] 2635 	mov	a,sp
      00083E 24 FB            [12] 2636 	add	a,#0xfb
      000840 F8               [12] 2637 	mov	r0,a
      000841 74 02            [12] 2638 	mov	a,#0x02
      000843 26               [12] 2639 	add	a,@r0
      000844 FA               [12] 2640 	mov	r2,a
      000845 E4               [12] 2641 	clr	a
      000846 08               [12] 2642 	inc	r0
      000847 36               [12] 2643 	addc	a,@r0
      000848 FB               [12] 2644 	mov	r3,a
      000849 08               [12] 2645 	inc	r0
      00084A 86 04            [24] 2646 	mov	ar4,@r0
      00084C                       2647 00108$:
      00084C A8 81            [24] 2648 	mov	r0,sp
      00084E 18               [12] 2649 	dec	r0
      00084F 18               [12] 2650 	dec	r0
      000850 E6               [12] 2651 	mov	a,@r0
      000851 08               [12] 2652 	inc	r0
      000852 46               [12] 2653 	orl	a,@r0
      000853 70 03            [24] 2654 	jnz	00129$
      000855 02r09r97         [24] 2655 	ljmp	00103$
      000858                       2656 00129$:
                                   2657 ;	../../../core/net/mac/lpp.c:451: adata->data[adata->num].id = a->id;
      000858 E5 81            [12] 2658 	mov	a,sp
      00085A 24 FB            [12] 2659 	add	a,#0xfb
      00085C F8               [12] 2660 	mov	r0,a
      00085D 86 82            [24] 2661 	mov	dpl,@r0
      00085F 08               [12] 2662 	inc	r0
      000860 86 83            [24] 2663 	mov	dph,@r0
      000862 08               [12] 2664 	inc	r0
      000863 86 F0            [24] 2665 	mov	b,@r0
      000865 12r00r00         [24] 2666 	lcall	__gptrget
      000868 FE               [12] 2667 	mov	r6,a
      000869 A3               [24] 2668 	inc	dptr
      00086A 12r00r00         [24] 2669 	lcall	__gptrget
      00086D FF               [12] 2670 	mov	r7,a
      00086E EE               [12] 2671 	mov	a,r6
      00086F 2E               [12] 2672 	add	a,r6
      000870 FE               [12] 2673 	mov	r6,a
      000871 EF               [12] 2674 	mov	a,r7
      000872 33               [12] 2675 	rlc	a
      000873 FF               [12] 2676 	mov	r7,a
      000874 EE               [12] 2677 	mov	a,r6
      000875 2E               [12] 2678 	add	a,r6
      000876 FE               [12] 2679 	mov	r6,a
      000877 EF               [12] 2680 	mov	a,r7
      000878 33               [12] 2681 	rlc	a
      000879 FF               [12] 2682 	mov	r7,a
      00087A E5 81            [12] 2683 	mov	a,sp
      00087C 24 F8            [12] 2684 	add	a,#0xf8
      00087E F8               [12] 2685 	mov	r0,a
      00087F EE               [12] 2686 	mov	a,r6
      000880 2A               [12] 2687 	add	a,r2
      000881 F6               [12] 2688 	mov	@r0,a
      000882 EF               [12] 2689 	mov	a,r7
      000883 3B               [12] 2690 	addc	a,r3
      000884 08               [12] 2691 	inc	r0
      000885 F6               [12] 2692 	mov	@r0,a
      000886 08               [12] 2693 	inc	r0
      000887 A6 04            [24] 2694 	mov	@r0,ar4
      000889 A8 81            [24] 2695 	mov	r0,sp
      00088B 18               [12] 2696 	dec	r0
      00088C 18               [12] 2697 	dec	r0
      00088D 74 03            [12] 2698 	mov	a,#0x03
      00088F 26               [12] 2699 	add	a,@r0
      000890 FE               [12] 2700 	mov	r6,a
      000891 E4               [12] 2701 	clr	a
      000892 08               [12] 2702 	inc	r0
      000893 36               [12] 2703 	addc	a,@r0
      000894 FD               [12] 2704 	mov	r5,a
      000895 08               [12] 2705 	inc	r0
      000896 86 07            [24] 2706 	mov	ar7,@r0
      000898 8E 82            [24] 2707 	mov	dpl,r6
      00089A 8D 83            [24] 2708 	mov	dph,r5
      00089C 8F F0            [24] 2709 	mov	b,r7
      00089E 12r00r00         [24] 2710 	lcall	__gptrget
      0008A1 FE               [12] 2711 	mov	r6,a
      0008A2 A3               [24] 2712 	inc	dptr
      0008A3 12r00r00         [24] 2713 	lcall	__gptrget
      0008A6 FD               [12] 2714 	mov	r5,a
      0008A7 E5 81            [12] 2715 	mov	a,sp
      0008A9 24 F8            [12] 2716 	add	a,#0xf8
      0008AB F8               [12] 2717 	mov	r0,a
      0008AC 86 82            [24] 2718 	mov	dpl,@r0
      0008AE 08               [12] 2719 	inc	r0
      0008AF 86 83            [24] 2720 	mov	dph,@r0
      0008B1 08               [12] 2721 	inc	r0
      0008B2 86 F0            [24] 2722 	mov	b,@r0
      0008B4 EE               [12] 2723 	mov	a,r6
      0008B5 12r00r00         [24] 2724 	lcall	__gptrput
      0008B8 A3               [24] 2725 	inc	dptr
      0008B9 ED               [12] 2726 	mov	a,r5
      0008BA 12r00r00         [24] 2727 	lcall	__gptrput
                                   2728 ;	../../../core/net/mac/lpp.c:452: adata->data[adata->num].value = a->value;
      0008BD E5 81            [12] 2729 	mov	a,sp
      0008BF 24 FB            [12] 2730 	add	a,#0xfb
      0008C1 F8               [12] 2731 	mov	r0,a
      0008C2 86 82            [24] 2732 	mov	dpl,@r0
      0008C4 08               [12] 2733 	inc	r0
      0008C5 86 83            [24] 2734 	mov	dph,@r0
      0008C7 08               [12] 2735 	inc	r0
      0008C8 86 F0            [24] 2736 	mov	b,@r0
      0008CA 12r00r00         [24] 2737 	lcall	__gptrget
      0008CD FE               [12] 2738 	mov	r6,a
      0008CE A3               [24] 2739 	inc	dptr
      0008CF 12r00r00         [24] 2740 	lcall	__gptrget
      0008D2 FF               [12] 2741 	mov	r7,a
      0008D3 EE               [12] 2742 	mov	a,r6
      0008D4 2E               [12] 2743 	add	a,r6
      0008D5 FE               [12] 2744 	mov	r6,a
      0008D6 EF               [12] 2745 	mov	a,r7
      0008D7 33               [12] 2746 	rlc	a
      0008D8 FF               [12] 2747 	mov	r7,a
      0008D9 EE               [12] 2748 	mov	a,r6
      0008DA 2E               [12] 2749 	add	a,r6
      0008DB FE               [12] 2750 	mov	r6,a
      0008DC EF               [12] 2751 	mov	a,r7
      0008DD 33               [12] 2752 	rlc	a
      0008DE FF               [12] 2753 	mov	r7,a
      0008DF EE               [12] 2754 	mov	a,r6
      0008E0 2A               [12] 2755 	add	a,r2
      0008E1 FE               [12] 2756 	mov	r6,a
      0008E2 EF               [12] 2757 	mov	a,r7
      0008E3 3B               [12] 2758 	addc	a,r3
      0008E4 FF               [12] 2759 	mov	r7,a
      0008E5 8C 05            [24] 2760 	mov	ar5,r4
      0008E7 74 02            [12] 2761 	mov	a,#0x02
      0008E9 2E               [12] 2762 	add	a,r6
      0008EA FE               [12] 2763 	mov	r6,a
      0008EB E4               [12] 2764 	clr	a
      0008EC 3F               [12] 2765 	addc	a,r7
      0008ED FF               [12] 2766 	mov	r7,a
      0008EE C0 02            [24] 2767 	push	ar2
      0008F0 C0 03            [24] 2768 	push	ar3
      0008F2 C0 04            [24] 2769 	push	ar4
      0008F4 E5 81            [12] 2770 	mov	a,sp
      0008F6 24 FB            [12] 2771 	add	a,#0xfb
      0008F8 F8               [12] 2772 	mov	r0,a
      0008F9 74 05            [12] 2773 	mov	a,#0x05
      0008FB 26               [12] 2774 	add	a,@r0
      0008FC FA               [12] 2775 	mov	r2,a
      0008FD E4               [12] 2776 	clr	a
      0008FE 08               [12] 2777 	inc	r0
      0008FF 36               [12] 2778 	addc	a,@r0
      000900 FB               [12] 2779 	mov	r3,a
      000901 08               [12] 2780 	inc	r0
      000902 86 04            [24] 2781 	mov	ar4,@r0
      000904 8A 82            [24] 2782 	mov	dpl,r2
      000906 8B 83            [24] 2783 	mov	dph,r3
      000908 8C F0            [24] 2784 	mov	b,r4
      00090A 12r00r00         [24] 2785 	lcall	__gptrget
      00090D FA               [12] 2786 	mov	r2,a
      00090E A3               [24] 2787 	inc	dptr
      00090F 12r00r00         [24] 2788 	lcall	__gptrget
      000912 FB               [12] 2789 	mov	r3,a
      000913 8E 82            [24] 2790 	mov	dpl,r6
      000915 8F 83            [24] 2791 	mov	dph,r7
      000917 8D F0            [24] 2792 	mov	b,r5
      000919 EA               [12] 2793 	mov	a,r2
      00091A 12r00r00         [24] 2794 	lcall	__gptrput
      00091D A3               [24] 2795 	inc	dptr
      00091E EB               [12] 2796 	mov	a,r3
      00091F 12r00r00         [24] 2797 	lcall	__gptrput
                                   2798 ;	../../../core/net/mac/lpp.c:453: adata->num++;
      000922 E5 81            [12] 2799 	mov	a,sp
      000924 24 F8            [12] 2800 	add	a,#0xf8
      000926 F8               [12] 2801 	mov	r0,a
      000927 86 82            [24] 2802 	mov	dpl,@r0
      000929 08               [12] 2803 	inc	r0
      00092A 86 83            [24] 2804 	mov	dph,@r0
      00092C 08               [12] 2805 	inc	r0
      00092D 86 F0            [24] 2806 	mov	b,@r0
      00092F 12r00r00         [24] 2807 	lcall	__gptrget
      000932 FF               [12] 2808 	mov	r7,a
      000933 A3               [24] 2809 	inc	dptr
      000934 12r00r00         [24] 2810 	lcall	__gptrget
      000937 FE               [12] 2811 	mov	r6,a
      000938 0F               [12] 2812 	inc	r7
      000939 BF 00 01         [24] 2813 	cjne	r7,#0x00,00130$
      00093C 0E               [12] 2814 	inc	r6
      00093D                       2815 00130$:
      00093D E5 81            [12] 2816 	mov	a,sp
      00093F 24 F8            [12] 2817 	add	a,#0xf8
      000941 F8               [12] 2818 	mov	r0,a
      000942 86 82            [24] 2819 	mov	dpl,@r0
      000944 08               [12] 2820 	inc	r0
      000945 86 83            [24] 2821 	mov	dph,@r0
      000947 08               [12] 2822 	inc	r0
      000948 86 F0            [24] 2823 	mov	b,@r0
      00094A EF               [12] 2824 	mov	a,r7
      00094B 12r00r00         [24] 2825 	lcall	__gptrput
      00094E A3               [24] 2826 	inc	dptr
      00094F EE               [12] 2827 	mov	a,r6
      000950 12r00r00         [24] 2828 	lcall	__gptrput
                                   2829 ;	../../../core/net/mac/lpp.c:450: for(a = announcement_list(); a != NULL; a = list_item_next(a)) {
      000953 E5 81            [12] 2830 	mov	a,sp
      000955 24 FB            [12] 2831 	add	a,#0xfb
      000957 F8               [12] 2832 	mov	r0,a
      000958 86 02            [24] 2833 	mov	ar2,@r0
      00095A 08               [12] 2834 	inc	r0
      00095B 86 03            [24] 2835 	mov	ar3,@r0
      00095D 08               [12] 2836 	inc	r0
      00095E 86 04            [24] 2837 	mov	ar4,@r0
      000960 8A 82            [24] 2838 	mov	dpl,r2
      000962 8B 83            [24] 2839 	mov	dph,r3
      000964 8C F0            [24] 2840 	mov	b,r4
      000966 C0 04            [24] 2841 	push	ar4
      000968 C0 03            [24] 2842 	push	ar3
      00096A C0 02            [24] 2843 	push	ar2
      00096C 78r00            [12] 2844 	mov	r0,#_list_item_next
      00096E 79s00            [12] 2845 	mov	r1,#(_list_item_next >> 8)
      000970 7As00            [12] 2846 	mov	r2,#(_list_item_next >> 16)
      000972 12r00r00         [24] 2847 	lcall	__sdcc_banked_call
      000975 AD 82            [24] 2848 	mov	r5,dpl
      000977 AE 83            [24] 2849 	mov	r6,dph
      000979 AF F0            [24] 2850 	mov	r7,b
      00097B D0 02            [24] 2851 	pop	ar2
      00097D D0 03            [24] 2852 	pop	ar3
      00097F D0 04            [24] 2853 	pop	ar4
      000981 E5 81            [12] 2854 	mov	a,sp
      000983 24 FB            [12] 2855 	add	a,#0xfb
      000985 F8               [12] 2856 	mov	r0,a
      000986 A6 05            [24] 2857 	mov	@r0,ar5
      000988 08               [12] 2858 	inc	r0
      000989 A6 06            [24] 2859 	mov	@r0,ar6
      00098B 08               [12] 2860 	inc	r0
      00098C A6 07            [24] 2861 	mov	@r0,ar7
      00098E D0 04            [24] 2862 	pop	ar4
      000990 D0 03            [24] 2863 	pop	ar3
      000992 D0 02            [24] 2864 	pop	ar2
      000994 02r08r4C         [24] 2865 	ljmp	00108$
      000997                       2866 00103$:
                                   2867 ;	../../../core/net/mac/lpp.c:458: sizeof(struct announcement_data) * adata->num);
      000997 E5 81            [12] 2868 	mov	a,sp
      000999 24 FB            [12] 2869 	add	a,#0xfb
      00099B F8               [12] 2870 	mov	r0,a
      00099C 86 82            [24] 2871 	mov	dpl,@r0
      00099E 08               [12] 2872 	inc	r0
      00099F 86 83            [24] 2873 	mov	dph,@r0
      0009A1 08               [12] 2874 	inc	r0
      0009A2 86 F0            [24] 2875 	mov	b,@r0
      0009A4 12r00r00         [24] 2876 	lcall	__gptrget
      0009A7 FE               [12] 2877 	mov	r6,a
      0009A8 A3               [24] 2878 	inc	dptr
      0009A9 12r00r00         [24] 2879 	lcall	__gptrget
      0009AC FF               [12] 2880 	mov	r7,a
      0009AD EE               [12] 2881 	mov	a,r6
      0009AE 2E               [12] 2882 	add	a,r6
      0009AF FE               [12] 2883 	mov	r6,a
      0009B0 EF               [12] 2884 	mov	a,r7
      0009B1 33               [12] 2885 	rlc	a
      0009B2 FF               [12] 2886 	mov	r7,a
      0009B3 EE               [12] 2887 	mov	a,r6
      0009B4 2E               [12] 2888 	add	a,r6
      0009B5 FE               [12] 2889 	mov	r6,a
      0009B6 EF               [12] 2890 	mov	a,r7
      0009B7 33               [12] 2891 	rlc	a
      0009B8 FF               [12] 2892 	mov	r7,a
      0009B9 74 14            [12] 2893 	mov	a,#0x14
      0009BB 2E               [12] 2894 	add	a,r6
      0009BC FE               [12] 2895 	mov	r6,a
      0009BD E4               [12] 2896 	clr	a
      0009BE 3F               [12] 2897 	addc	a,r7
      0009BF FF               [12] 2898 	mov	r7,a
      0009C0 8E 82            [24] 2899 	mov	dpl,r6
      0009C2 8F 83            [24] 2900 	mov	dph,r7
      0009C4 78r00            [12] 2901 	mov	r0,#_packetbuf_set_datalen
      0009C6 79s00            [12] 2902 	mov	r1,#(_packetbuf_set_datalen >> 8)
      0009C8 7As00            [12] 2903 	mov	r2,#(_packetbuf_set_datalen >> 16)
      0009CA 12r00r00         [24] 2904 	lcall	__sdcc_banked_call
                                   2905 ;	../../../core/net/mac/lpp.c:464: if(NETSTACK_RADIO.channel_clear()) {
      0009CD 90r00r0F         [24] 2906 	mov	dptr,#(_cc2530_rf_driver + 0x000f)
      0009D0 E4               [12] 2907 	clr	a
      0009D1 93               [24] 2908 	movc	a,@a+dptr
      0009D2 FD               [12] 2909 	mov	r5,a
      0009D3 A3               [24] 2910 	inc	dptr
      0009D4 E4               [12] 2911 	clr	a
      0009D5 93               [24] 2912 	movc	a,@a+dptr
      0009D6 FE               [12] 2913 	mov	r6,a
      0009D7 A3               [24] 2914 	inc	dptr
      0009D8 E4               [12] 2915 	clr	a
      0009D9 93               [24] 2916 	movc	a,@a+dptr
      0009DA FF               [12] 2917 	mov	r7,a
      0009DB C0 07            [24] 2918 	push	ar7
      0009DD C0 05            [24] 2919 	push	ar5
      0009DF C0 06            [24] 2920 	push	ar6
      0009E1 C0 07            [24] 2921 	push	ar7
      0009E3 D0 02            [24] 2922 	pop	ar2
      0009E5 D0 01            [24] 2923 	pop	ar1
      0009E7 D0 00            [24] 2924 	pop	ar0
      0009E9 12r00r00         [24] 2925 	lcall	__sdcc_banked_call
      0009EC AD 82            [24] 2926 	mov	r5,dpl
      0009EE AE 83            [24] 2927 	mov	r6,dph
      0009F0 D0 07            [24] 2928 	pop	ar7
      0009F2 ED               [12] 2929 	mov	a,r5
      0009F3 4E               [12] 2930 	orl	a,r6
      0009F4 60 70            [24] 2931 	jz	00105$
                                   2932 ;	../../../core/net/mac/lpp.c:465: NETSTACK_RADIO.send(packetbuf_hdrptr(), packetbuf_totlen());
      0009F6 90r00r09         [24] 2933 	mov	dptr,#(_cc2530_rf_driver + 0x0009)
      0009F9 E4               [12] 2934 	clr	a
      0009FA 93               [24] 2935 	movc	a,@a+dptr
      0009FB FD               [12] 2936 	mov	r5,a
      0009FC A3               [24] 2937 	inc	dptr
      0009FD E4               [12] 2938 	clr	a
      0009FE 93               [24] 2939 	movc	a,@a+dptr
      0009FF FE               [12] 2940 	mov	r6,a
      000A00 A3               [24] 2941 	inc	dptr
      000A01 E4               [12] 2942 	clr	a
      000A02 93               [24] 2943 	movc	a,@a+dptr
      000A03 FF               [12] 2944 	mov	r7,a
      000A04 C0 07            [24] 2945 	push	ar7
      000A06 C0 06            [24] 2946 	push	ar6
      000A08 C0 05            [24] 2947 	push	ar5
      000A0A 78r00            [12] 2948 	mov	r0,#_packetbuf_totlen
      000A0C 79s00            [12] 2949 	mov	r1,#(_packetbuf_totlen >> 8)
      000A0E 7As00            [12] 2950 	mov	r2,#(_packetbuf_totlen >> 16)
      000A10 12r00r00         [24] 2951 	lcall	__sdcc_banked_call
      000A13 C8               [12] 2952 	xch	a,r0
      000A14 E5 81            [12] 2953 	mov	a,sp
      000A16 24 F5            [12] 2954 	add	a,#0xf5
      000A18 C8               [12] 2955 	xch	a,r0
      000A19 A6 82            [24] 2956 	mov	@r0,dpl
      000A1B 08               [12] 2957 	inc	r0
      000A1C A6 83            [24] 2958 	mov	@r0,dph
      000A1E 78r00            [12] 2959 	mov	r0,#_packetbuf_hdrptr
      000A20 79s00            [12] 2960 	mov	r1,#(_packetbuf_hdrptr >> 8)
      000A22 7As00            [12] 2961 	mov	r2,#(_packetbuf_hdrptr >> 16)
      000A24 12r00r00         [24] 2962 	lcall	__sdcc_banked_call
      000A27 AA 82            [24] 2963 	mov	r2,dpl
      000A29 AB 83            [24] 2964 	mov	r3,dph
      000A2B AC F0            [24] 2965 	mov	r4,b
      000A2D D0 05            [24] 2966 	pop	ar5
      000A2F D0 06            [24] 2967 	pop	ar6
      000A31 D0 07            [24] 2968 	pop	ar7
      000A33 C0 07            [24] 2969 	push	ar7
      000A35 C0 06            [24] 2970 	push	ar6
      000A37 C0 05            [24] 2971 	push	ar5
      000A39 E5 81            [12] 2972 	mov	a,sp
      000A3B 24 F5            [12] 2973 	add	a,#0xf5
      000A3D F8               [12] 2974 	mov	r0,a
      000A3E E6               [12] 2975 	mov	a,@r0
      000A3F C0 E0            [24] 2976 	push	acc
      000A41 08               [12] 2977 	inc	r0
      000A42 E6               [12] 2978 	mov	a,@r0
      000A43 C0 E0            [24] 2979 	push	acc
      000A45 C0 05            [24] 2980 	push	ar5
      000A47 C0 06            [24] 2981 	push	ar6
      000A49 C0 07            [24] 2982 	push	ar7
      000A4B 8A 82            [24] 2983 	mov	dpl,r2
      000A4D 8B 83            [24] 2984 	mov	dph,r3
      000A4F 8C F0            [24] 2985 	mov	b,r4
      000A51 D0 02            [24] 2986 	pop	ar2
      000A53 D0 01            [24] 2987 	pop	ar1
      000A55 D0 00            [24] 2988 	pop	ar0
      000A57 12r00r00         [24] 2989 	lcall	__sdcc_banked_call
      000A5A 15 81            [12] 2990 	dec	sp
      000A5C 15 81            [12] 2991 	dec	sp
      000A5E D0 05            [24] 2992 	pop	ar5
      000A60 D0 06            [24] 2993 	pop	ar6
      000A62 D0 07            [24] 2994 	pop	ar7
      000A64 80 2B            [24] 2995 	sjmp	00106$
      000A66                       2996 00105$:
                                   2997 ;	../../../core/net/mac/lpp.c:467: off_time_adjustment = random_rand() % (OFF_TIME / 2);
      000A66 78r00            [12] 2998 	mov	r0,#_random_rand
      000A68 79s00            [12] 2999 	mov	r1,#(_random_rand >> 8)
      000A6A 7As00            [12] 3000 	mov	r2,#(_random_rand >> 16)
      000A6C 12r00r00         [24] 3001 	lcall	__sdcc_banked_call
      000A6F AE 82            [24] 3002 	mov	r6,dpl
      000A71 AF 83            [24] 3003 	mov	r7,dph
      000A73 74 07            [12] 3004 	mov	a,#0x07
      000A75 C0 E0            [24] 3005 	push	acc
      000A77 E4               [12] 3006 	clr	a
      000A78 C0 E0            [24] 3007 	push	acc
      000A7A 8E 82            [24] 3008 	mov	dpl,r6
      000A7C 8F 83            [24] 3009 	mov	dph,r7
      000A7E 12r00r00         [24] 3010 	lcall	__moduint
      000A81 AE 82            [24] 3011 	mov	r6,dpl
      000A83 AF 83            [24] 3012 	mov	r7,dph
      000A85 15 81            [12] 3013 	dec	sp
      000A87 15 81            [12] 3014 	dec	sp
      000A89 90r00r01         [24] 3015 	mov	dptr,#_off_time_adjustment
      000A8C EE               [12] 3016 	mov	a,r6
      000A8D F0               [24] 3017 	movx	@dptr,a
      000A8E EF               [12] 3018 	mov	a,r7
      000A8F A3               [24] 3019 	inc	dptr
      000A90 F0               [24] 3020 	movx	@dptr,a
      000A91                       3021 00106$:
                                   3022 ;	../../../core/net/mac/lpp.c:470: compower_accumulate(&compower_idle_activity);
      000A91 90r00r00         [24] 3023 	mov	dptr,#_compower_idle_activity
      000A94 75 F0 00         [24] 3024 	mov	b,#0x00
      000A97 78r00            [12] 3025 	mov	r0,#_compower_accumulate
      000A99 79s00            [12] 3026 	mov	r1,#(_compower_accumulate >> 8)
      000A9B 7As00            [12] 3027 	mov	r2,#(_compower_accumulate >> 16)
      000A9D 12r00r00         [24] 3028 	lcall	__sdcc_banked_call
      000AA0                       3029 00110$:
                                   3030 ;	../../../core/net/mac/lpp.c:471: }
      000AA0 E5 81            [12] 3031 	mov	a,sp
      000AA2 24 F7            [12] 3032 	add	a,#0xf7
      000AA4 F5 81            [12] 3033 	mov	sp,a
      000AA6 02r00r00         [24] 3034 	ljmp	__sdcc_banked_ret
                                   3035 ;------------------------------------------------------------
                                   3036 ;Allocation info for local variables in function 'send_stream_probe'
                                   3037 ;------------------------------------------------------------
                                   3038 ;dummy                     Allocated to registers 
                                   3039 ;------------------------------------------------------------
                                   3040 ;	../../../core/net/mac/lpp.c:474: send_stream_probe(void *dummy)
                                   3041 ;	-----------------------------------------
                                   3042 ;	 function send_stream_probe
                                   3043 ;	-----------------------------------------
      000AA9                       3044 _send_stream_probe:
                                   3045 ;	../../../core/net/mac/lpp.c:478: turn_radio_on();
      000AA9 78r00            [12] 3046 	mov	r0,#_turn_radio_on
      000AAB 79s00            [12] 3047 	mov	r1,#(_turn_radio_on >> 8)
      000AAD 7As00            [12] 3048 	mov	r2,#(_turn_radio_on >> 16)
      000AAF 12r00r00         [24] 3049 	lcall	__sdcc_banked_call
                                   3050 ;	../../../core/net/mac/lpp.c:481: send_probe();
      000AB2 78r0F            [12] 3051 	mov	r0,#_send_probe
      000AB4 79s07            [12] 3052 	mov	r1,#(_send_probe >> 8)
      000AB6 7As00            [12] 3053 	mov	r2,#(_send_probe >> 16)
      000AB8 12r00r00         [24] 3054 	lcall	__sdcc_banked_call
                                   3055 ;	../../../core/net/mac/lpp.c:484: is_streaming = 1;
      000ABB 90r00r2B         [24] 3056 	mov	dptr,#_is_streaming
      000ABE 74 01            [12] 3057 	mov	a,#0x01
      000AC0 F0               [24] 3058 	movx	@dptr,a
                                   3059 ;	../../../core/net/mac/lpp.c:486: }
      000AC1 02r00r00         [24] 3060 	ljmp	__sdcc_banked_ret
                                   3061 ;------------------------------------------------------------
                                   3062 ;Allocation info for local variables in function 'num_packets_to_send'
                                   3063 ;------------------------------------------------------------
                                   3064 ;	../../../core/net/mac/lpp.c:489: num_packets_to_send(void)
                                   3065 ;	-----------------------------------------
                                   3066 ;	 function num_packets_to_send
                                   3067 ;	-----------------------------------------
      000AC4                       3068 _num_packets_to_send:
                                   3069 ;	../../../core/net/mac/lpp.c:503: return list_length(queued_packets_list);
      000AC4 90r00r0E         [24] 3070 	mov	dptr,#_queued_packets_list
      000AC7 E0               [24] 3071 	movx	a,@dptr
      000AC8 FD               [12] 3072 	mov	r5,a
      000AC9 A3               [24] 3073 	inc	dptr
      000ACA E0               [24] 3074 	movx	a,@dptr
      000ACB FE               [12] 3075 	mov	r6,a
      000ACC A3               [24] 3076 	inc	dptr
      000ACD E0               [24] 3077 	movx	a,@dptr
      000ACE FF               [12] 3078 	mov	r7,a
      000ACF 8D 82            [24] 3079 	mov	dpl,r5
      000AD1 8E 83            [24] 3080 	mov	dph,r6
      000AD3 8F F0            [24] 3081 	mov	b,r7
      000AD5 78r00            [12] 3082 	mov	r0,#_list_length
      000AD7 79s00            [12] 3083 	mov	r1,#(_list_length >> 8)
      000AD9 7As00            [12] 3084 	mov	r2,#(_list_length >> 16)
      000ADB 12r00r00         [24] 3085 	lcall	__sdcc_banked_call
      000ADE AE 82            [24] 3086 	mov	r6,dpl
      000AE0 AF 83            [24] 3087 	mov  r7,dph
                                   3088 ;	../../../core/net/mac/lpp.c:505: }
      000AE2 02r00r00         [24] 3089 	ljmp	__sdcc_banked_ret
                                   3090 ;------------------------------------------------------------
                                   3091 ;Allocation info for local variables in function 'dutycycle'
                                   3092 ;------------------------------------------------------------
                                   3093 ;ptr                       Allocated to registers r5 r6 r7 
                                   3094 ;t                         Allocated to stack - sp -2
                                   3095 ;PT_YIELD_FLAG             Allocated to registers r4 
                                   3096 ;current_off_time          Allocated to registers r5 r6 
                                   3097 ;sloc0                     Allocated to stack - sp +4
                                   3098 ;sloc1                     Allocated to stack - sp -5
                                   3099 ;------------------------------------------------------------
                                   3100 ;	../../../core/net/mac/lpp.c:513: dutycycle(void *ptr)
                                   3101 ;	-----------------------------------------
                                   3102 ;	 function dutycycle
                                   3103 ;	-----------------------------------------
      000AE5                       3104 _dutycycle:
      000AE5 E5 81            [12] 3105 	mov	a,sp
      000AE7 24 06            [12] 3106 	add	a,#0x06
      000AE9 F5 81            [12] 3107 	mov	sp,a
      000AEB AD 82            [24] 3108 	mov	r5,dpl
      000AED AE 83            [24] 3109 	mov	r6,dph
      000AEF AF F0            [24] 3110 	mov	r7,b
                                   3111 ;	../../../core/net/mac/lpp.c:515: struct ctimer *t = ptr;
      000AF1 A8 81            [24] 3112 	mov	r0,sp
      000AF3 18               [12] 3113 	dec	r0
      000AF4 18               [12] 3114 	dec	r0
      000AF5 A6 05            [24] 3115 	mov	@r0,ar5
      000AF7 08               [12] 3116 	inc	r0
      000AF8 A6 06            [24] 3117 	mov	@r0,ar6
      000AFA 08               [12] 3118 	inc	r0
      000AFB A6 07            [24] 3119 	mov	@r0,ar7
                                   3120 ;	../../../core/net/mac/lpp.c:517: PT_BEGIN(&dutycycle_pt);
      000AFD 7C 01            [12] 3121 	mov	r4,#0x01
      000AFF 90r00r09         [24] 3122 	mov	dptr,#_dutycycle_pt
      000B02 E0               [24] 3123 	movx	a,@dptr
      000B03 FA               [12] 3124 	mov	r2,a
      000B04 A3               [24] 3125 	inc	dptr
      000B05 E0               [24] 3126 	movx	a,@dptr
      000B06 FB               [12] 3127 	mov	r3,a
      000B07 BA 00 05         [24] 3128 	cjne	r2,#0x00,00198$
      000B0A BB 00 02         [24] 3129 	cjne	r3,#0x00,00198$
      000B0D 80 27            [24] 3130 	sjmp	00137$
      000B0F                       3131 00198$:
      000B0F BA 21 06         [24] 3132 	cjne	r2,#0x21,00199$
      000B12 BB 02 03         [24] 3133 	cjne	r3,#0x02,00199$
      000B15 02r0Br95         [24] 3134 	ljmp	00102$
      000B18                       3135 00199$:
      000B18 BA 48 06         [24] 3136 	cjne	r2,#0x48,00200$
      000B1B BB 02 03         [24] 3137 	cjne	r3,#0x02,00200$
      000B1E 02r0Cr89         [24] 3138 	ljmp	00112$
      000B21                       3139 00200$:
      000B21 BA 56 06         [24] 3140 	cjne	r2,#0x56,00201$
      000B24 BB 02 03         [24] 3141 	cjne	r3,#0x02,00201$
      000B27 02r0CrE8         [24] 3142 	ljmp	00118$
      000B2A                       3143 00201$:
      000B2A BA 5C 06         [24] 3144 	cjne	r2,#0x5c,00202$
      000B2D BB 02 03         [24] 3145 	cjne	r3,#0x02,00202$
      000B30 02r0Dr43         [24] 3146 	ljmp	00127$
      000B33                       3147 00202$:
      000B33 02r0Dr4E         [24] 3148 	ljmp	00139$
                                   3149 ;	../../../core/net/mac/lpp.c:519: while(1) {
      000B36                       3150 00137$:
                                   3151 ;	../../../core/net/mac/lpp.c:538: turn_radio_on();
      000B36 78r00            [12] 3152 	mov	r0,#_turn_radio_on
      000B38 79s00            [12] 3153 	mov	r1,#(_turn_radio_on >> 8)
      000B3A 7As00            [12] 3154 	mov	r2,#(_turn_radio_on >> 16)
      000B3C 12r00r00         [24] 3155 	lcall	__sdcc_banked_call
                                   3156 ;	../../../core/net/mac/lpp.c:541: send_probe();
      000B3F 78r0F            [12] 3157 	mov	r0,#_send_probe
      000B41 79s07            [12] 3158 	mov	r1,#(_send_probe >> 8)
      000B43 7As00            [12] 3159 	mov	r2,#(_send_probe >> 16)
      000B45 12r00r00         [24] 3160 	lcall	__sdcc_banked_call
                                   3161 ;	../../../core/net/mac/lpp.c:544: ctimer_set(t, LISTEN_TIME, (void (*)(void *))dutycycle, t);
      000B48 A8 81            [24] 3162 	mov	r0,sp
      000B4A 18               [12] 3163 	dec	r0
      000B4B 18               [12] 3164 	dec	r0
      000B4C 86 04            [24] 3165 	mov	ar4,@r0
      000B4E 08               [12] 3166 	inc	r0
      000B4F 86 03            [24] 3167 	mov	ar3,@r0
      000B51 08               [12] 3168 	inc	r0
      000B52 86 02            [24] 3169 	mov	ar2,@r0
      000B54 7DrE5            [12] 3170 	mov	r5,#_dutycycle
      000B56 7Es0A            [12] 3171 	mov	r6,#(_dutycycle >> 8)
      000B58 7Fs00            [12] 3172 	mov	r7,#(_dutycycle >> 16)
      000B5A C0 04            [24] 3173 	push	ar4
      000B5C C0 03            [24] 3174 	push	ar3
      000B5E C0 02            [24] 3175 	push	ar2
      000B60 C0 05            [24] 3176 	push	ar5
      000B62 C0 06            [24] 3177 	push	ar6
      000B64 C0 07            [24] 3178 	push	ar7
      000B66 74 01            [12] 3179 	mov	a,#0x01
      000B68 C0 E0            [24] 3180 	push	acc
      000B6A E4               [12] 3181 	clr	a
      000B6B C0 E0            [24] 3182 	push	acc
      000B6D E5 81            [12] 3183 	mov	a,sp
      000B6F 24 F6            [12] 3184 	add	a,#0xf6
      000B71 F8               [12] 3185 	mov	r0,a
      000B72 86 82            [24] 3186 	mov	dpl,@r0
      000B74 08               [12] 3187 	inc	r0
      000B75 86 83            [24] 3188 	mov	dph,@r0
      000B77 08               [12] 3189 	inc	r0
      000B78 86 F0            [24] 3190 	mov	b,@r0
      000B7A 78r00            [12] 3191 	mov	r0,#_ctimer_set
      000B7C 79s00            [12] 3192 	mov	r1,#(_ctimer_set >> 8)
      000B7E 7As00            [12] 3193 	mov	r2,#(_ctimer_set >> 16)
      000B80 12r00r00         [24] 3194 	lcall	__sdcc_banked_call
      000B83 E5 81            [12] 3195 	mov	a,sp
      000B85 24 F8            [12] 3196 	add	a,#0xf8
      000B87 F5 81            [12] 3197 	mov	sp,a
                                   3198 ;	../../../core/net/mac/lpp.c:545: PT_YIELD(&dutycycle_pt);
      000B89 7C 00            [12] 3199 	mov	r4,#0x00
      000B8B 90r00r09         [24] 3200 	mov	dptr,#_dutycycle_pt
      000B8E 74 21            [12] 3201 	mov	a,#0x21
      000B90 F0               [24] 3202 	movx	@dptr,a
      000B91 74 02            [12] 3203 	mov	a,#0x02
      000B93 A3               [24] 3204 	inc	dptr
      000B94 F0               [24] 3205 	movx	@dptr,a
      000B95                       3206 00102$:
      000B95 EC               [12] 3207 	mov	a,r4
      000B96 70 06            [24] 3208 	jnz	00106$
      000B98 90 00 01         [24] 3209 	mov	dptr,#0x0001
      000B9B 02r0Dr58         [24] 3210 	ljmp	00140$
      000B9E                       3211 00106$:
                                   3212 ;	../../../core/net/mac/lpp.c:568: if(num_packets_to_send() == 0) {
      000B9E 78rC4            [12] 3213 	mov	r0,#_num_packets_to_send
      000BA0 79s0A            [12] 3214 	mov	r1,#(_num_packets_to_send >> 8)
      000BA2 7As00            [12] 3215 	mov	r2,#(_num_packets_to_send >> 16)
      000BA4 12r00r00         [24] 3216 	lcall	__sdcc_banked_call
      000BA7 E5 82            [12] 3217 	mov	a,dpl
      000BA9 85 83 F0         [24] 3218 	mov	b,dph
      000BAC 45 F0            [12] 3219 	orl	a,b
      000BAE 60 03            [24] 3220 	jz	00204$
      000BB0 02r0CrF3         [24] 3221 	ljmp	00134$
      000BB3                       3222 00204$:
                                   3223 ;	../../../core/net/mac/lpp.c:572: if(is_listening == 0) {
      000BB3 90r00r00         [24] 3224 	mov	dptr,#_is_listening
      000BB6 E0               [24] 3225 	movx	a,@dptr
      000BB7 FF               [12] 3226 	mov	r7,a
      000BB8 E0               [24] 3227 	movx	a,@dptr
      000BB9 60 03            [24] 3228 	jz	00205$
      000BBB 02r0Cr95         [24] 3229 	ljmp	00125$
      000BBE                       3230 00205$:
                                   3231 ;	../../../core/net/mac/lpp.c:574: if(!NETSTACK_RADIO.receiving_packet()) {
      000BBE 90r00r12         [24] 3232 	mov	dptr,#(_cc2530_rf_driver + 0x0012)
      000BC1 E4               [12] 3233 	clr	a
      000BC2 93               [24] 3234 	movc	a,@a+dptr
      000BC3 FB               [12] 3235 	mov	r3,a
      000BC4 A3               [24] 3236 	inc	dptr
      000BC5 E4               [12] 3237 	clr	a
      000BC6 93               [24] 3238 	movc	a,@a+dptr
      000BC7 FD               [12] 3239 	mov	r5,a
      000BC8 A3               [24] 3240 	inc	dptr
      000BC9 E4               [12] 3241 	clr	a
      000BCA 93               [24] 3242 	movc	a,@a+dptr
      000BCB FE               [12] 3243 	mov	r6,a
      000BCC C0 06            [24] 3244 	push	ar6
      000BCE C0 03            [24] 3245 	push	ar3
      000BD0 C0 05            [24] 3246 	push	ar5
      000BD2 C0 06            [24] 3247 	push	ar6
      000BD4 D0 02            [24] 3248 	pop	ar2
      000BD6 D0 01            [24] 3249 	pop	ar1
      000BD8 D0 00            [24] 3250 	pop	ar0
      000BDA 12r00r00         [24] 3251 	lcall	__sdcc_banked_call
      000BDD AB 82            [24] 3252 	mov	r3,dpl
      000BDF AD 83            [24] 3253 	mov	r5,dph
      000BE1 D0 06            [24] 3254 	pop	ar6
      000BE3 EB               [12] 3255 	mov	a,r3
      000BE4 4D               [12] 3256 	orl	a,r5
      000BE5 70 18            [24] 3257 	jnz	00109$
                                   3258 ;	../../../core/net/mac/lpp.c:575: turn_radio_off();
      000BE7 78r2C            [12] 3259 	mov	r0,#_turn_radio_off
      000BE9 79s00            [12] 3260 	mov	r1,#(_turn_radio_off >> 8)
      000BEB 7As00            [12] 3261 	mov	r2,#(_turn_radio_off >> 16)
      000BED 12r00r00         [24] 3262 	lcall	__sdcc_banked_call
                                   3263 ;	../../../core/net/mac/lpp.c:576: compower_accumulate(&compower_idle_activity);
      000BF0 90r00r00         [24] 3264 	mov	dptr,#_compower_idle_activity
      000BF3 75 F0 00         [24] 3265 	mov	b,#0x00
      000BF6 78r00            [12] 3266 	mov	r0,#_compower_accumulate
      000BF8 79s00            [12] 3267 	mov	r1,#(_compower_accumulate >> 8)
      000BFA 7As00            [12] 3268 	mov	r2,#(_compower_accumulate >> 16)
      000BFC 12r00r00         [24] 3269 	lcall	__sdcc_banked_call
      000BFF                       3270 00109$:
                                   3271 ;	../../../core/net/mac/lpp.c:578: current_off_time = off_time - off_time_adjustment;
      000BFF 90r00r01         [24] 3272 	mov	dptr,#_off_time_adjustment
      000C02 E0               [24] 3273 	movx	a,@dptr
      000C03 FD               [12] 3274 	mov	r5,a
      000C04 A3               [24] 3275 	inc	dptr
      000C05 E0               [24] 3276 	movx	a,@dptr
      000C06 FE               [12] 3277 	mov	r6,a
      000C07 90r00r03         [24] 3278 	mov	dptr,#_off_time
      000C0A E0               [24] 3279 	movx	a,@dptr
      000C0B FA               [12] 3280 	mov	r2,a
      000C0C A3               [24] 3281 	inc	dptr
      000C0D E0               [24] 3282 	movx	a,@dptr
      000C0E FB               [12] 3283 	mov	r3,a
      000C0F EA               [12] 3284 	mov	a,r2
      000C10 C3               [12] 3285 	clr	c
      000C11 9D               [12] 3286 	subb	a,r5
      000C12 FD               [12] 3287 	mov	r5,a
      000C13 EB               [12] 3288 	mov	a,r3
      000C14 9E               [12] 3289 	subb	a,r6
      000C15 FE               [12] 3290 	mov	r6,a
                                   3291 ;	../../../core/net/mac/lpp.c:579: if(current_off_time < LISTEN_TIME * 2) {
      000C16 C3               [12] 3292 	clr	c
      000C17 ED               [12] 3293 	mov	a,r5
      000C18 94 02            [12] 3294 	subb	a,#0x02
      000C1A EE               [12] 3295 	mov	a,r6
      000C1B 64 80            [12] 3296 	xrl	a,#0x80
      000C1D 94 80            [12] 3297 	subb	a,#0x80
      000C1F 50 04            [24] 3298 	jnc	00111$
                                   3299 ;	../../../core/net/mac/lpp.c:580: current_off_time = LISTEN_TIME * 2;
      000C21 7D 02            [12] 3300 	mov	r5,#0x02
      000C23 7E 00            [12] 3301 	mov	r6,#0x00
      000C25                       3302 00111$:
                                   3303 ;	../../../core/net/mac/lpp.c:582: off_time_adjustment = 0;
      000C25 90r00r01         [24] 3304 	mov	dptr,#_off_time_adjustment
      000C28 E4               [12] 3305 	clr	a
      000C29 F0               [24] 3306 	movx	@dptr,a
      000C2A A3               [24] 3307 	inc	dptr
      000C2B F0               [24] 3308 	movx	@dptr,a
                                   3309 ;	../../../core/net/mac/lpp.c:583: ctimer_set(t, current_off_time, (void (*)(void *))dutycycle, t);
      000C2C A8 81            [24] 3310 	mov	r0,sp
      000C2E 18               [12] 3311 	dec	r0
      000C2F 18               [12] 3312 	dec	r0
      000C30 86 07            [24] 3313 	mov	ar7,@r0
      000C32 08               [12] 3314 	inc	r0
      000C33 86 04            [24] 3315 	mov	ar4,@r0
      000C35 08               [12] 3316 	inc	r0
      000C36 86 03            [24] 3317 	mov	ar3,@r0
      000C38 E5 81            [12] 3318 	mov	a,sp
      000C3A 24 FB            [12] 3319 	add	a,#0xfb
      000C3C F8               [12] 3320 	mov	r0,a
      000C3D 76rE5            [12] 3321 	mov	@r0,#_dutycycle
      000C3F 08               [12] 3322 	inc	r0
      000C40 76s0A            [12] 3323 	mov	@r0,#(_dutycycle >> 8)
      000C42 08               [12] 3324 	inc	r0
      000C43 76s00            [12] 3325 	mov	@r0,#(_dutycycle >> 16)
      000C45 8D 02            [24] 3326 	mov	ar2,r5
      000C47 C0 07            [24] 3327 	push	ar7
      000C49 C0 04            [24] 3328 	push	ar4
      000C4B C0 03            [24] 3329 	push	ar3
      000C4D E5 81            [12] 3330 	mov	a,sp
      000C4F 24 F8            [12] 3331 	add	a,#0xf8
      000C51 F8               [12] 3332 	mov	r0,a
      000C52 E6               [12] 3333 	mov	a,@r0
      000C53 C0 E0            [24] 3334 	push	acc
      000C55 08               [12] 3335 	inc	r0
      000C56 E6               [12] 3336 	mov	a,@r0
      000C57 C0 E0            [24] 3337 	push	acc
      000C59 08               [12] 3338 	inc	r0
      000C5A E6               [12] 3339 	mov	a,@r0
      000C5B C0 E0            [24] 3340 	push	acc
      000C5D C0 02            [24] 3341 	push	ar2
      000C5F C0 06            [24] 3342 	push	ar6
      000C61 E5 81            [12] 3343 	mov	a,sp
      000C63 24 F6            [12] 3344 	add	a,#0xf6
      000C65 F8               [12] 3345 	mov	r0,a
      000C66 86 82            [24] 3346 	mov	dpl,@r0
      000C68 08               [12] 3347 	inc	r0
      000C69 86 83            [24] 3348 	mov	dph,@r0
      000C6B 08               [12] 3349 	inc	r0
      000C6C 86 F0            [24] 3350 	mov	b,@r0
      000C6E 78r00            [12] 3351 	mov	r0,#_ctimer_set
      000C70 79s00            [12] 3352 	mov	r1,#(_ctimer_set >> 8)
      000C72 7As00            [12] 3353 	mov	r2,#(_ctimer_set >> 16)
      000C74 12r00r00         [24] 3354 	lcall	__sdcc_banked_call
      000C77 E5 81            [12] 3355 	mov	a,sp
      000C79 24 F8            [12] 3356 	add	a,#0xf8
      000C7B F5 81            [12] 3357 	mov	sp,a
                                   3358 ;	../../../core/net/mac/lpp.c:584: PT_YIELD(&dutycycle_pt);
      000C7D 7C 00            [12] 3359 	mov	r4,#0x00
      000C7F 90r00r09         [24] 3360 	mov	dptr,#_dutycycle_pt
      000C82 74 48            [12] 3361 	mov	a,#0x48
      000C84 F0               [24] 3362 	movx	@dptr,a
      000C85 74 02            [12] 3363 	mov	a,#0x02
      000C87 A3               [24] 3364 	inc	dptr
      000C88 F0               [24] 3365 	movx	@dptr,a
      000C89                       3366 00112$:
      000C89 EC               [12] 3367 	mov	a,r4
      000C8A 60 03            [24] 3368 	jz	00208$
      000C8C 02r0Br36         [24] 3369 	ljmp	00137$
      000C8F                       3370 00208$:
      000C8F 90 00 01         [24] 3371 	mov	dptr,#0x0001
      000C92 02r0Dr58         [24] 3372 	ljmp	00140$
      000C95                       3373 00125$:
                                   3374 ;	../../../core/net/mac/lpp.c:596: is_listening--;
      000C95 EF               [12] 3375 	mov	a,r7
      000C96 14               [12] 3376 	dec	a
      000C97 90r00r00         [24] 3377 	mov	dptr,#_is_listening
      000C9A F0               [24] 3378 	movx	@dptr,a
                                   3379 ;	../../../core/net/mac/lpp.c:597: ctimer_set(t, OFF_TIME, (void (*)(void *))dutycycle, t);
      000C9B A8 81            [24] 3380 	mov	r0,sp
      000C9D 18               [12] 3381 	dec	r0
      000C9E 18               [12] 3382 	dec	r0
      000C9F 86 05            [24] 3383 	mov	ar5,@r0
      000CA1 08               [12] 3384 	inc	r0
      000CA2 86 06            [24] 3385 	mov	ar6,@r0
      000CA4 08               [12] 3386 	inc	r0
      000CA5 86 04            [24] 3387 	mov	ar4,@r0
      000CA7 7ArE5            [12] 3388 	mov	r2,#_dutycycle
      000CA9 7Bs0A            [12] 3389 	mov	r3,#(_dutycycle >> 8)
      000CAB 7Fs00            [12] 3390 	mov	r7,#(_dutycycle >> 16)
      000CAD C0 05            [24] 3391 	push	ar5
      000CAF C0 06            [24] 3392 	push	ar6
      000CB1 C0 04            [24] 3393 	push	ar4
      000CB3 C0 02            [24] 3394 	push	ar2
      000CB5 C0 03            [24] 3395 	push	ar3
      000CB7 C0 07            [24] 3396 	push	ar7
      000CB9 74 0F            [12] 3397 	mov	a,#0x0f
      000CBB C0 E0            [24] 3398 	push	acc
      000CBD E4               [12] 3399 	clr	a
      000CBE C0 E0            [24] 3400 	push	acc
      000CC0 E5 81            [12] 3401 	mov	a,sp
      000CC2 24 F6            [12] 3402 	add	a,#0xf6
      000CC4 F8               [12] 3403 	mov	r0,a
      000CC5 86 82            [24] 3404 	mov	dpl,@r0
      000CC7 08               [12] 3405 	inc	r0
      000CC8 86 83            [24] 3406 	mov	dph,@r0
      000CCA 08               [12] 3407 	inc	r0
      000CCB 86 F0            [24] 3408 	mov	b,@r0
      000CCD 78r00            [12] 3409 	mov	r0,#_ctimer_set
      000CCF 79s00            [12] 3410 	mov	r1,#(_ctimer_set >> 8)
      000CD1 7As00            [12] 3411 	mov	r2,#(_ctimer_set >> 16)
      000CD3 12r00r00         [24] 3412 	lcall	__sdcc_banked_call
      000CD6 E5 81            [12] 3413 	mov	a,sp
      000CD8 24 F8            [12] 3414 	add	a,#0xf8
      000CDA F5 81            [12] 3415 	mov	sp,a
                                   3416 ;	../../../core/net/mac/lpp.c:598: PT_YIELD(&dutycycle_pt);
      000CDC 7C 00            [12] 3417 	mov	r4,#0x00
      000CDE 90r00r09         [24] 3418 	mov	dptr,#_dutycycle_pt
      000CE1 74 56            [12] 3419 	mov	a,#0x56
      000CE3 F0               [24] 3420 	movx	@dptr,a
      000CE4 74 02            [12] 3421 	mov	a,#0x02
      000CE6 A3               [24] 3422 	inc	dptr
      000CE7 F0               [24] 3423 	movx	@dptr,a
      000CE8                       3424 00118$:
      000CE8 EC               [12] 3425 	mov	a,r4
      000CE9 60 03            [24] 3426 	jz	00209$
      000CEB 02r0Br36         [24] 3427 	ljmp	00137$
      000CEE                       3428 00209$:
      000CEE 90 00 01         [24] 3429 	mov	dptr,#0x0001
      000CF1 80 65            [24] 3430 	sjmp	00140$
      000CF3                       3431 00134$:
                                   3432 ;	../../../core/net/mac/lpp.c:603: ctimer_set(t, off_time, (void (*)(void *))dutycycle, t);
      000CF3 A8 81            [24] 3433 	mov	r0,sp
      000CF5 18               [12] 3434 	dec	r0
      000CF6 18               [12] 3435 	dec	r0
      000CF7 86 05            [24] 3436 	mov	ar5,@r0
      000CF9 08               [12] 3437 	inc	r0
      000CFA 86 06            [24] 3438 	mov	ar6,@r0
      000CFC 08               [12] 3439 	inc	r0
      000CFD 86 04            [24] 3440 	mov	ar4,@r0
      000CFF 7ArE5            [12] 3441 	mov	r2,#_dutycycle
      000D01 7Bs0A            [12] 3442 	mov	r3,#(_dutycycle >> 8)
      000D03 7Fs00            [12] 3443 	mov	r7,#(_dutycycle >> 16)
      000D05 C0 05            [24] 3444 	push	ar5
      000D07 C0 06            [24] 3445 	push	ar6
      000D09 C0 04            [24] 3446 	push	ar4
      000D0B C0 02            [24] 3447 	push	ar2
      000D0D C0 03            [24] 3448 	push	ar3
      000D0F C0 07            [24] 3449 	push	ar7
      000D11 90r00r03         [24] 3450 	mov	dptr,#_off_time
      000D14 E0               [24] 3451 	movx	a,@dptr
      000D15 C0 E0            [24] 3452 	push	acc
      000D17 A3               [24] 3453 	inc	dptr
      000D18 E0               [24] 3454 	movx	a,@dptr
      000D19 C0 E0            [24] 3455 	push	acc
      000D1B E5 81            [12] 3456 	mov	a,sp
      000D1D 24 F6            [12] 3457 	add	a,#0xf6
      000D1F F8               [12] 3458 	mov	r0,a
      000D20 86 82            [24] 3459 	mov	dpl,@r0
      000D22 08               [12] 3460 	inc	r0
      000D23 86 83            [24] 3461 	mov	dph,@r0
      000D25 08               [12] 3462 	inc	r0
      000D26 86 F0            [24] 3463 	mov	b,@r0
      000D28 78r00            [12] 3464 	mov	r0,#_ctimer_set
      000D2A 79s00            [12] 3465 	mov	r1,#(_ctimer_set >> 8)
      000D2C 7As00            [12] 3466 	mov	r2,#(_ctimer_set >> 16)
      000D2E 12r00r00         [24] 3467 	lcall	__sdcc_banked_call
      000D31 E5 81            [12] 3468 	mov	a,sp
      000D33 24 F8            [12] 3469 	add	a,#0xf8
      000D35 F5 81            [12] 3470 	mov	sp,a
                                   3471 ;	../../../core/net/mac/lpp.c:604: PT_YIELD(&dutycycle_pt);
      000D37 7C 00            [12] 3472 	mov	r4,#0x00
      000D39 90r00r09         [24] 3473 	mov	dptr,#_dutycycle_pt
      000D3C 74 5C            [12] 3474 	mov	a,#0x5c
      000D3E F0               [24] 3475 	movx	@dptr,a
      000D3F 74 02            [12] 3476 	mov	a,#0x02
      000D41 A3               [24] 3477 	inc	dptr
      000D42 F0               [24] 3478 	movx	@dptr,a
      000D43                       3479 00127$:
      000D43 EC               [12] 3480 	mov	a,r4
      000D44 60 03            [24] 3481 	jz	00210$
      000D46 02r0Br36         [24] 3482 	ljmp	00137$
      000D49                       3483 00210$:
      000D49 90 00 01         [24] 3484 	mov	dptr,#0x0001
                                   3485 ;	../../../core/net/mac/lpp.c:608: PT_END(&dutycycle_pt);
      000D4C 80 0A            [24] 3486 	sjmp	00140$
      000D4E                       3487 00139$:
      000D4E 90r00r09         [24] 3488 	mov	dptr,#_dutycycle_pt
      000D51 E4               [12] 3489 	clr	a
      000D52 F0               [24] 3490 	movx	@dptr,a
      000D53 A3               [24] 3491 	inc	dptr
      000D54 F0               [24] 3492 	movx	@dptr,a
      000D55 90 00 03         [24] 3493 	mov	dptr,#0x0003
      000D58                       3494 00140$:
                                   3495 ;	../../../core/net/mac/lpp.c:609: }
      000D58 E5 81            [12] 3496 	mov	a,sp
      000D5A 24 FA            [12] 3497 	add	a,#0xfa
      000D5C F5 81            [12] 3498 	mov	sp,a
      000D5E 02r00r00         [24] 3499 	ljmp	__sdcc_banked_ret
                                   3500 ;------------------------------------------------------------
                                   3501 ;Allocation info for local variables in function 'restart_dutycycle'
                                   3502 ;------------------------------------------------------------
                                   3503 ;initial_wait              Allocated to registers r6 r7 
                                   3504 ;------------------------------------------------------------
                                   3505 ;	../../../core/net/mac/lpp.c:612: restart_dutycycle(clock_time_t initial_wait)
                                   3506 ;	-----------------------------------------
                                   3507 ;	 function restart_dutycycle
                                   3508 ;	-----------------------------------------
      000D61                       3509 _restart_dutycycle:
      000D61 AE 82            [24] 3510 	mov	r6,dpl
      000D63 AF 83            [24] 3511 	mov	r7,dph
                                   3512 ;	../../../core/net/mac/lpp.c:614: PT_INIT(&dutycycle_pt);
      000D65 90r00r09         [24] 3513 	mov	dptr,#_dutycycle_pt
      000D68 E4               [12] 3514 	clr	a
      000D69 F0               [24] 3515 	movx	@dptr,a
      000D6A A3               [24] 3516 	inc	dptr
      000D6B F0               [24] 3517 	movx	@dptr,a
                                   3518 ;	../../../core/net/mac/lpp.c:615: ctimer_set(&timer, initial_wait, (void (*)(void *))dutycycle, &timer);  
      000D6C 7BrE5            [12] 3519 	mov	r3,#_dutycycle
      000D6E 7Cs0A            [12] 3520 	mov	r4,#(_dutycycle >> 8)
      000D70 7Ds00            [12] 3521 	mov	r5,#(_dutycycle >> 16)
      000D72 74r0B            [12] 3522 	mov	a,#_timer
      000D74 C0 E0            [24] 3523 	push	acc
      000D76 74s00            [12] 3524 	mov	a,#(_timer >> 8)
      000D78 C0 E0            [24] 3525 	push	acc
      000D7A E4               [12] 3526 	clr	a
      000D7B C0 E0            [24] 3527 	push	acc
      000D7D C0 03            [24] 3528 	push	ar3
      000D7F C0 04            [24] 3529 	push	ar4
      000D81 C0 05            [24] 3530 	push	ar5
      000D83 C0 06            [24] 3531 	push	ar6
      000D85 C0 07            [24] 3532 	push	ar7
      000D87 90r00r0B         [24] 3533 	mov	dptr,#_timer
      000D8A 75 F0 00         [24] 3534 	mov	b,#0x00
      000D8D 78r00            [12] 3535 	mov	r0,#_ctimer_set
      000D8F 79s00            [12] 3536 	mov	r1,#(_ctimer_set >> 8)
      000D91 7As00            [12] 3537 	mov	r2,#(_ctimer_set >> 16)
      000D93 12r00r00         [24] 3538 	lcall	__sdcc_banked_call
      000D96 E5 81            [12] 3539 	mov	a,sp
      000D98 24 F8            [12] 3540 	add	a,#0xf8
      000D9A F5 81            [12] 3541 	mov	sp,a
                                   3542 ;	../../../core/net/mac/lpp.c:616: }
      000D9C 02r00r00         [24] 3543 	ljmp	__sdcc_banked_ret
                                   3544 ;------------------------------------------------------------
                                   3545 ;Allocation info for local variables in function 'send_packet'
                                   3546 ;------------------------------------------------------------
                                   3547 ;ptr                       Allocated to stack - sp -33
                                   3548 ;sent                      Allocated to stack - sp -27
                                   3549 ;hdr                       Allocated to stack - sp -23
                                   3550 ;timeout                   Allocated to stack - sp -5
                                   3551 ;is_broadcast              Allocated to stack - sp -3
                                   3552 ;hdrlen                    Allocated to registers r5 r6 
                                   3553 ;i                         Allocated to stack - sp -2
                                   3554 ;sloc0                     Allocated to stack - sp -24
                                   3555 ;------------------------------------------------------------
                                   3556 ;	../../../core/net/mac/lpp.c:633: send_packet(mac_callback_t sent, void *ptr)
                                   3557 ;	-----------------------------------------
                                   3558 ;	 function send_packet
                                   3559 ;	-----------------------------------------
      000D9F                       3560 _send_packet:
      000D9F C0 82            [24] 3561 	push	dpl
      000DA1 C0 83            [24] 3562 	push	dph
      000DA3 C0 F0            [24] 3563 	push	b
      000DA5 E5 81            [12] 3564 	mov	a,sp
      000DA7 24 19            [12] 3565 	add	a,#0x19
                                   3566 ;	../../../core/net/mac/lpp.c:637: uint8_t is_broadcast = 0;
      000DA9 F5 81            [12] 3567 	mov	sp,a
      000DAB 24 FD            [12] 3568 	add	a,#0xfd
      000DAD F8               [12] 3569 	mov	r0,a
      000DAE 76 00            [12] 3570 	mov	@r0,#0x00
                                   3571 ;	../../../core/net/mac/lpp.c:639: rimeaddr_copy(&hdr.sender, &rimeaddr_node_addr);
      000DB0 E5 81            [12] 3572 	mov	a,sp
      000DB2 24 E9            [12] 3573 	add	a,#0xe9
      000DB4 F9               [12] 3574 	mov	r1,a
      000DB5 24 02            [12] 3575 	add	a,#0x02
      000DB7 FA               [12] 3576 	mov	r2,a
      000DB8 7B 00            [12] 3577 	mov	r3,#0x00
      000DBA 7C 40            [12] 3578 	mov	r4,#0x40
      000DBC C0 01            [24] 3579 	push	ar1
      000DBE 74r00            [12] 3580 	mov	a,#_rimeaddr_node_addr
      000DC0 C0 E0            [24] 3581 	push	acc
      000DC2 74s00            [12] 3582 	mov	a,#(_rimeaddr_node_addr >> 8)
      000DC4 C0 E0            [24] 3583 	push	acc
      000DC6 E4               [12] 3584 	clr	a
      000DC7 C0 E0            [24] 3585 	push	acc
      000DC9 8A 82            [24] 3586 	mov	dpl,r2
      000DCB 8B 83            [24] 3587 	mov	dph,r3
      000DCD 8C F0            [24] 3588 	mov	b,r4
      000DCF 78r00            [12] 3589 	mov	r0,#_rimeaddr_copy
      000DD1 79s00            [12] 3590 	mov	r1,#(_rimeaddr_copy >> 8)
      000DD3 7As00            [12] 3591 	mov	r2,#(_rimeaddr_copy >> 16)
      000DD5 12r00r00         [24] 3592 	lcall	__sdcc_banked_call
      000DD8 15 81            [12] 3593 	dec	sp
      000DDA 15 81            [12] 3594 	dec	sp
      000DDC 15 81            [12] 3595 	dec	sp
                                   3596 ;	../../../core/net/mac/lpp.c:640: rimeaddr_copy(&hdr.receiver, packetbuf_addr(PACKETBUF_ADDR_RECEIVER));
      000DDE 75 82 19         [24] 3597 	mov	dpl,#0x19
      000DE1 78r00            [12] 3598 	mov	r0,#_packetbuf_addr
      000DE3 79s00            [12] 3599 	mov	r1,#(_packetbuf_addr >> 8)
      000DE5 7As00            [12] 3600 	mov	r2,#(_packetbuf_addr >> 16)
      000DE7 12r00r00         [24] 3601 	lcall	__sdcc_banked_call
      000DEA AA 82            [24] 3602 	mov	r2,dpl
      000DEC AB 83            [24] 3603 	mov	r3,dph
      000DEE AC F0            [24] 3604 	mov	r4,b
      000DF0 D0 01            [24] 3605 	pop	ar1
      000DF2 E5 81            [12] 3606 	mov	a,sp
      000DF4 24 E8            [12] 3607 	add	a,#0xe8
      000DF6 F8               [12] 3608 	mov	r0,a
      000DF7 74 0A            [12] 3609 	mov	a,#0x0a
      000DF9 29               [12] 3610 	add	a,r1
      000DFA F6               [12] 3611 	mov	@r0,a
      000DFB E5 81            [12] 3612 	mov	a,sp
      000DFD 24 E8            [12] 3613 	add	a,#0xe8
      000DFF F8               [12] 3614 	mov	r0,a
      000E00 86 05            [24] 3615 	mov	ar5,@r0
      000E02 7E 00            [12] 3616 	mov	r6,#0x00
      000E04 7F 40            [12] 3617 	mov	r7,#0x40
      000E06 C0 01            [24] 3618 	push	ar1
      000E08 C0 02            [24] 3619 	push	ar2
      000E0A C0 03            [24] 3620 	push	ar3
      000E0C C0 04            [24] 3621 	push	ar4
      000E0E 8D 82            [24] 3622 	mov	dpl,r5
      000E10 8E 83            [24] 3623 	mov	dph,r6
      000E12 8F F0            [24] 3624 	mov	b,r7
      000E14 78r00            [12] 3625 	mov	r0,#_rimeaddr_copy
      000E16 79s00            [12] 3626 	mov	r1,#(_rimeaddr_copy >> 8)
      000E18 7As00            [12] 3627 	mov	r2,#(_rimeaddr_copy >> 16)
      000E1A 12r00r00         [24] 3628 	lcall	__sdcc_banked_call
      000E1D 15 81            [12] 3629 	dec	sp
      000E1F 15 81            [12] 3630 	dec	sp
      000E21 15 81            [12] 3631 	dec	sp
      000E23 D0 01            [24] 3632 	pop	ar1
                                   3633 ;	../../../core/net/mac/lpp.c:641: if(rimeaddr_cmp(&hdr.receiver, &rimeaddr_null)) {
      000E25 E5 81            [12] 3634 	mov	a,sp
      000E27 24 E8            [12] 3635 	add	a,#0xe8
      000E29 F8               [12] 3636 	mov	r0,a
      000E2A 86 07            [24] 3637 	mov	ar7,@r0
      000E2C 7E 00            [12] 3638 	mov	r6,#0x00
      000E2E 7D 40            [12] 3639 	mov	r5,#0x40
      000E30 C0 01            [24] 3640 	push	ar1
      000E32 74r00            [12] 3641 	mov	a,#_rimeaddr_null
      000E34 C0 E0            [24] 3642 	push	acc
      000E36 74s00            [12] 3643 	mov	a,#(_rimeaddr_null >> 8)
      000E38 C0 E0            [24] 3644 	push	acc
      000E3A 74 80            [12] 3645 	mov	a,#0x80
      000E3C C0 E0            [24] 3646 	push	acc
      000E3E 8F 82            [24] 3647 	mov	dpl,r7
      000E40 8E 83            [24] 3648 	mov	dph,r6
      000E42 8D F0            [24] 3649 	mov	b,r5
      000E44 78r00            [12] 3650 	mov	r0,#_rimeaddr_cmp
      000E46 79s00            [12] 3651 	mov	r1,#(_rimeaddr_cmp >> 8)
      000E48 7As00            [12] 3652 	mov	r2,#(_rimeaddr_cmp >> 16)
      000E4A 12r00r00         [24] 3653 	lcall	__sdcc_banked_call
      000E4D AE 82            [24] 3654 	mov	r6,dpl
      000E4F AF 83            [24] 3655 	mov	r7,dph
      000E51 15 81            [12] 3656 	dec	sp
      000E53 15 81            [12] 3657 	dec	sp
      000E55 15 81            [12] 3658 	dec	sp
      000E57 D0 01            [24] 3659 	pop	ar1
      000E59 EE               [12] 3660 	mov	a,r6
      000E5A 4F               [12] 3661 	orl	a,r7
      000E5B 60 07            [24] 3662 	jz	00102$
                                   3663 ;	../../../core/net/mac/lpp.c:642: is_broadcast = 1;
      000E5D E5 81            [12] 3664 	mov	a,sp
      000E5F 24 FD            [12] 3665 	add	a,#0xfd
      000E61 F8               [12] 3666 	mov	r0,a
      000E62 76 01            [12] 3667 	mov	@r0,#0x01
      000E64                       3668 00102$:
                                   3669 ;	../../../core/net/mac/lpp.c:644: hdr.type = TYPE_DATA;
      000E64 77 02            [12] 3670 	mov	@r1,#0x02
      000E66 09               [12] 3671 	inc	r1
      000E67 77 00            [12] 3672 	mov	@r1,#0x00
      000E69 19               [12] 3673 	dec	r1
                                   3674 ;	../../../core/net/mac/lpp.c:646: packetbuf_hdralloc(sizeof(struct lpp_hdr));
      000E6A 90 00 12         [24] 3675 	mov	dptr,#0x0012
      000E6D C0 01            [24] 3676 	push	ar1
      000E6F 78r00            [12] 3677 	mov	r0,#_packetbuf_hdralloc
      000E71 79s00            [12] 3678 	mov	r1,#(_packetbuf_hdralloc >> 8)
      000E73 7As00            [12] 3679 	mov	r2,#(_packetbuf_hdralloc >> 16)
      000E75 12r00r00         [24] 3680 	lcall	__sdcc_banked_call
      000E78 D0 01            [24] 3681 	pop	ar1
                                   3682 ;	../../../core/net/mac/lpp.c:647: memcpy(packetbuf_hdrptr(), &hdr, sizeof(struct lpp_hdr));
      000E7A 89 07            [24] 3683 	mov	ar7,r1
      000E7C 7E 00            [12] 3684 	mov	r6,#0x00
      000E7E 7D 40            [12] 3685 	mov	r5,#0x40
      000E80 C0 07            [24] 3686 	push	ar7
      000E82 C0 06            [24] 3687 	push	ar6
      000E84 C0 05            [24] 3688 	push	ar5
      000E86 78r00            [12] 3689 	mov	r0,#_packetbuf_hdrptr
      000E88 79s00            [12] 3690 	mov	r1,#(_packetbuf_hdrptr >> 8)
      000E8A 7As00            [12] 3691 	mov	r2,#(_packetbuf_hdrptr >> 16)
      000E8C 12r00r00         [24] 3692 	lcall	__sdcc_banked_call
      000E8F AA 82            [24] 3693 	mov	r2,dpl
      000E91 AB 83            [24] 3694 	mov	r3,dph
      000E93 AC F0            [24] 3695 	mov	r4,b
      000E95 D0 05            [24] 3696 	pop	ar5
      000E97 D0 06            [24] 3697 	pop	ar6
      000E99 D0 07            [24] 3698 	pop	ar7
      000E9B 74 12            [12] 3699 	mov	a,#0x12
      000E9D C0 E0            [24] 3700 	push	acc
      000E9F E4               [12] 3701 	clr	a
      000EA0 C0 E0            [24] 3702 	push	acc
      000EA2 C0 07            [24] 3703 	push	ar7
      000EA4 C0 06            [24] 3704 	push	ar6
      000EA6 C0 05            [24] 3705 	push	ar5
      000EA8 8A 82            [24] 3706 	mov	dpl,r2
      000EAA 8B 83            [24] 3707 	mov	dph,r3
      000EAC 8C F0            [24] 3708 	mov	b,r4
      000EAE 78r00            [12] 3709 	mov	r0,#___memcpy
      000EB0 79s00            [12] 3710 	mov	r1,#(___memcpy >> 8)
      000EB2 7As00            [12] 3711 	mov	r2,#(___memcpy >> 16)
      000EB4 12r00r00         [24] 3712 	lcall	__sdcc_banked_call
      000EB7 E5 81            [12] 3713 	mov	a,sp
      000EB9 24 FB            [12] 3714 	add	a,#0xfb
      000EBB F5 81            [12] 3715 	mov	sp,a
                                   3716 ;	../../../core/net/mac/lpp.c:648: packetbuf_compact();
      000EBD 78r00            [12] 3717 	mov	r0,#_packetbuf_compact
      000EBF 79s00            [12] 3718 	mov	r1,#(_packetbuf_compact >> 8)
      000EC1 7As00            [12] 3719 	mov	r2,#(_packetbuf_compact >> 16)
      000EC3 12r00r00         [24] 3720 	lcall	__sdcc_banked_call
                                   3721 ;	../../../core/net/mac/lpp.c:650: packetbuf_set_attr(PACKETBUF_ATTR_MAC_ACK, 1);
      000EC6 74 01            [12] 3722 	mov	a,#0x01
      000EC8 C0 E0            [24] 3723 	push	acc
      000ECA E4               [12] 3724 	clr	a
      000ECB C0 E0            [24] 3725 	push	acc
      000ECD 75 82 0B         [24] 3726 	mov	dpl,#0x0b
      000ED0 78r00            [12] 3727 	mov	r0,#_packetbuf_set_attr
      000ED2 79s00            [12] 3728 	mov	r1,#(_packetbuf_set_attr >> 8)
      000ED4 7As00            [12] 3729 	mov	r2,#(_packetbuf_set_attr >> 16)
      000ED6 12r00r00         [24] 3730 	lcall	__sdcc_banked_call
      000ED9 15 81            [12] 3731 	dec	sp
      000EDB 15 81            [12] 3732 	dec	sp
                                   3733 ;	../../../core/net/mac/lpp.c:653: int hdrlen = NETSTACK_FRAMER.create();
      000EDD 90r00r00         [24] 3734 	mov	dptr,#_framer_802154
      000EE0 E4               [12] 3735 	clr	a
      000EE1 93               [24] 3736 	movc	a,@a+dptr
      000EE2 FD               [12] 3737 	mov	r5,a
      000EE3 A3               [24] 3738 	inc	dptr
      000EE4 E4               [12] 3739 	clr	a
      000EE5 93               [24] 3740 	movc	a,@a+dptr
      000EE6 FE               [12] 3741 	mov	r6,a
      000EE7 A3               [24] 3742 	inc	dptr
      000EE8 E4               [12] 3743 	clr	a
      000EE9 93               [24] 3744 	movc	a,@a+dptr
      000EEA FF               [12] 3745 	mov	r7,a
      000EEB C0 07            [24] 3746 	push	ar7
      000EED C0 05            [24] 3747 	push	ar5
      000EEF C0 06            [24] 3748 	push	ar6
      000EF1 C0 07            [24] 3749 	push	ar7
      000EF3 D0 02            [24] 3750 	pop	ar2
      000EF5 D0 01            [24] 3751 	pop	ar1
      000EF7 D0 00            [24] 3752 	pop	ar0
      000EF9 12r00r00         [24] 3753 	lcall	__sdcc_banked_call
      000EFC AD 82            [24] 3754 	mov	r5,dpl
      000EFE AE 83            [24] 3755 	mov	r6,dph
      000F00 D0 07            [24] 3756 	pop	ar7
                                   3757 ;	../../../core/net/mac/lpp.c:654: if(hdrlen < 0) {
      000F02 EE               [12] 3758 	mov	a,r6
      000F03 30 E7 45         [24] 3759 	jnb	acc.7,00109$
                                   3760 ;	../../../core/net/mac/lpp.c:656: mac_call_sent_callback(sent, ptr, MAC_TX_ERR_FATAL, 0);
      000F06 E5 81            [12] 3761 	mov	a,sp
      000F08 24 E5            [12] 3762 	add	a,#0xe5
      000F0A F8               [12] 3763 	mov	r0,a
      000F0B E6               [12] 3764 	mov	a,@r0
      000F0C 08               [12] 3765 	inc	r0
      000F0D 46               [12] 3766 	orl	a,@r0
      000F0E 60 38            [24] 3767 	jz	00106$
      000F10 E4               [12] 3768 	clr	a
      000F11 C0 E0            [24] 3769 	push	acc
      000F13 C0 E0            [24] 3770 	push	acc
      000F15 74 05            [12] 3771 	mov	a,#0x05
      000F17 C0 E0            [24] 3772 	push	acc
      000F19 E4               [12] 3773 	clr	a
      000F1A C0 E0            [24] 3774 	push	acc
      000F1C E5 81            [12] 3775 	mov	a,sp
      000F1E 24 E1            [12] 3776 	add	a,#0xe1
      000F20 F8               [12] 3777 	mov	r0,a
      000F21 E6               [12] 3778 	mov	a,@r0
      000F22 C0 E0            [24] 3779 	push	acc
      000F24 08               [12] 3780 	inc	r0
      000F25 E6               [12] 3781 	mov	a,@r0
      000F26 C0 E0            [24] 3782 	push	acc
      000F28 08               [12] 3783 	inc	r0
      000F29 E6               [12] 3784 	mov	a,@r0
      000F2A C0 E0            [24] 3785 	push	acc
      000F2C E5 81            [12] 3786 	mov	a,sp
      000F2E 24 D8            [12] 3787 	add	a,#0xd8
      000F30 F8               [12] 3788 	mov	r0,a
      000F31 86 82            [24] 3789 	mov	dpl,@r0
      000F33 08               [12] 3790 	inc	r0
      000F34 86 83            [24] 3791 	mov	dph,@r0
      000F36 08               [12] 3792 	inc	r0
      000F37 86 F0            [24] 3793 	mov	b,@r0
      000F39 D0 02            [24] 3794 	pop	ar2
      000F3B D0 01            [24] 3795 	pop	ar1
      000F3D D0 00            [24] 3796 	pop	ar0
      000F3F 12r00r00         [24] 3797 	lcall	__sdcc_banked_call
      000F42 E5 81            [12] 3798 	mov	a,sp
      000F44 24 FC            [12] 3799 	add	a,#0xfc
      000F46 F5 81            [12] 3800 	mov	sp,a
      000F48                       3801 00106$:
                                   3802 ;	../../../core/net/mac/lpp.c:657: return;
      000F48 02r11rA9         [24] 3803 	ljmp	00129$
      000F4B                       3804 00109$:
                                   3805 ;	../../../core/net/mac/lpp.c:681: i = memb_alloc(&queued_packets_memb);
      000F4B 90r00r11         [24] 3806 	mov	dptr,#_queued_packets_memb
      000F4E 75 F0 00         [24] 3807 	mov	b,#0x00
      000F51 78r00            [12] 3808 	mov	r0,#_memb_alloc
      000F53 79s00            [12] 3809 	mov	r1,#(_memb_alloc >> 8)
      000F55 7As00            [12] 3810 	mov	r2,#(_memb_alloc >> 16)
      000F57 12r00r00         [24] 3811 	lcall	__sdcc_banked_call
      000F5A AD 82            [24] 3812 	mov	r5,dpl
      000F5C AE 83            [24] 3813 	mov	r6,dph
      000F5E AF F0            [24] 3814 	mov	r7,b
      000F60 A8 81            [24] 3815 	mov	r0,sp
      000F62 18               [12] 3816 	dec	r0
      000F63 18               [12] 3817 	dec	r0
      000F64 A6 05            [24] 3818 	mov	@r0,ar5
      000F66 08               [12] 3819 	inc	r0
      000F67 A6 06            [24] 3820 	mov	@r0,ar6
      000F69 08               [12] 3821 	inc	r0
      000F6A A6 07            [24] 3822 	mov	@r0,ar7
                                   3823 ;	../../../core/net/mac/lpp.c:682: if(i != NULL) {
      000F6C A8 81            [24] 3824 	mov	r0,sp
      000F6E 18               [12] 3825 	dec	r0
      000F6F 18               [12] 3826 	dec	r0
      000F70 E6               [12] 3827 	mov	a,@r0
      000F71 08               [12] 3828 	inc	r0
      000F72 46               [12] 3829 	orl	a,@r0
      000F73 70 03            [24] 3830 	jnz	00166$
      000F75 02r11r4C         [24] 3831 	ljmp	00127$
      000F78                       3832 00166$:
                                   3833 ;	../../../core/net/mac/lpp.c:683: i->sent_callback = sent;
      000F78 A8 81            [24] 3834 	mov	r0,sp
      000F7A 18               [12] 3835 	dec	r0
      000F7B 18               [12] 3836 	dec	r0
      000F7C 74 24            [12] 3837 	mov	a,#0x24
      000F7E 26               [12] 3838 	add	a,@r0
      000F7F FA               [12] 3839 	mov	r2,a
      000F80 E4               [12] 3840 	clr	a
      000F81 08               [12] 3841 	inc	r0
      000F82 36               [12] 3842 	addc	a,@r0
      000F83 FB               [12] 3843 	mov	r3,a
      000F84 08               [12] 3844 	inc	r0
      000F85 86 04            [24] 3845 	mov	ar4,@r0
      000F87 8A 82            [24] 3846 	mov	dpl,r2
      000F89 8B 83            [24] 3847 	mov	dph,r3
      000F8B 8C F0            [24] 3848 	mov	b,r4
      000F8D E5 81            [12] 3849 	mov	a,sp
      000F8F 24 E5            [12] 3850 	add	a,#0xe5
      000F91 F8               [12] 3851 	mov	r0,a
      000F92 E6               [12] 3852 	mov	a,@r0
      000F93 12r00r00         [24] 3853 	lcall	__gptrput
      000F96 A3               [24] 3854 	inc	dptr
      000F97 08               [12] 3855 	inc	r0
      000F98 E6               [12] 3856 	mov	a,@r0
      000F99 12r00r00         [24] 3857 	lcall	__gptrput
      000F9C A3               [24] 3858 	inc	dptr
      000F9D 08               [12] 3859 	inc	r0
      000F9E E6               [12] 3860 	mov	a,@r0
      000F9F 12r00r00         [24] 3861 	lcall	__gptrput
                                   3862 ;	../../../core/net/mac/lpp.c:684: i->sent_callback_ptr = ptr;
      000FA2 A8 81            [24] 3863 	mov	r0,sp
      000FA4 18               [12] 3864 	dec	r0
      000FA5 18               [12] 3865 	dec	r0
      000FA6 74 27            [12] 3866 	mov	a,#0x27
      000FA8 26               [12] 3867 	add	a,@r0
      000FA9 FA               [12] 3868 	mov	r2,a
      000FAA E4               [12] 3869 	clr	a
      000FAB 08               [12] 3870 	inc	r0
      000FAC 36               [12] 3871 	addc	a,@r0
      000FAD FB               [12] 3872 	mov	r3,a
      000FAE 08               [12] 3873 	inc	r0
      000FAF 86 04            [24] 3874 	mov	ar4,@r0
      000FB1 8A 82            [24] 3875 	mov	dpl,r2
      000FB3 8B 83            [24] 3876 	mov	dph,r3
      000FB5 8C F0            [24] 3877 	mov	b,r4
      000FB7 E5 81            [12] 3878 	mov	a,sp
      000FB9 24 DF            [12] 3879 	add	a,#0xdf
      000FBB F8               [12] 3880 	mov	r0,a
      000FBC E6               [12] 3881 	mov	a,@r0
      000FBD 12r00r00         [24] 3882 	lcall	__gptrput
      000FC0 A3               [24] 3883 	inc	dptr
      000FC1 08               [12] 3884 	inc	r0
      000FC2 E6               [12] 3885 	mov	a,@r0
      000FC3 12r00r00         [24] 3886 	lcall	__gptrput
      000FC6 A3               [24] 3887 	inc	dptr
      000FC7 08               [12] 3888 	inc	r0
      000FC8 E6               [12] 3889 	mov	a,@r0
      000FC9 12r00r00         [24] 3890 	lcall	__gptrput
                                   3891 ;	../../../core/net/mac/lpp.c:685: i->num_transmissions = 0;
      000FCC A8 81            [24] 3892 	mov	r0,sp
      000FCE 18               [12] 3893 	dec	r0
      000FCF 18               [12] 3894 	dec	r0
      000FD0 74 2A            [12] 3895 	mov	a,#0x2a
      000FD2 26               [12] 3896 	add	a,@r0
      000FD3 FA               [12] 3897 	mov	r2,a
      000FD4 E4               [12] 3898 	clr	a
      000FD5 08               [12] 3899 	inc	r0
      000FD6 36               [12] 3900 	addc	a,@r0
      000FD7 FB               [12] 3901 	mov	r3,a
      000FD8 08               [12] 3902 	inc	r0
      000FD9 86 04            [24] 3903 	mov	ar4,@r0
      000FDB 8A 82            [24] 3904 	mov	dpl,r2
      000FDD 8B 83            [24] 3905 	mov	dph,r3
      000FDF 8C F0            [24] 3906 	mov	b,r4
      000FE1 E4               [12] 3907 	clr	a
      000FE2 12r00r00         [24] 3908 	lcall	__gptrput
                                   3909 ;	../../../core/net/mac/lpp.c:686: i->packet = queuebuf_new_from_packetbuf();
      000FE5 A8 81            [24] 3910 	mov	r0,sp
      000FE7 18               [12] 3911 	dec	r0
      000FE8 18               [12] 3912 	dec	r0
      000FE9 74 03            [12] 3913 	mov	a,#0x03
      000FEB 26               [12] 3914 	add	a,@r0
      000FEC FA               [12] 3915 	mov	r2,a
      000FED E4               [12] 3916 	clr	a
      000FEE 08               [12] 3917 	inc	r0
      000FEF 36               [12] 3918 	addc	a,@r0
      000FF0 FB               [12] 3919 	mov	r3,a
      000FF1 08               [12] 3920 	inc	r0
      000FF2 86 04            [24] 3921 	mov	ar4,@r0
      000FF4 C0 04            [24] 3922 	push	ar4
      000FF6 C0 03            [24] 3923 	push	ar3
      000FF8 C0 02            [24] 3924 	push	ar2
      000FFA 78r00            [12] 3925 	mov	r0,#_queuebuf_new_from_packetbuf
      000FFC 79s00            [12] 3926 	mov	r1,#(_queuebuf_new_from_packetbuf >> 8)
      000FFE 7As00            [12] 3927 	mov	r2,#(_queuebuf_new_from_packetbuf >> 16)
      001000 12r00r00         [24] 3928 	lcall	__sdcc_banked_call
      001003 AD 82            [24] 3929 	mov	r5,dpl
      001005 AE 83            [24] 3930 	mov	r6,dph
      001007 AF F0            [24] 3931 	mov	r7,b
      001009 D0 02            [24] 3932 	pop	ar2
      00100B D0 03            [24] 3933 	pop	ar3
      00100D D0 04            [24] 3934 	pop	ar4
      00100F 8A 82            [24] 3935 	mov	dpl,r2
      001011 8B 83            [24] 3936 	mov	dph,r3
      001013 8C F0            [24] 3937 	mov	b,r4
      001015 ED               [12] 3938 	mov	a,r5
      001016 12r00r00         [24] 3939 	lcall	__gptrput
      001019 A3               [24] 3940 	inc	dptr
      00101A EE               [12] 3941 	mov	a,r6
      00101B 12r00r00         [24] 3942 	lcall	__gptrput
      00101E A3               [24] 3943 	inc	dptr
      00101F EF               [12] 3944 	mov	a,r7
      001020 12r00r00         [24] 3945 	lcall	__gptrput
                                   3946 ;	../../../core/net/mac/lpp.c:687: if(i->packet == NULL) {
      001023 ED               [12] 3947 	mov	a,r5
      001024 4E               [12] 3948 	orl	a,r6
      001025 60 03            [24] 3949 	jz	00167$
      001027 02r10rB1         [24] 3950 	ljmp	00119$
      00102A                       3951 00167$:
                                   3952 ;	../../../core/net/mac/lpp.c:688: memb_free(&queued_packets_memb, i);
      00102A A8 81            [24] 3953 	mov	r0,sp
      00102C 18               [12] 3954 	dec	r0
      00102D 18               [12] 3955 	dec	r0
      00102E 86 05            [24] 3956 	mov	ar5,@r0
      001030 08               [12] 3957 	inc	r0
      001031 86 06            [24] 3958 	mov	ar6,@r0
      001033 08               [12] 3959 	inc	r0
      001034 86 07            [24] 3960 	mov	ar7,@r0
      001036 C0 05            [24] 3961 	push	ar5
      001038 C0 06            [24] 3962 	push	ar6
      00103A C0 07            [24] 3963 	push	ar7
      00103C 90r00r11         [24] 3964 	mov	dptr,#_queued_packets_memb
      00103F 75 F0 00         [24] 3965 	mov	b,#0x00
      001042 78r00            [12] 3966 	mov	r0,#_memb_free
      001044 79s00            [12] 3967 	mov	r1,#(_memb_free >> 8)
      001046 7As00            [12] 3968 	mov	r2,#(_memb_free >> 16)
      001048 12r00r00         [24] 3969 	lcall	__sdcc_banked_call
      00104B 15 81            [12] 3970 	dec	sp
      00104D 15 81            [12] 3971 	dec	sp
      00104F 15 81            [12] 3972 	dec	sp
                                   3973 ;	../../../core/net/mac/lpp.c:689: printf("null packet\n");
      001051 74r00            [12] 3974 	mov	a,#___str_0
      001053 C0 E0            [24] 3975 	push	acc
      001055 74s00            [12] 3976 	mov	a,#(___str_0 >> 8)
      001057 C0 E0            [24] 3977 	push	acc
      001059 74 80            [12] 3978 	mov	a,#0x80
      00105B C0 E0            [24] 3979 	push	acc
      00105D 78r00            [12] 3980 	mov	r0,#_printf
      00105F 79s00            [12] 3981 	mov	r1,#(_printf >> 8)
      001061 7As00            [12] 3982 	mov	r2,#(_printf >> 16)
      001063 12r00r00         [24] 3983 	lcall	__sdcc_banked_call
      001066 15 81            [12] 3984 	dec	sp
      001068 15 81            [12] 3985 	dec	sp
      00106A 15 81            [12] 3986 	dec	sp
                                   3987 ;	../../../core/net/mac/lpp.c:690: mac_call_sent_callback(sent, ptr, MAC_TX_ERR, 0);
      00106C E5 81            [12] 3988 	mov	a,sp
      00106E 24 E5            [12] 3989 	add	a,#0xe5
      001070 F8               [12] 3990 	mov	r0,a
      001071 E6               [12] 3991 	mov	a,@r0
      001072 08               [12] 3992 	inc	r0
      001073 46               [12] 3993 	orl	a,@r0
      001074 60 38            [24] 3994 	jz	00113$
      001076 E4               [12] 3995 	clr	a
      001077 C0 E0            [24] 3996 	push	acc
      001079 C0 E0            [24] 3997 	push	acc
      00107B 74 04            [12] 3998 	mov	a,#0x04
      00107D C0 E0            [24] 3999 	push	acc
      00107F E4               [12] 4000 	clr	a
      001080 C0 E0            [24] 4001 	push	acc
      001082 E5 81            [12] 4002 	mov	a,sp
      001084 24 E1            [12] 4003 	add	a,#0xe1
      001086 F8               [12] 4004 	mov	r0,a
      001087 E6               [12] 4005 	mov	a,@r0
      001088 C0 E0            [24] 4006 	push	acc
      00108A 08               [12] 4007 	inc	r0
      00108B E6               [12] 4008 	mov	a,@r0
      00108C C0 E0            [24] 4009 	push	acc
      00108E 08               [12] 4010 	inc	r0
      00108F E6               [12] 4011 	mov	a,@r0
      001090 C0 E0            [24] 4012 	push	acc
      001092 E5 81            [12] 4013 	mov	a,sp
      001094 24 D8            [12] 4014 	add	a,#0xd8
      001096 F8               [12] 4015 	mov	r0,a
      001097 86 82            [24] 4016 	mov	dpl,@r0
      001099 08               [12] 4017 	inc	r0
      00109A 86 83            [24] 4018 	mov	dph,@r0
      00109C 08               [12] 4019 	inc	r0
      00109D 86 F0            [24] 4020 	mov	b,@r0
      00109F D0 02            [24] 4021 	pop	ar2
      0010A1 D0 01            [24] 4022 	pop	ar1
      0010A3 D0 00            [24] 4023 	pop	ar0
      0010A5 12r00r00         [24] 4024 	lcall	__sdcc_banked_call
      0010A8 E5 81            [12] 4025 	mov	a,sp
      0010AA 24 FC            [12] 4026 	add	a,#0xfc
      0010AC F5 81            [12] 4027 	mov	sp,a
      0010AE                       4028 00113$:
                                   4029 ;	../../../core/net/mac/lpp.c:691: return;
      0010AE 02r11rA9         [24] 4030 	ljmp	00129$
      0010B1                       4031 00119$:
                                   4032 ;	../../../core/net/mac/lpp.c:693: if(is_broadcast) {
      0010B1 E5 81            [12] 4033 	mov	a,sp
      0010B3 24 FD            [12] 4034 	add	a,#0xfd
      0010B5 F8               [12] 4035 	mov	r0,a
      0010B6 E6               [12] 4036 	mov	a,@r0
      0010B7 60 0C            [24] 4037 	jz	00116$
                                   4038 ;	../../../core/net/mac/lpp.c:694: timeout = PACKET_LIFETIME;
      0010B9 E5 81            [12] 4039 	mov	a,sp
      0010BB 24 FB            [12] 4040 	add	a,#0xfb
      0010BD F8               [12] 4041 	mov	r0,a
      0010BE 76 10            [12] 4042 	mov	@r0,#0x10
      0010C0 08               [12] 4043 	inc	r0
      0010C1 76 00            [12] 4044 	mov	@r0,#0x00
      0010C3 80 0A            [24] 4045 	sjmp	00117$
      0010C5                       4046 00116$:
                                   4047 ;	../../../core/net/mac/lpp.c:708: timeout = UNICAST_TIMEOUT;
      0010C5 E5 81            [12] 4048 	mov	a,sp
      0010C7 24 FB            [12] 4049 	add	a,#0xfb
      0010C9 F8               [12] 4050 	mov	r0,a
      0010CA 76 18            [12] 4051 	mov	@r0,#0x18
      0010CC 08               [12] 4052 	inc	r0
      0010CD 76 00            [12] 4053 	mov	@r0,#0x00
      0010CF                       4054 00117$:
                                   4055 ;	../../../core/net/mac/lpp.c:714: remove_queued_old_packet_callback, i);
      0010CF A8 81            [24] 4056 	mov	r0,sp
      0010D1 18               [12] 4057 	dec	r0
      0010D2 18               [12] 4058 	dec	r0
      0010D3 86 03            [24] 4059 	mov	ar3,@r0
      0010D5 08               [12] 4060 	inc	r0
      0010D6 86 04            [24] 4061 	mov	ar4,@r0
      0010D8 08               [12] 4062 	inc	r0
      0010D9 86 05            [24] 4063 	mov	ar5,@r0
                                   4064 ;	../../../core/net/mac/lpp.c:713: ctimer_set(&i->removal_timer, timeout,
      0010DB A8 81            [24] 4065 	mov	r0,sp
      0010DD 18               [12] 4066 	dec	r0
      0010DE 18               [12] 4067 	dec	r0
      0010DF 74 06            [12] 4068 	mov	a,#0x06
      0010E1 26               [12] 4069 	add	a,@r0
      0010E2 FA               [12] 4070 	mov	r2,a
      0010E3 E4               [12] 4071 	clr	a
      0010E4 08               [12] 4072 	inc	r0
      0010E5 36               [12] 4073 	addc	a,@r0
      0010E6 FE               [12] 4074 	mov	r6,a
      0010E7 08               [12] 4075 	inc	r0
      0010E8 86 07            [24] 4076 	mov	ar7,@r0
      0010EA C0 03            [24] 4077 	push	ar3
      0010EC C0 04            [24] 4078 	push	ar4
      0010EE C0 05            [24] 4079 	push	ar5
      0010F0 74rDF            [12] 4080 	mov	a,#_remove_queued_old_packet_callback
      0010F2 C0 E0            [24] 4081 	push	acc
      0010F4 74s06            [12] 4082 	mov	a,#(_remove_queued_old_packet_callback >> 8)
      0010F6 C0 E0            [24] 4083 	push	acc
      0010F8 74s00            [12] 4084 	mov	a,#(_remove_queued_old_packet_callback >> 16)
      0010FA C0 E0            [24] 4085 	push	acc
      0010FC E5 81            [12] 4086 	mov	a,sp
      0010FE 24 F5            [12] 4087 	add	a,#0xf5
      001100 F8               [12] 4088 	mov	r0,a
      001101 E6               [12] 4089 	mov	a,@r0
      001102 C0 E0            [24] 4090 	push	acc
      001104 08               [12] 4091 	inc	r0
      001105 E6               [12] 4092 	mov	a,@r0
      001106 C0 E0            [24] 4093 	push	acc
      001108 8A 82            [24] 4094 	mov	dpl,r2
      00110A 8E 83            [24] 4095 	mov	dph,r6
      00110C 8F F0            [24] 4096 	mov	b,r7
      00110E 78r00            [12] 4097 	mov	r0,#_ctimer_set
      001110 79s00            [12] 4098 	mov	r1,#(_ctimer_set >> 8)
      001112 7As00            [12] 4099 	mov	r2,#(_ctimer_set >> 16)
      001114 12r00r00         [24] 4100 	lcall	__sdcc_banked_call
      001117 E5 81            [12] 4101 	mov	a,sp
      001119 24 F8            [12] 4102 	add	a,#0xf8
                                   4103 ;	../../../core/net/mac/lpp.c:719: turn_radio_on_for_neighbor(&hdr.receiver, i);
      00111B F5 81            [12] 4104 	mov	sp,a
      00111D 24 E8            [12] 4105 	add	a,#0xe8
      00111F F8               [12] 4106 	mov	r0,a
      001120 86 07            [24] 4107 	mov	ar7,@r0
      001122 7E 00            [12] 4108 	mov	r6,#0x00
      001124 7D 40            [12] 4109 	mov	r5,#0x40
      001126 A8 81            [24] 4110 	mov	r0,sp
      001128 18               [12] 4111 	dec	r0
      001129 18               [12] 4112 	dec	r0
      00112A E6               [12] 4113 	mov	a,@r0
      00112B C0 E0            [24] 4114 	push	acc
      00112D 08               [12] 4115 	inc	r0
      00112E E6               [12] 4116 	mov	a,@r0
      00112F C0 E0            [24] 4117 	push	acc
      001131 08               [12] 4118 	inc	r0
      001132 E6               [12] 4119 	mov	a,@r0
      001133 C0 E0            [24] 4120 	push	acc
      001135 8F 82            [24] 4121 	mov	dpl,r7
      001137 8E 83            [24] 4122 	mov	dph,r6
      001139 8D F0            [24] 4123 	mov	b,r5
      00113B 78r45            [12] 4124 	mov	r0,#_turn_radio_on_for_neighbor
      00113D 79s03            [12] 4125 	mov	r1,#(_turn_radio_on_for_neighbor >> 8)
      00113F 7As00            [12] 4126 	mov	r2,#(_turn_radio_on_for_neighbor >> 16)
      001141 12r00r00         [24] 4127 	lcall	__sdcc_banked_call
      001144 15 81            [12] 4128 	dec	sp
      001146 15 81            [12] 4129 	dec	sp
      001148 15 81            [12] 4130 	dec	sp
      00114A 80 5D            [24] 4131 	sjmp	00129$
      00114C                       4132 00127$:
                                   4133 ;	../../../core/net/mac/lpp.c:723: printf("i == NULL\n");
      00114C 74r0D            [12] 4134 	mov	a,#___str_1
      00114E C0 E0            [24] 4135 	push	acc
      001150 74s00            [12] 4136 	mov	a,#(___str_1 >> 8)
      001152 C0 E0            [24] 4137 	push	acc
      001154 74 80            [12] 4138 	mov	a,#0x80
      001156 C0 E0            [24] 4139 	push	acc
      001158 78r00            [12] 4140 	mov	r0,#_printf
      00115A 79s00            [12] 4141 	mov	r1,#(_printf >> 8)
      00115C 7As00            [12] 4142 	mov	r2,#(_printf >> 16)
      00115E 12r00r00         [24] 4143 	lcall	__sdcc_banked_call
      001161 15 81            [12] 4144 	dec	sp
      001163 15 81            [12] 4145 	dec	sp
      001165 15 81            [12] 4146 	dec	sp
                                   4147 ;	../../../core/net/mac/lpp.c:724: mac_call_sent_callback(sent, ptr, MAC_TX_ERR, 0);
      001167 E5 81            [12] 4148 	mov	a,sp
      001169 24 E5            [12] 4149 	add	a,#0xe5
      00116B F8               [12] 4150 	mov	r0,a
      00116C E6               [12] 4151 	mov	a,@r0
      00116D 08               [12] 4152 	inc	r0
      00116E 46               [12] 4153 	orl	a,@r0
      00116F 60 38            [24] 4154 	jz	00129$
      001171 E4               [12] 4155 	clr	a
      001172 C0 E0            [24] 4156 	push	acc
      001174 C0 E0            [24] 4157 	push	acc
      001176 74 04            [12] 4158 	mov	a,#0x04
      001178 C0 E0            [24] 4159 	push	acc
      00117A E4               [12] 4160 	clr	a
      00117B C0 E0            [24] 4161 	push	acc
      00117D E5 81            [12] 4162 	mov	a,sp
      00117F 24 E1            [12] 4163 	add	a,#0xe1
      001181 F8               [12] 4164 	mov	r0,a
      001182 E6               [12] 4165 	mov	a,@r0
      001183 C0 E0            [24] 4166 	push	acc
      001185 08               [12] 4167 	inc	r0
      001186 E6               [12] 4168 	mov	a,@r0
      001187 C0 E0            [24] 4169 	push	acc
      001189 08               [12] 4170 	inc	r0
      00118A E6               [12] 4171 	mov	a,@r0
      00118B C0 E0            [24] 4172 	push	acc
      00118D E5 81            [12] 4173 	mov	a,sp
      00118F 24 D8            [12] 4174 	add	a,#0xd8
      001191 F8               [12] 4175 	mov	r0,a
      001192 86 82            [24] 4176 	mov	dpl,@r0
      001194 08               [12] 4177 	inc	r0
      001195 86 83            [24] 4178 	mov	dph,@r0
      001197 08               [12] 4179 	inc	r0
      001198 86 F0            [24] 4180 	mov	b,@r0
      00119A D0 02            [24] 4181 	pop	ar2
      00119C D0 01            [24] 4182 	pop	ar1
      00119E D0 00            [24] 4183 	pop	ar0
      0011A0 12r00r00         [24] 4184 	lcall	__sdcc_banked_call
      0011A3 E5 81            [12] 4185 	mov	a,sp
      0011A5 24 FC            [12] 4186 	add	a,#0xfc
      0011A7 F5 81            [12] 4187 	mov	sp,a
      0011A9                       4188 00129$:
                                   4189 ;	../../../core/net/mac/lpp.c:727: }
      0011A9 E5 81            [12] 4190 	mov	a,sp
      0011AB 24 E4            [12] 4191 	add	a,#0xe4
      0011AD F5 81            [12] 4192 	mov	sp,a
      0011AF 02r00r00         [24] 4193 	ljmp	__sdcc_banked_ret
                                   4194 ;------------------------------------------------------------
                                   4195 ;Allocation info for local variables in function 'send_list'
                                   4196 ;------------------------------------------------------------
                                   4197 ;ptr                       Allocated to stack - sp -5
                                   4198 ;buf_list                  Allocated to stack - sp -8
                                   4199 ;sent                      Allocated to registers r5 r6 r7 
                                   4200 ;------------------------------------------------------------
                                   4201 ;	../../../core/net/mac/lpp.c:730: send_list(mac_callback_t sent, void *ptr, struct rdc_buf_list *buf_list)
                                   4202 ;	-----------------------------------------
                                   4203 ;	 function send_list
                                   4204 ;	-----------------------------------------
      0011B2                       4205 _send_list:
      0011B2 AD 82            [24] 4206 	mov	r5,dpl
      0011B4 AE 83            [24] 4207 	mov	r6,dph
      0011B6 AF F0            [24] 4208 	mov	r7,b
                                   4209 ;	../../../core/net/mac/lpp.c:732: if(buf_list != NULL) {
      0011B8 E5 81            [12] 4210 	mov	a,sp
      0011BA 24 F8            [12] 4211 	add	a,#0xf8
      0011BC F8               [12] 4212 	mov	r0,a
      0011BD E6               [12] 4213 	mov	a,@r0
      0011BE 08               [12] 4214 	inc	r0
      0011BF 46               [12] 4215 	orl	a,@r0
      0011C0 60 68            [24] 4216 	jz	00103$
                                   4217 ;	../../../core/net/mac/lpp.c:733: queuebuf_to_packetbuf(buf_list->buf);
      0011C2 E5 81            [12] 4218 	mov	a,sp
      0011C4 24 F8            [12] 4219 	add	a,#0xf8
      0011C6 F8               [12] 4220 	mov	r0,a
      0011C7 86 02            [24] 4221 	mov	ar2,@r0
      0011C9 08               [12] 4222 	inc	r0
      0011CA 86 03            [24] 4223 	mov	ar3,@r0
      0011CC 08               [12] 4224 	inc	r0
      0011CD 86 04            [24] 4225 	mov	ar4,@r0
      0011CF 74 03            [12] 4226 	mov	a,#0x03
      0011D1 2A               [12] 4227 	add	a,r2
      0011D2 FA               [12] 4228 	mov	r2,a
      0011D3 E4               [12] 4229 	clr	a
      0011D4 3B               [12] 4230 	addc	a,r3
      0011D5 FB               [12] 4231 	mov	r3,a
      0011D6 8A 82            [24] 4232 	mov	dpl,r2
      0011D8 8B 83            [24] 4233 	mov	dph,r3
      0011DA 8C F0            [24] 4234 	mov	b,r4
      0011DC 12r00r00         [24] 4235 	lcall	__gptrget
      0011DF FA               [12] 4236 	mov	r2,a
      0011E0 A3               [24] 4237 	inc	dptr
      0011E1 12r00r00         [24] 4238 	lcall	__gptrget
      0011E4 FB               [12] 4239 	mov	r3,a
      0011E5 A3               [24] 4240 	inc	dptr
      0011E6 12r00r00         [24] 4241 	lcall	__gptrget
      0011E9 FC               [12] 4242 	mov	r4,a
      0011EA 8A 82            [24] 4243 	mov	dpl,r2
      0011EC 8B 83            [24] 4244 	mov	dph,r3
      0011EE 8C F0            [24] 4245 	mov	b,r4
      0011F0 C0 07            [24] 4246 	push	ar7
      0011F2 C0 06            [24] 4247 	push	ar6
      0011F4 C0 05            [24] 4248 	push	ar5
      0011F6 78r00            [12] 4249 	mov	r0,#_queuebuf_to_packetbuf
      0011F8 79s00            [12] 4250 	mov	r1,#(_queuebuf_to_packetbuf >> 8)
      0011FA 7As00            [12] 4251 	mov	r2,#(_queuebuf_to_packetbuf >> 16)
      0011FC 12r00r00         [24] 4252 	lcall	__sdcc_banked_call
      0011FF D0 05            [24] 4253 	pop	ar5
      001201 D0 06            [24] 4254 	pop	ar6
      001203 D0 07            [24] 4255 	pop	ar7
                                   4256 ;	../../../core/net/mac/lpp.c:734: send_packet(sent, ptr);
      001205 E5 81            [12] 4257 	mov	a,sp
      001207 24 FB            [12] 4258 	add	a,#0xfb
      001209 F8               [12] 4259 	mov	r0,a
      00120A E6               [12] 4260 	mov	a,@r0
      00120B C0 E0            [24] 4261 	push	acc
      00120D 08               [12] 4262 	inc	r0
      00120E E6               [12] 4263 	mov	a,@r0
      00120F C0 E0            [24] 4264 	push	acc
      001211 08               [12] 4265 	inc	r0
      001212 E6               [12] 4266 	mov	a,@r0
      001213 C0 E0            [24] 4267 	push	acc
      001215 8D 82            [24] 4268 	mov	dpl,r5
      001217 8E 83            [24] 4269 	mov	dph,r6
      001219 8F F0            [24] 4270 	mov	b,r7
      00121B 78r9F            [12] 4271 	mov	r0,#_send_packet
      00121D 79s0D            [12] 4272 	mov	r1,#(_send_packet >> 8)
      00121F 7As00            [12] 4273 	mov	r2,#(_send_packet >> 16)
      001221 12r00r00         [24] 4274 	lcall	__sdcc_banked_call
      001224 15 81            [12] 4275 	dec	sp
      001226 15 81            [12] 4276 	dec	sp
      001228 15 81            [12] 4277 	dec	sp
      00122A                       4278 00103$:
                                   4279 ;	../../../core/net/mac/lpp.c:736: }
      00122A 02r00r00         [24] 4280 	ljmp	__sdcc_banked_ret
                                   4281 ;------------------------------------------------------------
                                   4282 ;Allocation info for local variables in function 'detect_ack'
                                   4283 ;------------------------------------------------------------
                                   4284 ;wt                        Allocated to registers r5 r6 
                                   4285 ;ack_received              Allocated to registers r7 
                                   4286 ;len                       Allocated to registers r4 r5 
                                   4287 ;ackbuf                    Allocated to stack - sp -4
                                   4288 ;------------------------------------------------------------
                                   4289 ;	../../../core/net/mac/lpp.c:739: detect_ack(void)
                                   4290 ;	-----------------------------------------
                                   4291 ;	 function detect_ack
                                   4292 ;	-----------------------------------------
      00122D                       4293 _detect_ack:
      00122D E5 81            [12] 4294 	mov	a,sp
      00122F 24 05            [12] 4295 	add	a,#0x05
      001231 F5 81            [12] 4296 	mov	sp,a
                                   4297 ;	../../../core/net/mac/lpp.c:745: uint8_t ack_received = 0;
      001233 7F 00            [12] 4298 	mov	r7,#0x00
                                   4299 ;	../../../core/net/mac/lpp.c:747: wt = RTIMER_NOW();
      001235 AD E2            [24] 4300 	mov	r5,_T1CNTL
      001237 7E 00            [12] 4301 	mov	r6,#0x00
      001239 AB E3            [24] 4302 	mov	r3,_T1CNTH
      00123B 8B 04            [24] 4303 	mov	ar4,r3
      00123D E4               [12] 4304 	clr	a
      00123E 2D               [12] 4305 	add	a,r5
      00123F FD               [12] 4306 	mov	r5,a
      001240 EC               [12] 4307 	mov	a,r4
      001241 3E               [12] 4308 	addc	a,r6
      001242 FE               [12] 4309 	mov	r6,a
                                   4310 ;	../../../core/net/mac/lpp.c:748: leds_on(LEDS_GREEN);
      001243 75 82 02         [24] 4311 	mov	dpl,#0x02
      001246 C0 07            [24] 4312 	push	ar7
      001248 C0 06            [24] 4313 	push	ar6
      00124A C0 05            [24] 4314 	push	ar5
      00124C 78r00            [12] 4315 	mov	r0,#_leds_on
      00124E 79s00            [12] 4316 	mov	r1,#(_leds_on >> 8)
      001250 7As00            [12] 4317 	mov	r2,#(_leds_on >> 16)
      001252 12r00r00         [24] 4318 	lcall	__sdcc_banked_call
      001255 D0 05            [24] 4319 	pop	ar5
      001257 D0 06            [24] 4320 	pop	ar6
      001259 D0 07            [24] 4321 	pop	ar7
                                   4322 ;	../../../core/net/mac/lpp.c:749: while(RTIMER_CLOCK_LT(RTIMER_NOW(), wt + INTER_PACKET_INTERVAL)) { }
      00125B                       4323 00101$:
      00125B C0 07            [24] 4324 	push	ar7
      00125D AB E2            [24] 4325 	mov	r3,_T1CNTL
      00125F 7C 00            [12] 4326 	mov	r4,#0x00
      001261 AA E3            [24] 4327 	mov	r2,_T1CNTH
      001263 8A 07            [24] 4328 	mov	ar7,r2
      001265 E4               [12] 4329 	clr	a
      001266 2B               [12] 4330 	add	a,r3
      001267 FB               [12] 4331 	mov	r3,a
      001268 EF               [12] 4332 	mov	a,r7
      001269 3C               [12] 4333 	addc	a,r4
      00126A FC               [12] 4334 	mov	r4,a
      00126B 8D 02            [24] 4335 	mov	ar2,r5
      00126D 8E 07            [24] 4336 	mov	ar7,r6
      00126F 74 03            [12] 4337 	mov	a,#0x03
      001271 2A               [12] 4338 	add	a,r2
      001272 FA               [12] 4339 	mov	r2,a
      001273 E4               [12] 4340 	clr	a
      001274 3F               [12] 4341 	addc	a,r7
      001275 FF               [12] 4342 	mov	r7,a
      001276 EB               [12] 4343 	mov	a,r3
      001277 C3               [12] 4344 	clr	c
      001278 9A               [12] 4345 	subb	a,r2
      001279 EC               [12] 4346 	mov	a,r4
      00127A 9F               [12] 4347 	subb	a,r7
      00127B D0 07            [24] 4348 	pop	ar7
      00127D 20 E7 DB         [24] 4349 	jb	acc.7,00101$
                                   4350 ;	../../../core/net/mac/lpp.c:750: leds_off(LEDS_GREEN);
      001280 75 82 02         [24] 4351 	mov	dpl,#0x02
      001283 C0 07            [24] 4352 	push	ar7
      001285 78r00            [12] 4353 	mov	r0,#_leds_off
      001287 79s00            [12] 4354 	mov	r1,#(_leds_off >> 8)
      001289 7As00            [12] 4355 	mov	r2,#(_leds_off >> 16)
      00128B 12r00r00         [24] 4356 	lcall	__sdcc_banked_call
                                   4357 ;	../../../core/net/mac/lpp.c:752: if((NETSTACK_RADIO.receiving_packet() ||
      00128E 90r00r12         [24] 4358 	mov	dptr,#(_cc2530_rf_driver + 0x0012)
      001291 E4               [12] 4359 	clr	a
      001292 93               [24] 4360 	movc	a,@a+dptr
      001293 FC               [12] 4361 	mov	r4,a
      001294 A3               [24] 4362 	inc	dptr
      001295 E4               [12] 4363 	clr	a
      001296 93               [24] 4364 	movc	a,@a+dptr
      001297 FD               [12] 4365 	mov	r5,a
      001298 A3               [24] 4366 	inc	dptr
      001299 E4               [12] 4367 	clr	a
      00129A 93               [24] 4368 	movc	a,@a+dptr
      00129B FE               [12] 4369 	mov	r6,a
      00129C C0 06            [24] 4370 	push	ar6
      00129E C0 04            [24] 4371 	push	ar4
      0012A0 C0 05            [24] 4372 	push	ar5
      0012A2 C0 06            [24] 4373 	push	ar6
      0012A4 D0 02            [24] 4374 	pop	ar2
      0012A6 D0 01            [24] 4375 	pop	ar1
      0012A8 D0 00            [24] 4376 	pop	ar0
      0012AA 12r00r00         [24] 4377 	lcall	__sdcc_banked_call
      0012AD AC 82            [24] 4378 	mov	r4,dpl
      0012AF AD 83            [24] 4379 	mov	r5,dph
      0012B1 D0 06            [24] 4380 	pop	ar6
      0012B3 D0 07            [24] 4381 	pop	ar7
      0012B5 EC               [12] 4382 	mov	a,r4
      0012B6 4D               [12] 4383 	orl	a,r5
      0012B7 70 5D            [24] 4384 	jnz	00109$
                                   4385 ;	../../../core/net/mac/lpp.c:753: NETSTACK_RADIO.pending_packet() ||
      0012B9 90r00r15         [24] 4386 	mov	dptr,#(_cc2530_rf_driver + 0x0015)
      0012BC E4               [12] 4387 	clr	a
      0012BD 93               [24] 4388 	movc	a,@a+dptr
      0012BE FC               [12] 4389 	mov	r4,a
      0012BF A3               [24] 4390 	inc	dptr
      0012C0 E4               [12] 4391 	clr	a
      0012C1 93               [24] 4392 	movc	a,@a+dptr
      0012C2 FD               [12] 4393 	mov	r5,a
      0012C3 A3               [24] 4394 	inc	dptr
      0012C4 E4               [12] 4395 	clr	a
      0012C5 93               [24] 4396 	movc	a,@a+dptr
      0012C6 FE               [12] 4397 	mov	r6,a
      0012C7 C0 07            [24] 4398 	push	ar7
      0012C9 C0 06            [24] 4399 	push	ar6
      0012CB C0 04            [24] 4400 	push	ar4
      0012CD C0 05            [24] 4401 	push	ar5
      0012CF C0 06            [24] 4402 	push	ar6
      0012D1 D0 02            [24] 4403 	pop	ar2
      0012D3 D0 01            [24] 4404 	pop	ar1
      0012D5 D0 00            [24] 4405 	pop	ar0
      0012D7 12r00r00         [24] 4406 	lcall	__sdcc_banked_call
      0012DA AC 82            [24] 4407 	mov	r4,dpl
      0012DC AD 83            [24] 4408 	mov	r5,dph
      0012DE D0 06            [24] 4409 	pop	ar6
      0012E0 D0 07            [24] 4410 	pop	ar7
      0012E2 EC               [12] 4411 	mov	a,r4
      0012E3 4D               [12] 4412 	orl	a,r5
      0012E4 70 30            [24] 4413 	jnz	00109$
                                   4414 ;	../../../core/net/mac/lpp.c:754: NETSTACK_RADIO.channel_clear() == 0)) {
      0012E6 90r00r0F         [24] 4415 	mov	dptr,#(_cc2530_rf_driver + 0x000f)
      0012E9 E4               [12] 4416 	clr	a
      0012EA 93               [24] 4417 	movc	a,@a+dptr
      0012EB FC               [12] 4418 	mov	r4,a
      0012EC A3               [24] 4419 	inc	dptr
      0012ED E4               [12] 4420 	clr	a
      0012EE 93               [24] 4421 	movc	a,@a+dptr
      0012EF FD               [12] 4422 	mov	r5,a
      0012F0 A3               [24] 4423 	inc	dptr
      0012F1 E4               [12] 4424 	clr	a
      0012F2 93               [24] 4425 	movc	a,@a+dptr
      0012F3 FE               [12] 4426 	mov	r6,a
      0012F4 C0 07            [24] 4427 	push	ar7
      0012F6 C0 06            [24] 4428 	push	ar6
      0012F8 C0 04            [24] 4429 	push	ar4
      0012FA C0 05            [24] 4430 	push	ar5
      0012FC C0 06            [24] 4431 	push	ar6
      0012FE D0 02            [24] 4432 	pop	ar2
      001300 D0 01            [24] 4433 	pop	ar1
      001302 D0 00            [24] 4434 	pop	ar0
      001304 12r00r00         [24] 4435 	lcall	__sdcc_banked_call
      001307 AC 82            [24] 4436 	mov	r4,dpl
      001309 AD 83            [24] 4437 	mov	r5,dph
      00130B D0 06            [24] 4438 	pop	ar6
      00130D D0 07            [24] 4439 	pop	ar7
      00130F EC               [12] 4440 	mov	a,r4
      001310 4D               [12] 4441 	orl	a,r5
      001311 60 03            [24] 4442 	jz	00160$
      001313 02r13r9F         [24] 4443 	ljmp	00110$
      001316                       4444 00160$:
      001316                       4445 00109$:
                                   4446 ;	../../../core/net/mac/lpp.c:758: wt = RTIMER_NOW();
      001316 AD E2            [24] 4447 	mov	r5,_T1CNTL
      001318 7E 00            [12] 4448 	mov	r6,#0x00
      00131A AB E3            [24] 4449 	mov	r3,_T1CNTH
      00131C 8B 04            [24] 4450 	mov	ar4,r3
      00131E E4               [12] 4451 	clr	a
      00131F FB               [12] 4452 	mov	r3,a
      001320 2D               [12] 4453 	add	a,r5
      001321 FD               [12] 4454 	mov	r5,a
      001322 EC               [12] 4455 	mov	a,r4
      001323 3E               [12] 4456 	addc	a,r6
      001324 FE               [12] 4457 	mov	r6,a
                                   4458 ;	../../../core/net/mac/lpp.c:759: while(RTIMER_CLOCK_LT(RTIMER_NOW(), wt + AFTER_ACK_DETECTECT_WAIT_TIME)) { }
      001325                       4459 00104$:
      001325 C0 07            [24] 4460 	push	ar7
      001327 AB E2            [24] 4461 	mov	r3,_T1CNTL
      001329 7C 00            [12] 4462 	mov	r4,#0x00
      00132B AA E3            [24] 4463 	mov	r2,_T1CNTH
      00132D 8A 07            [24] 4464 	mov	ar7,r2
      00132F E4               [12] 4465 	clr	a
      001330 2B               [12] 4466 	add	a,r3
      001331 FB               [12] 4467 	mov	r3,a
      001332 EF               [12] 4468 	mov	a,r7
      001333 3C               [12] 4469 	addc	a,r4
      001334 FC               [12] 4470 	mov	r4,a
      001335 8D 02            [24] 4471 	mov	ar2,r5
      001337 8E 07            [24] 4472 	mov	ar7,r6
      001339 74 0F            [12] 4473 	mov	a,#0x0f
      00133B 2A               [12] 4474 	add	a,r2
      00133C FA               [12] 4475 	mov	r2,a
      00133D E4               [12] 4476 	clr	a
      00133E 3F               [12] 4477 	addc	a,r7
      00133F FF               [12] 4478 	mov	r7,a
      001340 EB               [12] 4479 	mov	a,r3
      001341 C3               [12] 4480 	clr	c
      001342 9A               [12] 4481 	subb	a,r2
      001343 EC               [12] 4482 	mov	a,r4
      001344 9F               [12] 4483 	subb	a,r7
      001345 D0 07            [24] 4484 	pop	ar7
      001347 20 E7 DB         [24] 4485 	jb	acc.7,00104$
                                   4486 ;	../../../core/net/mac/lpp.c:761: len = NETSTACK_RADIO.read(ackbuf, ACK_LEN);
      00134A C0 07            [24] 4487 	push	ar7
      00134C 90r00r0C         [24] 4488 	mov	dptr,#(_cc2530_rf_driver + 0x000c)
      00134F E4               [12] 4489 	clr	a
      001350 93               [24] 4490 	movc	a,@a+dptr
      001351 FC               [12] 4491 	mov	r4,a
      001352 A3               [24] 4492 	inc	dptr
      001353 E4               [12] 4493 	clr	a
      001354 93               [24] 4494 	movc	a,@a+dptr
      001355 FD               [12] 4495 	mov	r5,a
      001356 A3               [24] 4496 	inc	dptr
      001357 E4               [12] 4497 	clr	a
      001358 93               [24] 4498 	movc	a,@a+dptr
      001359 FE               [12] 4499 	mov	r6,a
      00135A E5 81            [12] 4500 	mov	a,sp
      00135C 24 FB            [12] 4501 	add	a,#0xfb
      00135E FA               [12] 4502 	mov	r2,a
      00135F 7B 00            [12] 4503 	mov	r3,#0x00
      001361 7F 40            [12] 4504 	mov	r7,#0x40
      001363 C0 07            [24] 4505 	push	ar7
      001365 C0 06            [24] 4506 	push	ar6
      001367 74 03            [12] 4507 	mov	a,#0x03
      001369 C0 E0            [24] 4508 	push	acc
      00136B E4               [12] 4509 	clr	a
      00136C C0 E0            [24] 4510 	push	acc
      00136E C0 04            [24] 4511 	push	ar4
      001370 C0 05            [24] 4512 	push	ar5
      001372 C0 06            [24] 4513 	push	ar6
      001374 8A 82            [24] 4514 	mov	dpl,r2
      001376 8B 83            [24] 4515 	mov	dph,r3
      001378 8F F0            [24] 4516 	mov	b,r7
      00137A D0 02            [24] 4517 	pop	ar2
      00137C D0 01            [24] 4518 	pop	ar1
      00137E D0 00            [24] 4519 	pop	ar0
      001380 12r00r00         [24] 4520 	lcall	__sdcc_banked_call
      001383 AC 82            [24] 4521 	mov	r4,dpl
      001385 AD 83            [24] 4522 	mov	r5,dph
      001387 15 81            [12] 4523 	dec	sp
      001389 15 81            [12] 4524 	dec	sp
      00138B D0 06            [24] 4525 	pop	ar6
      00138D D0 07            [24] 4526 	pop	ar7
                                   4527 ;	../../../core/net/mac/lpp.c:762: if(len == ACK_LEN) {
      00138F BC 03 05         [24] 4528 	cjne	r4,#0x03,00162$
      001392 BD 00 02         [24] 4529 	cjne	r5,#0x00,00162$
      001395 80 04            [24] 4530 	sjmp	00163$
      001397                       4531 00162$:
      001397 D0 07            [24] 4532 	pop	ar7
      001399 80 04            [24] 4533 	sjmp	00110$
      00139B                       4534 00163$:
      00139B D0 07            [24] 4535 	pop	ar7
                                   4536 ;	../../../core/net/mac/lpp.c:763: ack_received = 1;
      00139D 7F 01            [12] 4537 	mov	r7,#0x01
      00139F                       4538 00110$:
                                   4539 ;	../../../core/net/mac/lpp.c:766: if(ack_received) {
      00139F EF               [12] 4540 	mov	a,r7
      0013A0 60 10            [24] 4541 	jz	00114$
                                   4542 ;	../../../core/net/mac/lpp.c:767: leds_toggle(LEDS_RED);
      0013A2 75 82 01         [24] 4543 	mov	dpl,#0x01
      0013A5 C0 07            [24] 4544 	push	ar7
      0013A7 78r00            [12] 4545 	mov	r0,#_leds_toggle
      0013A9 79s00            [12] 4546 	mov	r1,#(_leds_toggle >> 8)
      0013AB 7As00            [12] 4547 	mov	r2,#(_leds_toggle >> 16)
      0013AD 12r00r00         [24] 4548 	lcall	__sdcc_banked_call
      0013B0 D0 07            [24] 4549 	pop	ar7
      0013B2                       4550 00114$:
                                   4551 ;	../../../core/net/mac/lpp.c:769: return ack_received;
      0013B2 7E 00            [12] 4552 	mov	r6,#0x00
      0013B4 8F 82            [24] 4553 	mov	dpl,r7
      0013B6 8E 83            [24] 4554 	mov	dph,r6
                                   4555 ;	../../../core/net/mac/lpp.c:770: }
      0013B8 E5 81            [12] 4556 	mov	a,sp
      0013BA 24 FB            [12] 4557 	add	a,#0xfb
      0013BC F5 81            [12] 4558 	mov	sp,a
      0013BE 02r00r00         [24] 4559 	ljmp	__sdcc_banked_ret
                                   4560 ;------------------------------------------------------------
                                   4561 ;Allocation info for local variables in function 'input_packet'
                                   4562 ;------------------------------------------------------------
                                   4563 ;hdr                       Allocated to stack - sp -25
                                   4564 ;reception_time            Allocated to registers 
                                   4565 ;ret                       Allocated to registers 
                                   4566 ;adata                     Allocated to stack - sp -7
                                   4567 ;i                         Allocated to stack - sp -5
                                   4568 ;receiver                  Allocated to stack - sp -2
                                   4569 ;sent                      Allocated to registers 
                                   4570 ;sloc0                     Allocated to stack - sp +1
                                   4571 ;sloc1                     Allocated to stack - sp -30
                                   4572 ;sloc2                     Allocated to stack - sp -28
                                   4573 ;------------------------------------------------------------
                                   4574 ;	../../../core/net/mac/lpp.c:779: input_packet(void)
                                   4575 ;	-----------------------------------------
                                   4576 ;	 function input_packet
                                   4577 ;	-----------------------------------------
      0013C1                       4578 _input_packet:
      0013C1 E5 81            [12] 4579 	mov	a,sp
      0013C3 24 1F            [12] 4580 	add	a,#0x1f
      0013C5 F5 81            [12] 4581 	mov	sp,a
                                   4582 ;	../../../core/net/mac/lpp.c:785: reception_time = clock_time();
      0013C7 78r00            [12] 4583 	mov	r0,#_clock_time
      0013C9 79s00            [12] 4584 	mov	r1,#(_clock_time >> 8)
      0013CB 7As00            [12] 4585 	mov	r2,#(_clock_time >> 16)
      0013CD 12r00r00         [24] 4586 	lcall	__sdcc_banked_call
      0013D0 AE 82            [24] 4587 	mov	r6,dpl
      0013D2 AF 83            [24] 4588 	mov	r7,dph
                                   4589 ;	../../../core/net/mac/lpp.c:787: if(NETSTACK_FRAMER.parse() < 0) {
      0013D4 90r00r03         [24] 4590 	mov	dptr,#(_framer_802154 + 0x0003)
      0013D7 E4               [12] 4591 	clr	a
      0013D8 93               [24] 4592 	movc	a,@a+dptr
      0013D9 FB               [12] 4593 	mov	r3,a
      0013DA A3               [24] 4594 	inc	dptr
      0013DB E4               [12] 4595 	clr	a
      0013DC 93               [24] 4596 	movc	a,@a+dptr
      0013DD FC               [12] 4597 	mov	r4,a
      0013DE A3               [24] 4598 	inc	dptr
      0013DF E4               [12] 4599 	clr	a
      0013E0 93               [24] 4600 	movc	a,@a+dptr
      0013E1 FD               [12] 4601 	mov	r5,a
      0013E2 C0 07            [24] 4602 	push	ar7
      0013E4 C0 06            [24] 4603 	push	ar6
      0013E6 C0 05            [24] 4604 	push	ar5
      0013E8 C0 03            [24] 4605 	push	ar3
      0013EA C0 04            [24] 4606 	push	ar4
      0013EC C0 05            [24] 4607 	push	ar5
      0013EE D0 02            [24] 4608 	pop	ar2
      0013F0 D0 01            [24] 4609 	pop	ar1
      0013F2 D0 00            [24] 4610 	pop	ar0
      0013F4 12r00r00         [24] 4611 	lcall	__sdcc_banked_call
      0013F7 AC 83            [24] 4612 	mov	r4,dph
      0013F9 D0 05            [24] 4613 	pop	ar5
      0013FB D0 06            [24] 4614 	pop	ar6
      0013FD D0 07            [24] 4615 	pop	ar7
      0013FF EC               [12] 4616 	mov	a,r4
      001400 30 E7 23         [24] 4617 	jnb	acc.7,00102$
                                   4618 ;	../../../core/net/mac/lpp.c:788: printf("lpp input_packet framer error\n");
      001403 C0 07            [24] 4619 	push	ar7
      001405 C0 06            [24] 4620 	push	ar6
      001407 74r18            [12] 4621 	mov	a,#___str_2
      001409 C0 E0            [24] 4622 	push	acc
      00140B 74s00            [12] 4623 	mov	a,#(___str_2 >> 8)
      00140D C0 E0            [24] 4624 	push	acc
      00140F 74 80            [12] 4625 	mov	a,#0x80
      001411 C0 E0            [24] 4626 	push	acc
      001413 78r00            [12] 4627 	mov	r0,#_printf
      001415 79s00            [12] 4628 	mov	r1,#(_printf >> 8)
      001417 7As00            [12] 4629 	mov	r2,#(_printf >> 16)
      001419 12r00r00         [24] 4630 	lcall	__sdcc_banked_call
      00141C 15 81            [12] 4631 	dec	sp
      00141E 15 81            [12] 4632 	dec	sp
      001420 15 81            [12] 4633 	dec	sp
      001422 D0 06            [24] 4634 	pop	ar6
      001424 D0 07            [24] 4635 	pop	ar7
      001426                       4636 00102$:
                                   4637 ;	../../../core/net/mac/lpp.c:791: memcpy(&hdr, packetbuf_dataptr(), sizeof(struct lpp_hdr));;
      001426 C0 06            [24] 4638 	push	ar6
      001428 C0 07            [24] 4639 	push	ar7
      00142A C0 07            [24] 4640 	push	ar7
      00142C C0 06            [24] 4641 	push	ar6
      00142E 78r00            [12] 4642 	mov	r0,#_packetbuf_dataptr
      001430 79s00            [12] 4643 	mov	r1,#(_packetbuf_dataptr >> 8)
      001432 7As00            [12] 4644 	mov	r2,#(_packetbuf_dataptr >> 16)
      001434 12r00r00         [24] 4645 	lcall	__sdcc_banked_call
      001437 AB 82            [24] 4646 	mov	r3,dpl
      001439 AC 83            [24] 4647 	mov	r4,dph
      00143B AD F0            [24] 4648 	mov	r5,b
      00143D D0 06            [24] 4649 	pop	ar6
      00143F D0 07            [24] 4650 	pop	ar7
      001441 E5 81            [12] 4651 	mov	a,sp
      001443 24 E5            [12] 4652 	add	a,#0xe5
      001445 F9               [12] 4653 	mov	r1,a
      001446 FA               [12] 4654 	mov	r2,a
      001447 7E 00            [12] 4655 	mov	r6,#0x00
      001449 7F 40            [12] 4656 	mov	r7,#0x40
      00144B C0 07            [24] 4657 	push	ar7
      00144D C0 06            [24] 4658 	push	ar6
      00144F C0 01            [24] 4659 	push	ar1
      001451 74 12            [12] 4660 	mov	a,#0x12
      001453 C0 E0            [24] 4661 	push	acc
      001455 E4               [12] 4662 	clr	a
      001456 C0 E0            [24] 4663 	push	acc
      001458 C0 03            [24] 4664 	push	ar3
      00145A C0 04            [24] 4665 	push	ar4
      00145C C0 05            [24] 4666 	push	ar5
      00145E 8A 82            [24] 4667 	mov	dpl,r2
      001460 8E 83            [24] 4668 	mov	dph,r6
      001462 8F F0            [24] 4669 	mov	b,r7
      001464 78r00            [12] 4670 	mov	r0,#___memcpy
      001466 79s00            [12] 4671 	mov	r1,#(___memcpy >> 8)
      001468 7As00            [12] 4672 	mov	r2,#(___memcpy >> 16)
      00146A 12r00r00         [24] 4673 	lcall	__sdcc_banked_call
      00146D E5 81            [12] 4674 	mov	a,sp
      00146F 24 FB            [12] 4675 	add	a,#0xfb
      001471 F5 81            [12] 4676 	mov	sp,a
                                   4677 ;	../../../core/net/mac/lpp.c:792: packetbuf_hdrreduce(sizeof(struct lpp_hdr));
      001473 90 00 12         [24] 4678 	mov	dptr,#0x0012
      001476 78r00            [12] 4679 	mov	r0,#_packetbuf_hdrreduce
      001478 79s00            [12] 4680 	mov	r1,#(_packetbuf_hdrreduce >> 8)
      00147A 7As00            [12] 4681 	mov	r2,#(_packetbuf_hdrreduce >> 16)
      00147C 12r00r00         [24] 4682 	lcall	__sdcc_banked_call
      00147F D0 01            [24] 4683 	pop	ar1
      001481 D0 06            [24] 4684 	pop	ar6
      001483 D0 07            [24] 4685 	pop	ar7
                                   4686 ;	../../../core/net/mac/lpp.c:795: if(hdr.type == TYPE_PROBE) {
      001485 87 06            [24] 4687 	mov	ar6,@r1
      001487 09               [12] 4688 	inc	r1
      001488 87 07            [24] 4689 	mov	ar7,@r1
      00148A 19               [12] 4690 	dec	r1
      00148B 8E 05            [24] 4691 	mov	ar5,r6
      00148D 8F 04            [24] 4692 	mov	ar4,r7
      00148F BD 01 05         [24] 4693 	cjne	r5,#0x01,00188$
      001492 BC 00 02         [24] 4694 	cjne	r4,#0x00,00188$
      001495 80 07            [24] 4695 	sjmp	00189$
      001497                       4696 00188$:
      001497 D0 07            [24] 4697 	pop	ar7
      001499 D0 06            [24] 4698 	pop	ar6
      00149B 02r18r95         [24] 4699 	ljmp	00125$
      00149E                       4700 00189$:
      00149E D0 07            [24] 4701 	pop	ar7
      0014A0 D0 06            [24] 4702 	pop	ar6
                                   4703 ;	../../../core/net/mac/lpp.c:800: register_encounter(&hdr.sender, reception_time);
      0014A2 74 02            [12] 4704 	mov	a,#0x02
      0014A4 29               [12] 4705 	add	a,r1
      0014A5 FD               [12] 4706 	mov	r5,a
      0014A6 FA               [12] 4707 	mov	r2,a
      0014A7 7B 00            [12] 4708 	mov	r3,#0x00
      0014A9 7C 40            [12] 4709 	mov	r4,#0x40
      0014AB C0 05            [24] 4710 	push	ar5
      0014AD C0 06            [24] 4711 	push	ar6
      0014AF C0 07            [24] 4712 	push	ar7
      0014B1 8A 82            [24] 4713 	mov	dpl,r2
      0014B3 8B 83            [24] 4714 	mov	dph,r3
      0014B5 8C F0            [24] 4715 	mov	b,r4
      0014B7 78r1A            [12] 4716 	mov	r0,#_register_encounter
      0014B9 79s01            [12] 4717 	mov	r1,#(_register_encounter >> 8)
      0014BB 7As00            [12] 4718 	mov	r2,#(_register_encounter >> 16)
      0014BD 12r00r00         [24] 4719 	lcall	__sdcc_banked_call
      0014C0 15 81            [12] 4720 	dec	sp
      0014C2 15 81            [12] 4721 	dec	sp
                                   4722 ;	../../../core/net/mac/lpp.c:803: memcpy(&adata, packetbuf_dataptr(),
      0014C4 78r00            [12] 4723 	mov	r0,#_packetbuf_datalen
      0014C6 79s00            [12] 4724 	mov	r1,#(_packetbuf_datalen >> 8)
      0014C8 7As00            [12] 4725 	mov	r2,#(_packetbuf_datalen >> 16)
      0014CA 12r00r00         [24] 4726 	lcall	__sdcc_banked_call
      0014CD AE 82            [24] 4727 	mov	r6,dpl
      0014CF AF 83            [24] 4728 	mov	r7,dph
      0014D1 D0 05            [24] 4729 	pop	ar5
      0014D3 C3               [12] 4730 	clr	c
      0014D4 EE               [12] 4731 	mov	a,r6
      0014D5 94 02            [12] 4732 	subb	a,#0x02
      0014D7 EF               [12] 4733 	mov	a,r7
      0014D8 94 00            [12] 4734 	subb	a,#0x00
      0014DA 50 13            [24] 4735 	jnc	00132$
      0014DC C0 05            [24] 4736 	push	ar5
      0014DE 78r00            [12] 4737 	mov	r0,#_packetbuf_datalen
      0014E0 79s00            [12] 4738 	mov	r1,#(_packetbuf_datalen >> 8)
      0014E2 7As00            [12] 4739 	mov	r2,#(_packetbuf_datalen >> 16)
      0014E4 12r00r00         [24] 4740 	lcall	__sdcc_banked_call
      0014E7 AE 82            [24] 4741 	mov	r6,dpl
      0014E9 AF 83            [24] 4742 	mov	r7,dph
      0014EB D0 05            [24] 4743 	pop	ar5
      0014ED 80 04            [24] 4744 	sjmp	00133$
      0014EF                       4745 00132$:
      0014EF 7E 02            [12] 4746 	mov	r6,#0x02
      0014F1 7F 00            [12] 4747 	mov	r7,#0x00
      0014F3                       4748 00133$:
      0014F3 C0 05            [24] 4749 	push	ar5
      0014F5 E5 81            [12] 4750 	mov	a,sp
      0014F7 24 E1            [12] 4751 	add	a,#0xe1
      0014F9 F8               [12] 4752 	mov	r0,a
      0014FA A6 06            [24] 4753 	mov	@r0,ar6
      0014FC 08               [12] 4754 	inc	r0
      0014FD A6 07            [24] 4755 	mov	@r0,ar7
      0014FF C0 05            [24] 4756 	push	ar5
      001501 78r00            [12] 4757 	mov	r0,#_packetbuf_dataptr
      001503 79s00            [12] 4758 	mov	r1,#(_packetbuf_dataptr >> 8)
      001505 7As00            [12] 4759 	mov	r2,#(_packetbuf_dataptr >> 16)
      001507 12r00r00         [24] 4760 	lcall	__sdcc_banked_call
      00150A AA 82            [24] 4761 	mov	r2,dpl
      00150C AB 83            [24] 4762 	mov	r3,dph
      00150E AC F0            [24] 4763 	mov	r4,b
      001510 D0 05            [24] 4764 	pop	ar5
      001512 E5 81            [12] 4765 	mov	a,sp
      001514 24 F8            [12] 4766 	add	a,#0xf8
      001516 FD               [12] 4767 	mov	r5,a
      001517 7E 00            [12] 4768 	mov	r6,#0x00
      001519 7F 40            [12] 4769 	mov	r7,#0x40
      00151B C0 05            [24] 4770 	push	ar5
      00151D E5 81            [12] 4771 	mov	a,sp
      00151F 24 E0            [12] 4772 	add	a,#0xe0
      001521 F8               [12] 4773 	mov	r0,a
      001522 E6               [12] 4774 	mov	a,@r0
      001523 C0 E0            [24] 4775 	push	acc
      001525 08               [12] 4776 	inc	r0
      001526 E6               [12] 4777 	mov	a,@r0
      001527 C0 E0            [24] 4778 	push	acc
      001529 C0 02            [24] 4779 	push	ar2
      00152B C0 03            [24] 4780 	push	ar3
      00152D C0 04            [24] 4781 	push	ar4
      00152F 8D 82            [24] 4782 	mov	dpl,r5
      001531 8E 83            [24] 4783 	mov	dph,r6
      001533 8F F0            [24] 4784 	mov	b,r7
      001535 78r00            [12] 4785 	mov	r0,#___memcpy
      001537 79s00            [12] 4786 	mov	r1,#(___memcpy >> 8)
      001539 7As00            [12] 4787 	mov	r2,#(___memcpy >> 16)
      00153B 12r00r00         [24] 4788 	lcall	__sdcc_banked_call
      00153E E5 81            [12] 4789 	mov	a,sp
      001540 24 FB            [12] 4790 	add	a,#0xfb
      001542 F5 81            [12] 4791 	mov	sp,a
      001544 D0 05            [24] 4792 	pop	ar5
                                   4793 ;	../../../core/net/mac/lpp.c:831: if(list_length(queued_packets_list) > 0) {
      001546 90r00r0E         [24] 4794 	mov	dptr,#_queued_packets_list
      001549 E0               [24] 4795 	movx	a,@dptr
      00154A FD               [12] 4796 	mov	r5,a
      00154B A3               [24] 4797 	inc	dptr
      00154C E0               [24] 4798 	movx	a,@dptr
      00154D FE               [12] 4799 	mov	r6,a
      00154E A3               [24] 4800 	inc	dptr
      00154F E0               [24] 4801 	movx	a,@dptr
      001550 FF               [12] 4802 	mov	r7,a
      001551 8D 82            [24] 4803 	mov	dpl,r5
      001553 8E 83            [24] 4804 	mov	dph,r6
      001555 8F F0            [24] 4805 	mov	b,r7
      001557 C0 05            [24] 4806 	push	ar5
      001559 78r00            [12] 4807 	mov	r0,#_list_length
      00155B 79s00            [12] 4808 	mov	r1,#(_list_length >> 8)
      00155D 7As00            [12] 4809 	mov	r2,#(_list_length >> 16)
      00155F 12r00r00         [24] 4810 	lcall	__sdcc_banked_call
      001562 AE 82            [24] 4811 	mov	r6,dpl
      001564 AF 83            [24] 4812 	mov	r7,dph
      001566 D0 05            [24] 4813 	pop	ar5
      001568 C3               [12] 4814 	clr	c
      001569 E4               [12] 4815 	clr	a
      00156A 9E               [12] 4816 	subb	a,r6
      00156B 74 80            [12] 4817 	mov	a,#(0x00 ^ 0x80)
      00156D 8F F0            [24] 4818 	mov	b,r7
      00156F 63 F0 80         [24] 4819 	xrl	b,#0x80
      001572 95 F0            [12] 4820 	subb	a,b
      001574 D0 05            [24] 4821 	pop	ar5
      001576 40 03            [24] 4822 	jc	00191$
      001578 02r19rB5         [24] 4823 	ljmp	00130$
      00157B                       4824 00191$:
                                   4825 ;	../../../core/net/mac/lpp.c:833: for(i = list_head(queued_packets_list); i != NULL; i = list_item_next(i)) {
      00157B 90r00r0E         [24] 4826 	mov	dptr,#_queued_packets_list
      00157E E0               [24] 4827 	movx	a,@dptr
      00157F FC               [12] 4828 	mov	r4,a
      001580 A3               [24] 4829 	inc	dptr
      001581 E0               [24] 4830 	movx	a,@dptr
      001582 FE               [12] 4831 	mov	r6,a
      001583 A3               [24] 4832 	inc	dptr
      001584 E0               [24] 4833 	movx	a,@dptr
      001585 FF               [12] 4834 	mov	r7,a
      001586 8C 82            [24] 4835 	mov	dpl,r4
      001588 8E 83            [24] 4836 	mov	dph,r6
      00158A 8F F0            [24] 4837 	mov	b,r7
      00158C C0 05            [24] 4838 	push	ar5
      00158E 78r00            [12] 4839 	mov	r0,#_list_head
      001590 79s00            [12] 4840 	mov	r1,#(_list_head >> 8)
      001592 7As00            [12] 4841 	mov	r2,#(_list_head >> 16)
      001594 12r00r00         [24] 4842 	lcall	__sdcc_banked_call
      001597 AC 82            [24] 4843 	mov	r4,dpl
      001599 AE 83            [24] 4844 	mov	r6,dph
      00159B AF F0            [24] 4845 	mov	r7,b
      00159D D0 05            [24] 4846 	pop	ar5
      00159F E5 81            [12] 4847 	mov	a,sp
      0015A1 24 FB            [12] 4848 	add	a,#0xfb
      0015A3 F8               [12] 4849 	mov	r0,a
      0015A4 A6 04            [24] 4850 	mov	@r0,ar4
      0015A6 08               [12] 4851 	inc	r0
      0015A7 A6 06            [24] 4852 	mov	@r0,ar6
      0015A9 08               [12] 4853 	inc	r0
      0015AA A6 07            [24] 4854 	mov	@r0,ar7
      0015AC                       4855 00128$:
      0015AC E5 81            [12] 4856 	mov	a,sp
      0015AE 24 FB            [12] 4857 	add	a,#0xfb
      0015B0 F8               [12] 4858 	mov	r0,a
      0015B1 E6               [12] 4859 	mov	a,@r0
      0015B2 08               [12] 4860 	inc	r0
      0015B3 46               [12] 4861 	orl	a,@r0
      0015B4 70 03            [24] 4862 	jnz	00192$
      0015B6 02r19rB5         [24] 4863 	ljmp	00130$
      0015B9                       4864 00192$:
                                   4865 ;	../../../core/net/mac/lpp.c:839: receiver = queuebuf_addr(i->packet, PACKETBUF_ADDR_RECEIVER);
      0015B9 E5 81            [12] 4866 	mov	a,sp
      0015BB 24 FB            [12] 4867 	add	a,#0xfb
      0015BD F8               [12] 4868 	mov	r0,a
      0015BE 74 03            [12] 4869 	mov	a,#0x03
      0015C0 26               [12] 4870 	add	a,@r0
      0015C1 FA               [12] 4871 	mov	r2,a
      0015C2 E4               [12] 4872 	clr	a
      0015C3 08               [12] 4873 	inc	r0
      0015C4 36               [12] 4874 	addc	a,@r0
      0015C5 FB               [12] 4875 	mov	r3,a
      0015C6 08               [12] 4876 	inc	r0
      0015C7 86 07            [24] 4877 	mov	ar7,@r0
      0015C9 8A 82            [24] 4878 	mov	dpl,r2
      0015CB 8B 83            [24] 4879 	mov	dph,r3
      0015CD 8F F0            [24] 4880 	mov	b,r7
      0015CF 12r00r00         [24] 4881 	lcall	__gptrget
      0015D2 FA               [12] 4882 	mov	r2,a
      0015D3 A3               [24] 4883 	inc	dptr
      0015D4 12r00r00         [24] 4884 	lcall	__gptrget
      0015D7 FB               [12] 4885 	mov	r3,a
      0015D8 A3               [24] 4886 	inc	dptr
      0015D9 12r00r00         [24] 4887 	lcall	__gptrget
      0015DC FF               [12] 4888 	mov	r7,a
      0015DD C0 05            [24] 4889 	push	ar5
      0015DF 74 19            [12] 4890 	mov	a,#0x19
      0015E1 C0 E0            [24] 4891 	push	acc
      0015E3 8A 82            [24] 4892 	mov	dpl,r2
      0015E5 8B 83            [24] 4893 	mov	dph,r3
      0015E7 8F F0            [24] 4894 	mov	b,r7
      0015E9 78r00            [12] 4895 	mov	r0,#_queuebuf_addr
      0015EB 79s00            [12] 4896 	mov	r1,#(_queuebuf_addr >> 8)
      0015ED 7As00            [12] 4897 	mov	r2,#(_queuebuf_addr >> 16)
      0015EF 12r00r00         [24] 4898 	lcall	__sdcc_banked_call
      0015F2 AC 82            [24] 4899 	mov	r4,dpl
      0015F4 AE 83            [24] 4900 	mov	r6,dph
      0015F6 AF F0            [24] 4901 	mov	r7,b
      0015F8 15 81            [12] 4902 	dec	sp
      0015FA D0 05            [24] 4903 	pop	ar5
      0015FC A8 81            [24] 4904 	mov	r0,sp
      0015FE 18               [12] 4905 	dec	r0
      0015FF 18               [12] 4906 	dec	r0
      001600 A6 04            [24] 4907 	mov	@r0,ar4
      001602 08               [12] 4908 	inc	r0
      001603 A6 06            [24] 4909 	mov	@r0,ar6
      001605 08               [12] 4910 	inc	r0
      001606 A6 07            [24] 4911 	mov	@r0,ar7
                                   4912 ;	../../../core/net/mac/lpp.c:840: if(rimeaddr_cmp(receiver, &hdr.sender) ||
      001608 8D 02            [24] 4913 	mov	ar2,r5
      00160A 7B 00            [12] 4914 	mov	r3,#0x00
      00160C 7F 40            [12] 4915 	mov	r7,#0x40
      00160E C0 05            [24] 4916 	push	ar5
      001610 C0 02            [24] 4917 	push	ar2
      001612 C0 03            [24] 4918 	push	ar3
      001614 C0 07            [24] 4919 	push	ar7
      001616 E5 81            [12] 4920 	mov	a,sp
      001618 24 FA            [12] 4921 	add	a,#0xfa
      00161A F8               [12] 4922 	mov	r0,a
      00161B 86 82            [24] 4923 	mov	dpl,@r0
      00161D 08               [12] 4924 	inc	r0
      00161E 86 83            [24] 4925 	mov	dph,@r0
      001620 08               [12] 4926 	inc	r0
      001621 86 F0            [24] 4927 	mov	b,@r0
      001623 78r00            [12] 4928 	mov	r0,#_rimeaddr_cmp
      001625 79s00            [12] 4929 	mov	r1,#(_rimeaddr_cmp >> 8)
      001627 7As00            [12] 4930 	mov	r2,#(_rimeaddr_cmp >> 16)
      001629 12r00r00         [24] 4931 	lcall	__sdcc_banked_call
      00162C AE 82            [24] 4932 	mov	r6,dpl
      00162E AF 83            [24] 4933 	mov	r7,dph
      001630 15 81            [12] 4934 	dec	sp
      001632 15 81            [12] 4935 	dec	sp
      001634 15 81            [12] 4936 	dec	sp
      001636 D0 05            [24] 4937 	pop	ar5
      001638 EE               [12] 4938 	mov	a,r6
      001639 4F               [12] 4939 	orl	a,r7
      00163A 70 37            [24] 4940 	jnz	00112$
                                   4941 ;	../../../core/net/mac/lpp.c:841: rimeaddr_cmp(receiver, &rimeaddr_null)) {
      00163C C0 05            [24] 4942 	push	ar5
      00163E 74r00            [12] 4943 	mov	a,#_rimeaddr_null
      001640 C0 E0            [24] 4944 	push	acc
      001642 74s00            [12] 4945 	mov	a,#(_rimeaddr_null >> 8)
      001644 C0 E0            [24] 4946 	push	acc
      001646 74 80            [12] 4947 	mov	a,#0x80
      001648 C0 E0            [24] 4948 	push	acc
      00164A E5 81            [12] 4949 	mov	a,sp
      00164C 24 FA            [12] 4950 	add	a,#0xfa
      00164E F8               [12] 4951 	mov	r0,a
      00164F 86 82            [24] 4952 	mov	dpl,@r0
      001651 08               [12] 4953 	inc	r0
      001652 86 83            [24] 4954 	mov	dph,@r0
      001654 08               [12] 4955 	inc	r0
      001655 86 F0            [24] 4956 	mov	b,@r0
      001657 78r00            [12] 4957 	mov	r0,#_rimeaddr_cmp
      001659 79s00            [12] 4958 	mov	r1,#(_rimeaddr_cmp >> 8)
      00165B 7As00            [12] 4959 	mov	r2,#(_rimeaddr_cmp >> 16)
      00165D 12r00r00         [24] 4960 	lcall	__sdcc_banked_call
      001660 AE 82            [24] 4961 	mov	r6,dpl
      001662 AF 83            [24] 4962 	mov	r7,dph
      001664 15 81            [12] 4963 	dec	sp
      001666 15 81            [12] 4964 	dec	sp
      001668 15 81            [12] 4965 	dec	sp
      00166A D0 05            [24] 4966 	pop	ar5
      00166C EE               [12] 4967 	mov	a,r6
      00166D 4F               [12] 4968 	orl	a,r7
      00166E 70 03            [24] 4969 	jnz	00194$
      001670 02r18r5F         [24] 4970 	ljmp	00129$
      001673                       4971 00194$:
      001673                       4972 00112$:
                                   4973 ;	../../../core/net/mac/lpp.c:842: queuebuf_to_packetbuf(i->packet);
      001673 C0 05            [24] 4974 	push	ar5
      001675 E5 81            [12] 4975 	mov	a,sp
      001677 24 FA            [12] 4976 	add	a,#0xfa
      001679 F8               [12] 4977 	mov	r0,a
      00167A 74 03            [12] 4978 	mov	a,#0x03
      00167C 26               [12] 4979 	add	a,@r0
      00167D FC               [12] 4980 	mov	r4,a
      00167E E4               [12] 4981 	clr	a
      00167F 08               [12] 4982 	inc	r0
      001680 36               [12] 4983 	addc	a,@r0
      001681 FE               [12] 4984 	mov	r6,a
      001682 08               [12] 4985 	inc	r0
      001683 86 07            [24] 4986 	mov	ar7,@r0
      001685 8C 82            [24] 4987 	mov	dpl,r4
      001687 8E 83            [24] 4988 	mov	dph,r6
      001689 8F F0            [24] 4989 	mov	b,r7
      00168B 12r00r00         [24] 4990 	lcall	__gptrget
      00168E FA               [12] 4991 	mov	r2,a
      00168F A3               [24] 4992 	inc	dptr
      001690 12r00r00         [24] 4993 	lcall	__gptrget
      001693 FB               [12] 4994 	mov	r3,a
      001694 A3               [24] 4995 	inc	dptr
      001695 12r00r00         [24] 4996 	lcall	__gptrget
      001698 FD               [12] 4997 	mov	r5,a
      001699 8A 82            [24] 4998 	mov	dpl,r2
      00169B 8B 83            [24] 4999 	mov	dph,r3
      00169D 8D F0            [24] 5000 	mov	b,r5
      00169F C0 07            [24] 5001 	push	ar7
      0016A1 C0 06            [24] 5002 	push	ar6
      0016A3 C0 05            [24] 5003 	push	ar5
      0016A5 C0 04            [24] 5004 	push	ar4
      0016A7 78r00            [12] 5005 	mov	r0,#_queuebuf_to_packetbuf
      0016A9 79s00            [12] 5006 	mov	r1,#(_queuebuf_to_packetbuf >> 8)
      0016AB 7As00            [12] 5007 	mov	r2,#(_queuebuf_to_packetbuf >> 16)
      0016AD 12r00r00         [24] 5008 	lcall	__sdcc_banked_call
      0016B0 D0 04            [24] 5009 	pop	ar4
      0016B2 D0 05            [24] 5010 	pop	ar5
      0016B4 D0 06            [24] 5011 	pop	ar6
      0016B6 D0 07            [24] 5012 	pop	ar7
                                   5013 ;	../../../core/net/mac/lpp.c:862: i->num_transmissions = 1;
      0016B8 E5 81            [12] 5014 	mov	a,sp
      0016BA 24 FA            [12] 5015 	add	a,#0xfa
      0016BC F8               [12] 5016 	mov	r0,a
      0016BD 74 2A            [12] 5017 	mov	a,#0x2a
      0016BF 26               [12] 5018 	add	a,@r0
      0016C0 FA               [12] 5019 	mov	r2,a
      0016C1 E4               [12] 5020 	clr	a
      0016C2 08               [12] 5021 	inc	r0
      0016C3 36               [12] 5022 	addc	a,@r0
      0016C4 FB               [12] 5023 	mov	r3,a
      0016C5 08               [12] 5024 	inc	r0
      0016C6 86 05            [24] 5025 	mov	ar5,@r0
      0016C8 8A 82            [24] 5026 	mov	dpl,r2
      0016CA 8B 83            [24] 5027 	mov	dph,r3
      0016CC 8D F0            [24] 5028 	mov	b,r5
      0016CE 74 01            [12] 5029 	mov	a,#0x01
      0016D0 12r00r00         [24] 5030 	lcall	__gptrput
                                   5031 ;	../../../core/net/mac/lpp.c:863: ret = NETSTACK_RADIO.send(queuebuf_dataptr(i->packet),
      0016D3 90r00r09         [24] 5032 	mov	dptr,#(_cc2530_rf_driver + 0x0009)
      0016D6 E5 81            [12] 5033 	mov	a,sp
      0016D8 24 E3            [12] 5034 	add	a,#0xe3
      0016DA F8               [12] 5035 	mov	r0,a
      0016DB E4               [12] 5036 	clr	a
      0016DC 93               [24] 5037 	movc	a,@a+dptr
      0016DD F6               [12] 5038 	mov	@r0,a
      0016DE A3               [24] 5039 	inc	dptr
      0016DF E4               [12] 5040 	clr	a
      0016E0 93               [24] 5041 	movc	a,@a+dptr
      0016E1 08               [12] 5042 	inc	r0
      0016E2 F6               [12] 5043 	mov	@r0,a
      0016E3 A3               [24] 5044 	inc	dptr
      0016E4 E4               [12] 5045 	clr	a
      0016E5 93               [24] 5046 	movc	a,@a+dptr
      0016E6 08               [12] 5047 	inc	r0
      0016E7 F6               [12] 5048 	mov	@r0,a
                                   5049 ;	../../../core/net/mac/lpp.c:864: queuebuf_datalen(i->packet));
      0016E8 8C 82            [24] 5050 	mov	dpl,r4
      0016EA 8E 83            [24] 5051 	mov	dph,r6
      0016EC 8F F0            [24] 5052 	mov	b,r7
      0016EE 12r00r00         [24] 5053 	lcall	__gptrget
      0016F1 FA               [12] 5054 	mov	r2,a
      0016F2 A3               [24] 5055 	inc	dptr
      0016F3 12r00r00         [24] 5056 	lcall	__gptrget
      0016F6 FB               [12] 5057 	mov	r3,a
      0016F7 A3               [24] 5058 	inc	dptr
      0016F8 12r00r00         [24] 5059 	lcall	__gptrget
      0016FB FD               [12] 5060 	mov	r5,a
      0016FC 8A 82            [24] 5061 	mov	dpl,r2
      0016FE 8B 83            [24] 5062 	mov	dph,r3
      001700 8D F0            [24] 5063 	mov	b,r5
      001702 C0 07            [24] 5064 	push	ar7
      001704 C0 06            [24] 5065 	push	ar6
      001706 C0 04            [24] 5066 	push	ar4
      001708 78r00            [12] 5067 	mov	r0,#_queuebuf_datalen
      00170A 79s00            [12] 5068 	mov	r1,#(_queuebuf_datalen >> 8)
      00170C 7As00            [12] 5069 	mov	r2,#(_queuebuf_datalen >> 16)
      00170E 12r00r00         [24] 5070 	lcall	__sdcc_banked_call
      001711 AB 82            [24] 5071 	mov	r3,dpl
      001713 AD 83            [24] 5072 	mov	r5,dph
      001715 D0 04            [24] 5073 	pop	ar4
      001717 D0 06            [24] 5074 	pop	ar6
      001719 D0 07            [24] 5075 	pop	ar7
                                   5076 ;	../../../core/net/mac/lpp.c:863: ret = NETSTACK_RADIO.send(queuebuf_dataptr(i->packet),
      00171B 8C 82            [24] 5077 	mov	dpl,r4
      00171D 8E 83            [24] 5078 	mov	dph,r6
      00171F 8F F0            [24] 5079 	mov	b,r7
      001721 12r00r00         [24] 5080 	lcall	__gptrget
      001724 FC               [12] 5081 	mov	r4,a
      001725 A3               [24] 5082 	inc	dptr
      001726 12r00r00         [24] 5083 	lcall	__gptrget
      001729 FE               [12] 5084 	mov	r6,a
      00172A A3               [24] 5085 	inc	dptr
      00172B 12r00r00         [24] 5086 	lcall	__gptrget
      00172E FF               [12] 5087 	mov	r7,a
      00172F 8C 82            [24] 5088 	mov	dpl,r4
      001731 8E 83            [24] 5089 	mov	dph,r6
      001733 8F F0            [24] 5090 	mov	b,r7
      001735 C0 05            [24] 5091 	push	ar5
      001737 C0 03            [24] 5092 	push	ar3
      001739 78r00            [12] 5093 	mov	r0,#_queuebuf_dataptr
      00173B 79s00            [12] 5094 	mov	r1,#(_queuebuf_dataptr >> 8)
      00173D 7As00            [12] 5095 	mov	r2,#(_queuebuf_dataptr >> 16)
      00173F 12r00r00         [24] 5096 	lcall	__sdcc_banked_call
      001742 AC 82            [24] 5097 	mov	r4,dpl
      001744 AE 83            [24] 5098 	mov	r6,dph
      001746 AF F0            [24] 5099 	mov	r7,b
      001748 D0 03            [24] 5100 	pop	ar3
      00174A D0 05            [24] 5101 	pop	ar5
      00174C C0 05            [24] 5102 	push	ar5
      00174E C0 03            [24] 5103 	push	ar3
      001750 C0 05            [24] 5104 	push	ar5
      001752 E5 81            [12] 5105 	mov	a,sp
      001754 24 E0            [12] 5106 	add	a,#0xe0
      001756 F8               [12] 5107 	mov	r0,a
      001757 E6               [12] 5108 	mov	a,@r0
      001758 C0 E0            [24] 5109 	push	acc
      00175A 08               [12] 5110 	inc	r0
      00175B E6               [12] 5111 	mov	a,@r0
      00175C C0 E0            [24] 5112 	push	acc
      00175E 08               [12] 5113 	inc	r0
      00175F E6               [12] 5114 	mov	a,@r0
      001760 C0 E0            [24] 5115 	push	acc
      001762 8C 82            [24] 5116 	mov	dpl,r4
      001764 8E 83            [24] 5117 	mov	dph,r6
      001766 8F F0            [24] 5118 	mov	b,r7
      001768 D0 02            [24] 5119 	pop	ar2
      00176A D0 01            [24] 5120 	pop	ar1
      00176C D0 00            [24] 5121 	pop	ar0
      00176E 12r00r00         [24] 5122 	lcall	__sdcc_banked_call
      001771 15 81            [12] 5123 	dec	sp
      001773 15 81            [12] 5124 	dec	sp
      001775 D0 05            [24] 5125 	pop	ar5
                                   5126 ;	../../../core/net/mac/lpp.c:875: compower_accumulate(&i->compower);
      001777 E5 81            [12] 5127 	mov	a,sp
      001779 24 FA            [12] 5128 	add	a,#0xfa
      00177B F8               [12] 5129 	mov	r0,a
      00177C 74 1C            [12] 5130 	mov	a,#0x1c
      00177E 26               [12] 5131 	add	a,@r0
      00177F FD               [12] 5132 	mov	r5,a
      001780 E4               [12] 5133 	clr	a
      001781 08               [12] 5134 	inc	r0
      001782 36               [12] 5135 	addc	a,@r0
      001783 FE               [12] 5136 	mov	r6,a
      001784 08               [12] 5137 	inc	r0
      001785 86 07            [24] 5138 	mov	ar7,@r0
      001787 8D 82            [24] 5139 	mov	dpl,r5
      001789 8E 83            [24] 5140 	mov	dph,r6
      00178B 8F F0            [24] 5141 	mov	b,r7
      00178D C0 05            [24] 5142 	push	ar5
      00178F 78r00            [12] 5143 	mov	r0,#_compower_accumulate
      001791 79s00            [12] 5144 	mov	r1,#(_compower_accumulate >> 8)
      001793 7As00            [12] 5145 	mov	r2,#(_compower_accumulate >> 16)
      001795 12r00r00         [24] 5146 	lcall	__sdcc_banked_call
                                   5147 ;	../../../core/net/mac/lpp.c:881: if(!rimeaddr_cmp(receiver, &rimeaddr_null)) {
      001798 74r00            [12] 5148 	mov	a,#_rimeaddr_null
      00179A C0 E0            [24] 5149 	push	acc
      00179C 74s00            [12] 5150 	mov	a,#(_rimeaddr_null >> 8)
      00179E C0 E0            [24] 5151 	push	acc
      0017A0 74 80            [12] 5152 	mov	a,#0x80
      0017A2 C0 E0            [24] 5153 	push	acc
      0017A4 E5 81            [12] 5154 	mov	a,sp
      0017A6 24 F9            [12] 5155 	add	a,#0xf9
      0017A8 F8               [12] 5156 	mov	r0,a
      0017A9 86 82            [24] 5157 	mov	dpl,@r0
      0017AB 08               [12] 5158 	inc	r0
      0017AC 86 83            [24] 5159 	mov	dph,@r0
      0017AE 08               [12] 5160 	inc	r0
      0017AF 86 F0            [24] 5161 	mov	b,@r0
      0017B1 78r00            [12] 5162 	mov	r0,#_rimeaddr_cmp
      0017B3 79s00            [12] 5163 	mov	r1,#(_rimeaddr_cmp >> 8)
      0017B5 7As00            [12] 5164 	mov	r2,#(_rimeaddr_cmp >> 16)
      0017B7 12r00r00         [24] 5165 	lcall	__sdcc_banked_call
      0017BA AE 82            [24] 5166 	mov	r6,dpl
      0017BC AF 83            [24] 5167 	mov	r7,dph
      0017BE 15 81            [12] 5168 	dec	sp
      0017C0 15 81            [12] 5169 	dec	sp
      0017C2 15 81            [12] 5170 	dec	sp
      0017C4 D0 05            [24] 5171 	pop	ar5
      0017C6 D0 05            [24] 5172 	pop	ar5
      0017C8 EE               [12] 5173 	mov	a,r6
      0017C9 4F               [12] 5174 	orl	a,r7
      0017CA 60 03            [24] 5175 	jz	00195$
      0017CC 02r18r5F         [24] 5176 	ljmp	00129$
      0017CF                       5177 00195$:
                                   5178 ;	../../../core/net/mac/lpp.c:890: if(detect_ack()) {
      0017CF C0 05            [24] 5179 	push	ar5
      0017D1 78r2D            [12] 5180 	mov	r0,#_detect_ack
      0017D3 79s12            [12] 5181 	mov	r1,#(_detect_ack >> 8)
      0017D5 7As00            [12] 5182 	mov	r2,#(_detect_ack >> 16)
      0017D7 12r00r00         [24] 5183 	lcall	__sdcc_banked_call
      0017DA E5 82            [12] 5184 	mov	a,dpl
      0017DC 85 83 F0         [24] 5185 	mov	b,dph
      0017DF D0 05            [24] 5186 	pop	ar5
      0017E1 45 F0            [12] 5187 	orl	a,b
      0017E3 60 22            [24] 5188 	jz	00104$
                                   5189 ;	../../../core/net/mac/lpp.c:891: remove_queued_packet(i, 1);
      0017E5 C0 05            [24] 5190 	push	ar5
      0017E7 74 01            [12] 5191 	mov	a,#0x01
      0017E9 C0 E0            [24] 5192 	push	acc
      0017EB E5 81            [12] 5193 	mov	a,sp
      0017ED 24 F9            [12] 5194 	add	a,#0xf9
      0017EF F8               [12] 5195 	mov	r0,a
      0017F0 86 82            [24] 5196 	mov	dpl,@r0
      0017F2 08               [12] 5197 	inc	r0
      0017F3 86 83            [24] 5198 	mov	dph,@r0
      0017F5 08               [12] 5199 	inc	r0
      0017F6 86 F0            [24] 5200 	mov	b,@r0
      0017F8 78r87            [12] 5201 	mov	r0,#_remove_queued_packet
      0017FA 79s04            [12] 5202 	mov	r1,#(_remove_queued_packet >> 8)
      0017FC 7As00            [12] 5203 	mov	r2,#(_remove_queued_packet >> 16)
      0017FE 12r00r00         [24] 5204 	lcall	__sdcc_banked_call
      001801 15 81            [12] 5205 	dec	sp
      001803 D0 05            [24] 5206 	pop	ar5
      001805 80 1F            [24] 5207 	sjmp	00105$
      001807                       5208 00104$:
                                   5209 ;	../../../core/net/mac/lpp.c:893: remove_queued_packet(i, 0);
      001807 C0 05            [24] 5210 	push	ar5
      001809 E4               [12] 5211 	clr	a
      00180A C0 E0            [24] 5212 	push	acc
      00180C E5 81            [12] 5213 	mov	a,sp
      00180E 24 F9            [12] 5214 	add	a,#0xf9
      001810 F8               [12] 5215 	mov	r0,a
      001811 86 82            [24] 5216 	mov	dpl,@r0
      001813 08               [12] 5217 	inc	r0
      001814 86 83            [24] 5218 	mov	dph,@r0
      001816 08               [12] 5219 	inc	r0
      001817 86 F0            [24] 5220 	mov	b,@r0
      001819 78r87            [12] 5221 	mov	r0,#_remove_queued_packet
      00181B 79s04            [12] 5222 	mov	r1,#(_remove_queued_packet >> 8)
      00181D 7As00            [12] 5223 	mov	r2,#(_remove_queued_packet >> 16)
      00181F 12r00r00         [24] 5224 	lcall	__sdcc_banked_call
      001822 15 81            [12] 5225 	dec	sp
      001824 D0 05            [24] 5226 	pop	ar5
      001826                       5227 00105$:
                                   5228 ;	../../../core/net/mac/lpp.c:905: if(is_streaming) {
      001826 90r00r2B         [24] 5229 	mov	dptr,#_is_streaming
      001829 E0               [24] 5230 	movx	a,@dptr
      00182A 60 33            [24] 5231 	jz	00129$
                                   5232 ;	../../../core/net/mac/lpp.c:906: ctimer_set(&stream_probe_timer, STREAM_PROBE_TIME,
      00182C C0 05            [24] 5233 	push	ar5
      00182E E4               [12] 5234 	clr	a
      00182F C0 E0            [24] 5235 	push	acc
      001831 C0 E0            [24] 5236 	push	acc
      001833 C0 E0            [24] 5237 	push	acc
      001835 74rA9            [12] 5238 	mov	a,#_send_stream_probe
      001837 C0 E0            [24] 5239 	push	acc
      001839 74s0A            [12] 5240 	mov	a,#(_send_stream_probe >> 8)
      00183B C0 E0            [24] 5241 	push	acc
      00183D 74s00            [12] 5242 	mov	a,#(_send_stream_probe >> 16)
      00183F C0 E0            [24] 5243 	push	acc
      001841 74 01            [12] 5244 	mov	a,#0x01
      001843 C0 E0            [24] 5245 	push	acc
      001845 E4               [12] 5246 	clr	a
      001846 C0 E0            [24] 5247 	push	acc
      001848 90r01r8D         [24] 5248 	mov	dptr,#_stream_probe_timer
      00184B 75 F0 00         [24] 5249 	mov	b,#0x00
      00184E 78r00            [12] 5250 	mov	r0,#_ctimer_set
      001850 79s00            [12] 5251 	mov	r1,#(_ctimer_set >> 8)
      001852 7As00            [12] 5252 	mov	r2,#(_ctimer_set >> 16)
      001854 12r00r00         [24] 5253 	lcall	__sdcc_banked_call
      001857 E5 81            [12] 5254 	mov	a,sp
      001859 24 F8            [12] 5255 	add	a,#0xf8
      00185B F5 81            [12] 5256 	mov	sp,a
      00185D D0 05            [24] 5257 	pop	ar5
                                   5258 ;	../../../core/net/mac/lpp.c:913: turn_radio_off();
      00185F                       5259 00129$:
                                   5260 ;	../../../core/net/mac/lpp.c:833: for(i = list_head(queued_packets_list); i != NULL; i = list_item_next(i)) {
      00185F E5 81            [12] 5261 	mov	a,sp
      001861 24 FB            [12] 5262 	add	a,#0xfb
      001863 F8               [12] 5263 	mov	r0,a
      001864 86 04            [24] 5264 	mov	ar4,@r0
      001866 08               [12] 5265 	inc	r0
      001867 86 06            [24] 5266 	mov	ar6,@r0
      001869 08               [12] 5267 	inc	r0
      00186A 86 07            [24] 5268 	mov	ar7,@r0
      00186C 8C 82            [24] 5269 	mov	dpl,r4
      00186E 8E 83            [24] 5270 	mov	dph,r6
      001870 8F F0            [24] 5271 	mov	b,r7
      001872 C0 05            [24] 5272 	push	ar5
      001874 78r00            [12] 5273 	mov	r0,#_list_item_next
      001876 79s00            [12] 5274 	mov	r1,#(_list_item_next >> 8)
      001878 7As00            [12] 5275 	mov	r2,#(_list_item_next >> 16)
      00187A 12r00r00         [24] 5276 	lcall	__sdcc_banked_call
      00187D AC 82            [24] 5277 	mov	r4,dpl
      00187F AE 83            [24] 5278 	mov	r6,dph
      001881 AF F0            [24] 5279 	mov	r7,b
      001883 D0 05            [24] 5280 	pop	ar5
      001885 E5 81            [12] 5281 	mov	a,sp
      001887 24 FB            [12] 5282 	add	a,#0xfb
      001889 F8               [12] 5283 	mov	r0,a
      00188A A6 04            [24] 5284 	mov	@r0,ar4
      00188C 08               [12] 5285 	inc	r0
      00188D A6 06            [24] 5286 	mov	@r0,ar6
      00188F 08               [12] 5287 	inc	r0
      001890 A6 07            [24] 5288 	mov	@r0,ar7
      001892 02r15rAC         [24] 5289 	ljmp	00128$
      001895                       5290 00125$:
                                   5291 ;	../../../core/net/mac/lpp.c:929: } else if(hdr.type == TYPE_DATA) {
      001895 BD 02 05         [24] 5292 	cjne	r5,#0x02,00198$
      001898 BC 00 02         [24] 5293 	cjne	r4,#0x00,00198$
      00189B 80 03            [24] 5294 	sjmp	00199$
      00189D                       5295 00198$:
      00189D 02r19rB5         [24] 5296 	ljmp	00130$
      0018A0                       5297 00199$:
                                   5298 ;	../../../core/net/mac/lpp.c:930: turn_radio_off();
      0018A0 C0 01            [24] 5299 	push	ar1
      0018A2 78r2C            [12] 5300 	mov	r0,#_turn_radio_off
      0018A4 79s00            [12] 5301 	mov	r1,#(_turn_radio_off >> 8)
      0018A6 7As00            [12] 5302 	mov	r2,#(_turn_radio_off >> 16)
      0018A8 12r00r00         [24] 5303 	lcall	__sdcc_banked_call
      0018AB D0 01            [24] 5304 	pop	ar1
                                   5305 ;	../../../core/net/mac/lpp.c:931: if(!rimeaddr_cmp(&hdr.receiver, &rimeaddr_null)) {
      0018AD 74 0A            [12] 5306 	mov	a,#0x0a
      0018AF 29               [12] 5307 	add	a,r1
      0018B0 FF               [12] 5308 	mov	r7,a
      0018B1 FC               [12] 5309 	mov	r4,a
      0018B2 7D 00            [12] 5310 	mov	r5,#0x00
      0018B4 7E 40            [12] 5311 	mov	r6,#0x40
      0018B6 C0 07            [24] 5312 	push	ar7
      0018B8 C0 01            [24] 5313 	push	ar1
      0018BA 74r00            [12] 5314 	mov	a,#_rimeaddr_null
      0018BC C0 E0            [24] 5315 	push	acc
      0018BE 74s00            [12] 5316 	mov	a,#(_rimeaddr_null >> 8)
      0018C0 C0 E0            [24] 5317 	push	acc
      0018C2 74 80            [12] 5318 	mov	a,#0x80
      0018C4 C0 E0            [24] 5319 	push	acc
      0018C6 8C 82            [24] 5320 	mov	dpl,r4
      0018C8 8D 83            [24] 5321 	mov	dph,r5
      0018CA 8E F0            [24] 5322 	mov	b,r6
      0018CC 78r00            [12] 5323 	mov	r0,#_rimeaddr_cmp
      0018CE 79s00            [12] 5324 	mov	r1,#(_rimeaddr_cmp >> 8)
      0018D0 7As00            [12] 5325 	mov	r2,#(_rimeaddr_cmp >> 16)
      0018D2 12r00r00         [24] 5326 	lcall	__sdcc_banked_call
      0018D5 AD 82            [24] 5327 	mov	r5,dpl
      0018D7 AE 83            [24] 5328 	mov	r6,dph
      0018D9 15 81            [12] 5329 	dec	sp
      0018DB 15 81            [12] 5330 	dec	sp
      0018DD 15 81            [12] 5331 	dec	sp
      0018DF D0 01            [24] 5332 	pop	ar1
      0018E1 D0 07            [24] 5333 	pop	ar7
      0018E3 ED               [12] 5334 	mov	a,r5
      0018E4 4E               [12] 5335 	orl	a,r6
                                   5336 ;	../../../core/net/mac/lpp.c:932: if(!rimeaddr_cmp(&hdr.receiver, &rimeaddr_node_addr)) {
      0018E5 70 58            [24] 5337 	jnz	00121$
      0018E7 8F 06            [24] 5338 	mov	ar6,r7
      0018E9 FD               [12] 5339 	mov	r5,a
      0018EA 7C 40            [12] 5340 	mov	r4,#0x40
      0018EC C0 07            [24] 5341 	push	ar7
      0018EE C0 01            [24] 5342 	push	ar1
      0018F0 74r00            [12] 5343 	mov	a,#_rimeaddr_node_addr
      0018F2 C0 E0            [24] 5344 	push	acc
      0018F4 74s00            [12] 5345 	mov	a,#(_rimeaddr_node_addr >> 8)
      0018F6 C0 E0            [24] 5346 	push	acc
      0018F8 E4               [12] 5347 	clr	a
      0018F9 C0 E0            [24] 5348 	push	acc
      0018FB 8E 82            [24] 5349 	mov	dpl,r6
      0018FD 8D 83            [24] 5350 	mov	dph,r5
      0018FF 8C F0            [24] 5351 	mov	b,r4
      001901 78r00            [12] 5352 	mov	r0,#_rimeaddr_cmp
      001903 79s00            [12] 5353 	mov	r1,#(_rimeaddr_cmp >> 8)
      001905 7As00            [12] 5354 	mov	r2,#(_rimeaddr_cmp >> 16)
      001907 12r00r00         [24] 5355 	lcall	__sdcc_banked_call
      00190A AD 82            [24] 5356 	mov	r5,dpl
      00190C AE 83            [24] 5357 	mov	r6,dph
      00190E 15 81            [12] 5358 	dec	sp
      001910 15 81            [12] 5359 	dec	sp
      001912 15 81            [12] 5360 	dec	sp
      001914 D0 01            [24] 5361 	pop	ar1
      001916 D0 07            [24] 5362 	pop	ar7
      001918 ED               [12] 5363 	mov	a,r5
      001919 4E               [12] 5364 	orl	a,r6
      00191A 70 03            [24] 5365 	jnz	00119$
                                   5366 ;	../../../core/net/mac/lpp.c:937: return;
      00191C 02r19rB5         [24] 5367 	ljmp	00130$
      00191F                       5368 00119$:
                                   5369 ;	../../../core/net/mac/lpp.c:939: packetbuf_set_addr(PACKETBUF_ADDR_RECEIVER, &hdr.receiver);
      00191F 7E 00            [12] 5370 	mov	r6,#0x00
      001921 7D 40            [12] 5371 	mov	r5,#0x40
      001923 C0 01            [24] 5372 	push	ar1
      001925 C0 07            [24] 5373 	push	ar7
      001927 C0 06            [24] 5374 	push	ar6
      001929 C0 05            [24] 5375 	push	ar5
      00192B 75 82 19         [24] 5376 	mov	dpl,#0x19
      00192E 78r00            [12] 5377 	mov	r0,#_packetbuf_set_addr
      001930 79s00            [12] 5378 	mov	r1,#(_packetbuf_set_addr >> 8)
      001932 7As00            [12] 5379 	mov	r2,#(_packetbuf_set_addr >> 16)
      001934 12r00r00         [24] 5380 	lcall	__sdcc_banked_call
      001937 15 81            [12] 5381 	dec	sp
      001939 15 81            [12] 5382 	dec	sp
      00193B 15 81            [12] 5383 	dec	sp
      00193D D0 01            [24] 5384 	pop	ar1
      00193F                       5385 00121$:
                                   5386 ;	../../../core/net/mac/lpp.c:941: packetbuf_set_addr(PACKETBUF_ADDR_SENDER, &hdr.sender);
      00193F 74 02            [12] 5387 	mov	a,#0x02
      001941 29               [12] 5388 	add	a,r1
      001942 FF               [12] 5389 	mov	r7,a
      001943 7E 00            [12] 5390 	mov	r6,#0x00
      001945 7D 40            [12] 5391 	mov	r5,#0x40
      001947 C0 07            [24] 5392 	push	ar7
      001949 C0 06            [24] 5393 	push	ar6
      00194B C0 05            [24] 5394 	push	ar5
      00194D 75 82 18         [24] 5395 	mov	dpl,#0x18
      001950 78r00            [12] 5396 	mov	r0,#_packetbuf_set_addr
      001952 79s00            [12] 5397 	mov	r1,#(_packetbuf_set_addr >> 8)
      001954 7As00            [12] 5398 	mov	r2,#(_packetbuf_set_addr >> 16)
      001956 12r00r00         [24] 5399 	lcall	__sdcc_banked_call
      001959 15 81            [12] 5400 	dec	sp
      00195B 15 81            [12] 5401 	dec	sp
      00195D 15 81            [12] 5402 	dec	sp
                                   5403 ;	../../../core/net/mac/lpp.c:948: compower_accumulate(&current_packet);
      00195F 90r00r01         [24] 5404 	mov	dptr,#_current_packet
      001962 75 F0 00         [24] 5405 	mov	b,#0x00
      001965 78r00            [12] 5406 	mov	r0,#_compower_accumulate
      001967 79s00            [12] 5407 	mov	r1,#(_compower_accumulate >> 8)
      001969 7As00            [12] 5408 	mov	r2,#(_compower_accumulate >> 16)
      00196B 12r00r00         [24] 5409 	lcall	__sdcc_banked_call
                                   5410 ;	../../../core/net/mac/lpp.c:953: compower_attrconv(&current_packet);
      00196E 90r00r01         [24] 5411 	mov	dptr,#_current_packet
      001971 75 F0 00         [24] 5412 	mov	b,#0x00
      001974 78r00            [12] 5413 	mov	r0,#_compower_attrconv
      001976 79s00            [12] 5414 	mov	r1,#(_compower_attrconv >> 8)
      001978 7As00            [12] 5415 	mov	r2,#(_compower_attrconv >> 16)
      00197A 12r00r00         [24] 5416 	lcall	__sdcc_banked_call
                                   5417 ;	../../../core/net/mac/lpp.c:957: compower_clear(&current_packet);
      00197D 90r00r01         [24] 5418 	mov	dptr,#_current_packet
      001980 75 F0 00         [24] 5419 	mov	b,#0x00
      001983 78r00            [12] 5420 	mov	r0,#_compower_clear
      001985 79s00            [12] 5421 	mov	r1,#(_compower_clear >> 8)
      001987 7As00            [12] 5422 	mov	r2,#(_compower_clear >> 16)
      001989 12r00r00         [24] 5423 	lcall	__sdcc_banked_call
                                   5424 ;	../../../core/net/mac/lpp.c:1000: NETSTACK_MAC.input();
      00198C 90r00r09         [24] 5425 	mov	dptr,#(_csma_driver + 0x0009)
      00198F E4               [12] 5426 	clr	a
      001990 93               [24] 5427 	movc	a,@a+dptr
      001991 FD               [12] 5428 	mov	r5,a
      001992 A3               [24] 5429 	inc	dptr
      001993 E4               [12] 5430 	clr	a
      001994 93               [24] 5431 	movc	a,@a+dptr
      001995 FE               [12] 5432 	mov	r6,a
      001996 A3               [24] 5433 	inc	dptr
      001997 E4               [12] 5434 	clr	a
      001998 93               [24] 5435 	movc	a,@a+dptr
      001999 FF               [12] 5436 	mov	r7,a
      00199A C0 07            [24] 5437 	push	ar7
      00199C C0 06            [24] 5438 	push	ar6
      00199E C0 05            [24] 5439 	push	ar5
      0019A0 C0 05            [24] 5440 	push	ar5
      0019A2 C0 06            [24] 5441 	push	ar6
      0019A4 C0 07            [24] 5442 	push	ar7
      0019A6 D0 02            [24] 5443 	pop	ar2
      0019A8 D0 01            [24] 5444 	pop	ar1
      0019AA D0 00            [24] 5445 	pop	ar0
      0019AC 12r00r00         [24] 5446 	lcall	__sdcc_banked_call
      0019AF D0 05            [24] 5447 	pop	ar5
      0019B1 D0 06            [24] 5448 	pop	ar6
      0019B3 D0 07            [24] 5449 	pop	ar7
      0019B5                       5450 00130$:
                                   5451 ;	../../../core/net/mac/lpp.c:1002: }
      0019B5 E5 81            [12] 5452 	mov	a,sp
      0019B7 24 E1            [12] 5453 	add	a,#0xe1
      0019B9 F5 81            [12] 5454 	mov	sp,a
      0019BB 02r00r00         [24] 5455 	ljmp	__sdcc_banked_ret
                                   5456 ;------------------------------------------------------------
                                   5457 ;Allocation info for local variables in function 'on'
                                   5458 ;------------------------------------------------------------
                                   5459 ;	../../../core/net/mac/lpp.c:1005: on(void)
                                   5460 ;	-----------------------------------------
                                   5461 ;	 function on
                                   5462 ;	-----------------------------------------
      0019BE                       5463 _on:
                                   5464 ;	../../../core/net/mac/lpp.c:1007: lpp_is_on = 1;
      0019BE 90r00r00         [24] 5465 	mov	dptr,#_lpp_is_on
      0019C1 74 01            [12] 5466 	mov	a,#0x01
      0019C3 F0               [24] 5467 	movx	@dptr,a
                                   5468 ;	../../../core/net/mac/lpp.c:1008: turn_radio_on();
      0019C4 78r00            [12] 5469 	mov	r0,#_turn_radio_on
      0019C6 79s00            [12] 5470 	mov	r1,#(_turn_radio_on >> 8)
      0019C8 7As00            [12] 5471 	mov	r2,#(_turn_radio_on >> 16)
      0019CA 12r00r00         [24] 5472 	lcall	__sdcc_banked_call
                                   5473 ;	../../../core/net/mac/lpp.c:1009: return 1;
      0019CD 90 00 01         [24] 5474 	mov	dptr,#0x0001
                                   5475 ;	../../../core/net/mac/lpp.c:1010: }
      0019D0 02r00r00         [24] 5476 	ljmp	__sdcc_banked_ret
                                   5477 ;------------------------------------------------------------
                                   5478 ;Allocation info for local variables in function 'off'
                                   5479 ;------------------------------------------------------------
                                   5480 ;keep_radio_on             Allocated to registers r6 r7 
                                   5481 ;------------------------------------------------------------
                                   5482 ;	../../../core/net/mac/lpp.c:1013: off(int keep_radio_on)
                                   5483 ;	-----------------------------------------
                                   5484 ;	 function off
                                   5485 ;	-----------------------------------------
      0019D3                       5486 _off:
      0019D3 AE 82            [24] 5487 	mov	r6,dpl
      0019D5 AF 83            [24] 5488 	mov	r7,dph
                                   5489 ;	../../../core/net/mac/lpp.c:1015: lpp_is_on = 0;
      0019D7 90r00r00         [24] 5490 	mov	dptr,#_lpp_is_on
      0019DA E4               [12] 5491 	clr	a
      0019DB F0               [24] 5492 	movx	@dptr,a
                                   5493 ;	../../../core/net/mac/lpp.c:1016: if(keep_radio_on) {
      0019DC EE               [12] 5494 	mov	a,r6
      0019DD 4F               [12] 5495 	orl	a,r7
      0019DE 60 0B            [24] 5496 	jz	00102$
                                   5497 ;	../../../core/net/mac/lpp.c:1017: turn_radio_on();
      0019E0 78r00            [12] 5498 	mov	r0,#_turn_radio_on
      0019E2 79s00            [12] 5499 	mov	r1,#(_turn_radio_on >> 8)
      0019E4 7As00            [12] 5500 	mov	r2,#(_turn_radio_on >> 16)
      0019E6 12r00r00         [24] 5501 	lcall	__sdcc_banked_call
      0019E9 80 09            [24] 5502 	sjmp	00103$
      0019EB                       5503 00102$:
                                   5504 ;	../../../core/net/mac/lpp.c:1019: turn_radio_off();
      0019EB 78r2C            [12] 5505 	mov	r0,#_turn_radio_off
      0019ED 79s00            [12] 5506 	mov	r1,#(_turn_radio_off >> 8)
      0019EF 7As00            [12] 5507 	mov	r2,#(_turn_radio_off >> 16)
      0019F1 12r00r00         [24] 5508 	lcall	__sdcc_banked_call
      0019F4                       5509 00103$:
                                   5510 ;	../../../core/net/mac/lpp.c:1021: return 1;
      0019F4 90 00 01         [24] 5511 	mov	dptr,#0x0001
                                   5512 ;	../../../core/net/mac/lpp.c:1022: }
      0019F7 02r00r00         [24] 5513 	ljmp	__sdcc_banked_ret
                                   5514 ;------------------------------------------------------------
                                   5515 ;Allocation info for local variables in function 'channel_check_interval'
                                   5516 ;------------------------------------------------------------
                                   5517 ;	../../../core/net/mac/lpp.c:1025: channel_check_interval(void)
                                   5518 ;	-----------------------------------------
                                   5519 ;	 function channel_check_interval
                                   5520 ;	-----------------------------------------
      0019FA                       5521 _channel_check_interval:
                                   5522 ;	../../../core/net/mac/lpp.c:1027: return OFF_TIME + LISTEN_TIME;
      0019FA 90 00 10         [24] 5523 	mov	dptr,#0x0010
                                   5524 ;	../../../core/net/mac/lpp.c:1028: }
      0019FD 02r00r00         [24] 5525 	ljmp	__sdcc_banked_ret
                                   5526 ;------------------------------------------------------------
                                   5527 ;Allocation info for local variables in function 'init'
                                   5528 ;------------------------------------------------------------
                                   5529 ;	../../../core/net/mac/lpp.c:1031: init(void)
                                   5530 ;	-----------------------------------------
                                   5531 ;	 function init
                                   5532 ;	-----------------------------------------
      001A00                       5533 _init:
                                   5534 ;	../../../core/net/mac/lpp.c:1033: restart_dutycycle(random_rand() % OFF_TIME);
      001A00 78r00            [12] 5535 	mov	r0,#_random_rand
      001A02 79s00            [12] 5536 	mov	r1,#(_random_rand >> 8)
      001A04 7As00            [12] 5537 	mov	r2,#(_random_rand >> 16)
      001A06 12r00r00         [24] 5538 	lcall	__sdcc_banked_call
      001A09 AE 82            [24] 5539 	mov	r6,dpl
      001A0B AF 83            [24] 5540 	mov	r7,dph
      001A0D 74 0F            [12] 5541 	mov	a,#0x0f
      001A0F C0 E0            [24] 5542 	push	acc
      001A11 E4               [12] 5543 	clr	a
      001A12 C0 E0            [24] 5544 	push	acc
      001A14 8E 82            [24] 5545 	mov	dpl,r6
      001A16 8F 83            [24] 5546 	mov	dph,r7
      001A18 12r00r00         [24] 5547 	lcall	__moduint
      001A1B AE 82            [24] 5548 	mov	r6,dpl
      001A1D AF 83            [24] 5549 	mov	r7,dph
      001A1F 15 81            [12] 5550 	dec	sp
      001A21 15 81            [12] 5551 	dec	sp
      001A23 8E 82            [24] 5552 	mov	dpl,r6
      001A25 8F 83            [24] 5553 	mov	dph,r7
      001A27 78r61            [12] 5554 	mov	r0,#_restart_dutycycle
      001A29 79s0D            [12] 5555 	mov	r1,#(_restart_dutycycle >> 8)
      001A2B 7As00            [12] 5556 	mov	r2,#(_restart_dutycycle >> 16)
      001A2D 12r00r00         [24] 5557 	lcall	__sdcc_banked_call
                                   5558 ;	../../../core/net/mac/lpp.c:1035: lpp_is_on = 1;
      001A30 90r00r00         [24] 5559 	mov	dptr,#_lpp_is_on
      001A33 74 01            [12] 5560 	mov	a,#0x01
      001A35 F0               [24] 5561 	movx	@dptr,a
                                   5562 ;	../../../core/net/mac/lpp.c:1037: announcement_register_listen_callback(listen_callback);
      001A36 90r06rFC         [24] 5563 	mov	dptr,#_listen_callback
      001A39 75 F0s00         [24] 5564 	mov	b,#(_listen_callback >> 16)
      001A3C 78r00            [12] 5565 	mov	r0,#_announcement_register_listen_callback
      001A3E 79s00            [12] 5566 	mov	r1,#(_announcement_register_listen_callback >> 8)
      001A40 7As00            [12] 5567 	mov	r2,#(_announcement_register_listen_callback >> 16)
      001A42 12r00r00         [24] 5568 	lcall	__sdcc_banked_call
                                   5569 ;	../../../core/net/mac/lpp.c:1039: memb_init(&queued_packets_memb);
      001A45 90r00r11         [24] 5570 	mov	dptr,#_queued_packets_memb
      001A48 75 F0 00         [24] 5571 	mov	b,#0x00
      001A4B 78r00            [12] 5572 	mov	r0,#_memb_init
      001A4D 79s00            [12] 5573 	mov	r1,#(_memb_init >> 8)
      001A4F 7As00            [12] 5574 	mov	r2,#(_memb_init >> 16)
      001A51 12r00r00         [24] 5575 	lcall	__sdcc_banked_call
                                   5576 ;	../../../core/net/mac/lpp.c:1040: list_init(queued_packets_list);
      001A54 90r00r0E         [24] 5577 	mov	dptr,#_queued_packets_list
      001A57 E0               [24] 5578 	movx	a,@dptr
      001A58 FD               [12] 5579 	mov	r5,a
      001A59 A3               [24] 5580 	inc	dptr
      001A5A E0               [24] 5581 	movx	a,@dptr
      001A5B FE               [12] 5582 	mov	r6,a
      001A5C A3               [24] 5583 	inc	dptr
      001A5D E0               [24] 5584 	movx	a,@dptr
      001A5E FF               [12] 5585 	mov	r7,a
      001A5F 8D 82            [24] 5586 	mov	dpl,r5
      001A61 8E 83            [24] 5587 	mov	dph,r6
      001A63 8F F0            [24] 5588 	mov	b,r7
      001A65 78r00            [12] 5589 	mov	r0,#_list_init
      001A67 79s00            [12] 5590 	mov	r1,#(_list_init >> 8)
      001A69 7As00            [12] 5591 	mov	r2,#(_list_init >> 16)
      001A6B 12r00r00         [24] 5592 	lcall	__sdcc_banked_call
                                   5593 ;	../../../core/net/mac/lpp.c:1041: list_init(pending_packets_list);
      001A6E 90r00r08         [24] 5594 	mov	dptr,#_pending_packets_list
      001A71 E0               [24] 5595 	movx	a,@dptr
      001A72 FD               [12] 5596 	mov	r5,a
      001A73 A3               [24] 5597 	inc	dptr
      001A74 E0               [24] 5598 	movx	a,@dptr
      001A75 FE               [12] 5599 	mov	r6,a
      001A76 A3               [24] 5600 	inc	dptr
      001A77 E0               [24] 5601 	movx	a,@dptr
      001A78 FF               [12] 5602 	mov	r7,a
      001A79 8D 82            [24] 5603 	mov	dpl,r5
      001A7B 8E 83            [24] 5604 	mov	dph,r6
      001A7D 8F F0            [24] 5605 	mov	b,r7
      001A7F 78r00            [12] 5606 	mov	r0,#_list_init
      001A81 79s00            [12] 5607 	mov	r1,#(_list_init >> 8)
      001A83 7As00            [12] 5608 	mov	r2,#(_list_init >> 16)
      001A85 12r00r00         [24] 5609 	lcall	__sdcc_banked_call
                                   5610 ;	../../../core/net/mac/lpp.c:1042: }
      001A88 02r00r00         [24] 5611 	ljmp	__sdcc_banked_ret
                                   5612 	.area CSEG    (CODE)
                                   5613 	.area CONST   (CODE)
                                   5614 	.area CONST   (CODE)
      000000                       5615 ___str_0:
      000000 6E 75 6C 6C 20 70 61  5616 	.ascii "null packet"
             63 6B 65 74
      00000B 0A                    5617 	.db 0x0a
      00000C 00                    5618 	.db 0x00
                                   5619 	.area BANK1   (CODE)
                                   5620 	.area CONST   (CODE)
      00000D                       5621 ___str_1:
      00000D 69 20 3D 3D 20 4E 55  5622 	.ascii "i == NULL"
             4C 4C
      000016 0A                    5623 	.db 0x0a
      000017 00                    5624 	.db 0x00
                                   5625 	.area BANK1   (CODE)
                                   5626 	.area CONST   (CODE)
      000018                       5627 ___str_2:
      000018 6C 70 70 20 69 6E 70  5628 	.ascii "lpp input_packet framer error"
             75 74 5F 70 61 63 6B
             65 74 20 66 72 61 6D
             65 72 20 65 72 72 6F
             72
      000035 0A                    5629 	.db 0x0a
      000036 00                    5630 	.db 0x00
                                   5631 	.area BANK1   (CODE)
      001A8B                       5632 _lpp_driver:
      001A8Br37s00 80              5633 	.byte __str_3, (__str_3 >> 8),#0x80
      001A8Er00s1As00              5634 	.byte _init, (_init >> 8), (_init >> 16)
      001A91r9Fs0Ds00              5635 	.byte _send_packet, (_send_packet >> 8), (_send_packet >> 16)
      001A94rB2s11s00              5636 	.byte _send_list, (_send_list >> 8), (_send_list >> 16)
      001A97rC1s13s00              5637 	.byte _input_packet, (_input_packet >> 8), (_input_packet >> 16)
      001A9ArBEs19s00              5638 	.byte _on, (_on >> 8), (_on >> 16)
      001A9DrD3s19s00              5639 	.byte _off, (_off >> 8), (_off >> 16)
      001AA0rFAs19s00              5640 	.byte _channel_check_interval, (_channel_check_interval >> 8), (_channel_check_interval >> 16)
                                   5641 	.area CONST   (CODE)
      000037                       5642 __str_3:
      000037 4C 50 50              5643 	.ascii "LPP"
      00003A 00                    5644 	.db 0x00
                                   5645 	.area BANK1   (CODE)
                                   5646 	.area XINIT   (CODE)
      000000                       5647 __xinit__is_listening:
      000000 00                    5648 	.db #0x00	; 0
      000001                       5649 __xinit__off_time_adjustment:
      000001 00 00                 5650 	.byte #0x00, #0x00	; 0
      000003                       5651 __xinit__off_time:
      000003 0F 00                 5652 	.byte #0x0f, #0x00	; 15
      000005                       5653 __xinit__pending_packets_list_list:
                                   5654 ; generic printIvalPtr
      000005 00 00 00              5655 	.byte #0x00,#0x00,#0x00
      000008                       5656 __xinit__pending_packets_list:
      000008r05s00 00              5657 	.byte _pending_packets_list_list, (_pending_packets_list_list >> 8),#0x00
      00000B                       5658 __xinit__queued_packets_list_list:
                                   5659 ; generic printIvalPtr
      00000B 00 00 00              5660 	.byte #0x00,#0x00,#0x00
      00000E                       5661 __xinit__queued_packets_list:
      00000Er0Bs00 00              5662 	.byte _queued_packets_list_list, (_queued_packets_list_list >> 8),#0x00
      000011                       5663 __xinit__queued_packets_memb:
      000011 2B 00                 5664 	.byte #0x2b, #0x00	; 43
      000013 03 00                 5665 	.byte #0x03, #0x00	; 3
      000015r21s00 00              5666 	.byte _queued_packets_memb_memb_count, (_queued_packets_memb_memb_count >> 8),#0x00
      000018r24s00 00              5667 	.byte _queued_packets_memb_memb_mem, (_queued_packets_memb_memb_mem >> 8),#0x00
      00001B                       5668 __xinit__encounter_list_list:
                                   5669 ; generic printIvalPtr
      00001B 00 00 00              5670 	.byte #0x00,#0x00,#0x00
      00001E                       5671 __xinit__encounter_list:
      00001Er1Bs00 00              5672 	.byte _encounter_list_list, (_encounter_list_list >> 8),#0x00
      000021                       5673 __xinit__encounter_memb:
      000021 39 00                 5674 	.byte #0x39, #0x00	; 57
      000023 04 00                 5675 	.byte #0x04, #0x00	; 4
      000025rA5s00 00              5676 	.byte _encounter_memb_memb_count, (_encounter_memb_memb_count >> 8),#0x00
      000028rA9s00 00              5677 	.byte _encounter_memb_memb_mem, (_encounter_memb_memb_mem >> 8),#0x00
      00002B                       5678 __xinit__is_streaming:
      00002B 00                    5679 	.db #0x00	; 0
                                   5680 	.area CABS    (ABS,CODE)
