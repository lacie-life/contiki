                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module viztool
                                      6 	.optsdcc -mmcs51 --model-huge
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _uip_ds6_route_list_head
                                     12 	.globl _uip_ds6_route_num_routes
                                     13 	.globl _uip_ds6_defrt_choose
                                     14 	.globl _uip_ds6_defrt_lookup
                                     15 	.globl _uip_udp_packet_send
                                     16 	.globl _udp_new
                                     17 	.globl _uip_htonl
                                     18 	.globl _list_item_next
                                     19 	.globl ___memcpy
                                     20 	.globl _memset
                                     21 	.globl _ACTIVE
                                     22 	.globl _TX_BYTE
                                     23 	.globl _RX_BYTE
                                     24 	.globl _ERR
                                     25 	.globl _FE
                                     26 	.globl _SLAVE
                                     27 	.globl _RE
                                     28 	.globl _MODE
                                     29 	.globl _T3OVFIF
                                     30 	.globl _T3CH0IF
                                     31 	.globl _T3CH1IF
                                     32 	.globl _T4OVFIF
                                     33 	.globl _T4CH0IF
                                     34 	.globl _T4CH1IF
                                     35 	.globl _OVFIM
                                     36 	.globl _B_0
                                     37 	.globl _B_1
                                     38 	.globl _B_2
                                     39 	.globl _B_3
                                     40 	.globl _B_4
                                     41 	.globl _B_5
                                     42 	.globl _B_6
                                     43 	.globl _B_7
                                     44 	.globl _P2IF
                                     45 	.globl _UTX0IF
                                     46 	.globl _UTX1IF
                                     47 	.globl _P1IF
                                     48 	.globl _WDTIF
                                     49 	.globl _ACC_0
                                     50 	.globl _ACC_1
                                     51 	.globl _ACC_2
                                     52 	.globl _ACC_3
                                     53 	.globl _ACC_4
                                     54 	.globl _ACC_5
                                     55 	.globl _ACC_6
                                     56 	.globl _ACC_7
                                     57 	.globl _P
                                     58 	.globl _F1
                                     59 	.globl _OV
                                     60 	.globl _RS0
                                     61 	.globl _RS1
                                     62 	.globl _F0
                                     63 	.globl _AC
                                     64 	.globl _CY
                                     65 	.globl _DMAIF
                                     66 	.globl _T1IF
                                     67 	.globl _T2IF
                                     68 	.globl _T3IF
                                     69 	.globl _T4IF
                                     70 	.globl _P0IF
                                     71 	.globl _STIF
                                     72 	.globl _DMAIE
                                     73 	.globl _T1IE
                                     74 	.globl _T2IE
                                     75 	.globl _T3IE
                                     76 	.globl _T4IE
                                     77 	.globl _P0IE
                                     78 	.globl _RFERRIE
                                     79 	.globl _ADCIE
                                     80 	.globl _URX0IE
                                     81 	.globl _URX1IE
                                     82 	.globl _ENCIE
                                     83 	.globl _STIE
                                     84 	.globl _EA
                                     85 	.globl _P2_0
                                     86 	.globl _P2_1
                                     87 	.globl _P2_2
                                     88 	.globl _P2_3
                                     89 	.globl _P2_4
                                     90 	.globl _P2_5
                                     91 	.globl _P2_6
                                     92 	.globl _P2_7
                                     93 	.globl _ENCIF_0
                                     94 	.globl _ENCIF_1
                                     95 	.globl _P1_0
                                     96 	.globl _P1_1
                                     97 	.globl _P1_2
                                     98 	.globl _P1_3
                                     99 	.globl _P1_4
                                    100 	.globl _P1_5
                                    101 	.globl _P1_6
                                    102 	.globl _P1_7
                                    103 	.globl _IT0
                                    104 	.globl _RFERRIF
                                    105 	.globl _IT1
                                    106 	.globl _URX0IF
                                    107 	.globl _ADCIF
                                    108 	.globl _URX1IF
                                    109 	.globl _P0_0
                                    110 	.globl _P0_1
                                    111 	.globl _P0_2
                                    112 	.globl _P0_3
                                    113 	.globl _P0_4
                                    114 	.globl _P0_5
                                    115 	.globl _P0_6
                                    116 	.globl _P0_7
                                    117 	.globl _WDCTL
                                    118 	.globl _U1GCR
                                    119 	.globl _U1UCR
                                    120 	.globl _U1BAUD
                                    121 	.globl _U1DBUF
                                    122 	.globl _U1CSR
                                    123 	.globl _U0GCR
                                    124 	.globl _U0UCR
                                    125 	.globl _U0BAUD
                                    126 	.globl _U0DBUF
                                    127 	.globl _U0CSR
                                    128 	.globl _TIMIF
                                    129 	.globl _T4CC1
                                    130 	.globl _T4CCTL1
                                    131 	.globl _T4CC0
                                    132 	.globl _T4CCTL0
                                    133 	.globl _T4CTL
                                    134 	.globl _T4CNT
                                    135 	.globl _T3CC1
                                    136 	.globl _T3CCTL1
                                    137 	.globl _T3CC0
                                    138 	.globl _T3CCTL0
                                    139 	.globl _T3CTL
                                    140 	.globl _T3CNT
                                    141 	.globl _T2MSEL
                                    142 	.globl _T2IRQM
                                    143 	.globl _T2MOVF2
                                    144 	.globl _T2MOVF1
                                    145 	.globl _T2MOVF0
                                    146 	.globl _T2M1
                                    147 	.globl _T2M0
                                    148 	.globl _T2IRQF
                                    149 	.globl _T2EVTCFG
                                    150 	.globl _T2CTRL
                                    151 	.globl _T1STAT
                                    152 	.globl _T1CCTL2
                                    153 	.globl _T1CCTL1
                                    154 	.globl _T1CCTL0
                                    155 	.globl _T1CTL
                                    156 	.globl _T1CNTH
                                    157 	.globl _T1CNTL
                                    158 	.globl _T1CC2H
                                    159 	.globl _T1CC2L
                                    160 	.globl _T1CC1H
                                    161 	.globl _T1CC1L
                                    162 	.globl _T1CC0H
                                    163 	.globl _T1CC0L
                                    164 	.globl _CLKCONSTA
                                    165 	.globl _CLKCONCMD
                                    166 	.globl _SLEEPSTA
                                    167 	.globl _SLEEPCMD
                                    168 	.globl _STLOAD
                                    169 	.globl _ST2
                                    170 	.globl _ST1
                                    171 	.globl _ST0
                                    172 	.globl _RFERRF
                                    173 	.globl _RFIRQF0
                                    174 	.globl _RFST
                                    175 	.globl _RFD
                                    176 	.globl _RFIRQF1
                                    177 	.globl _PSBANK
                                    178 	.globl _FMAP
                                    179 	.globl _MEMCTR
                                    180 	.globl __XPAGE
                                    181 	.globl _MPAGE
                                    182 	.globl _PMUX
                                    183 	.globl _P2DIR
                                    184 	.globl _P1DIR
                                    185 	.globl _P0DIR
                                    186 	.globl _P2INP
                                    187 	.globl _P1INP
                                    188 	.globl _P2SEL
                                    189 	.globl _P1SEL
                                    190 	.globl _P0SEL
                                    191 	.globl _APCFG
                                    192 	.globl _PERCFG
                                    193 	.globl _P0INP
                                    194 	.globl _P2IEN
                                    195 	.globl _P1IEN
                                    196 	.globl _P0IEN
                                    197 	.globl _PICTL
                                    198 	.globl _P2IFG
                                    199 	.globl _P1IFG
                                    200 	.globl _P0IFG
                                    201 	.globl _DMAREQ
                                    202 	.globl _DMAARM
                                    203 	.globl _DMA0CFGH
                                    204 	.globl _DMA0CFGL
                                    205 	.globl _DMA1CFGH
                                    206 	.globl _DMA1CFGL
                                    207 	.globl _DMAIRQ
                                    208 	.globl _ENCCS
                                    209 	.globl _ENCDO
                                    210 	.globl _ENCDI
                                    211 	.globl _RNDH
                                    212 	.globl _RNDL
                                    213 	.globl _ADCH
                                    214 	.globl _ADCL
                                    215 	.globl _ADCCON3
                                    216 	.globl _ADCCON2
                                    217 	.globl _ADCCON1
                                    218 	.globl _B
                                    219 	.globl _IRCON2
                                    220 	.globl _ACC
                                    221 	.globl _PSW
                                    222 	.globl _IRCON
                                    223 	.globl _IP1
                                    224 	.globl _IEN1
                                    225 	.globl _IP0
                                    226 	.globl _IEN0
                                    227 	.globl _P2
                                    228 	.globl _S1CON
                                    229 	.globl _IEN2
                                    230 	.globl _S0CON
                                    231 	.globl _DPS
                                    232 	.globl _P1
                                    233 	.globl _TCON
                                    234 	.globl _PCON
                                    235 	.globl _DPH1
                                    236 	.globl _DPL1
                                    237 	.globl _DPH0
                                    238 	.globl _DPL0
                                    239 	.globl _SP
                                    240 	.globl _P0
                                    241 	.globl _viztool_process
                                    242 	.globl _X_IEEE_ADDR
                                    243 	.globl _X_INFOPAGE
                                    244 	.globl _X_P2DIR
                                    245 	.globl _X_P1DIR
                                    246 	.globl _X_P0DIR
                                    247 	.globl _X_U1GCR
                                    248 	.globl _X_U1UCR
                                    249 	.globl _X_U1BAUD
                                    250 	.globl _X_U1DBUF
                                    251 	.globl _X_U1CSR
                                    252 	.globl _X_P2INP
                                    253 	.globl _X_P1INP
                                    254 	.globl _X_P2SEL
                                    255 	.globl _X_P1SEL
                                    256 	.globl _X_P0SEL
                                    257 	.globl _X_APCFG
                                    258 	.globl _X_PERCFG
                                    259 	.globl _X_T4CC1
                                    260 	.globl _X_T4CCTL1
                                    261 	.globl _X_T4CC0
                                    262 	.globl _X_T4CCTL0
                                    263 	.globl _X_T4CTL
                                    264 	.globl _X_T4CNT
                                    265 	.globl _X_RFIRQF0
                                    266 	.globl _X_T1CCTL2
                                    267 	.globl _X_T1CCTL1
                                    268 	.globl _X_T1CCTL0
                                    269 	.globl _X_T1CTL
                                    270 	.globl _X_T1CNTH
                                    271 	.globl _X_T1CNTL
                                    272 	.globl _X_RFST
                                    273 	.globl _X_T1CC2H
                                    274 	.globl _X_T1CC2L
                                    275 	.globl _X_T1CC1H
                                    276 	.globl _X_T1CC1L
                                    277 	.globl _X_T1CC0H
                                    278 	.globl _X_T1CC0L
                                    279 	.globl _X_RFD
                                    280 	.globl _X_TIMIF
                                    281 	.globl _X_DMAREQ
                                    282 	.globl _X_DMAARM
                                    283 	.globl _X_DMA0CFGH
                                    284 	.globl _X_DMA0CFGL
                                    285 	.globl _X_DMA1CFGH
                                    286 	.globl _X_DMA1CFGL
                                    287 	.globl _X_DMAIRQ
                                    288 	.globl _X_T3CC1
                                    289 	.globl _X_T3CCTL1
                                    290 	.globl _X_T3CC0
                                    291 	.globl _X_T3CCTL0
                                    292 	.globl _X_T3CTL
                                    293 	.globl _X_T3CNT
                                    294 	.globl _X_WDCTL
                                    295 	.globl _X_MEMCTR
                                    296 	.globl _X_CLKCONCMD
                                    297 	.globl _X_U0GCR
                                    298 	.globl _X_U0UCR
                                    299 	.globl _X_T2MSEL
                                    300 	.globl _X_U0BAUD
                                    301 	.globl _X_U0DBUF
                                    302 	.globl _X_RFERRF
                                    303 	.globl _X_SLEEPCMD
                                    304 	.globl _X_RNDH
                                    305 	.globl _X_RNDL
                                    306 	.globl _X_ADCH
                                    307 	.globl _X_ADCL
                                    308 	.globl _X_ADCCON3
                                    309 	.globl _X_ADCCON2
                                    310 	.globl _X_ADCCON1
                                    311 	.globl _X_ENCCS
                                    312 	.globl _X_ENCDO
                                    313 	.globl _X_ENCDI
                                    314 	.globl _X_T1STAT
                                    315 	.globl _X_PMUX
                                    316 	.globl _X_STLOAD
                                    317 	.globl _X_P2IEN
                                    318 	.globl _X_P0IEN
                                    319 	.globl _X_T2IRQM
                                    320 	.globl _X_T2MOVF2
                                    321 	.globl _X_T2MOVF1
                                    322 	.globl _X_T2MOVF0
                                    323 	.globl _X_T2M1
                                    324 	.globl _X_T2M0
                                    325 	.globl _X_T2IRQF
                                    326 	.globl _X_P2
                                    327 	.globl _X_PSBANK
                                    328 	.globl _X_FMAP
                                    329 	.globl _X_CLKCONSTA
                                    330 	.globl _X_SLEEPSTA
                                    331 	.globl _X_T2EVTCFG
                                    332 	.globl _X_ST2
                                    333 	.globl _X_ST1
                                    334 	.globl _X_ST0
                                    335 	.globl _X_T2CTRL
                                    336 	.globl _X__XPAGE
                                    337 	.globl _X_MPAGE
                                    338 	.globl _X_RFIRQF1
                                    339 	.globl _X_P1
                                    340 	.globl _X_P0INP
                                    341 	.globl _X_P1IEN
                                    342 	.globl _X_PICTL
                                    343 	.globl _X_P2IFG
                                    344 	.globl _X_P1IFG
                                    345 	.globl _X_P0IFG
                                    346 	.globl _X_U0CSR
                                    347 	.globl _X_P0
                                    348 	.globl _USBF5
                                    349 	.globl _USBF4
                                    350 	.globl _USBF3
                                    351 	.globl _USBF2
                                    352 	.globl _USBF1
                                    353 	.globl _USBF0
                                    354 	.globl _USBCNTH
                                    355 	.globl _USBCNTL
                                    356 	.globl _USBCNT0
                                    357 	.globl _USBCSOH
                                    358 	.globl _USBCSOL
                                    359 	.globl _USBMAXO
                                    360 	.globl _USBCSIH
                                    361 	.globl _USBCSIL
                                    362 	.globl _USBCS0
                                    363 	.globl _USBMAXI
                                    364 	.globl _USBCTRL
                                    365 	.globl _USBINDEX
                                    366 	.globl _USBFRMH
                                    367 	.globl _USBFRML
                                    368 	.globl _USBCIE
                                    369 	.globl _USBOIE
                                    370 	.globl _USBIIE
                                    371 	.globl _USBCIF
                                    372 	.globl _USBOIF
                                    373 	.globl _USBIIF
                                    374 	.globl _USBPOW
                                    375 	.globl _USBADDR
                                    376 	.globl _CSPT
                                    377 	.globl _CSPZ
                                    378 	.globl _CSPY
                                    379 	.globl _CSPX
                                    380 	.globl _CSPSTAT
                                    381 	.globl _CSPCTRL
                                    382 	.globl _CSPPROG23
                                    383 	.globl _CSPPROG22
                                    384 	.globl _CSPPROG21
                                    385 	.globl _CSPPROG20
                                    386 	.globl _CSPPROG19
                                    387 	.globl _CSPPROG18
                                    388 	.globl _CSPPROG17
                                    389 	.globl _CSPPROG16
                                    390 	.globl _CSPPROG15
                                    391 	.globl _CSPPROG14
                                    392 	.globl _CSPPROG13
                                    393 	.globl _CSPPROG12
                                    394 	.globl _CSPPROG11
                                    395 	.globl _CSPPROG10
                                    396 	.globl _CSPPROG9
                                    397 	.globl _CSPPROG8
                                    398 	.globl _CSPPROG7
                                    399 	.globl _CSPPROG6
                                    400 	.globl _CSPPROG5
                                    401 	.globl _CSPPROG4
                                    402 	.globl _CSPPROG3
                                    403 	.globl _CSPPROG2
                                    404 	.globl _CSPPROG1
                                    405 	.globl _CSPPROG0
                                    406 	.globl _RFC_OBS_CTRL2
                                    407 	.globl _RFC_OBS_CTRL1
                                    408 	.globl _RFC_OBS_CTRL0
                                    409 	.globl _TXFILTCFG
                                    410 	.globl _PTEST1
                                    411 	.globl _PTEST0
                                    412 	.globl _ATEST
                                    413 	.globl _DACTEST2
                                    414 	.globl _DACTEST1
                                    415 	.globl _DACTEST0
                                    416 	.globl _MDMTEST1
                                    417 	.globl _MDMTEST0
                                    418 	.globl _ADCTEST2
                                    419 	.globl _ADCTEST1
                                    420 	.globl _ADCTEST0
                                    421 	.globl _AGCCTRL3
                                    422 	.globl _AGCCTRL2
                                    423 	.globl _AGCCTRL1
                                    424 	.globl _AGCCTRL0
                                    425 	.globl _FSCAL3
                                    426 	.globl _FSCAL2
                                    427 	.globl _FSCAL1
                                    428 	.globl _FSCAL0
                                    429 	.globl _FSCTRL
                                    430 	.globl _RXCTRL
                                    431 	.globl _FREQEST
                                    432 	.globl _MDMCTRL1
                                    433 	.globl _MDMCTRL0
                                    434 	.globl _RFRND
                                    435 	.globl _RFERRM
                                    436 	.globl _RFIRQM1
                                    437 	.globl _RFIRQM0
                                    438 	.globl _TXLAST_PTR
                                    439 	.globl _TXFIRST_PTR
                                    440 	.globl _RXP1_PTR
                                    441 	.globl _RXLAST_PTR
                                    442 	.globl _RXFIRST_PTR
                                    443 	.globl _TXFIFOCNT
                                    444 	.globl _RXFIFOCNT
                                    445 	.globl _RXFIRST
                                    446 	.globl _RSSISTAT
                                    447 	.globl _RSSI
                                    448 	.globl _CCACTRL1
                                    449 	.globl _CCACTRL0
                                    450 	.globl _FSMCTRL
                                    451 	.globl _FIFOPCTRL
                                    452 	.globl _FSMSTAT1
                                    453 	.globl _FSMSTAT0
                                    454 	.globl _TXCTRL
                                    455 	.globl _TXPOWER
                                    456 	.globl _FREQCTRL
                                    457 	.globl _FREQTUNE
                                    458 	.globl _RXMASKCLR
                                    459 	.globl _RXMASKSET
                                    460 	.globl _RXENABLE
                                    461 	.globl _FRMCTRL1
                                    462 	.globl _FRMCTRL0
                                    463 	.globl _SRCEXTEN2
                                    464 	.globl _SRCEXTEN1
                                    465 	.globl _SRCEXTEN0
                                    466 	.globl _SRCSHORTEN2
                                    467 	.globl _SRCSHORTEN1
                                    468 	.globl _SRCSHORTEN0
                                    469 	.globl _SRCMATCH
                                    470 	.globl _FRMFILT1
                                    471 	.globl _FRMFILT0
                                    472 	.globl _SHORT_ADDR1
                                    473 	.globl _SHORT_ADDR0
                                    474 	.globl _PAN_ID1
                                    475 	.globl _PAN_ID0
                                    476 	.globl _EXT_ADDR7
                                    477 	.globl _EXT_ADDR6
                                    478 	.globl _EXT_ADDR5
                                    479 	.globl _EXT_ADDR4
                                    480 	.globl _EXT_ADDR3
                                    481 	.globl _EXT_ADDR2
                                    482 	.globl _EXT_ADDR1
                                    483 	.globl _EXT_ADDR0
                                    484 	.globl _SRCSHORTPENDEN2
                                    485 	.globl _SRCSHORTPENDEN1
                                    486 	.globl _SRCSHORTPENDEN0
                                    487 	.globl _SRCEXTPENDEN2
                                    488 	.globl _SRCEXTPENDEN1
                                    489 	.globl _SRCEXTPENDEN0
                                    490 	.globl _SRCRESINDEX
                                    491 	.globl _SRCRESMASK2
                                    492 	.globl _SRCRESMASK1
                                    493 	.globl _SRCRESMASK0
                                    494 	.globl _SRC_ADDR_TABLE
                                    495 	.globl _TXFIFO
                                    496 	.globl _RXFIFO
                                    497 	.globl _RFCORE_RAM
                                    498 	.globl _CMPCTL
                                    499 	.globl _OPAMPS
                                    500 	.globl _OPAMPC
                                    501 	.globl _STCV2
                                    502 	.globl _STCV1
                                    503 	.globl _STCV0
                                    504 	.globl _STCS
                                    505 	.globl _STCC
                                    506 	.globl _T1CC4H
                                    507 	.globl _T1CC4L
                                    508 	.globl _T1CC3H
                                    509 	.globl _T1CC3L
                                    510 	.globl _XX_T1CC2H
                                    511 	.globl _XX_T1CC2L
                                    512 	.globl _XX_T1CC1H
                                    513 	.globl _XX_T1CC1L
                                    514 	.globl _XX_T1CC0H
                                    515 	.globl _XX_T1CC0L
                                    516 	.globl _T1CCTL4
                                    517 	.globl _T1CCTL3
                                    518 	.globl _XX_T1CCTL2
                                    519 	.globl _XX_T1CCTL1
                                    520 	.globl _XX_T1CCTL0
                                    521 	.globl _CLD
                                    522 	.globl _IRCTL
                                    523 	.globl _CHIPINFO1
                                    524 	.globl _CHIPINFO0
                                    525 	.globl _FWDATA
                                    526 	.globl _FADDRH
                                    527 	.globl _FADDRL
                                    528 	.globl _FCTL
                                    529 	.globl _IVCTRL
                                    530 	.globl _BATTMON
                                    531 	.globl _SRCRC
                                    532 	.globl _DBGDATA
                                    533 	.globl _TESTREG0
                                    534 	.globl _CHIPID
                                    535 	.globl _CHVER
                                    536 	.globl _OBSSEL5
                                    537 	.globl _OBSSEL4
                                    538 	.globl _OBSSEL3
                                    539 	.globl _OBSSEL2
                                    540 	.globl _OBSSEL1
                                    541 	.globl _OBSSEL0
                                    542 	.globl _I2CIO
                                    543 	.globl _I2CWC
                                    544 	.globl _I2CADDR
                                    545 	.globl _I2CDATA
                                    546 	.globl _I2CSTAT
                                    547 	.globl _I2CCFG
                                    548 	.globl _OPAMPMC
                                    549 	.globl _MONMUX
                                    550 ;--------------------------------------------------------
                                    551 ; special function registers
                                    552 ;--------------------------------------------------------
                                    553 	.area RSEG    (ABS,DATA)
      000000                        554 	.org 0x0000
                           000080   555 _P0	=	0x0080
                           000081   556 _SP	=	0x0081
                           000082   557 _DPL0	=	0x0082
                           000083   558 _DPH0	=	0x0083
                           000084   559 _DPL1	=	0x0084
                           000085   560 _DPH1	=	0x0085
                           000087   561 _PCON	=	0x0087
                           000088   562 _TCON	=	0x0088
                           000090   563 _P1	=	0x0090
                           000092   564 _DPS	=	0x0092
                           000098   565 _S0CON	=	0x0098
                           00009A   566 _IEN2	=	0x009a
                           00009B   567 _S1CON	=	0x009b
                           0000A0   568 _P2	=	0x00a0
                           0000A8   569 _IEN0	=	0x00a8
                           0000A9   570 _IP0	=	0x00a9
                           0000B8   571 _IEN1	=	0x00b8
                           0000B9   572 _IP1	=	0x00b9
                           0000C0   573 _IRCON	=	0x00c0
                           0000D0   574 _PSW	=	0x00d0
                           0000E0   575 _ACC	=	0x00e0
                           0000E8   576 _IRCON2	=	0x00e8
                           0000F0   577 _B	=	0x00f0
                           0000B4   578 _ADCCON1	=	0x00b4
                           0000B5   579 _ADCCON2	=	0x00b5
                           0000B6   580 _ADCCON3	=	0x00b6
                           0000BA   581 _ADCL	=	0x00ba
                           0000BB   582 _ADCH	=	0x00bb
                           0000BC   583 _RNDL	=	0x00bc
                           0000BD   584 _RNDH	=	0x00bd
                           0000B1   585 _ENCDI	=	0x00b1
                           0000B2   586 _ENCDO	=	0x00b2
                           0000B3   587 _ENCCS	=	0x00b3
                           0000D1   588 _DMAIRQ	=	0x00d1
                           0000D2   589 _DMA1CFGL	=	0x00d2
                           0000D3   590 _DMA1CFGH	=	0x00d3
                           0000D4   591 _DMA0CFGL	=	0x00d4
                           0000D5   592 _DMA0CFGH	=	0x00d5
                           0000D6   593 _DMAARM	=	0x00d6
                           0000D7   594 _DMAREQ	=	0x00d7
                           000089   595 _P0IFG	=	0x0089
                           00008A   596 _P1IFG	=	0x008a
                           00008B   597 _P2IFG	=	0x008b
                           00008C   598 _PICTL	=	0x008c
                           0000AB   599 _P0IEN	=	0x00ab
                           00008D   600 _P1IEN	=	0x008d
                           0000AC   601 _P2IEN	=	0x00ac
                           00008F   602 _P0INP	=	0x008f
                           0000F1   603 _PERCFG	=	0x00f1
                           0000F2   604 _APCFG	=	0x00f2
                           0000F3   605 _P0SEL	=	0x00f3
                           0000F4   606 _P1SEL	=	0x00f4
                           0000F5   607 _P2SEL	=	0x00f5
                           0000F6   608 _P1INP	=	0x00f6
                           0000F7   609 _P2INP	=	0x00f7
                           0000FD   610 _P0DIR	=	0x00fd
                           0000FE   611 _P1DIR	=	0x00fe
                           0000FF   612 _P2DIR	=	0x00ff
                           0000AE   613 _PMUX	=	0x00ae
                           000093   614 _MPAGE	=	0x0093
                           000093   615 __XPAGE	=	0x0093
                           0000C7   616 _MEMCTR	=	0x00c7
                           00009F   617 _FMAP	=	0x009f
                           00009F   618 _PSBANK	=	0x009f
                           000091   619 _RFIRQF1	=	0x0091
                           0000D9   620 _RFD	=	0x00d9
                           0000E1   621 _RFST	=	0x00e1
                           0000E9   622 _RFIRQF0	=	0x00e9
                           0000BF   623 _RFERRF	=	0x00bf
                           000095   624 _ST0	=	0x0095
                           000096   625 _ST1	=	0x0096
                           000097   626 _ST2	=	0x0097
                           0000AD   627 _STLOAD	=	0x00ad
                           0000BE   628 _SLEEPCMD	=	0x00be
                           00009D   629 _SLEEPSTA	=	0x009d
                           0000C6   630 _CLKCONCMD	=	0x00c6
                           00009E   631 _CLKCONSTA	=	0x009e
                           0000DA   632 _T1CC0L	=	0x00da
                           0000DB   633 _T1CC0H	=	0x00db
                           0000DC   634 _T1CC1L	=	0x00dc
                           0000DD   635 _T1CC1H	=	0x00dd
                           0000DE   636 _T1CC2L	=	0x00de
                           0000DF   637 _T1CC2H	=	0x00df
                           0000E2   638 _T1CNTL	=	0x00e2
                           0000E3   639 _T1CNTH	=	0x00e3
                           0000E4   640 _T1CTL	=	0x00e4
                           0000E5   641 _T1CCTL0	=	0x00e5
                           0000E6   642 _T1CCTL1	=	0x00e6
                           0000E7   643 _T1CCTL2	=	0x00e7
                           0000AF   644 _T1STAT	=	0x00af
                           000094   645 _T2CTRL	=	0x0094
                           00009C   646 _T2EVTCFG	=	0x009c
                           0000A1   647 _T2IRQF	=	0x00a1
                           0000A2   648 _T2M0	=	0x00a2
                           0000A3   649 _T2M1	=	0x00a3
                           0000A4   650 _T2MOVF0	=	0x00a4
                           0000A5   651 _T2MOVF1	=	0x00a5
                           0000A6   652 _T2MOVF2	=	0x00a6
                           0000A7   653 _T2IRQM	=	0x00a7
                           0000C3   654 _T2MSEL	=	0x00c3
                           0000CA   655 _T3CNT	=	0x00ca
                           0000CB   656 _T3CTL	=	0x00cb
                           0000CC   657 _T3CCTL0	=	0x00cc
                           0000CD   658 _T3CC0	=	0x00cd
                           0000CE   659 _T3CCTL1	=	0x00ce
                           0000CF   660 _T3CC1	=	0x00cf
                           0000EA   661 _T4CNT	=	0x00ea
                           0000EB   662 _T4CTL	=	0x00eb
                           0000EC   663 _T4CCTL0	=	0x00ec
                           0000ED   664 _T4CC0	=	0x00ed
                           0000EE   665 _T4CCTL1	=	0x00ee
                           0000EF   666 _T4CC1	=	0x00ef
                           0000D8   667 _TIMIF	=	0x00d8
                           000086   668 _U0CSR	=	0x0086
                           0000C1   669 _U0DBUF	=	0x00c1
                           0000C2   670 _U0BAUD	=	0x00c2
                           0000C4   671 _U0UCR	=	0x00c4
                           0000C5   672 _U0GCR	=	0x00c5
                           0000F8   673 _U1CSR	=	0x00f8
                           0000F9   674 _U1DBUF	=	0x00f9
                           0000FA   675 _U1BAUD	=	0x00fa
                           0000FB   676 _U1UCR	=	0x00fb
                           0000FC   677 _U1GCR	=	0x00fc
                           0000C9   678 _WDCTL	=	0x00c9
                                    679 ;--------------------------------------------------------
                                    680 ; special function bits
                                    681 ;--------------------------------------------------------
                                    682 	.area RSEG    (ABS,DATA)
      000000                        683 	.org 0x0000
                           000087   684 _P0_7	=	0x0087
                           000086   685 _P0_6	=	0x0086
                           000085   686 _P0_5	=	0x0085
                           000084   687 _P0_4	=	0x0084
                           000083   688 _P0_3	=	0x0083
                           000082   689 _P0_2	=	0x0082
                           000081   690 _P0_1	=	0x0081
                           000080   691 _P0_0	=	0x0080
                           00008F   692 _URX1IF	=	0x008f
                           00008D   693 _ADCIF	=	0x008d
                           00008B   694 _URX0IF	=	0x008b
                           00008A   695 _IT1	=	0x008a
                           000089   696 _RFERRIF	=	0x0089
                           000088   697 _IT0	=	0x0088
                           000097   698 _P1_7	=	0x0097
                           000096   699 _P1_6	=	0x0096
                           000095   700 _P1_5	=	0x0095
                           000094   701 _P1_4	=	0x0094
                           000093   702 _P1_3	=	0x0093
                           000092   703 _P1_2	=	0x0092
                           000091   704 _P1_1	=	0x0091
                           000090   705 _P1_0	=	0x0090
                           000099   706 _ENCIF_1	=	0x0099
                           000098   707 _ENCIF_0	=	0x0098
                           0000A7   708 _P2_7	=	0x00a7
                           0000A6   709 _P2_6	=	0x00a6
                           0000A5   710 _P2_5	=	0x00a5
                           0000A4   711 _P2_4	=	0x00a4
                           0000A3   712 _P2_3	=	0x00a3
                           0000A2   713 _P2_2	=	0x00a2
                           0000A1   714 _P2_1	=	0x00a1
                           0000A0   715 _P2_0	=	0x00a0
                           0000AF   716 _EA	=	0x00af
                           0000AD   717 _STIE	=	0x00ad
                           0000AC   718 _ENCIE	=	0x00ac
                           0000AB   719 _URX1IE	=	0x00ab
                           0000AA   720 _URX0IE	=	0x00aa
                           0000A9   721 _ADCIE	=	0x00a9
                           0000A8   722 _RFERRIE	=	0x00a8
                           0000BD   723 _P0IE	=	0x00bd
                           0000BC   724 _T4IE	=	0x00bc
                           0000BB   725 _T3IE	=	0x00bb
                           0000BA   726 _T2IE	=	0x00ba
                           0000B9   727 _T1IE	=	0x00b9
                           0000B8   728 _DMAIE	=	0x00b8
                           0000C7   729 _STIF	=	0x00c7
                           0000C5   730 _P0IF	=	0x00c5
                           0000C4   731 _T4IF	=	0x00c4
                           0000C3   732 _T3IF	=	0x00c3
                           0000C2   733 _T2IF	=	0x00c2
                           0000C1   734 _T1IF	=	0x00c1
                           0000C0   735 _DMAIF	=	0x00c0
                           0000D7   736 _CY	=	0x00d7
                           0000D6   737 _AC	=	0x00d6
                           0000D5   738 _F0	=	0x00d5
                           0000D4   739 _RS1	=	0x00d4
                           0000D3   740 _RS0	=	0x00d3
                           0000D2   741 _OV	=	0x00d2
                           0000D1   742 _F1	=	0x00d1
                           0000D0   743 _P	=	0x00d0
                           0000E7   744 _ACC_7	=	0x00e7
                           0000E6   745 _ACC_6	=	0x00e6
                           0000E5   746 _ACC_5	=	0x00e5
                           0000E4   747 _ACC_4	=	0x00e4
                           0000E3   748 _ACC_3	=	0x00e3
                           0000E2   749 _ACC_2	=	0x00e2
                           0000E1   750 _ACC_1	=	0x00e1
                           0000E0   751 _ACC_0	=	0x00e0
                           0000EC   752 _WDTIF	=	0x00ec
                           0000EB   753 _P1IF	=	0x00eb
                           0000EA   754 _UTX1IF	=	0x00ea
                           0000E9   755 _UTX0IF	=	0x00e9
                           0000E8   756 _P2IF	=	0x00e8
                           0000F7   757 _B_7	=	0x00f7
                           0000F6   758 _B_6	=	0x00f6
                           0000F5   759 _B_5	=	0x00f5
                           0000F4   760 _B_4	=	0x00f4
                           0000F3   761 _B_3	=	0x00f3
                           0000F2   762 _B_2	=	0x00f2
                           0000F1   763 _B_1	=	0x00f1
                           0000F0   764 _B_0	=	0x00f0
                           0000DE   765 _OVFIM	=	0x00de
                           0000DD   766 _T4CH1IF	=	0x00dd
                           0000DC   767 _T4CH0IF	=	0x00dc
                           0000DB   768 _T4OVFIF	=	0x00db
                           0000DA   769 _T3CH1IF	=	0x00da
                           0000D9   770 _T3CH0IF	=	0x00d9
                           0000D8   771 _T3OVFIF	=	0x00d8
                           0000FF   772 _MODE	=	0x00ff
                           0000FE   773 _RE	=	0x00fe
                           0000FD   774 _SLAVE	=	0x00fd
                           0000FC   775 _FE	=	0x00fc
                           0000FB   776 _ERR	=	0x00fb
                           0000FA   777 _RX_BYTE	=	0x00fa
                           0000F9   778 _TX_BYTE	=	0x00f9
                           0000F8   779 _ACTIVE	=	0x00f8
                                    780 ;--------------------------------------------------------
                                    781 ; overlayable register banks
                                    782 ;--------------------------------------------------------
                                    783 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        784 	.ds 8
                                    785 ;--------------------------------------------------------
                                    786 ; internal ram data
                                    787 ;--------------------------------------------------------
                                    788 	.area DSEG    (DATA)
                                    789 ;--------------------------------------------------------
                                    790 ; overlayable items in internal ram 
                                    791 ;--------------------------------------------------------
                                    792 ;--------------------------------------------------------
                                    793 ; indirectly addressable internal ram data
                                    794 ;--------------------------------------------------------
                                    795 	.area ISEG    (DATA)
                                    796 ;--------------------------------------------------------
                                    797 ; absolute internal ram data
                                    798 ;--------------------------------------------------------
                                    799 	.area IABS    (ABS,DATA)
                                    800 	.area IABS    (ABS,DATA)
                                    801 ;--------------------------------------------------------
                                    802 ; bit data
                                    803 ;--------------------------------------------------------
                                    804 	.area BSEG    (BIT)
                                    805 ;--------------------------------------------------------
                                    806 ; paged external ram data
                                    807 ;--------------------------------------------------------
                                    808 	.area PSEG    (PAG,XDATA)
                                    809 ;--------------------------------------------------------
                                    810 ; external ram data
                                    811 ;--------------------------------------------------------
                                    812 	.area XSEG    (XDATA)
                           0061A6   813 _MONMUX	=	0x61a6
                           0061A6   814 _OPAMPMC	=	0x61a6
                           006230   815 _I2CCFG	=	0x6230
                           006231   816 _I2CSTAT	=	0x6231
                           006232   817 _I2CDATA	=	0x6232
                           006233   818 _I2CADDR	=	0x6233
                           006234   819 _I2CWC	=	0x6234
                           006235   820 _I2CIO	=	0x6235
                           006243   821 _OBSSEL0	=	0x6243
                           006244   822 _OBSSEL1	=	0x6244
                           006245   823 _OBSSEL2	=	0x6245
                           006246   824 _OBSSEL3	=	0x6246
                           006247   825 _OBSSEL4	=	0x6247
                           006248   826 _OBSSEL5	=	0x6248
                           006249   827 _CHVER	=	0x6249
                           00624A   828 _CHIPID	=	0x624a
                           00624B   829 _TESTREG0	=	0x624b
                           006260   830 _DBGDATA	=	0x6260
                           006262   831 _SRCRC	=	0x6262
                           006264   832 _BATTMON	=	0x6264
                           006265   833 _IVCTRL	=	0x6265
                           006270   834 _FCTL	=	0x6270
                           006271   835 _FADDRL	=	0x6271
                           006272   836 _FADDRH	=	0x6272
                           006273   837 _FWDATA	=	0x6273
                           006276   838 _CHIPINFO0	=	0x6276
                           006277   839 _CHIPINFO1	=	0x6277
                           006281   840 _IRCTL	=	0x6281
                           006290   841 _CLD	=	0x6290
                           0062A0   842 _XX_T1CCTL0	=	0x62a0
                           0062A1   843 _XX_T1CCTL1	=	0x62a1
                           0062A2   844 _XX_T1CCTL2	=	0x62a2
                           0062A3   845 _T1CCTL3	=	0x62a3
                           0062A4   846 _T1CCTL4	=	0x62a4
                           0062A6   847 _XX_T1CC0L	=	0x62a6
                           0062A7   848 _XX_T1CC0H	=	0x62a7
                           0062A8   849 _XX_T1CC1L	=	0x62a8
                           0062A9   850 _XX_T1CC1H	=	0x62a9
                           0062AA   851 _XX_T1CC2L	=	0x62aa
                           0062AB   852 _XX_T1CC2H	=	0x62ab
                           0062AC   853 _T1CC3L	=	0x62ac
                           0062AD   854 _T1CC3H	=	0x62ad
                           0062AE   855 _T1CC4L	=	0x62ae
                           0062AF   856 _T1CC4H	=	0x62af
                           0062B0   857 _STCC	=	0x62b0
                           0062B1   858 _STCS	=	0x62b1
                           0062B2   859 _STCV0	=	0x62b2
                           0062B3   860 _STCV1	=	0x62b3
                           0062B4   861 _STCV2	=	0x62b4
                           0062C0   862 _OPAMPC	=	0x62c0
                           0062C1   863 _OPAMPS	=	0x62c1
                           0062D0   864 _CMPCTL	=	0x62d0
                           006000   865 _RFCORE_RAM	=	0x6000
                           006000   866 _RXFIFO	=	0x6000
                           006080   867 _TXFIFO	=	0x6080
                           006100   868 _SRC_ADDR_TABLE	=	0x6100
                           006160   869 _SRCRESMASK0	=	0x6160
                           006161   870 _SRCRESMASK1	=	0x6161
                           006162   871 _SRCRESMASK2	=	0x6162
                           006163   872 _SRCRESINDEX	=	0x6163
                           006164   873 _SRCEXTPENDEN0	=	0x6164
                           006165   874 _SRCEXTPENDEN1	=	0x6165
                           006166   875 _SRCEXTPENDEN2	=	0x6166
                           006167   876 _SRCSHORTPENDEN0	=	0x6167
                           006168   877 _SRCSHORTPENDEN1	=	0x6168
                           006169   878 _SRCSHORTPENDEN2	=	0x6169
                           00616A   879 _EXT_ADDR0	=	0x616a
                           00616B   880 _EXT_ADDR1	=	0x616b
                           00616C   881 _EXT_ADDR2	=	0x616c
                           00616D   882 _EXT_ADDR3	=	0x616d
                           00616E   883 _EXT_ADDR4	=	0x616e
                           00616F   884 _EXT_ADDR5	=	0x616f
                           006170   885 _EXT_ADDR6	=	0x6170
                           006171   886 _EXT_ADDR7	=	0x6171
                           006172   887 _PAN_ID0	=	0x6172
                           006173   888 _PAN_ID1	=	0x6173
                           006174   889 _SHORT_ADDR0	=	0x6174
                           006175   890 _SHORT_ADDR1	=	0x6175
                           006180   891 _FRMFILT0	=	0x6180
                           006181   892 _FRMFILT1	=	0x6181
                           006182   893 _SRCMATCH	=	0x6182
                           006183   894 _SRCSHORTEN0	=	0x6183
                           006184   895 _SRCSHORTEN1	=	0x6184
                           006185   896 _SRCSHORTEN2	=	0x6185
                           006186   897 _SRCEXTEN0	=	0x6186
                           006187   898 _SRCEXTEN1	=	0x6187
                           006188   899 _SRCEXTEN2	=	0x6188
                           006189   900 _FRMCTRL0	=	0x6189
                           00618A   901 _FRMCTRL1	=	0x618a
                           00618B   902 _RXENABLE	=	0x618b
                           00618C   903 _RXMASKSET	=	0x618c
                           00618D   904 _RXMASKCLR	=	0x618d
                           00618E   905 _FREQTUNE	=	0x618e
                           00618F   906 _FREQCTRL	=	0x618f
                           006190   907 _TXPOWER	=	0x6190
                           006191   908 _TXCTRL	=	0x6191
                           006192   909 _FSMSTAT0	=	0x6192
                           006193   910 _FSMSTAT1	=	0x6193
                           006194   911 _FIFOPCTRL	=	0x6194
                           006195   912 _FSMCTRL	=	0x6195
                           006196   913 _CCACTRL0	=	0x6196
                           006197   914 _CCACTRL1	=	0x6197
                           006198   915 _RSSI	=	0x6198
                           006199   916 _RSSISTAT	=	0x6199
                           00619A   917 _RXFIRST	=	0x619a
                           00619B   918 _RXFIFOCNT	=	0x619b
                           00619C   919 _TXFIFOCNT	=	0x619c
                           00619D   920 _RXFIRST_PTR	=	0x619d
                           00619E   921 _RXLAST_PTR	=	0x619e
                           00619F   922 _RXP1_PTR	=	0x619f
                           0061A1   923 _TXFIRST_PTR	=	0x61a1
                           0061A2   924 _TXLAST_PTR	=	0x61a2
                           0061A3   925 _RFIRQM0	=	0x61a3
                           0061A4   926 _RFIRQM1	=	0x61a4
                           0061A5   927 _RFERRM	=	0x61a5
                           0061A7   928 _RFRND	=	0x61a7
                           0061A8   929 _MDMCTRL0	=	0x61a8
                           0061A9   930 _MDMCTRL1	=	0x61a9
                           0061AA   931 _FREQEST	=	0x61aa
                           0061AB   932 _RXCTRL	=	0x61ab
                           0061AC   933 _FSCTRL	=	0x61ac
                           0061AD   934 _FSCAL0	=	0x61ad
                           0061AE   935 _FSCAL1	=	0x61ae
                           0061AF   936 _FSCAL2	=	0x61af
                           0061B0   937 _FSCAL3	=	0x61b0
                           0061B1   938 _AGCCTRL0	=	0x61b1
                           0061B2   939 _AGCCTRL1	=	0x61b2
                           0061B3   940 _AGCCTRL2	=	0x61b3
                           0061B4   941 _AGCCTRL3	=	0x61b4
                           0061B5   942 _ADCTEST0	=	0x61b5
                           0061B6   943 _ADCTEST1	=	0x61b6
                           0061B7   944 _ADCTEST2	=	0x61b7
                           0061B8   945 _MDMTEST0	=	0x61b8
                           0061B9   946 _MDMTEST1	=	0x61b9
                           0061BA   947 _DACTEST0	=	0x61ba
                           0061BB   948 _DACTEST1	=	0x61bb
                           0061BC   949 _DACTEST2	=	0x61bc
                           0061BD   950 _ATEST	=	0x61bd
                           0061BE   951 _PTEST0	=	0x61be
                           0061BF   952 _PTEST1	=	0x61bf
                           0061FA   953 _TXFILTCFG	=	0x61fa
                           0061EB   954 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   955 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   956 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   957 _CSPPROG0	=	0x61c0
                           0061C1   958 _CSPPROG1	=	0x61c1
                           0061C2   959 _CSPPROG2	=	0x61c2
                           0061C3   960 _CSPPROG3	=	0x61c3
                           0061C4   961 _CSPPROG4	=	0x61c4
                           0061C5   962 _CSPPROG5	=	0x61c5
                           0061C6   963 _CSPPROG6	=	0x61c6
                           0061C7   964 _CSPPROG7	=	0x61c7
                           0061C8   965 _CSPPROG8	=	0x61c8
                           0061C9   966 _CSPPROG9	=	0x61c9
                           0061CA   967 _CSPPROG10	=	0x61ca
                           0061CB   968 _CSPPROG11	=	0x61cb
                           0061CC   969 _CSPPROG12	=	0x61cc
                           0061CD   970 _CSPPROG13	=	0x61cd
                           0061CE   971 _CSPPROG14	=	0x61ce
                           0061CF   972 _CSPPROG15	=	0x61cf
                           0061D0   973 _CSPPROG16	=	0x61d0
                           0061D1   974 _CSPPROG17	=	0x61d1
                           0061D2   975 _CSPPROG18	=	0x61d2
                           0061D3   976 _CSPPROG19	=	0x61d3
                           0061D4   977 _CSPPROG20	=	0x61d4
                           0061D5   978 _CSPPROG21	=	0x61d5
                           0061D6   979 _CSPPROG22	=	0x61d6
                           0061D7   980 _CSPPROG23	=	0x61d7
                           0061E0   981 _CSPCTRL	=	0x61e0
                           0061E1   982 _CSPSTAT	=	0x61e1
                           0061E2   983 _CSPX	=	0x61e2
                           0061E3   984 _CSPY	=	0x61e3
                           0061E4   985 _CSPZ	=	0x61e4
                           0061E5   986 _CSPT	=	0x61e5
                           006200   987 _USBADDR	=	0x6200
                           006201   988 _USBPOW	=	0x6201
                           006202   989 _USBIIF	=	0x6202
                           006204   990 _USBOIF	=	0x6204
                           006206   991 _USBCIF	=	0x6206
                           006207   992 _USBIIE	=	0x6207
                           006209   993 _USBOIE	=	0x6209
                           00620B   994 _USBCIE	=	0x620b
                           00620C   995 _USBFRML	=	0x620c
                           00620D   996 _USBFRMH	=	0x620d
                           00620E   997 _USBINDEX	=	0x620e
                           00620F   998 _USBCTRL	=	0x620f
                           006210   999 _USBMAXI	=	0x6210
                           006211  1000 _USBCS0	=	0x6211
                           006211  1001 _USBCSIL	=	0x6211
                           006212  1002 _USBCSIH	=	0x6212
                           006213  1003 _USBMAXO	=	0x6213
                           006214  1004 _USBCSOL	=	0x6214
                           006215  1005 _USBCSOH	=	0x6215
                           006216  1006 _USBCNT0	=	0x6216
                           006216  1007 _USBCNTL	=	0x6216
                           006217  1008 _USBCNTH	=	0x6217
                           006220  1009 _USBF0	=	0x6220
                           006222  1010 _USBF1	=	0x6222
                           006224  1011 _USBF2	=	0x6224
                           006226  1012 _USBF3	=	0x6226
                           006228  1013 _USBF4	=	0x6228
                           00622A  1014 _USBF5	=	0x622a
                           007080  1015 _X_P0	=	0x7080
                           007086  1016 _X_U0CSR	=	0x7086
                           007089  1017 _X_P0IFG	=	0x7089
                           00708A  1018 _X_P1IFG	=	0x708a
                           00708B  1019 _X_P2IFG	=	0x708b
                           00708C  1020 _X_PICTL	=	0x708c
                           00708D  1021 _X_P1IEN	=	0x708d
                           00708F  1022 _X_P0INP	=	0x708f
                           007090  1023 _X_P1	=	0x7090
                           007091  1024 _X_RFIRQF1	=	0x7091
                           007093  1025 _X_MPAGE	=	0x7093
                           007093  1026 _X__XPAGE	=	0x7093
                           007094  1027 _X_T2CTRL	=	0x7094
                           007095  1028 _X_ST0	=	0x7095
                           007096  1029 _X_ST1	=	0x7096
                           007097  1030 _X_ST2	=	0x7097
                           00709C  1031 _X_T2EVTCFG	=	0x709c
                           00709D  1032 _X_SLEEPSTA	=	0x709d
                           00709E  1033 _X_CLKCONSTA	=	0x709e
                           00709F  1034 _X_FMAP	=	0x709f
                           00709F  1035 _X_PSBANK	=	0x709f
                           0070A0  1036 _X_P2	=	0x70a0
                           0070A1  1037 _X_T2IRQF	=	0x70a1
                           0070A2  1038 _X_T2M0	=	0x70a2
                           0070A3  1039 _X_T2M1	=	0x70a3
                           0070A4  1040 _X_T2MOVF0	=	0x70a4
                           0070A5  1041 _X_T2MOVF1	=	0x70a5
                           0070A6  1042 _X_T2MOVF2	=	0x70a6
                           0070A7  1043 _X_T2IRQM	=	0x70a7
                           0070AB  1044 _X_P0IEN	=	0x70ab
                           0070AC  1045 _X_P2IEN	=	0x70ac
                           0070AD  1046 _X_STLOAD	=	0x70ad
                           0070AE  1047 _X_PMUX	=	0x70ae
                           0070AF  1048 _X_T1STAT	=	0x70af
                           0070B1  1049 _X_ENCDI	=	0x70b1
                           0070B2  1050 _X_ENCDO	=	0x70b2
                           0070B3  1051 _X_ENCCS	=	0x70b3
                           0070B4  1052 _X_ADCCON1	=	0x70b4
                           0070B5  1053 _X_ADCCON2	=	0x70b5
                           0070B6  1054 _X_ADCCON3	=	0x70b6
                           0070BA  1055 _X_ADCL	=	0x70ba
                           0070BB  1056 _X_ADCH	=	0x70bb
                           0070BC  1057 _X_RNDL	=	0x70bc
                           0070BD  1058 _X_RNDH	=	0x70bd
                           0070BE  1059 _X_SLEEPCMD	=	0x70be
                           0070BF  1060 _X_RFERRF	=	0x70bf
                           0070C1  1061 _X_U0DBUF	=	0x70c1
                           0070C2  1062 _X_U0BAUD	=	0x70c2
                           0070C3  1063 _X_T2MSEL	=	0x70c3
                           0070C4  1064 _X_U0UCR	=	0x70c4
                           0070C5  1065 _X_U0GCR	=	0x70c5
                           0070C6  1066 _X_CLKCONCMD	=	0x70c6
                           0070C7  1067 _X_MEMCTR	=	0x70c7
                           0070C9  1068 _X_WDCTL	=	0x70c9
                           0070CA  1069 _X_T3CNT	=	0x70ca
                           0070CB  1070 _X_T3CTL	=	0x70cb
                           0070CC  1071 _X_T3CCTL0	=	0x70cc
                           0070CD  1072 _X_T3CC0	=	0x70cd
                           0070CE  1073 _X_T3CCTL1	=	0x70ce
                           0070CF  1074 _X_T3CC1	=	0x70cf
                           0070D1  1075 _X_DMAIRQ	=	0x70d1
                           0070D2  1076 _X_DMA1CFGL	=	0x70d2
                           0070D3  1077 _X_DMA1CFGH	=	0x70d3
                           0070D4  1078 _X_DMA0CFGL	=	0x70d4
                           0070D5  1079 _X_DMA0CFGH	=	0x70d5
                           0070D6  1080 _X_DMAARM	=	0x70d6
                           0070D7  1081 _X_DMAREQ	=	0x70d7
                           0070D8  1082 _X_TIMIF	=	0x70d8
                           0070D9  1083 _X_RFD	=	0x70d9
                           0070DA  1084 _X_T1CC0L	=	0x70da
                           0070DB  1085 _X_T1CC0H	=	0x70db
                           0070DC  1086 _X_T1CC1L	=	0x70dc
                           0070DD  1087 _X_T1CC1H	=	0x70dd
                           0070DE  1088 _X_T1CC2L	=	0x70de
                           0070DF  1089 _X_T1CC2H	=	0x70df
                           0070E1  1090 _X_RFST	=	0x70e1
                           0070E2  1091 _X_T1CNTL	=	0x70e2
                           0070E3  1092 _X_T1CNTH	=	0x70e3
                           0070E4  1093 _X_T1CTL	=	0x70e4
                           0070E5  1094 _X_T1CCTL0	=	0x70e5
                           0070E6  1095 _X_T1CCTL1	=	0x70e6
                           0070E7  1096 _X_T1CCTL2	=	0x70e7
                           0070E9  1097 _X_RFIRQF0	=	0x70e9
                           0070EA  1098 _X_T4CNT	=	0x70ea
                           0070EB  1099 _X_T4CTL	=	0x70eb
                           0070EC  1100 _X_T4CCTL0	=	0x70ec
                           0070ED  1101 _X_T4CC0	=	0x70ed
                           0070EE  1102 _X_T4CCTL1	=	0x70ee
                           0070EF  1103 _X_T4CC1	=	0x70ef
                           0070F1  1104 _X_PERCFG	=	0x70f1
                           0070F2  1105 _X_APCFG	=	0x70f2
                           0070F3  1106 _X_P0SEL	=	0x70f3
                           0070F4  1107 _X_P1SEL	=	0x70f4
                           0070F5  1108 _X_P2SEL	=	0x70f5
                           0070F6  1109 _X_P1INP	=	0x70f6
                           0070F7  1110 _X_P2INP	=	0x70f7
                           0070F8  1111 _X_U1CSR	=	0x70f8
                           0070F9  1112 _X_U1DBUF	=	0x70f9
                           0070FA  1113 _X_U1BAUD	=	0x70fa
                           0070FB  1114 _X_U1UCR	=	0x70fb
                           0070FC  1115 _X_U1GCR	=	0x70fc
                           0070FD  1116 _X_P0DIR	=	0x70fd
                           0070FE  1117 _X_P1DIR	=	0x70fe
                           0070FF  1118 _X_P2DIR	=	0x70ff
                           007800  1119 _X_INFOPAGE	=	0x7800
                           00780C  1120 _X_IEEE_ADDR	=	0x780c
      000000                       1121 _server_conn:
      000000                       1122 	.ds 3
      000003                       1123 _buf:
      000003                       1124 	.ds 120
      00007B                       1125 _len:
      00007B                       1126 	.ds 1
      00007C                       1127 _rt:
      00007C                       1128 	.ds 3
      00007F                       1129 _defrt:
      00007F                       1130 	.ds 3
      000082                       1131 _addr:
      000082                       1132 	.ds 3
                                   1133 ;--------------------------------------------------------
                                   1134 ; absolute external ram data
                                   1135 ;--------------------------------------------------------
                                   1136 	.area XABS    (ABS,XDATA)
                                   1137 ;--------------------------------------------------------
                                   1138 ; external initialized ram data
                                   1139 ;--------------------------------------------------------
                                   1140 	.area XISEG   (XDATA)
      000000                       1141 _viztool_process::
      000000                       1142 	.ds 10
                                   1143 	.area HOME    (CODE)
                                   1144 	.area GSINIT0 (CODE)
                                   1145 	.area GSINIT1 (CODE)
                                   1146 	.area GSINIT2 (CODE)
                                   1147 	.area GSINIT3 (CODE)
                                   1148 	.area GSINIT4 (CODE)
                                   1149 	.area GSINIT5 (CODE)
                                   1150 	.area GSINIT  (CODE)
                                   1151 	.area GSFINAL (CODE)
                                   1152 	.area CSEG    (CODE)
                                   1153 ;--------------------------------------------------------
                                   1154 ; global & static initialisations
                                   1155 ;--------------------------------------------------------
                                   1156 	.area HOME    (CODE)
                                   1157 	.area GSINIT  (CODE)
                                   1158 	.area GSFINAL (CODE)
                                   1159 	.area GSINIT  (CODE)
                                   1160 ;--------------------------------------------------------
                                   1161 ; Home
                                   1162 ;--------------------------------------------------------
                                   1163 	.area HOME    (CODE)
                                   1164 	.area HOME    (CODE)
                                   1165 ;--------------------------------------------------------
                                   1166 ; code
                                   1167 ;--------------------------------------------------------
                                   1168 	.area BANK1   (CODE)
                                   1169 ;------------------------------------------------------------
                                   1170 ;Allocation info for local variables in function 'process_request'
                                   1171 ;------------------------------------------------------------
                                   1172 ;len                       Allocated to registers r7 
                                   1173 ;count                     Allocated to stack - sp -6
                                   1174 ;i                         Allocated to stack - sp -5
                                   1175 ;left                      Allocated to stack - sp -4
                                   1176 ;entry_size                Allocated to registers 
                                   1177 ;flip                      Allocated to stack - sp -3
                                   1178 ;flip                      Allocated to registers 
                                   1179 ;sloc0                     Allocated to stack - sp -16
                                   1180 ;sloc1                     Allocated to stack - sp -13
                                   1181 ;sloc2                     Allocated to stack - sp -10
                                   1182 ;------------------------------------------------------------
                                   1183 ;	../../../platform/cc2530dk/./viztool.c:78: process_request() CC_NON_BANKED
                                   1184 ;	-----------------------------------------
                                   1185 ;	 function process_request
                                   1186 ;	-----------------------------------------
      000000                       1187 _process_request:
                           000007  1188 	ar7 = 0x07
                           000006  1189 	ar6 = 0x06
                           000005  1190 	ar5 = 0x05
                           000004  1191 	ar4 = 0x04
                           000003  1192 	ar3 = 0x03
                           000002  1193 	ar2 = 0x02
                           000001  1194 	ar1 = 0x01
                           000000  1195 	ar0 = 0x00
      000000 E5 81            [12] 1196 	mov	a,sp
      000002 24 11            [12] 1197 	add	a,#0x11
      000004 F5 81            [12] 1198 	mov	sp,a
                                   1199 ;	../../../platform/cc2530dk/./viztool.c:87: len = 2; /* start filling the buffer from position [2] */
      000006 7F 02            [12] 1200 	mov	r7,#0x02
                                   1201 ;	../../../platform/cc2530dk/./viztool.c:88: count = 0;
      000008 7E 00            [12] 1202 	mov	r6,#0x00
                                   1203 ;	../../../platform/cc2530dk/./viztool.c:89: if(buf[0] == REQUEST_TYPE_ND) {
      00000A 90r00r03         [24] 1204 	mov	dptr,#_buf
      00000D E0               [24] 1205 	movx	a,@dptr
      00000E FD               [12] 1206 	mov	r5,a
      00000F BD 01 02         [24] 1207 	cjne	r5,#0x01,00300$
      000012 80 03            [24] 1208 	sjmp	00301$
      000014                       1209 00300$:
      000014 02r01rDD         [24] 1210 	ljmp	00140$
      000017                       1211 00301$:
                                   1212 ;	../../../platform/cc2530dk/./viztool.c:92: for(i = buf[1]; i < UIP_DS6_NBR_NB; i++) {
      000017 90r00r04         [24] 1213 	mov	dptr,#(_buf + 0x0001)
      00001A E5 81            [12] 1214 	mov	a,sp
      00001C 24 FB            [12] 1215 	add	a,#0xfb
      00001E F8               [12] 1216 	mov	r0,a
      00001F E0               [24] 1217 	movx	a,@dptr
      000020 F6               [12] 1218 	mov	@r0,a
      000021 E5 81            [12] 1219 	mov	a,sp
      000023 24 FA            [12] 1220 	add	a,#0xfa
      000025 F8               [12] 1221 	mov	r0,a
      000026 76 00            [12] 1222 	mov	@r0,#0x00
      000028 E5 81            [12] 1223 	mov	a,sp
      00002A 24 FC            [12] 1224 	add	a,#0xfc
      00002C F8               [12] 1225 	mov	r0,a
      00002D 76 77            [12] 1226 	mov	@r0,#0x77
      00002F                       1227 00143$:
      00002F E5 81            [12] 1228 	mov	a,sp
      000031 24 FB            [12] 1229 	add	a,#0xfb
      000033 F8               [12] 1230 	mov	r0,a
      000034 B6 04 00         [24] 1231 	cjne	@r0,#0x04,00302$
      000037                       1232 00302$:
      000037 40 03            [24] 1233 	jc	00303$
      000039 02r08r32         [24] 1234 	ljmp	00180$
      00003C                       1235 00303$:
                                   1236 ;	../../../platform/cc2530dk/./viztool.c:93: if(uip_ds6_nbr_cache[i].isused) {
      00003C E5 81            [12] 1237 	mov	a,sp
      00003E 24 FB            [12] 1238 	add	a,#0xfb
      000040 F8               [12] 1239 	mov	r0,a
      000041 E6               [12] 1240 	mov	a,@r0
      000042 75 F0 2E         [24] 1241 	mov	b,#0x2e
      000045 A4               [48] 1242 	mul	ab
      000046 24r00            [12] 1243 	add	a,#_uip_ds6_nbr_cache
      000048 FA               [12] 1244 	mov	r2,a
      000049 74s00            [12] 1245 	mov	a,#(_uip_ds6_nbr_cache >> 8)
      00004B 35 F0            [12] 1246 	addc	a,b
      00004D FC               [12] 1247 	mov	r4,a
      00004E 8A 82            [24] 1248 	mov	dpl,r2
      000050 8C 83            [24] 1249 	mov	dph,r4
      000052 E0               [24] 1250 	movx	a,@dptr
      000053 70 03            [24] 1251 	jnz	00304$
      000055 02r01rD4         [24] 1252 	ljmp	00144$
      000058                       1253 00304$:
                                   1254 ;	../../../platform/cc2530dk/./viztool.c:102: memcpy(buf + len, &i, sizeof(i));
      000058 E5 81            [12] 1255 	mov	a,sp
      00005A 24 FB            [12] 1256 	add	a,#0xfb
      00005C FA               [12] 1257 	mov	r2,a
      00005D E5 81            [12] 1258 	mov	a,sp
      00005F 24 F0            [12] 1259 	add	a,#0xf0
      000061 F8               [12] 1260 	mov	r0,a
      000062 A6 02            [24] 1261 	mov	@r0,ar2
      000064 08               [12] 1262 	inc	r0
      000065 76 00            [12] 1263 	mov	@r0,#0x00
      000067 08               [12] 1264 	inc	r0
      000068 76 40            [12] 1265 	mov	@r0,#0x40
      00006A EF               [12] 1266 	mov	a,r7
      00006B 24r03            [12] 1267 	add	a,#_buf
      00006D FB               [12] 1268 	mov	r3,a
      00006E E4               [12] 1269 	clr	a
      00006F 34s00            [12] 1270 	addc	a,#(_buf >> 8)
      000071 FC               [12] 1271 	mov	r4,a
      000072 7A 00            [12] 1272 	mov	r2,#0x00
      000074 C0 07            [24] 1273 	push	ar7
      000076 74 01            [12] 1274 	mov	a,#0x01
      000078 C0 E0            [24] 1275 	push	acc
      00007A E4               [12] 1276 	clr	a
      00007B C0 E0            [24] 1277 	push	acc
      00007D E5 81            [12] 1278 	mov	a,sp
      00007F 24 ED            [12] 1279 	add	a,#0xed
      000081 F8               [12] 1280 	mov	r0,a
      000082 E6               [12] 1281 	mov	a,@r0
      000083 C0 E0            [24] 1282 	push	acc
      000085 08               [12] 1283 	inc	r0
      000086 E6               [12] 1284 	mov	a,@r0
      000087 C0 E0            [24] 1285 	push	acc
      000089 08               [12] 1286 	inc	r0
      00008A E6               [12] 1287 	mov	a,@r0
      00008B C0 E0            [24] 1288 	push	acc
      00008D 8B 82            [24] 1289 	mov	dpl,r3
      00008F 8C 83            [24] 1290 	mov	dph,r4
      000091 8A F0            [24] 1291 	mov	b,r2
      000093 78r00            [12] 1292 	mov	r0,#___memcpy
      000095 79s00            [12] 1293 	mov	r1,#(___memcpy >> 8)
      000097 7As00            [12] 1294 	mov	r2,#(___memcpy >> 16)
      000099 12r00r00         [24] 1295 	lcall	__sdcc_banked_call
      00009C E5 81            [12] 1296 	mov	a,sp
      00009E 24 FB            [12] 1297 	add	a,#0xfb
      0000A0 F5 81            [12] 1298 	mov	sp,a
      0000A2 D0 07            [24] 1299 	pop	ar7
                                   1300 ;	../../../platform/cc2530dk/./viztool.c:103: len += sizeof(i);
      0000A4 E5 81            [12] 1301 	mov	a,sp
      0000A6 24 F0            [12] 1302 	add	a,#0xf0
      0000A8 F8               [12] 1303 	mov	r0,a
      0000A9 EF               [12] 1304 	mov	a,r7
      0000AA 04               [12] 1305 	inc	a
      0000AB F6               [12] 1306 	mov	@r0,a
                                   1307 ;	../../../platform/cc2530dk/./viztool.c:104: memcpy(buf + len, &uip_ds6_nbr_cache[i].ipaddr, sizeof(uip_ipaddr_t));
      0000AC E5 81            [12] 1308 	mov	a,sp
      0000AE 24 FB            [12] 1309 	add	a,#0xfb
      0000B0 F8               [12] 1310 	mov	r0,a
      0000B1 E6               [12] 1311 	mov	a,@r0
      0000B2 75 F0 2E         [24] 1312 	mov	b,#0x2e
      0000B5 A4               [48] 1313 	mul	ab
      0000B6 24r00            [12] 1314 	add	a,#_uip_ds6_nbr_cache
      0000B8 FA               [12] 1315 	mov	r2,a
      0000B9 74s00            [12] 1316 	mov	a,#(_uip_ds6_nbr_cache >> 8)
      0000BB 35 F0            [12] 1317 	addc	a,b
      0000BD FB               [12] 1318 	mov	r3,a
      0000BE 0A               [12] 1319 	inc	r2
      0000BF BA 00 01         [24] 1320 	cjne	r2,#0x00,00305$
      0000C2 0B               [12] 1321 	inc	r3
      0000C3                       1322 00305$:
      0000C3 8A 07            [24] 1323 	mov	ar7,r2
      0000C5 8B 06            [24] 1324 	mov	ar6,r3
      0000C7 7D 00            [12] 1325 	mov	r5,#0x00
      0000C9 E5 81            [12] 1326 	mov	a,sp
      0000CB 24 F0            [12] 1327 	add	a,#0xf0
      0000CD F8               [12] 1328 	mov	r0,a
      0000CE E6               [12] 1329 	mov	a,@r0
      0000CF 24r03            [12] 1330 	add	a,#_buf
      0000D1 FB               [12] 1331 	mov	r3,a
      0000D2 E4               [12] 1332 	clr	a
      0000D3 34s00            [12] 1333 	addc	a,#(_buf >> 8)
      0000D5 FC               [12] 1334 	mov	r4,a
      0000D6 7A 00            [12] 1335 	mov	r2,#0x00
      0000D8 74 10            [12] 1336 	mov	a,#0x10
      0000DA C0 E0            [24] 1337 	push	acc
      0000DC E4               [12] 1338 	clr	a
      0000DD C0 E0            [24] 1339 	push	acc
      0000DF C0 07            [24] 1340 	push	ar7
      0000E1 C0 06            [24] 1341 	push	ar6
      0000E3 C0 05            [24] 1342 	push	ar5
      0000E5 8B 82            [24] 1343 	mov	dpl,r3
      0000E7 8C 83            [24] 1344 	mov	dph,r4
      0000E9 8A F0            [24] 1345 	mov	b,r2
      0000EB 78r00            [12] 1346 	mov	r0,#___memcpy
      0000ED 79s00            [12] 1347 	mov	r1,#(___memcpy >> 8)
      0000EF 7As00            [12] 1348 	mov	r2,#(___memcpy >> 16)
      0000F1 12r00r00         [24] 1349 	lcall	__sdcc_banked_call
      0000F4 E5 81            [12] 1350 	mov	a,sp
      0000F6 24 FB            [12] 1351 	add	a,#0xfb
                                   1352 ;	../../../platform/cc2530dk/./viztool.c:105: len += sizeof(uip_ipaddr_t);
      0000F8 F5 81            [12] 1353 	mov	sp,a
      0000FA 24 F0            [12] 1354 	add	a,#0xf0
      0000FC F8               [12] 1355 	mov	r0,a
      0000FD E5 81            [12] 1356 	mov	a,sp
      0000FF 24 F3            [12] 1357 	add	a,#0xf3
      000101 F9               [12] 1358 	mov	r1,a
      000102 74 10            [12] 1359 	mov	a,#0x10
      000104 26               [12] 1360 	add	a,@r0
      000105 F7               [12] 1361 	mov	@r1,a
                                   1362 ;	../../../platform/cc2530dk/./viztool.c:106: memcpy(buf + len, &uip_ds6_nbr_cache[i].lladdr, sizeof(uip_lladdr_t));
      000106 E5 81            [12] 1363 	mov	a,sp
      000108 24 FB            [12] 1364 	add	a,#0xfb
      00010A F8               [12] 1365 	mov	r0,a
      00010B E6               [12] 1366 	mov	a,@r0
      00010C 75 F0 2E         [24] 1367 	mov	b,#0x2e
      00010F A4               [48] 1368 	mul	ab
      000110 24r00            [12] 1369 	add	a,#_uip_ds6_nbr_cache
      000112 FA               [12] 1370 	mov	r2,a
      000113 74s00            [12] 1371 	mov	a,#(_uip_ds6_nbr_cache >> 8)
      000115 35 F0            [12] 1372 	addc	a,b
      000117 FB               [12] 1373 	mov	r3,a
      000118 74 11            [12] 1374 	mov	a,#0x11
      00011A 2A               [12] 1375 	add	a,r2
      00011B FA               [12] 1376 	mov	r2,a
      00011C E4               [12] 1377 	clr	a
      00011D 3B               [12] 1378 	addc	a,r3
      00011E FB               [12] 1379 	mov	r3,a
      00011F 8A 07            [24] 1380 	mov	ar7,r2
      000121 8B 06            [24] 1381 	mov	ar6,r3
      000123 7D 00            [12] 1382 	mov	r5,#0x00
      000125 E5 81            [12] 1383 	mov	a,sp
      000127 24 F3            [12] 1384 	add	a,#0xf3
      000129 F8               [12] 1385 	mov	r0,a
      00012A E6               [12] 1386 	mov	a,@r0
      00012B 24r03            [12] 1387 	add	a,#_buf
      00012D FB               [12] 1388 	mov	r3,a
      00012E E4               [12] 1389 	clr	a
      00012F 34s00            [12] 1390 	addc	a,#(_buf >> 8)
      000131 FC               [12] 1391 	mov	r4,a
      000132 7A 00            [12] 1392 	mov	r2,#0x00
      000134 74 08            [12] 1393 	mov	a,#0x08
      000136 C0 E0            [24] 1394 	push	acc
      000138 E4               [12] 1395 	clr	a
      000139 C0 E0            [24] 1396 	push	acc
      00013B C0 07            [24] 1397 	push	ar7
      00013D C0 06            [24] 1398 	push	ar6
      00013F C0 05            [24] 1399 	push	ar5
      000141 8B 82            [24] 1400 	mov	dpl,r3
      000143 8C 83            [24] 1401 	mov	dph,r4
      000145 8A F0            [24] 1402 	mov	b,r2
      000147 78r00            [12] 1403 	mov	r0,#___memcpy
      000149 79s00            [12] 1404 	mov	r1,#(___memcpy >> 8)
      00014B 7As00            [12] 1405 	mov	r2,#(___memcpy >> 16)
      00014D 12r00r00         [24] 1406 	lcall	__sdcc_banked_call
      000150 E5 81            [12] 1407 	mov	a,sp
      000152 24 FB            [12] 1408 	add	a,#0xfb
                                   1409 ;	../../../platform/cc2530dk/./viztool.c:107: len += sizeof(uip_lladdr_t);
      000154 F5 81            [12] 1410 	mov	sp,a
      000156 24 F3            [12] 1411 	add	a,#0xf3
      000158 F8               [12] 1412 	mov	r0,a
      000159 E5 81            [12] 1413 	mov	a,sp
      00015B 24 F3            [12] 1414 	add	a,#0xf3
      00015D F9               [12] 1415 	mov	r1,a
      00015E 74 08            [12] 1416 	mov	a,#0x08
      000160 26               [12] 1417 	add	a,@r0
      000161 F7               [12] 1418 	mov	@r1,a
                                   1419 ;	../../../platform/cc2530dk/./viztool.c:108: memcpy(buf + len, &uip_ds6_nbr_cache[i].state,
      000162 E5 81            [12] 1420 	mov	a,sp
      000164 24 FB            [12] 1421 	add	a,#0xfb
      000166 F8               [12] 1422 	mov	r0,a
      000167 E6               [12] 1423 	mov	a,@r0
      000168 75 F0 2E         [24] 1424 	mov	b,#0x2e
      00016B A4               [48] 1425 	mul	ab
      00016C 24r00            [12] 1426 	add	a,#_uip_ds6_nbr_cache
      00016E FA               [12] 1427 	mov	r2,a
      00016F 74s00            [12] 1428 	mov	a,#(_uip_ds6_nbr_cache >> 8)
      000171 35 F0            [12] 1429 	addc	a,b
      000173 FB               [12] 1430 	mov	r3,a
      000174 74 2D            [12] 1431 	mov	a,#0x2d
      000176 2A               [12] 1432 	add	a,r2
      000177 FA               [12] 1433 	mov	r2,a
      000178 E4               [12] 1434 	clr	a
      000179 3B               [12] 1435 	addc	a,r3
      00017A FB               [12] 1436 	mov	r3,a
      00017B 8A 07            [24] 1437 	mov	ar7,r2
      00017D 8B 06            [24] 1438 	mov	ar6,r3
      00017F 7D 00            [12] 1439 	mov	r5,#0x00
      000181 E5 81            [12] 1440 	mov	a,sp
      000183 24 F3            [12] 1441 	add	a,#0xf3
      000185 F8               [12] 1442 	mov	r0,a
      000186 E6               [12] 1443 	mov	a,@r0
      000187 24r03            [12] 1444 	add	a,#_buf
      000189 FB               [12] 1445 	mov	r3,a
      00018A E4               [12] 1446 	clr	a
      00018B 34s00            [12] 1447 	addc	a,#(_buf >> 8)
      00018D FC               [12] 1448 	mov	r4,a
      00018E 7A 00            [12] 1449 	mov	r2,#0x00
      000190 74 01            [12] 1450 	mov	a,#0x01
      000192 C0 E0            [24] 1451 	push	acc
      000194 E4               [12] 1452 	clr	a
      000195 C0 E0            [24] 1453 	push	acc
      000197 C0 07            [24] 1454 	push	ar7
      000199 C0 06            [24] 1455 	push	ar6
      00019B C0 05            [24] 1456 	push	ar5
      00019D 8B 82            [24] 1457 	mov	dpl,r3
      00019F 8C 83            [24] 1458 	mov	dph,r4
      0001A1 8A F0            [24] 1459 	mov	b,r2
      0001A3 78r00            [12] 1460 	mov	r0,#___memcpy
      0001A5 79s00            [12] 1461 	mov	r1,#(___memcpy >> 8)
      0001A7 7As00            [12] 1462 	mov	r2,#(___memcpy >> 16)
      0001A9 12r00r00         [24] 1463 	lcall	__sdcc_banked_call
      0001AC E5 81            [12] 1464 	mov	a,sp
      0001AE 24 FB            [12] 1465 	add	a,#0xfb
                                   1466 ;	../../../platform/cc2530dk/./viztool.c:110: len += sizeof(uip_ds6_nbr_cache[i].state);
      0001B0 F5 81            [12] 1467 	mov	sp,a
      0001B2 24 F3            [12] 1468 	add	a,#0xf3
      0001B4 F8               [12] 1469 	mov	r0,a
      0001B5 E6               [12] 1470 	mov	a,@r0
      0001B6 04               [12] 1471 	inc	a
      0001B7 FF               [12] 1472 	mov	r7,a
                                   1473 ;	../../../platform/cc2530dk/./viztool.c:112: count++;
      0001B8 E5 81            [12] 1474 	mov	a,sp
      0001BA 24 FA            [12] 1475 	add	a,#0xfa
      0001BC F8               [12] 1476 	mov	r0,a
      0001BD 06               [12] 1477 	inc	@r0
                                   1478 ;	../../../platform/cc2530dk/./viztool.c:113: left -= entry_size;
      0001BE E5 81            [12] 1479 	mov	a,sp
      0001C0 24 FC            [12] 1480 	add	a,#0xfc
      0001C2 F8               [12] 1481 	mov	r0,a
      0001C3 E6               [12] 1482 	mov	a,@r0
      0001C4 24 E6            [12] 1483 	add	a,#0xe6
      0001C6 F6               [12] 1484 	mov	@r0,a
                                   1485 ;	../../../platform/cc2530dk/./viztool.c:115: if(left < entry_size) {
      0001C7 E5 81            [12] 1486 	mov	a,sp
      0001C9 24 FC            [12] 1487 	add	a,#0xfc
      0001CB F8               [12] 1488 	mov	r0,a
      0001CC B6 1A 00         [24] 1489 	cjne	@r0,#0x1a,00306$
      0001CF                       1490 00306$:
      0001CF 50 03            [24] 1491 	jnc	00307$
      0001D1 02r08r32         [24] 1492 	ljmp	00180$
      0001D4                       1493 00307$:
                                   1494 ;	../../../platform/cc2530dk/./viztool.c:116: break;
      0001D4                       1495 00144$:
                                   1496 ;	../../../platform/cc2530dk/./viztool.c:92: for(i = buf[1]; i < UIP_DS6_NBR_NB; i++) {
      0001D4 E5 81            [12] 1497 	mov	a,sp
      0001D6 24 FB            [12] 1498 	add	a,#0xfb
      0001D8 F8               [12] 1499 	mov	r0,a
      0001D9 06               [12] 1500 	inc	@r0
      0001DA 02r00r2F         [24] 1501 	ljmp	00143$
      0001DD                       1502 00140$:
                                   1503 ;	../../../platform/cc2530dk/./viztool.c:120: } else if(buf[0] == REQUEST_TYPE_RT) {
      0001DD BD 02 02         [24] 1504 	cjne	r5,#0x02,00308$
      0001E0 80 03            [24] 1505 	sjmp	00309$
      0001E2                       1506 00308$:
      0001E2 02r05r4A         [24] 1507 	ljmp	00137$
      0001E5                       1508 00309$:
                                   1509 ;	../../../platform/cc2530dk/./viztool.c:121: uint32_t flip = 0;
      0001E5 E5 81            [12] 1510 	mov	a,sp
      0001E7 24 FD            [12] 1511 	add	a,#0xfd
      0001E9 F8               [12] 1512 	mov	r0,a
      0001EA E4               [12] 1513 	clr	a
      0001EB F6               [12] 1514 	mov	@r0,a
      0001EC 08               [12] 1515 	inc	r0
      0001ED F6               [12] 1516 	mov	@r0,a
      0001EE 08               [12] 1517 	inc	r0
      0001EF F6               [12] 1518 	mov	@r0,a
      0001F0 08               [12] 1519 	inc	r0
      0001F1 F6               [12] 1520 	mov	@r0,a
                                   1521 ;	../../../platform/cc2530dk/./viztool.c:124: rt = uip_ds6_route_list_head();
      0001F2 C0 07            [24] 1522 	push	ar7
      0001F4 78r00            [12] 1523 	mov	r0,#_uip_ds6_route_list_head
      0001F6 79s00            [12] 1524 	mov	r1,#(_uip_ds6_route_list_head >> 8)
      0001F8 7As00            [12] 1525 	mov	r2,#(_uip_ds6_route_list_head >> 16)
      0001FA 12r00r00         [24] 1526 	lcall	__sdcc_banked_call
      0001FD AA 82            [24] 1527 	mov	r2,dpl
      0001FF AB 83            [24] 1528 	mov	r3,dph
      000201 AC F0            [24] 1529 	mov	r4,b
      000203 D0 07            [24] 1530 	pop	ar7
      000205 90r00r7C         [24] 1531 	mov	dptr,#_rt
      000208 EA               [12] 1532 	mov	a,r2
      000209 F0               [24] 1533 	movx	@dptr,a
      00020A EB               [12] 1534 	mov	a,r3
      00020B A3               [24] 1535 	inc	dptr
      00020C F0               [24] 1536 	movx	@dptr,a
      00020D EC               [12] 1537 	mov	a,r4
      00020E A3               [24] 1538 	inc	dptr
      00020F F0               [24] 1539 	movx	@dptr,a
                                   1540 ;	../../../platform/cc2530dk/./viztool.c:126: for(i = buf[1]; i < uip_ds6_route_num_routes(); i++) {
      000210 90r00r04         [24] 1541 	mov	dptr,#(_buf + 0x0001)
      000213 E5 81            [12] 1542 	mov	a,sp
      000215 24 FB            [12] 1543 	add	a,#0xfb
      000217 F8               [12] 1544 	mov	r0,a
      000218 E0               [24] 1545 	movx	a,@dptr
      000219 F6               [12] 1546 	mov	@r0,a
      00021A E5 81            [12] 1547 	mov	a,sp
      00021C 24 FA            [12] 1548 	add	a,#0xfa
      00021E F8               [12] 1549 	mov	r0,a
      00021F 76 00            [12] 1550 	mov	@r0,#0x00
      000221 E5 81            [12] 1551 	mov	a,sp
      000223 24 FC            [12] 1552 	add	a,#0xfc
      000225 F8               [12] 1553 	mov	r0,a
      000226 76 77            [12] 1554 	mov	@r0,#0x77
      000228                       1555 00146$:
      000228 C0 07            [24] 1556 	push	ar7
      00022A 78r00            [12] 1557 	mov	r0,#_uip_ds6_route_num_routes
      00022C 79s00            [12] 1558 	mov	r1,#(_uip_ds6_route_num_routes >> 8)
      00022E 7As00            [12] 1559 	mov	r2,#(_uip_ds6_route_num_routes >> 16)
      000230 12r00r00         [24] 1560 	lcall	__sdcc_banked_call
      000233 AE 82            [24] 1561 	mov	r6,dpl
      000235 AD 83            [24] 1562 	mov	r5,dph
      000237 D0 07            [24] 1563 	pop	ar7
      000239 E5 81            [12] 1564 	mov	a,sp
      00023B 24 FB            [12] 1565 	add	a,#0xfb
      00023D F8               [12] 1566 	mov	r0,a
      00023E 86 03            [24] 1567 	mov	ar3,@r0
      000240 7C 00            [12] 1568 	mov	r4,#0x00
      000242 C3               [12] 1569 	clr	c
      000243 EB               [12] 1570 	mov	a,r3
      000244 9E               [12] 1571 	subb	a,r6
      000245 EC               [12] 1572 	mov	a,r4
      000246 64 80            [12] 1573 	xrl	a,#0x80
      000248 8D F0            [24] 1574 	mov	b,r5
      00024A 63 F0 80         [24] 1575 	xrl	b,#0x80
      00024D 95 F0            [12] 1576 	subb	a,b
      00024F 40 03            [24] 1577 	jc	00310$
      000251 02r08r3B         [24] 1578 	ljmp	00181$
      000254                       1579 00310$:
                                   1580 ;	../../../platform/cc2530dk/./viztool.c:127: if(rt != NULL) {
      000254 90r00r7C         [24] 1581 	mov	dptr,#_rt
      000257 E0               [24] 1582 	movx	a,@dptr
      000258 F5 F0            [12] 1583 	mov	b,a
      00025A A3               [24] 1584 	inc	dptr
      00025B E0               [24] 1585 	movx	a,@dptr
      00025C 45 F0            [12] 1586 	orl	a,b
      00025E 70 03            [24] 1587 	jnz	00311$
      000260 02r05r41         [24] 1588 	ljmp	00147$
      000263                       1589 00311$:
                                   1590 ;	../../../platform/cc2530dk/./viztool.c:135: memcpy(buf + len, &i, sizeof(i));
      000263 E5 81            [12] 1591 	mov	a,sp
      000265 24 FB            [12] 1592 	add	a,#0xfb
      000267 FB               [12] 1593 	mov	r3,a
      000268 E5 81            [12] 1594 	mov	a,sp
      00026A 24 F3            [12] 1595 	add	a,#0xf3
      00026C F8               [12] 1596 	mov	r0,a
      00026D A6 03            [24] 1597 	mov	@r0,ar3
      00026F 08               [12] 1598 	inc	r0
      000270 76 00            [12] 1599 	mov	@r0,#0x00
      000272 08               [12] 1600 	inc	r0
      000273 76 40            [12] 1601 	mov	@r0,#0x40
      000275 EF               [12] 1602 	mov	a,r7
      000276 24r03            [12] 1603 	add	a,#_buf
      000278 FB               [12] 1604 	mov	r3,a
      000279 E4               [12] 1605 	clr	a
      00027A 34s00            [12] 1606 	addc	a,#(_buf >> 8)
      00027C FC               [12] 1607 	mov	r4,a
      00027D 7A 00            [12] 1608 	mov	r2,#0x00
      00027F C0 07            [24] 1609 	push	ar7
      000281 74 01            [12] 1610 	mov	a,#0x01
      000283 C0 E0            [24] 1611 	push	acc
      000285 E4               [12] 1612 	clr	a
      000286 C0 E0            [24] 1613 	push	acc
      000288 E5 81            [12] 1614 	mov	a,sp
      00028A 24 F0            [12] 1615 	add	a,#0xf0
      00028C F8               [12] 1616 	mov	r0,a
      00028D E6               [12] 1617 	mov	a,@r0
      00028E C0 E0            [24] 1618 	push	acc
      000290 08               [12] 1619 	inc	r0
      000291 E6               [12] 1620 	mov	a,@r0
      000292 C0 E0            [24] 1621 	push	acc
      000294 08               [12] 1622 	inc	r0
      000295 E6               [12] 1623 	mov	a,@r0
      000296 C0 E0            [24] 1624 	push	acc
      000298 8B 82            [24] 1625 	mov	dpl,r3
      00029A 8C 83            [24] 1626 	mov	dph,r4
      00029C 8A F0            [24] 1627 	mov	b,r2
      00029E 78r00            [12] 1628 	mov	r0,#___memcpy
      0002A0 79s00            [12] 1629 	mov	r1,#(___memcpy >> 8)
      0002A2 7As00            [12] 1630 	mov	r2,#(___memcpy >> 16)
      0002A4 12r00r00         [24] 1631 	lcall	__sdcc_banked_call
      0002A7 E5 81            [12] 1632 	mov	a,sp
      0002A9 24 FB            [12] 1633 	add	a,#0xfb
      0002AB F5 81            [12] 1634 	mov	sp,a
      0002AD D0 07            [24] 1635 	pop	ar7
                                   1636 ;	../../../platform/cc2530dk/./viztool.c:136: len += sizeof(i);
      0002AF E5 81            [12] 1637 	mov	a,sp
      0002B1 24 F3            [12] 1638 	add	a,#0xf3
      0002B3 F8               [12] 1639 	mov	r0,a
      0002B4 EF               [12] 1640 	mov	a,r7
      0002B5 04               [12] 1641 	inc	a
      0002B6 F6               [12] 1642 	mov	@r0,a
                                   1643 ;	../../../platform/cc2530dk/./viztool.c:137: memcpy(buf + len, &rt->ipaddr, sizeof(rt->ipaddr));
      0002B7 90r00r7C         [24] 1644 	mov	dptr,#_rt
      0002BA E0               [24] 1645 	movx	a,@dptr
      0002BB FA               [12] 1646 	mov	r2,a
      0002BC A3               [24] 1647 	inc	dptr
      0002BD E0               [24] 1648 	movx	a,@dptr
      0002BE FB               [12] 1649 	mov	r3,a
      0002BF A3               [24] 1650 	inc	dptr
      0002C0 E0               [24] 1651 	movx	a,@dptr
      0002C1 FC               [12] 1652 	mov	r4,a
      0002C2 74 03            [12] 1653 	mov	a,#0x03
      0002C4 2A               [12] 1654 	add	a,r2
      0002C5 FA               [12] 1655 	mov	r2,a
      0002C6 E4               [12] 1656 	clr	a
      0002C7 3B               [12] 1657 	addc	a,r3
      0002C8 FB               [12] 1658 	mov	r3,a
      0002C9 8A 07            [24] 1659 	mov	ar7,r2
      0002CB 8B 06            [24] 1660 	mov	ar6,r3
      0002CD 8C 05            [24] 1661 	mov	ar5,r4
      0002CF E5 81            [12] 1662 	mov	a,sp
      0002D1 24 F3            [12] 1663 	add	a,#0xf3
      0002D3 F8               [12] 1664 	mov	r0,a
      0002D4 E6               [12] 1665 	mov	a,@r0
      0002D5 24r03            [12] 1666 	add	a,#_buf
      0002D7 FB               [12] 1667 	mov	r3,a
      0002D8 E4               [12] 1668 	clr	a
      0002D9 34s00            [12] 1669 	addc	a,#(_buf >> 8)
      0002DB FC               [12] 1670 	mov	r4,a
      0002DC 7A 00            [12] 1671 	mov	r2,#0x00
      0002DE 74 10            [12] 1672 	mov	a,#0x10
      0002E0 C0 E0            [24] 1673 	push	acc
      0002E2 E4               [12] 1674 	clr	a
      0002E3 C0 E0            [24] 1675 	push	acc
      0002E5 C0 07            [24] 1676 	push	ar7
      0002E7 C0 06            [24] 1677 	push	ar6
      0002E9 C0 05            [24] 1678 	push	ar5
      0002EB 8B 82            [24] 1679 	mov	dpl,r3
      0002ED 8C 83            [24] 1680 	mov	dph,r4
      0002EF 8A F0            [24] 1681 	mov	b,r2
      0002F1 78r00            [12] 1682 	mov	r0,#___memcpy
      0002F3 79s00            [12] 1683 	mov	r1,#(___memcpy >> 8)
      0002F5 7As00            [12] 1684 	mov	r2,#(___memcpy >> 16)
      0002F7 12r00r00         [24] 1685 	lcall	__sdcc_banked_call
      0002FA E5 81            [12] 1686 	mov	a,sp
      0002FC 24 FB            [12] 1687 	add	a,#0xfb
                                   1688 ;	../../../platform/cc2530dk/./viztool.c:138: len += sizeof(rt->ipaddr);
      0002FE F5 81            [12] 1689 	mov	sp,a
      000300 24 F3            [12] 1690 	add	a,#0xf3
      000302 F8               [12] 1691 	mov	r0,a
      000303 E5 81            [12] 1692 	mov	a,sp
      000305 24 F3            [12] 1693 	add	a,#0xf3
      000307 F9               [12] 1694 	mov	r1,a
      000308 74 10            [12] 1695 	mov	a,#0x10
      00030A 26               [12] 1696 	add	a,@r0
      00030B F7               [12] 1697 	mov	@r1,a
                                   1698 ;	../../../platform/cc2530dk/./viztool.c:139: memcpy(buf + len, &rt->length, sizeof(rt->length));
      00030C 90r00r7C         [24] 1699 	mov	dptr,#_rt
      00030F E0               [24] 1700 	movx	a,@dptr
      000310 FA               [12] 1701 	mov	r2,a
      000311 A3               [24] 1702 	inc	dptr
      000312 E0               [24] 1703 	movx	a,@dptr
      000313 FB               [12] 1704 	mov	r3,a
      000314 A3               [24] 1705 	inc	dptr
      000315 E0               [24] 1706 	movx	a,@dptr
      000316 FC               [12] 1707 	mov	r4,a
      000317 74 23            [12] 1708 	mov	a,#0x23
      000319 2A               [12] 1709 	add	a,r2
      00031A FA               [12] 1710 	mov	r2,a
      00031B E4               [12] 1711 	clr	a
      00031C 3B               [12] 1712 	addc	a,r3
      00031D FB               [12] 1713 	mov	r3,a
      00031E 8A 07            [24] 1714 	mov	ar7,r2
      000320 8B 06            [24] 1715 	mov	ar6,r3
      000322 8C 05            [24] 1716 	mov	ar5,r4
      000324 E5 81            [12] 1717 	mov	a,sp
      000326 24 F3            [12] 1718 	add	a,#0xf3
      000328 F8               [12] 1719 	mov	r0,a
      000329 E6               [12] 1720 	mov	a,@r0
      00032A 24r03            [12] 1721 	add	a,#_buf
      00032C FB               [12] 1722 	mov	r3,a
      00032D E4               [12] 1723 	clr	a
      00032E 34s00            [12] 1724 	addc	a,#(_buf >> 8)
      000330 FC               [12] 1725 	mov	r4,a
      000331 7A 00            [12] 1726 	mov	r2,#0x00
      000333 74 01            [12] 1727 	mov	a,#0x01
      000335 C0 E0            [24] 1728 	push	acc
      000337 E4               [12] 1729 	clr	a
      000338 C0 E0            [24] 1730 	push	acc
      00033A C0 07            [24] 1731 	push	ar7
      00033C C0 06            [24] 1732 	push	ar6
      00033E C0 05            [24] 1733 	push	ar5
      000340 8B 82            [24] 1734 	mov	dpl,r3
      000342 8C 83            [24] 1735 	mov	dph,r4
      000344 8A F0            [24] 1736 	mov	b,r2
      000346 78r00            [12] 1737 	mov	r0,#___memcpy
      000348 79s00            [12] 1738 	mov	r1,#(___memcpy >> 8)
      00034A 7As00            [12] 1739 	mov	r2,#(___memcpy >> 16)
      00034C 12r00r00         [24] 1740 	lcall	__sdcc_banked_call
      00034F E5 81            [12] 1741 	mov	a,sp
      000351 24 FB            [12] 1742 	add	a,#0xfb
                                   1743 ;	../../../platform/cc2530dk/./viztool.c:140: len += sizeof(rt->length);
      000353 F5 81            [12] 1744 	mov	sp,a
      000355 24 F3            [12] 1745 	add	a,#0xf3
      000357 F8               [12] 1746 	mov	r0,a
      000358 E6               [12] 1747 	mov	a,@r0
      000359 04               [12] 1748 	inc	a
      00035A FF               [12] 1749 	mov	r7,a
                                   1750 ;	../../../platform/cc2530dk/./viztool.c:141: memcpy(buf + len, &rt->metric, sizeof(rt->metric));
      00035B 90r00r7C         [24] 1751 	mov	dptr,#_rt
      00035E E0               [24] 1752 	movx	a,@dptr
      00035F FA               [12] 1753 	mov	r2,a
      000360 A3               [24] 1754 	inc	dptr
      000361 E0               [24] 1755 	movx	a,@dptr
      000362 FB               [12] 1756 	mov	r3,a
      000363 A3               [24] 1757 	inc	dptr
      000364 E0               [24] 1758 	movx	a,@dptr
      000365 FC               [12] 1759 	mov	r4,a
      000366 74 24            [12] 1760 	mov	a,#0x24
      000368 2A               [12] 1761 	add	a,r2
      000369 FA               [12] 1762 	mov	r2,a
      00036A E4               [12] 1763 	clr	a
      00036B 3B               [12] 1764 	addc	a,r3
      00036C FB               [12] 1765 	mov	r3,a
      00036D E5 81            [12] 1766 	mov	a,sp
      00036F 24 F3            [12] 1767 	add	a,#0xf3
      000371 F8               [12] 1768 	mov	r0,a
      000372 A6 02            [24] 1769 	mov	@r0,ar2
      000374 08               [12] 1770 	inc	r0
      000375 A6 03            [24] 1771 	mov	@r0,ar3
      000377 08               [12] 1772 	inc	r0
      000378 A6 04            [24] 1773 	mov	@r0,ar4
      00037A EF               [12] 1774 	mov	a,r7
      00037B 24r03            [12] 1775 	add	a,#_buf
      00037D FB               [12] 1776 	mov	r3,a
      00037E E4               [12] 1777 	clr	a
      00037F 34s00            [12] 1778 	addc	a,#(_buf >> 8)
      000381 FC               [12] 1779 	mov	r4,a
      000382 7A 00            [12] 1780 	mov	r2,#0x00
      000384 C0 07            [24] 1781 	push	ar7
      000386 74 01            [12] 1782 	mov	a,#0x01
      000388 C0 E0            [24] 1783 	push	acc
      00038A E4               [12] 1784 	clr	a
      00038B C0 E0            [24] 1785 	push	acc
      00038D E5 81            [12] 1786 	mov	a,sp
      00038F 24 F0            [12] 1787 	add	a,#0xf0
      000391 F8               [12] 1788 	mov	r0,a
      000392 E6               [12] 1789 	mov	a,@r0
      000393 C0 E0            [24] 1790 	push	acc
      000395 08               [12] 1791 	inc	r0
      000396 E6               [12] 1792 	mov	a,@r0
      000397 C0 E0            [24] 1793 	push	acc
      000399 08               [12] 1794 	inc	r0
      00039A E6               [12] 1795 	mov	a,@r0
      00039B C0 E0            [24] 1796 	push	acc
      00039D 8B 82            [24] 1797 	mov	dpl,r3
      00039F 8C 83            [24] 1798 	mov	dph,r4
      0003A1 8A F0            [24] 1799 	mov	b,r2
      0003A3 78r00            [12] 1800 	mov	r0,#___memcpy
      0003A5 79s00            [12] 1801 	mov	r1,#(___memcpy >> 8)
      0003A7 7As00            [12] 1802 	mov	r2,#(___memcpy >> 16)
      0003A9 12r00r00         [24] 1803 	lcall	__sdcc_banked_call
      0003AC E5 81            [12] 1804 	mov	a,sp
      0003AE 24 FB            [12] 1805 	add	a,#0xfb
      0003B0 F5 81            [12] 1806 	mov	sp,a
      0003B2 D0 07            [24] 1807 	pop	ar7
                                   1808 ;	../../../platform/cc2530dk/./viztool.c:142: len += sizeof(rt->metric);
      0003B4 E5 81            [12] 1809 	mov	a,sp
      0003B6 24 F3            [12] 1810 	add	a,#0xf3
      0003B8 F8               [12] 1811 	mov	r0,a
      0003B9 EF               [12] 1812 	mov	a,r7
      0003BA 04               [12] 1813 	inc	a
      0003BB F6               [12] 1814 	mov	@r0,a
                                   1815 ;	../../../platform/cc2530dk/./viztool.c:143: memcpy(buf + len, &rt->nexthop, sizeof(rt->nexthop));
      0003BC 90r00r7C         [24] 1816 	mov	dptr,#_rt
      0003BF E0               [24] 1817 	movx	a,@dptr
      0003C0 FA               [12] 1818 	mov	r2,a
      0003C1 A3               [24] 1819 	inc	dptr
      0003C2 E0               [24] 1820 	movx	a,@dptr
      0003C3 FB               [12] 1821 	mov	r3,a
      0003C4 A3               [24] 1822 	inc	dptr
      0003C5 E0               [24] 1823 	movx	a,@dptr
      0003C6 FC               [12] 1824 	mov	r4,a
      0003C7 74 13            [12] 1825 	mov	a,#0x13
      0003C9 2A               [12] 1826 	add	a,r2
      0003CA FA               [12] 1827 	mov	r2,a
      0003CB E4               [12] 1828 	clr	a
      0003CC 3B               [12] 1829 	addc	a,r3
      0003CD FB               [12] 1830 	mov	r3,a
      0003CE 8A 07            [24] 1831 	mov	ar7,r2
      0003D0 8B 06            [24] 1832 	mov	ar6,r3
      0003D2 8C 05            [24] 1833 	mov	ar5,r4
      0003D4 E5 81            [12] 1834 	mov	a,sp
      0003D6 24 F3            [12] 1835 	add	a,#0xf3
      0003D8 F8               [12] 1836 	mov	r0,a
      0003D9 E6               [12] 1837 	mov	a,@r0
      0003DA 24r03            [12] 1838 	add	a,#_buf
      0003DC FB               [12] 1839 	mov	r3,a
      0003DD E4               [12] 1840 	clr	a
      0003DE 34s00            [12] 1841 	addc	a,#(_buf >> 8)
      0003E0 FC               [12] 1842 	mov	r4,a
      0003E1 7A 00            [12] 1843 	mov	r2,#0x00
      0003E3 74 10            [12] 1844 	mov	a,#0x10
      0003E5 C0 E0            [24] 1845 	push	acc
      0003E7 E4               [12] 1846 	clr	a
      0003E8 C0 E0            [24] 1847 	push	acc
      0003EA C0 07            [24] 1848 	push	ar7
      0003EC C0 06            [24] 1849 	push	ar6
      0003EE C0 05            [24] 1850 	push	ar5
      0003F0 8B 82            [24] 1851 	mov	dpl,r3
      0003F2 8C 83            [24] 1852 	mov	dph,r4
      0003F4 8A F0            [24] 1853 	mov	b,r2
      0003F6 78r00            [12] 1854 	mov	r0,#___memcpy
      0003F8 79s00            [12] 1855 	mov	r1,#(___memcpy >> 8)
      0003FA 7As00            [12] 1856 	mov	r2,#(___memcpy >> 16)
      0003FC 12r00r00         [24] 1857 	lcall	__sdcc_banked_call
      0003FF E5 81            [12] 1858 	mov	a,sp
      000401 24 FB            [12] 1859 	add	a,#0xfb
                                   1860 ;	../../../platform/cc2530dk/./viztool.c:144: len += sizeof(rt->nexthop);
      000403 F5 81            [12] 1861 	mov	sp,a
      000405 24 F3            [12] 1862 	add	a,#0xf3
      000407 F8               [12] 1863 	mov	r0,a
      000408 E5 81            [12] 1864 	mov	a,sp
      00040A 24 F3            [12] 1865 	add	a,#0xf3
      00040C F9               [12] 1866 	mov	r1,a
      00040D 74 10            [12] 1867 	mov	a,#0x10
      00040F 26               [12] 1868 	add	a,@r0
      000410 F7               [12] 1869 	mov	@r1,a
                                   1870 ;	../../../platform/cc2530dk/./viztool.c:152: flip = uip_htonl(rt->state.lifetime);
      000411 90r00r7C         [24] 1871 	mov	dptr,#_rt
      000414 E0               [24] 1872 	movx	a,@dptr
      000415 FA               [12] 1873 	mov	r2,a
      000416 A3               [24] 1874 	inc	dptr
      000417 E0               [24] 1875 	movx	a,@dptr
      000418 FB               [12] 1876 	mov	r3,a
      000419 A3               [24] 1877 	inc	dptr
      00041A E0               [24] 1878 	movx	a,@dptr
      00041B FC               [12] 1879 	mov	r4,a
      00041C 74 25            [12] 1880 	mov	a,#0x25
      00041E 2A               [12] 1881 	add	a,r2
      00041F FA               [12] 1882 	mov	r2,a
      000420 E4               [12] 1883 	clr	a
      000421 3B               [12] 1884 	addc	a,r3
      000422 FB               [12] 1885 	mov	r3,a
      000423 8A 82            [24] 1886 	mov	dpl,r2
      000425 8B 83            [24] 1887 	mov	dph,r3
      000427 8C F0            [24] 1888 	mov	b,r4
      000429 12r00r00         [24] 1889 	lcall	__gptrget
      00042C FF               [12] 1890 	mov	r7,a
      00042D A3               [24] 1891 	inc	dptr
      00042E 12r00r00         [24] 1892 	lcall	__gptrget
      000431 FE               [12] 1893 	mov	r6,a
      000432 A3               [24] 1894 	inc	dptr
      000433 12r00r00         [24] 1895 	lcall	__gptrget
      000436 FD               [12] 1896 	mov	r5,a
      000437 A3               [24] 1897 	inc	dptr
      000438 12r00r00         [24] 1898 	lcall	__gptrget
      00043B 8F 82            [24] 1899 	mov	dpl,r7
      00043D 8E 83            [24] 1900 	mov	dph,r6
      00043F 8D F0            [24] 1901 	mov	b,r5
      000441 78r00            [12] 1902 	mov	r0,#_uip_htonl
      000443 79s00            [12] 1903 	mov	r1,#(_uip_htonl >> 8)
      000445 7As00            [12] 1904 	mov	r2,#(_uip_htonl >> 16)
      000447 12r00r00         [24] 1905 	lcall	__sdcc_banked_call
      00044A AF 82            [24] 1906 	mov	r7,dpl
      00044C AE 83            [24] 1907 	mov	r6,dph
      00044E AD F0            [24] 1908 	mov	r5,b
      000450 FC               [12] 1909 	mov	r4,a
      000451 E5 81            [12] 1910 	mov	a,sp
      000453 24 FD            [12] 1911 	add	a,#0xfd
      000455 F8               [12] 1912 	mov	r0,a
      000456 A6 07            [24] 1913 	mov	@r0,ar7
      000458 08               [12] 1914 	inc	r0
      000459 A6 06            [24] 1915 	mov	@r0,ar6
      00045B 08               [12] 1916 	inc	r0
      00045C A6 05            [24] 1917 	mov	@r0,ar5
      00045E 08               [12] 1918 	inc	r0
      00045F A6 04            [24] 1919 	mov	@r0,ar4
                                   1920 ;	../../../platform/cc2530dk/./viztool.c:153: memcpy(buf + len, &flip, sizeof(flip));
      000461 E5 81            [12] 1921 	mov	a,sp
      000463 24 FD            [12] 1922 	add	a,#0xfd
      000465 FF               [12] 1923 	mov	r7,a
      000466 7E 00            [12] 1924 	mov	r6,#0x00
      000468 7D 40            [12] 1925 	mov	r5,#0x40
      00046A E5 81            [12] 1926 	mov	a,sp
      00046C 24 F3            [12] 1927 	add	a,#0xf3
      00046E F8               [12] 1928 	mov	r0,a
      00046F E6               [12] 1929 	mov	a,@r0
      000470 24r03            [12] 1930 	add	a,#_buf
      000472 FB               [12] 1931 	mov	r3,a
      000473 E4               [12] 1932 	clr	a
      000474 34s00            [12] 1933 	addc	a,#(_buf >> 8)
      000476 FC               [12] 1934 	mov	r4,a
      000477 7A 00            [12] 1935 	mov	r2,#0x00
      000479 74 04            [12] 1936 	mov	a,#0x04
      00047B C0 E0            [24] 1937 	push	acc
      00047D E4               [12] 1938 	clr	a
      00047E C0 E0            [24] 1939 	push	acc
      000480 C0 07            [24] 1940 	push	ar7
      000482 C0 06            [24] 1941 	push	ar6
      000484 C0 05            [24] 1942 	push	ar5
      000486 8B 82            [24] 1943 	mov	dpl,r3
      000488 8C 83            [24] 1944 	mov	dph,r4
      00048A 8A F0            [24] 1945 	mov	b,r2
      00048C 78r00            [12] 1946 	mov	r0,#___memcpy
      00048E 79s00            [12] 1947 	mov	r1,#(___memcpy >> 8)
      000490 7As00            [12] 1948 	mov	r2,#(___memcpy >> 16)
      000492 12r00r00         [24] 1949 	lcall	__sdcc_banked_call
      000495 E5 81            [12] 1950 	mov	a,sp
      000497 24 FB            [12] 1951 	add	a,#0xfb
                                   1952 ;	../../../platform/cc2530dk/./viztool.c:154: len += sizeof(flip);
      000499 F5 81            [12] 1953 	mov	sp,a
      00049B 24 F3            [12] 1954 	add	a,#0xf3
      00049D F8               [12] 1955 	mov	r0,a
      00049E E5 81            [12] 1956 	mov	a,sp
      0004A0 24 F6            [12] 1957 	add	a,#0xf6
      0004A2 F9               [12] 1958 	mov	r1,a
      0004A3 74 04            [12] 1959 	mov	a,#0x04
      0004A5 26               [12] 1960 	add	a,@r0
      0004A6 F7               [12] 1961 	mov	@r1,a
                                   1962 ;	../../../platform/cc2530dk/./viztool.c:157: memcpy(buf + len, &rt->state.learned_from,
      0004A7 90r00r7C         [24] 1963 	mov	dptr,#_rt
      0004AA E0               [24] 1964 	movx	a,@dptr
      0004AB FA               [12] 1965 	mov	r2,a
      0004AC A3               [24] 1966 	inc	dptr
      0004AD E0               [24] 1967 	movx	a,@dptr
      0004AE FB               [12] 1968 	mov	r3,a
      0004AF A3               [24] 1969 	inc	dptr
      0004B0 E0               [24] 1970 	movx	a,@dptr
      0004B1 FC               [12] 1971 	mov	r4,a
      0004B2 74 30            [12] 1972 	mov	a,#0x30
      0004B4 2A               [12] 1973 	add	a,r2
      0004B5 FA               [12] 1974 	mov	r2,a
      0004B6 E4               [12] 1975 	clr	a
      0004B7 3B               [12] 1976 	addc	a,r3
      0004B8 FB               [12] 1977 	mov	r3,a
      0004B9 8A 07            [24] 1978 	mov	ar7,r2
      0004BB 8B 06            [24] 1979 	mov	ar6,r3
      0004BD 8C 05            [24] 1980 	mov	ar5,r4
      0004BF E5 81            [12] 1981 	mov	a,sp
      0004C1 24 F6            [12] 1982 	add	a,#0xf6
      0004C3 F8               [12] 1983 	mov	r0,a
      0004C4 E6               [12] 1984 	mov	a,@r0
      0004C5 24r03            [12] 1985 	add	a,#_buf
      0004C7 FB               [12] 1986 	mov	r3,a
      0004C8 E4               [12] 1987 	clr	a
      0004C9 34s00            [12] 1988 	addc	a,#(_buf >> 8)
      0004CB FC               [12] 1989 	mov	r4,a
      0004CC 7A 00            [12] 1990 	mov	r2,#0x00
      0004CE 74 01            [12] 1991 	mov	a,#0x01
      0004D0 C0 E0            [24] 1992 	push	acc
      0004D2 E4               [12] 1993 	clr	a
      0004D3 C0 E0            [24] 1994 	push	acc
      0004D5 C0 07            [24] 1995 	push	ar7
      0004D7 C0 06            [24] 1996 	push	ar6
      0004D9 C0 05            [24] 1997 	push	ar5
      0004DB 8B 82            [24] 1998 	mov	dpl,r3
      0004DD 8C 83            [24] 1999 	mov	dph,r4
      0004DF 8A F0            [24] 2000 	mov	b,r2
      0004E1 78r00            [12] 2001 	mov	r0,#___memcpy
      0004E3 79s00            [12] 2002 	mov	r1,#(___memcpy >> 8)
      0004E5 7As00            [12] 2003 	mov	r2,#(___memcpy >> 16)
      0004E7 12r00r00         [24] 2004 	lcall	__sdcc_banked_call
      0004EA E5 81            [12] 2005 	mov	a,sp
      0004EC 24 FB            [12] 2006 	add	a,#0xfb
                                   2007 ;	../../../platform/cc2530dk/./viztool.c:159: len += sizeof(rt->state.learned_from);
      0004EE F5 81            [12] 2008 	mov	sp,a
      0004F0 24 F6            [12] 2009 	add	a,#0xf6
      0004F2 F8               [12] 2010 	mov	r0,a
      0004F3 E6               [12] 2011 	mov	a,@r0
      0004F4 04               [12] 2012 	inc	a
      0004F5 FF               [12] 2013 	mov	r7,a
                                   2014 ;	../../../platform/cc2530dk/./viztool.c:163: count++;
      0004F6 E5 81            [12] 2015 	mov	a,sp
      0004F8 24 FA            [12] 2016 	add	a,#0xfa
      0004FA F8               [12] 2017 	mov	r0,a
      0004FB 06               [12] 2018 	inc	@r0
                                   2019 ;	../../../platform/cc2530dk/./viztool.c:164: left -= entry_size;
      0004FC E5 81            [12] 2020 	mov	a,sp
      0004FE 24 FC            [12] 2021 	add	a,#0xfc
      000500 F8               [12] 2022 	mov	r0,a
      000501 E6               [12] 2023 	mov	a,@r0
      000502 24 D8            [12] 2024 	add	a,#0xd8
      000504 F6               [12] 2025 	mov	@r0,a
                                   2026 ;	../../../platform/cc2530dk/./viztool.c:166: rt = list_item_next(rt);
      000505 90r00r7C         [24] 2027 	mov	dptr,#_rt
      000508 E0               [24] 2028 	movx	a,@dptr
      000509 FA               [12] 2029 	mov	r2,a
      00050A A3               [24] 2030 	inc	dptr
      00050B E0               [24] 2031 	movx	a,@dptr
      00050C FB               [12] 2032 	mov	r3,a
      00050D A3               [24] 2033 	inc	dptr
      00050E E0               [24] 2034 	movx	a,@dptr
      00050F FC               [12] 2035 	mov	r4,a
      000510 8A 82            [24] 2036 	mov	dpl,r2
      000512 8B 83            [24] 2037 	mov	dph,r3
      000514 8C F0            [24] 2038 	mov	b,r4
      000516 C0 07            [24] 2039 	push	ar7
      000518 78r00            [12] 2040 	mov	r0,#_list_item_next
      00051A 79s00            [12] 2041 	mov	r1,#(_list_item_next >> 8)
      00051C 7As00            [12] 2042 	mov	r2,#(_list_item_next >> 16)
      00051E 12r00r00         [24] 2043 	lcall	__sdcc_banked_call
      000521 AA 82            [24] 2044 	mov	r2,dpl
      000523 AB 83            [24] 2045 	mov	r3,dph
      000525 AC F0            [24] 2046 	mov	r4,b
      000527 D0 07            [24] 2047 	pop	ar7
      000529 90r00r7C         [24] 2048 	mov	dptr,#_rt
      00052C EA               [12] 2049 	mov	a,r2
      00052D F0               [24] 2050 	movx	@dptr,a
      00052E EB               [12] 2051 	mov	a,r3
      00052F A3               [24] 2052 	inc	dptr
      000530 F0               [24] 2053 	movx	@dptr,a
      000531 EC               [12] 2054 	mov	a,r4
      000532 A3               [24] 2055 	inc	dptr
      000533 F0               [24] 2056 	movx	@dptr,a
                                   2057 ;	../../../platform/cc2530dk/./viztool.c:168: if(left < entry_size) {
      000534 E5 81            [12] 2058 	mov	a,sp
      000536 24 FC            [12] 2059 	add	a,#0xfc
      000538 F8               [12] 2060 	mov	r0,a
      000539 B6 28 00         [24] 2061 	cjne	@r0,#0x28,00312$
      00053C                       2062 00312$:
      00053C 50 03            [24] 2063 	jnc	00313$
      00053E 02r08r3B         [24] 2064 	ljmp	00181$
      000541                       2065 00313$:
                                   2066 ;	../../../platform/cc2530dk/./viztool.c:169: break;
      000541                       2067 00147$:
                                   2068 ;	../../../platform/cc2530dk/./viztool.c:126: for(i = buf[1]; i < uip_ds6_route_num_routes(); i++) {
      000541 E5 81            [12] 2069 	mov	a,sp
      000543 24 FB            [12] 2070 	add	a,#0xfb
      000545 F8               [12] 2071 	mov	r0,a
      000546 06               [12] 2072 	inc	@r0
      000547 02r02r28         [24] 2073 	ljmp	00146$
      00054A                       2074 00137$:
                                   2075 ;	../../../platform/cc2530dk/./viztool.c:173: } else if(buf[0] == REQUEST_TYPE_DRT) {
      00054A BD 03 02         [24] 2076 	cjne	r5,#0x03,00314$
      00054D 80 03            [24] 2077 	sjmp	00315$
      00054F                       2078 00314$:
      00054F 02r06r5D         [24] 2079 	ljmp	00134$
      000552                       2080 00315$:
                                   2081 ;	../../../platform/cc2530dk/./viztool.c:177: addr = uip_ds6_defrt_choose();
      000552 C0 07            [24] 2082 	push	ar7
      000554 C0 06            [24] 2083 	push	ar6
      000556 78r00            [12] 2084 	mov	r0,#_uip_ds6_defrt_choose
      000558 79s00            [12] 2085 	mov	r1,#(_uip_ds6_defrt_choose >> 8)
      00055A 7As00            [12] 2086 	mov	r2,#(_uip_ds6_defrt_choose >> 16)
      00055C 12r00r00         [24] 2087 	lcall	__sdcc_banked_call
      00055F AA 82            [24] 2088 	mov	r2,dpl
      000561 AB 83            [24] 2089 	mov	r3,dph
      000563 AC F0            [24] 2090 	mov	r4,b
      000565 D0 06            [24] 2091 	pop	ar6
      000567 D0 07            [24] 2092 	pop	ar7
      000569 90r00r82         [24] 2093 	mov	dptr,#_addr
      00056C EA               [12] 2094 	mov	a,r2
      00056D F0               [24] 2095 	movx	@dptr,a
      00056E EB               [12] 2096 	mov	a,r3
      00056F A3               [24] 2097 	inc	dptr
      000570 F0               [24] 2098 	movx	@dptr,a
      000571 EC               [12] 2099 	mov	a,r4
      000572 A3               [24] 2100 	inc	dptr
      000573 F0               [24] 2101 	movx	@dptr,a
                                   2102 ;	../../../platform/cc2530dk/./viztool.c:178: if(addr != NULL) {
      000574 EA               [12] 2103 	mov	a,r2
      000575 4B               [12] 2104 	orl	a,r3
      000576 60 28            [24] 2105 	jz	00112$
                                   2106 ;	../../../platform/cc2530dk/./viztool.c:179: defrt = uip_ds6_defrt_lookup(addr);
      000578 8A 82            [24] 2107 	mov	dpl,r2
      00057A 8B 83            [24] 2108 	mov	dph,r3
      00057C 8C F0            [24] 2109 	mov	b,r4
      00057E C0 07            [24] 2110 	push	ar7
      000580 C0 06            [24] 2111 	push	ar6
      000582 78r00            [12] 2112 	mov	r0,#_uip_ds6_defrt_lookup
      000584 79s00            [12] 2113 	mov	r1,#(_uip_ds6_defrt_lookup >> 8)
      000586 7As00            [12] 2114 	mov	r2,#(_uip_ds6_defrt_lookup >> 16)
      000588 12r00r00         [24] 2115 	lcall	__sdcc_banked_call
      00058B AA 82            [24] 2116 	mov	r2,dpl
      00058D AB 83            [24] 2117 	mov	r3,dph
      00058F AC F0            [24] 2118 	mov	r4,b
      000591 D0 06            [24] 2119 	pop	ar6
      000593 D0 07            [24] 2120 	pop	ar7
      000595 90r00r7F         [24] 2121 	mov	dptr,#_defrt
      000598 EA               [12] 2122 	mov	a,r2
      000599 F0               [24] 2123 	movx	@dptr,a
      00059A EB               [12] 2124 	mov	a,r3
      00059B A3               [24] 2125 	inc	dptr
      00059C F0               [24] 2126 	movx	@dptr,a
      00059D EC               [12] 2127 	mov	a,r4
      00059E A3               [24] 2128 	inc	dptr
      00059F F0               [24] 2129 	movx	@dptr,a
      0005A0                       2130 00112$:
                                   2131 ;	../../../platform/cc2530dk/./viztool.c:182: i = buf[1];
      0005A0 90r00r04         [24] 2132 	mov	dptr,#(_buf + 0x0001)
      0005A3 E0               [24] 2133 	movx	a,@dptr
      0005A4 FC               [12] 2134 	mov	r4,a
      0005A5 E5 81            [12] 2135 	mov	a,sp
      0005A7 24 FB            [12] 2136 	add	a,#0xfb
      0005A9 F8               [12] 2137 	mov	r0,a
      0005AA A6 04            [24] 2138 	mov	@r0,ar4
                                   2139 ;	../../../platform/cc2530dk/./viztool.c:184: if(defrt != NULL && i < 1) {
      0005AC 90r00r7F         [24] 2140 	mov	dptr,#_defrt
      0005AF E0               [24] 2141 	movx	a,@dptr
      0005B0 F5 F0            [12] 2142 	mov	b,a
      0005B2 A3               [24] 2143 	inc	dptr
      0005B3 E0               [24] 2144 	movx	a,@dptr
      0005B4 45 F0            [12] 2145 	orl	a,b
      0005B6 70 03            [24] 2146 	jnz	00317$
      0005B8 02r08r4B         [24] 2147 	ljmp	00141$
      0005BB                       2148 00317$:
      0005BB BC 01 00         [24] 2149 	cjne	r4,#0x01,00318$
      0005BE                       2150 00318$:
      0005BE 40 03            [24] 2151 	jc	00319$
      0005C0 02r08r4B         [24] 2152 	ljmp	00141$
      0005C3                       2153 00319$:
                                   2154 ;	../../../platform/cc2530dk/./viztool.c:188: memcpy(buf + len, &i, sizeof(i));
      0005C3 E5 81            [12] 2155 	mov	a,sp
      0005C5 24 FB            [12] 2156 	add	a,#0xfb
      0005C7 FC               [12] 2157 	mov	r4,a
      0005C8 7B 00            [12] 2158 	mov	r3,#0x00
      0005CA 7A 40            [12] 2159 	mov	r2,#0x40
      0005CC 74 01            [12] 2160 	mov	a,#0x01
      0005CE C0 E0            [24] 2161 	push	acc
      0005D0 E4               [12] 2162 	clr	a
      0005D1 C0 E0            [24] 2163 	push	acc
      0005D3 C0 04            [24] 2164 	push	ar4
      0005D5 C0 03            [24] 2165 	push	ar3
      0005D7 C0 02            [24] 2166 	push	ar2
      0005D9 90r00r05         [24] 2167 	mov	dptr,#(_buf + 0x0002)
      0005DC 75 F0 00         [24] 2168 	mov	b,#0x00
      0005DF 78r00            [12] 2169 	mov	r0,#___memcpy
      0005E1 79s00            [12] 2170 	mov	r1,#(___memcpy >> 8)
      0005E3 7As00            [12] 2171 	mov	r2,#(___memcpy >> 16)
      0005E5 12r00r00         [24] 2172 	lcall	__sdcc_banked_call
      0005E8 E5 81            [12] 2173 	mov	a,sp
      0005EA 24 FB            [12] 2174 	add	a,#0xfb
      0005EC F5 81            [12] 2175 	mov	sp,a
                                   2176 ;	../../../platform/cc2530dk/./viztool.c:190: memcpy(buf + len, &defrt->ipaddr, sizeof(defrt->ipaddr));
      0005EE 90r00r7F         [24] 2177 	mov	dptr,#_defrt
      0005F1 E0               [24] 2178 	movx	a,@dptr
      0005F2 FA               [12] 2179 	mov	r2,a
      0005F3 A3               [24] 2180 	inc	dptr
      0005F4 E0               [24] 2181 	movx	a,@dptr
      0005F5 FB               [12] 2182 	mov	r3,a
      0005F6 A3               [24] 2183 	inc	dptr
      0005F7 E0               [24] 2184 	movx	a,@dptr
      0005F8 FC               [12] 2185 	mov	r4,a
      0005F9 74 03            [12] 2186 	mov	a,#0x03
      0005FB 2A               [12] 2187 	add	a,r2
      0005FC FA               [12] 2188 	mov	r2,a
      0005FD E4               [12] 2189 	clr	a
      0005FE 3B               [12] 2190 	addc	a,r3
      0005FF FB               [12] 2191 	mov	r3,a
      000600 74 10            [12] 2192 	mov	a,#0x10
      000602 C0 E0            [24] 2193 	push	acc
      000604 E4               [12] 2194 	clr	a
      000605 C0 E0            [24] 2195 	push	acc
      000607 C0 02            [24] 2196 	push	ar2
      000609 C0 03            [24] 2197 	push	ar3
      00060B C0 04            [24] 2198 	push	ar4
      00060D 90r00r06         [24] 2199 	mov	dptr,#(_buf + 0x0003)
      000610 75 F0 00         [24] 2200 	mov	b,#0x00
      000613 78r00            [12] 2201 	mov	r0,#___memcpy
      000615 79s00            [12] 2202 	mov	r1,#(___memcpy >> 8)
      000617 7As00            [12] 2203 	mov	r2,#(___memcpy >> 16)
      000619 12r00r00         [24] 2204 	lcall	__sdcc_banked_call
      00061C E5 81            [12] 2205 	mov	a,sp
      00061E 24 FB            [12] 2206 	add	a,#0xfb
      000620 F5 81            [12] 2207 	mov	sp,a
                                   2208 ;	../../../platform/cc2530dk/./viztool.c:192: memcpy(buf + len, &defrt->isinfinite, sizeof(defrt->isinfinite));
      000622 90r00r7F         [24] 2209 	mov	dptr,#_defrt
      000625 E0               [24] 2210 	movx	a,@dptr
      000626 FA               [12] 2211 	mov	r2,a
      000627 A3               [24] 2212 	inc	dptr
      000628 E0               [24] 2213 	movx	a,@dptr
      000629 FB               [12] 2214 	mov	r3,a
      00062A A3               [24] 2215 	inc	dptr
      00062B E0               [24] 2216 	movx	a,@dptr
      00062C FC               [12] 2217 	mov	r4,a
      00062D 74 1B            [12] 2218 	mov	a,#0x1b
      00062F 2A               [12] 2219 	add	a,r2
      000630 FA               [12] 2220 	mov	r2,a
      000631 E4               [12] 2221 	clr	a
      000632 3B               [12] 2222 	addc	a,r3
      000633 FB               [12] 2223 	mov	r3,a
      000634 74 01            [12] 2224 	mov	a,#0x01
      000636 C0 E0            [24] 2225 	push	acc
      000638 E4               [12] 2226 	clr	a
      000639 C0 E0            [24] 2227 	push	acc
      00063B C0 02            [24] 2228 	push	ar2
      00063D C0 03            [24] 2229 	push	ar3
      00063F C0 04            [24] 2230 	push	ar4
      000641 90r00r16         [24] 2231 	mov	dptr,#(_buf + 0x0013)
      000644 75 F0 00         [24] 2232 	mov	b,#0x00
      000647 78r00            [12] 2233 	mov	r0,#___memcpy
      000649 79s00            [12] 2234 	mov	r1,#(___memcpy >> 8)
      00064B 7As00            [12] 2235 	mov	r2,#(___memcpy >> 16)
      00064D 12r00r00         [24] 2236 	lcall	__sdcc_banked_call
      000650 E5 81            [12] 2237 	mov	a,sp
      000652 24 FB            [12] 2238 	add	a,#0xfb
      000654 F5 81            [12] 2239 	mov	sp,a
                                   2240 ;	../../../platform/cc2530dk/./viztool.c:193: len += sizeof(defrt->isinfinite);
      000656 7F 14            [12] 2241 	mov	r7,#0x14
                                   2242 ;	../../../platform/cc2530dk/./viztool.c:197: count++;
      000658 7E 01            [12] 2243 	mov	r6,#0x01
                                   2244 ;	../../../platform/cc2530dk/./viztool.c:198: left -= entry_size;
      00065A 02r08r4B         [24] 2245 	ljmp	00141$
      00065D                       2246 00134$:
                                   2247 ;	../../../platform/cc2530dk/./viztool.c:200: } else if(buf[0] == REQUEST_TYPE_ADDR) {
      00065D BD 04 02         [24] 2248 	cjne	r5,#0x04,00320$
      000660 80 03            [24] 2249 	sjmp	00321$
      000662                       2250 00320$:
      000662 02r07r72         [24] 2251 	ljmp	00131$
      000665                       2252 00321$:
                                   2253 ;	../../../platform/cc2530dk/./viztool.c:202: for(i = buf[1]; i < UIP_DS6_ADDR_NB; i++) {
      000665 90r00r04         [24] 2254 	mov	dptr,#(_buf + 0x0001)
      000668 E5 81            [12] 2255 	mov	a,sp
      00066A 24 FB            [12] 2256 	add	a,#0xfb
      00066C F8               [12] 2257 	mov	r0,a
      00066D E0               [24] 2258 	movx	a,@dptr
      00066E F6               [12] 2259 	mov	@r0,a
      00066F E5 81            [12] 2260 	mov	a,sp
      000671 24 FA            [12] 2261 	add	a,#0xfa
      000673 F8               [12] 2262 	mov	r0,a
      000674 76 00            [12] 2263 	mov	@r0,#0x00
      000676 E5 81            [12] 2264 	mov	a,sp
      000678 24 FC            [12] 2265 	add	a,#0xfc
      00067A F8               [12] 2266 	mov	r0,a
      00067B 76 77            [12] 2267 	mov	@r0,#0x77
      00067D                       2268 00149$:
      00067D E5 81            [12] 2269 	mov	a,sp
      00067F 24 FB            [12] 2270 	add	a,#0xfb
      000681 F8               [12] 2271 	mov	r0,a
      000682 B6 03 00         [24] 2272 	cjne	@r0,#0x03,00322$
      000685                       2273 00322$:
      000685 40 03            [24] 2274 	jc	00323$
      000687 02r08r44         [24] 2275 	ljmp	00182$
      00068A                       2276 00323$:
                                   2277 ;	../../../platform/cc2530dk/./viztool.c:203: if(uip_ds6_if.addr_list[i].isused) {
      00068A E5 81            [12] 2278 	mov	a,sp
      00068C 24 FB            [12] 2279 	add	a,#0xfb
      00068E F8               [12] 2280 	mov	r0,a
      00068F E6               [12] 2281 	mov	a,@r0
      000690 75 F0 1C         [24] 2282 	mov	b,#0x1c
      000693 A4               [48] 2283 	mul	ab
      000694 24r12            [12] 2284 	add	a,#(_uip_ds6_if + 0x0012)
      000696 FA               [12] 2285 	mov	r2,a
      000697 E4               [12] 2286 	clr	a
      000698 34s00            [12] 2287 	addc	a,#((_uip_ds6_if + 0x0012) >> 8)
      00069A FC               [12] 2288 	mov	r4,a
      00069B 8A 82            [24] 2289 	mov	dpl,r2
      00069D 8C 83            [24] 2290 	mov	dph,r4
      00069F E0               [24] 2291 	movx	a,@dptr
      0006A0 70 03            [24] 2292 	jnz	00324$
      0006A2 02r07r69         [24] 2293 	ljmp	00150$
      0006A5                       2294 00324$:
                                   2295 ;	../../../platform/cc2530dk/./viztool.c:206: memcpy(buf + len, &i, sizeof(i));
      0006A5 E5 81            [12] 2296 	mov	a,sp
      0006A7 24 FB            [12] 2297 	add	a,#0xfb
      0006A9 FA               [12] 2298 	mov	r2,a
      0006AA E5 81            [12] 2299 	mov	a,sp
      0006AC 24 F6            [12] 2300 	add	a,#0xf6
      0006AE F8               [12] 2301 	mov	r0,a
      0006AF A6 02            [24] 2302 	mov	@r0,ar2
      0006B1 08               [12] 2303 	inc	r0
      0006B2 76 00            [12] 2304 	mov	@r0,#0x00
      0006B4 08               [12] 2305 	inc	r0
      0006B5 76 40            [12] 2306 	mov	@r0,#0x40
      0006B7 EF               [12] 2307 	mov	a,r7
      0006B8 24r03            [12] 2308 	add	a,#_buf
      0006BA FB               [12] 2309 	mov	r3,a
      0006BB E4               [12] 2310 	clr	a
      0006BC 34s00            [12] 2311 	addc	a,#(_buf >> 8)
      0006BE FC               [12] 2312 	mov	r4,a
      0006BF 7A 00            [12] 2313 	mov	r2,#0x00
      0006C1 C0 07            [24] 2314 	push	ar7
      0006C3 74 01            [12] 2315 	mov	a,#0x01
      0006C5 C0 E0            [24] 2316 	push	acc
      0006C7 E4               [12] 2317 	clr	a
      0006C8 C0 E0            [24] 2318 	push	acc
      0006CA E5 81            [12] 2319 	mov	a,sp
      0006CC 24 F3            [12] 2320 	add	a,#0xf3
      0006CE F8               [12] 2321 	mov	r0,a
      0006CF E6               [12] 2322 	mov	a,@r0
      0006D0 C0 E0            [24] 2323 	push	acc
      0006D2 08               [12] 2324 	inc	r0
      0006D3 E6               [12] 2325 	mov	a,@r0
      0006D4 C0 E0            [24] 2326 	push	acc
      0006D6 08               [12] 2327 	inc	r0
      0006D7 E6               [12] 2328 	mov	a,@r0
      0006D8 C0 E0            [24] 2329 	push	acc
      0006DA 8B 82            [24] 2330 	mov	dpl,r3
      0006DC 8C 83            [24] 2331 	mov	dph,r4
      0006DE 8A F0            [24] 2332 	mov	b,r2
      0006E0 78r00            [12] 2333 	mov	r0,#___memcpy
      0006E2 79s00            [12] 2334 	mov	r1,#(___memcpy >> 8)
      0006E4 7As00            [12] 2335 	mov	r2,#(___memcpy >> 16)
      0006E6 12r00r00         [24] 2336 	lcall	__sdcc_banked_call
      0006E9 E5 81            [12] 2337 	mov	a,sp
      0006EB 24 FB            [12] 2338 	add	a,#0xfb
      0006ED F5 81            [12] 2339 	mov	sp,a
      0006EF D0 07            [24] 2340 	pop	ar7
                                   2341 ;	../../../platform/cc2530dk/./viztool.c:207: len += sizeof(i);
      0006F1 E5 81            [12] 2342 	mov	a,sp
      0006F3 24 F6            [12] 2343 	add	a,#0xf6
      0006F5 F8               [12] 2344 	mov	r0,a
      0006F6 EF               [12] 2345 	mov	a,r7
      0006F7 04               [12] 2346 	inc	a
      0006F8 F6               [12] 2347 	mov	@r0,a
                                   2348 ;	../../../platform/cc2530dk/./viztool.c:208: memcpy(buf + len, &uip_ds6_if.addr_list[i].ipaddr,
      0006F9 E5 81            [12] 2349 	mov	a,sp
      0006FB 24 FB            [12] 2350 	add	a,#0xfb
      0006FD F8               [12] 2351 	mov	r0,a
      0006FE E6               [12] 2352 	mov	a,@r0
      0006FF 75 F0 1C         [24] 2353 	mov	b,#0x1c
      000702 A4               [48] 2354 	mul	ab
      000703 24r12            [12] 2355 	add	a,#(_uip_ds6_if + 0x0012)
      000705 FA               [12] 2356 	mov	r2,a
      000706 E4               [12] 2357 	clr	a
      000707 34s00            [12] 2358 	addc	a,#((_uip_ds6_if + 0x0012) >> 8)
      000709 FB               [12] 2359 	mov	r3,a
      00070A 0A               [12] 2360 	inc	r2
      00070B BA 00 01         [24] 2361 	cjne	r2,#0x00,00325$
      00070E 0B               [12] 2362 	inc	r3
      00070F                       2363 00325$:
      00070F 8A 07            [24] 2364 	mov	ar7,r2
      000711 8B 06            [24] 2365 	mov	ar6,r3
      000713 7D 00            [12] 2366 	mov	r5,#0x00
      000715 E5 81            [12] 2367 	mov	a,sp
      000717 24 F6            [12] 2368 	add	a,#0xf6
      000719 F8               [12] 2369 	mov	r0,a
      00071A E6               [12] 2370 	mov	a,@r0
      00071B 24r03            [12] 2371 	add	a,#_buf
      00071D FB               [12] 2372 	mov	r3,a
      00071E E4               [12] 2373 	clr	a
      00071F 34s00            [12] 2374 	addc	a,#(_buf >> 8)
      000721 FC               [12] 2375 	mov	r4,a
      000722 7A 00            [12] 2376 	mov	r2,#0x00
      000724 74 10            [12] 2377 	mov	a,#0x10
      000726 C0 E0            [24] 2378 	push	acc
      000728 E4               [12] 2379 	clr	a
      000729 C0 E0            [24] 2380 	push	acc
      00072B C0 07            [24] 2381 	push	ar7
      00072D C0 06            [24] 2382 	push	ar6
      00072F C0 05            [24] 2383 	push	ar5
      000731 8B 82            [24] 2384 	mov	dpl,r3
      000733 8C 83            [24] 2385 	mov	dph,r4
      000735 8A F0            [24] 2386 	mov	b,r2
      000737 78r00            [12] 2387 	mov	r0,#___memcpy
      000739 79s00            [12] 2388 	mov	r1,#(___memcpy >> 8)
      00073B 7As00            [12] 2389 	mov	r2,#(___memcpy >> 16)
      00073D 12r00r00         [24] 2390 	lcall	__sdcc_banked_call
      000740 E5 81            [12] 2391 	mov	a,sp
      000742 24 FB            [12] 2392 	add	a,#0xfb
                                   2393 ;	../../../platform/cc2530dk/./viztool.c:210: len += sizeof(uip_ds6_if.addr_list[i].ipaddr);
      000744 F5 81            [12] 2394 	mov	sp,a
      000746 24 F6            [12] 2395 	add	a,#0xf6
      000748 F8               [12] 2396 	mov	r0,a
      000749 74 10            [12] 2397 	mov	a,#0x10
      00074B 26               [12] 2398 	add	a,@r0
      00074C FF               [12] 2399 	mov	r7,a
                                   2400 ;	../../../platform/cc2530dk/./viztool.c:214: count++;
      00074D E5 81            [12] 2401 	mov	a,sp
      00074F 24 FA            [12] 2402 	add	a,#0xfa
      000751 F8               [12] 2403 	mov	r0,a
      000752 06               [12] 2404 	inc	@r0
                                   2405 ;	../../../platform/cc2530dk/./viztool.c:215: left -= entry_size;
      000753 E5 81            [12] 2406 	mov	a,sp
      000755 24 FC            [12] 2407 	add	a,#0xfc
      000757 F8               [12] 2408 	mov	r0,a
      000758 E6               [12] 2409 	mov	a,@r0
      000759 24 EF            [12] 2410 	add	a,#0xef
      00075B F6               [12] 2411 	mov	@r0,a
                                   2412 ;	../../../platform/cc2530dk/./viztool.c:217: if(left < entry_size) {
      00075C E5 81            [12] 2413 	mov	a,sp
      00075E 24 FC            [12] 2414 	add	a,#0xfc
      000760 F8               [12] 2415 	mov	r0,a
      000761 B6 11 00         [24] 2416 	cjne	@r0,#0x11,00326$
      000764                       2417 00326$:
      000764 50 03            [24] 2418 	jnc	00327$
      000766 02r08r44         [24] 2419 	ljmp	00182$
      000769                       2420 00327$:
                                   2421 ;	../../../platform/cc2530dk/./viztool.c:218: break;
      000769                       2422 00150$:
                                   2423 ;	../../../platform/cc2530dk/./viztool.c:202: for(i = buf[1]; i < UIP_DS6_ADDR_NB; i++) {
      000769 E5 81            [12] 2424 	mov	a,sp
      00076B 24 FB            [12] 2425 	add	a,#0xfb
      00076D F8               [12] 2426 	mov	r0,a
      00076E 06               [12] 2427 	inc	@r0
      00076F 02r06r7D         [24] 2428 	ljmp	00149$
      000772                       2429 00131$:
                                   2430 ;	../../../platform/cc2530dk/./viztool.c:222: } else if(buf[0] == REQUEST_TYPE_TOTALS) {
      000772 BD FF 02         [24] 2431 	cjne	r5,#0xff,00328$
      000775 80 03            [24] 2432 	sjmp	00329$
      000777                       2433 00328$:
      000777 02r08r2D         [24] 2434 	ljmp	00128$
      00077A                       2435 00329$:
                                   2436 ;	../../../platform/cc2530dk/./viztool.c:223: memset(&buf[2], 0, 4);
      00077A 74 04            [12] 2437 	mov	a,#0x04
      00077C C0 E0            [24] 2438 	push	acc
      00077E E4               [12] 2439 	clr	a
      00077F C0 E0            [24] 2440 	push	acc
      000781 C0 E0            [24] 2441 	push	acc
      000783 90r00r05         [24] 2442 	mov	dptr,#(_buf + 0x0002)
      000786 75 F0 00         [24] 2443 	mov	b,#0x00
      000789 78r00            [12] 2444 	mov	r0,#_memset
      00078B 79s00            [12] 2445 	mov	r1,#(_memset >> 8)
      00078D 7As00            [12] 2446 	mov	r2,#(_memset >> 16)
      00078F 12r00r00         [24] 2447 	lcall	__sdcc_banked_call
      000792 15 81            [12] 2448 	dec	sp
      000794 15 81            [12] 2449 	dec	sp
      000796 15 81            [12] 2450 	dec	sp
                                   2451 ;	../../../platform/cc2530dk/./viztool.c:224: for(i = 0; i < UIP_DS6_ADDR_NB; i++) {
      000798 E5 81            [12] 2452 	mov	a,sp
      00079A 24 FB            [12] 2453 	add	a,#0xfb
      00079C F8               [12] 2454 	mov	r0,a
      00079D 76 00            [12] 2455 	mov	@r0,#0x00
      00079F 7D 00            [12] 2456 	mov	r5,#0x00
      0007A1                       2457 00151$:
                                   2458 ;	../../../platform/cc2530dk/./viztool.c:225: if(uip_ds6_if.addr_list[i].isused) {
      0007A1 ED               [12] 2459 	mov	a,r5
      0007A2 75 F0 1C         [24] 2460 	mov	b,#0x1c
      0007A5 A4               [48] 2461 	mul	ab
      0007A6 24r12            [12] 2462 	add	a,#(_uip_ds6_if + 0x0012)
      0007A8 FB               [12] 2463 	mov	r3,a
      0007A9 E4               [12] 2464 	clr	a
      0007AA 34s00            [12] 2465 	addc	a,#((_uip_ds6_if + 0x0012) >> 8)
      0007AC FC               [12] 2466 	mov	r4,a
      0007AD 8B 82            [24] 2467 	mov	dpl,r3
      0007AF 8C 83            [24] 2468 	mov	dph,r4
      0007B1 E0               [24] 2469 	movx	a,@dptr
      0007B2 60 0B            [24] 2470 	jz	00152$
                                   2471 ;	../../../platform/cc2530dk/./viztool.c:226: buf[2]++;
      0007B4 90r00r05         [24] 2472 	mov	dptr,#(_buf + 0x0002)
      0007B7 E0               [24] 2473 	movx	a,@dptr
      0007B8 FC               [12] 2474 	mov	r4,a
      0007B9 0C               [12] 2475 	inc	r4
      0007BA 90r00r05         [24] 2476 	mov	dptr,#(_buf + 0x0002)
      0007BD EC               [12] 2477 	mov	a,r4
      0007BE F0               [24] 2478 	movx	@dptr,a
      0007BF                       2479 00152$:
                                   2480 ;	../../../platform/cc2530dk/./viztool.c:224: for(i = 0; i < UIP_DS6_ADDR_NB; i++) {
      0007BF 0D               [12] 2481 	inc	r5
      0007C0 E5 81            [12] 2482 	mov	a,sp
      0007C2 24 FB            [12] 2483 	add	a,#0xfb
      0007C4 F8               [12] 2484 	mov	r0,a
      0007C5 A6 05            [24] 2485 	mov	@r0,ar5
      0007C7 BD 03 00         [24] 2486 	cjne	r5,#0x03,00331$
      0007CA                       2487 00331$:
      0007CA 40 D5            [24] 2488 	jc	00151$
                                   2489 ;	../../../platform/cc2530dk/./viztool.c:229: for(i = 0; i < UIP_DS6_NBR_NB; i++) {
      0007CC E5 81            [12] 2490 	mov	a,sp
      0007CE 24 FB            [12] 2491 	add	a,#0xfb
      0007D0 F8               [12] 2492 	mov	r0,a
      0007D1 A6 05            [24] 2493 	mov	@r0,ar5
      0007D3 E5 81            [12] 2494 	mov	a,sp
      0007D5 24 FB            [12] 2495 	add	a,#0xfb
      0007D7 F8               [12] 2496 	mov	r0,a
      0007D8 76 00            [12] 2497 	mov	@r0,#0x00
      0007DA 7D 00            [12] 2498 	mov	r5,#0x00
      0007DC                       2499 00153$:
                                   2500 ;	../../../platform/cc2530dk/./viztool.c:230: if(uip_ds6_nbr_cache[i].isused) {
      0007DC ED               [12] 2501 	mov	a,r5
      0007DD 75 F0 2E         [24] 2502 	mov	b,#0x2e
      0007E0 A4               [48] 2503 	mul	ab
      0007E1 24r00            [12] 2504 	add	a,#_uip_ds6_nbr_cache
      0007E3 FB               [12] 2505 	mov	r3,a
      0007E4 74s00            [12] 2506 	mov	a,#(_uip_ds6_nbr_cache >> 8)
      0007E6 35 F0            [12] 2507 	addc	a,b
      0007E8 FC               [12] 2508 	mov	r4,a
      0007E9 8B 82            [24] 2509 	mov	dpl,r3
      0007EB 8C 83            [24] 2510 	mov	dph,r4
      0007ED E0               [24] 2511 	movx	a,@dptr
      0007EE 60 0B            [24] 2512 	jz	00154$
                                   2513 ;	../../../platform/cc2530dk/./viztool.c:231: buf[3]++;
      0007F0 90r00r06         [24] 2514 	mov	dptr,#(_buf + 0x0003)
      0007F3 E0               [24] 2515 	movx	a,@dptr
      0007F4 FC               [12] 2516 	mov	r4,a
      0007F5 0C               [12] 2517 	inc	r4
      0007F6 90r00r06         [24] 2518 	mov	dptr,#(_buf + 0x0003)
      0007F9 EC               [12] 2519 	mov	a,r4
      0007FA F0               [24] 2520 	movx	@dptr,a
      0007FB                       2521 00154$:
                                   2522 ;	../../../platform/cc2530dk/./viztool.c:229: for(i = 0; i < UIP_DS6_NBR_NB; i++) {
      0007FB 0D               [12] 2523 	inc	r5
      0007FC E5 81            [12] 2524 	mov	a,sp
      0007FE 24 FB            [12] 2525 	add	a,#0xfb
      000800 F8               [12] 2526 	mov	r0,a
      000801 A6 05            [24] 2527 	mov	@r0,ar5
      000803 BD 04 00         [24] 2528 	cjne	r5,#0x04,00334$
      000806                       2529 00334$:
      000806 40 D4            [24] 2530 	jc	00153$
                                   2531 ;	../../../platform/cc2530dk/./viztool.c:235: buf[4] = uip_ds6_route_num_routes();
      000808 E5 81            [12] 2532 	mov	a,sp
      00080A 24 FB            [12] 2533 	add	a,#0xfb
      00080C F8               [12] 2534 	mov	r0,a
      00080D A6 05            [24] 2535 	mov	@r0,ar5
      00080F 78r00            [12] 2536 	mov	r0,#_uip_ds6_route_num_routes
      000811 79s00            [12] 2537 	mov	r1,#(_uip_ds6_route_num_routes >> 8)
      000813 7As00            [12] 2538 	mov	r2,#(_uip_ds6_route_num_routes >> 16)
      000815 12r00r00         [24] 2539 	lcall	__sdcc_banked_call
      000818 AC 82            [24] 2540 	mov	r4,dpl
      00081A AD 83            [24] 2541 	mov	r5,dph
      00081C 90r00r07         [24] 2542 	mov	dptr,#(_buf + 0x0004)
      00081F EC               [12] 2543 	mov	a,r4
      000820 F0               [24] 2544 	movx	@dptr,a
                                   2545 ;	../../../platform/cc2530dk/./viztool.c:236: buf[5] = 1;
      000821 90r00r08         [24] 2546 	mov	dptr,#(_buf + 0x0005)
      000824 74 01            [12] 2547 	mov	a,#0x01
      000826 F0               [24] 2548 	movx	@dptr,a
                                   2549 ;	../../../platform/cc2530dk/./viztool.c:238: len += 4;
      000827 7F 06            [12] 2550 	mov	r7,#0x06
                                   2551 ;	../../../platform/cc2530dk/./viztool.c:239: count = 4;
      000829 7E 04            [12] 2552 	mov	r6,#0x04
      00082B 80 1E            [24] 2553 	sjmp	00141$
      00082D                       2554 00128$:
                                   2555 ;	../../../platform/cc2530dk/./viztool.c:241: return 0;
      00082D 75 82 00         [24] 2556 	mov	dpl,#0x00
      000830 80 20            [24] 2557 	sjmp	00155$
      000832                       2558 00180$:
      000832 E5 81            [12] 2559 	mov	a,sp
      000834 24 FA            [12] 2560 	add	a,#0xfa
      000836 F8               [12] 2561 	mov	r0,a
      000837 86 06            [24] 2562 	mov	ar6,@r0
                                   2563 ;	../../../platform/cc2530dk/./viztool.c:244: return len;
                                   2564 ;	../../../platform/cc2530dk/./viztool.c:241: return 0;
      000839 80 10            [24] 2565 	sjmp	00141$
      00083B                       2566 00181$:
      00083B E5 81            [12] 2567 	mov	a,sp
      00083D 24 FA            [12] 2568 	add	a,#0xfa
      00083F F8               [12] 2569 	mov	r0,a
      000840 86 06            [24] 2570 	mov	ar6,@r0
                                   2571 ;	../../../platform/cc2530dk/./viztool.c:244: return len;
                                   2572 ;	../../../platform/cc2530dk/./viztool.c:241: return 0;
      000842 80 07            [24] 2573 	sjmp	00141$
      000844                       2574 00182$:
      000844 E5 81            [12] 2575 	mov	a,sp
      000846 24 FA            [12] 2576 	add	a,#0xfa
      000848 F8               [12] 2577 	mov	r0,a
      000849 86 06            [24] 2578 	mov	ar6,@r0
      00084B                       2579 00141$:
                                   2580 ;	../../../platform/cc2530dk/./viztool.c:243: buf[1] = count;
      00084B 90r00r04         [24] 2581 	mov	dptr,#(_buf + 0x0001)
      00084E EE               [12] 2582 	mov	a,r6
      00084F F0               [24] 2583 	movx	@dptr,a
                                   2584 ;	../../../platform/cc2530dk/./viztool.c:244: return len;
      000850 8F 82            [24] 2585 	mov	dpl,r7
      000852                       2586 00155$:
                                   2587 ;	../../../platform/cc2530dk/./viztool.c:245: }
      000852 E5 81            [12] 2588 	mov	a,sp
      000854 24 EF            [12] 2589 	add	a,#0xef
      000856 F5 81            [12] 2590 	mov	sp,a
      000858 22               [24] 2591 	ret
                                   2592 ;------------------------------------------------------------
                                   2593 ;Allocation info for local variables in function 'tcpip_handler'
                                   2594 ;------------------------------------------------------------
                                   2595 ;	../../../platform/cc2530dk/./viztool.c:250: tcpip_handler(void) CC_NON_BANKED
                                   2596 ;	-----------------------------------------
                                   2597 ;	 function tcpip_handler
                                   2598 ;	-----------------------------------------
      000859                       2599 _tcpip_handler:
                                   2600 ;	../../../platform/cc2530dk/./viztool.c:252: if(uip_newdata()) {
      000859 90r00r00         [24] 2601 	mov	dptr,#_uip_flags
      00085C E0               [24] 2602 	movx	a,@dptr
      00085D 20 E1 01         [24] 2603 	jb	acc.1,00118$
      000860 22               [24] 2604 	ret
      000861                       2605 00118$:
                                   2606 ;	../../../platform/cc2530dk/./viztool.c:253: memset(buf, 0, VIZTOOL_MAX_PAYLOAD_LEN);
      000861 74 78            [12] 2607 	mov	a,#0x78
      000863 C0 E0            [24] 2608 	push	acc
      000865 E4               [12] 2609 	clr	a
      000866 C0 E0            [24] 2610 	push	acc
      000868 C0 E0            [24] 2611 	push	acc
      00086A 90r00r03         [24] 2612 	mov	dptr,#_buf
      00086D 75 F0 00         [24] 2613 	mov	b,#0x00
      000870 78r00            [12] 2614 	mov	r0,#_memset
      000872 79s00            [12] 2615 	mov	r1,#(_memset >> 8)
      000874 7As00            [12] 2616 	mov	r2,#(_memset >> 16)
      000876 12r00r00         [24] 2617 	lcall	__sdcc_banked_call
      000879 15 81            [12] 2618 	dec	sp
      00087B 15 81            [12] 2619 	dec	sp
      00087D 15 81            [12] 2620 	dec	sp
                                   2621 ;	../../../platform/cc2530dk/./viztool.c:259: memcpy(buf, uip_appdata, uip_datalen());
      00087F 90r00r00         [24] 2622 	mov	dptr,#_uip_len
      000882 E0               [24] 2623 	movx	a,@dptr
      000883 FE               [12] 2624 	mov	r6,a
      000884 A3               [24] 2625 	inc	dptr
      000885 E0               [24] 2626 	movx	a,@dptr
      000886 FF               [12] 2627 	mov	r7,a
      000887 C0 06            [24] 2628 	push	ar6
      000889 C0 07            [24] 2629 	push	ar7
      00088B 90r00r00         [24] 2630 	mov	dptr,#_uip_appdata
      00088E E0               [24] 2631 	movx	a,@dptr
      00088F C0 E0            [24] 2632 	push	acc
      000891 A3               [24] 2633 	inc	dptr
      000892 E0               [24] 2634 	movx	a,@dptr
      000893 C0 E0            [24] 2635 	push	acc
      000895 A3               [24] 2636 	inc	dptr
      000896 E0               [24] 2637 	movx	a,@dptr
      000897 C0 E0            [24] 2638 	push	acc
      000899 90r00r03         [24] 2639 	mov	dptr,#_buf
      00089C 75 F0 00         [24] 2640 	mov	b,#0x00
      00089F 78r00            [12] 2641 	mov	r0,#___memcpy
      0008A1 79s00            [12] 2642 	mov	r1,#(___memcpy >> 8)
      0008A3 7As00            [12] 2643 	mov	r2,#(___memcpy >> 16)
      0008A5 12r00r00         [24] 2644 	lcall	__sdcc_banked_call
      0008A8 E5 81            [12] 2645 	mov	a,sp
      0008AA 24 FB            [12] 2646 	add	a,#0xfb
      0008AC F5 81            [12] 2647 	mov	sp,a
                                   2648 ;	../../../platform/cc2530dk/./viztool.c:261: len = process_request();
      0008AE 12r00r00         [24] 2649 	lcall	_process_request
      0008B1 AF 82            [24] 2650 	mov	r7,dpl
      0008B3 90r00r7B         [24] 2651 	mov	dptr,#_len
      0008B6 EF               [12] 2652 	mov	a,r7
      0008B7 F0               [24] 2653 	movx	@dptr,a
                                   2654 ;	../../../platform/cc2530dk/./viztool.c:262: if(len) {
      0008B8 EF               [12] 2655 	mov	a,r7
      0008B9 70 03            [24] 2656 	jnz	00119$
      0008BB 02r09r68         [24] 2657 	ljmp	00103$
      0008BE                       2658 00119$:
                                   2659 ;	../../../platform/cc2530dk/./viztool.c:263: server_conn->rport = UIP_UDP_BUF->srcport;
      0008BE 90r00r00         [24] 2660 	mov	dptr,#_server_conn
      0008C1 E0               [24] 2661 	movx	a,@dptr
      0008C2 FD               [12] 2662 	mov	r5,a
      0008C3 A3               [24] 2663 	inc	dptr
      0008C4 E0               [24] 2664 	movx	a,@dptr
      0008C5 FE               [12] 2665 	mov	r6,a
      0008C6 A3               [24] 2666 	inc	dptr
      0008C7 E0               [24] 2667 	movx	a,@dptr
      0008C8 FF               [12] 2668 	mov	r7,a
      0008C9 74 12            [12] 2669 	mov	a,#0x12
      0008CB 2D               [12] 2670 	add	a,r5
      0008CC FD               [12] 2671 	mov	r5,a
      0008CD E4               [12] 2672 	clr	a
      0008CE 3E               [12] 2673 	addc	a,r6
      0008CF FE               [12] 2674 	mov	r6,a
      0008D0 90r00r00         [24] 2675 	mov	dptr,#_uip_ext_len
      0008D3 E0               [24] 2676 	movx	a,@dptr
      0008D4 FC               [12] 2677 	mov	r4,a
      0008D5 7B 00            [12] 2678 	mov	r3,#0x00
      0008D7 74 28            [12] 2679 	mov	a,#0x28
      0008D9 2C               [12] 2680 	add	a,r4
      0008DA FC               [12] 2681 	mov	r4,a
      0008DB E4               [12] 2682 	clr	a
      0008DC 3B               [12] 2683 	addc	a,r3
      0008DD FB               [12] 2684 	mov	r3,a
      0008DE EC               [12] 2685 	mov	a,r4
      0008DF 24r00            [12] 2686 	add	a,#_uip_aligned_buf
      0008E1 FC               [12] 2687 	mov	r4,a
      0008E2 EB               [12] 2688 	mov	a,r3
      0008E3 34s00            [12] 2689 	addc	a,#(_uip_aligned_buf >> 8)
      0008E5 FB               [12] 2690 	mov	r3,a
      0008E6 8C 82            [24] 2691 	mov	dpl,r4
      0008E8 8B 83            [24] 2692 	mov	dph,r3
      0008EA E0               [24] 2693 	movx	a,@dptr
      0008EB FB               [12] 2694 	mov	r3,a
      0008EC A3               [24] 2695 	inc	dptr
      0008ED E0               [24] 2696 	movx	a,@dptr
      0008EE FC               [12] 2697 	mov	r4,a
      0008EF 8D 82            [24] 2698 	mov	dpl,r5
      0008F1 8E 83            [24] 2699 	mov	dph,r6
      0008F3 8F F0            [24] 2700 	mov	b,r7
      0008F5 EB               [12] 2701 	mov	a,r3
      0008F6 12r00r00         [24] 2702 	lcall	__gptrput
      0008F9 A3               [24] 2703 	inc	dptr
      0008FA EC               [12] 2704 	mov	a,r4
      0008FB 12r00r00         [24] 2705 	lcall	__gptrput
                                   2706 ;	../../../platform/cc2530dk/./viztool.c:264: uip_ipaddr_copy(&server_conn->ripaddr, &UIP_IP_BUF->srcipaddr);
      0008FE 90r00r00         [24] 2707 	mov	dptr,#_server_conn
      000901 E0               [24] 2708 	movx	a,@dptr
      000902 FD               [12] 2709 	mov	r5,a
      000903 A3               [24] 2710 	inc	dptr
      000904 E0               [24] 2711 	movx	a,@dptr
      000905 FE               [12] 2712 	mov	r6,a
      000906 A3               [24] 2713 	inc	dptr
      000907 E0               [24] 2714 	movx	a,@dptr
      000908 FF               [12] 2715 	mov	r7,a
      000909 74 10            [12] 2716 	mov	a,#0x10
      00090B C0 E0            [24] 2717 	push	acc
      00090D E4               [12] 2718 	clr	a
      00090E C0 E0            [24] 2719 	push	acc
      000910 74r08            [12] 2720 	mov	a,#(_uip_aligned_buf + 0x0008)
      000912 C0 E0            [24] 2721 	push	acc
      000914 74s00            [12] 2722 	mov	a,#((_uip_aligned_buf + 0x0008) >> 8)
      000916 C0 E0            [24] 2723 	push	acc
      000918 E4               [12] 2724 	clr	a
      000919 C0 E0            [24] 2725 	push	acc
      00091B 8D 82            [24] 2726 	mov	dpl,r5
      00091D 8E 83            [24] 2727 	mov	dph,r6
      00091F 8F F0            [24] 2728 	mov	b,r7
      000921 78r00            [12] 2729 	mov	r0,#___memcpy
      000923 79s00            [12] 2730 	mov	r1,#(___memcpy >> 8)
      000925 7As00            [12] 2731 	mov	r2,#(___memcpy >> 16)
      000927 12r00r00         [24] 2732 	lcall	__sdcc_banked_call
      00092A E5 81            [12] 2733 	mov	a,sp
      00092C 24 FB            [12] 2734 	add	a,#0xfb
      00092E F5 81            [12] 2735 	mov	sp,a
                                   2736 ;	../../../platform/cc2530dk/./viztool.c:265: uip_udp_packet_send(server_conn, buf, len);
      000930 90r00r7B         [24] 2737 	mov	dptr,#_len
      000933 E0               [24] 2738 	movx	a,@dptr
      000934 FF               [12] 2739 	mov	r7,a
      000935 33               [12] 2740 	rlc	a
      000936 95 E0            [12] 2741 	subb	a,acc
      000938 FE               [12] 2742 	mov	r6,a
      000939 90r00r00         [24] 2743 	mov	dptr,#_server_conn
      00093C E0               [24] 2744 	movx	a,@dptr
      00093D FB               [12] 2745 	mov	r3,a
      00093E A3               [24] 2746 	inc	dptr
      00093F E0               [24] 2747 	movx	a,@dptr
      000940 FC               [12] 2748 	mov	r4,a
      000941 A3               [24] 2749 	inc	dptr
      000942 E0               [24] 2750 	movx	a,@dptr
      000943 FD               [12] 2751 	mov	r5,a
      000944 C0 07            [24] 2752 	push	ar7
      000946 C0 06            [24] 2753 	push	ar6
      000948 74r03            [12] 2754 	mov	a,#_buf
      00094A C0 E0            [24] 2755 	push	acc
      00094C 74s00            [12] 2756 	mov	a,#(_buf >> 8)
      00094E C0 E0            [24] 2757 	push	acc
      000950 E4               [12] 2758 	clr	a
      000951 C0 E0            [24] 2759 	push	acc
      000953 8B 82            [24] 2760 	mov	dpl,r3
      000955 8C 83            [24] 2761 	mov	dph,r4
      000957 8D F0            [24] 2762 	mov	b,r5
      000959 78r00            [12] 2763 	mov	r0,#_uip_udp_packet_send
      00095B 79s00            [12] 2764 	mov	r1,#(_uip_udp_packet_send >> 8)
      00095D 7As00            [12] 2765 	mov	r2,#(_uip_udp_packet_send >> 16)
      00095F 12r00r00         [24] 2766 	lcall	__sdcc_banked_call
      000962 E5 81            [12] 2767 	mov	a,sp
      000964 24 FB            [12] 2768 	add	a,#0xfb
      000966 F5 81            [12] 2769 	mov	sp,a
                                   2770 ;	../../../platform/cc2530dk/./viztool.c:270: uip_create_unspecified(&server_conn->ripaddr);
      000968                       2771 00103$:
      000968 90r00r00         [24] 2772 	mov	dptr,#_server_conn
      00096B E0               [24] 2773 	movx	a,@dptr
      00096C FD               [12] 2774 	mov	r5,a
      00096D A3               [24] 2775 	inc	dptr
      00096E E0               [24] 2776 	movx	a,@dptr
      00096F FE               [12] 2777 	mov	r6,a
      000970 A3               [24] 2778 	inc	dptr
      000971 E0               [24] 2779 	movx	a,@dptr
      000972 FF               [12] 2780 	mov	r7,a
      000973 8D 82            [24] 2781 	mov	dpl,r5
      000975 8E 83            [24] 2782 	mov	dph,r6
      000977 8F F0            [24] 2783 	mov	b,r7
      000979 E4               [12] 2784 	clr	a
      00097A 12r00r00         [24] 2785 	lcall	__gptrput
      00097D A3               [24] 2786 	inc	dptr
      00097E 12r00r00         [24] 2787 	lcall	__gptrput
      000981 90r00r00         [24] 2788 	mov	dptr,#_server_conn
      000984 E0               [24] 2789 	movx	a,@dptr
      000985 FD               [12] 2790 	mov	r5,a
      000986 A3               [24] 2791 	inc	dptr
      000987 E0               [24] 2792 	movx	a,@dptr
      000988 FE               [12] 2793 	mov	r6,a
      000989 A3               [24] 2794 	inc	dptr
      00098A E0               [24] 2795 	movx	a,@dptr
      00098B FF               [12] 2796 	mov	r7,a
      00098C 74 02            [12] 2797 	mov	a,#0x02
      00098E 2D               [12] 2798 	add	a,r5
      00098F FD               [12] 2799 	mov	r5,a
      000990 E4               [12] 2800 	clr	a
      000991 3E               [12] 2801 	addc	a,r6
      000992 FE               [12] 2802 	mov	r6,a
      000993 8D 82            [24] 2803 	mov	dpl,r5
      000995 8E 83            [24] 2804 	mov	dph,r6
      000997 8F F0            [24] 2805 	mov	b,r7
      000999 E4               [12] 2806 	clr	a
      00099A 12r00r00         [24] 2807 	lcall	__gptrput
      00099D A3               [24] 2808 	inc	dptr
      00099E 12r00r00         [24] 2809 	lcall	__gptrput
      0009A1 90r00r00         [24] 2810 	mov	dptr,#_server_conn
      0009A4 E0               [24] 2811 	movx	a,@dptr
      0009A5 FD               [12] 2812 	mov	r5,a
      0009A6 A3               [24] 2813 	inc	dptr
      0009A7 E0               [24] 2814 	movx	a,@dptr
      0009A8 FE               [12] 2815 	mov	r6,a
      0009A9 A3               [24] 2816 	inc	dptr
      0009AA E0               [24] 2817 	movx	a,@dptr
      0009AB FF               [12] 2818 	mov	r7,a
      0009AC 74 04            [12] 2819 	mov	a,#0x04
      0009AE 2D               [12] 2820 	add	a,r5
      0009AF FD               [12] 2821 	mov	r5,a
      0009B0 E4               [12] 2822 	clr	a
      0009B1 3E               [12] 2823 	addc	a,r6
      0009B2 FE               [12] 2824 	mov	r6,a
      0009B3 8D 82            [24] 2825 	mov	dpl,r5
      0009B5 8E 83            [24] 2826 	mov	dph,r6
      0009B7 8F F0            [24] 2827 	mov	b,r7
      0009B9 E4               [12] 2828 	clr	a
      0009BA 12r00r00         [24] 2829 	lcall	__gptrput
      0009BD A3               [24] 2830 	inc	dptr
      0009BE 12r00r00         [24] 2831 	lcall	__gptrput
      0009C1 90r00r00         [24] 2832 	mov	dptr,#_server_conn
      0009C4 E0               [24] 2833 	movx	a,@dptr
      0009C5 FD               [12] 2834 	mov	r5,a
      0009C6 A3               [24] 2835 	inc	dptr
      0009C7 E0               [24] 2836 	movx	a,@dptr
      0009C8 FE               [12] 2837 	mov	r6,a
      0009C9 A3               [24] 2838 	inc	dptr
      0009CA E0               [24] 2839 	movx	a,@dptr
      0009CB FF               [12] 2840 	mov	r7,a
      0009CC 74 06            [12] 2841 	mov	a,#0x06
      0009CE 2D               [12] 2842 	add	a,r5
      0009CF FD               [12] 2843 	mov	r5,a
      0009D0 E4               [12] 2844 	clr	a
      0009D1 3E               [12] 2845 	addc	a,r6
      0009D2 FE               [12] 2846 	mov	r6,a
      0009D3 8D 82            [24] 2847 	mov	dpl,r5
      0009D5 8E 83            [24] 2848 	mov	dph,r6
      0009D7 8F F0            [24] 2849 	mov	b,r7
      0009D9 E4               [12] 2850 	clr	a
      0009DA 12r00r00         [24] 2851 	lcall	__gptrput
      0009DD A3               [24] 2852 	inc	dptr
      0009DE 12r00r00         [24] 2853 	lcall	__gptrput
      0009E1 90r00r00         [24] 2854 	mov	dptr,#_server_conn
      0009E4 E0               [24] 2855 	movx	a,@dptr
      0009E5 FD               [12] 2856 	mov	r5,a
      0009E6 A3               [24] 2857 	inc	dptr
      0009E7 E0               [24] 2858 	movx	a,@dptr
      0009E8 FE               [12] 2859 	mov	r6,a
      0009E9 A3               [24] 2860 	inc	dptr
      0009EA E0               [24] 2861 	movx	a,@dptr
      0009EB FF               [12] 2862 	mov	r7,a
      0009EC 74 08            [12] 2863 	mov	a,#0x08
      0009EE 2D               [12] 2864 	add	a,r5
      0009EF FD               [12] 2865 	mov	r5,a
      0009F0 E4               [12] 2866 	clr	a
      0009F1 3E               [12] 2867 	addc	a,r6
      0009F2 FE               [12] 2868 	mov	r6,a
      0009F3 8D 82            [24] 2869 	mov	dpl,r5
      0009F5 8E 83            [24] 2870 	mov	dph,r6
      0009F7 8F F0            [24] 2871 	mov	b,r7
      0009F9 E4               [12] 2872 	clr	a
      0009FA 12r00r00         [24] 2873 	lcall	__gptrput
      0009FD A3               [24] 2874 	inc	dptr
      0009FE 12r00r00         [24] 2875 	lcall	__gptrput
      000A01 90r00r00         [24] 2876 	mov	dptr,#_server_conn
      000A04 E0               [24] 2877 	movx	a,@dptr
      000A05 FD               [12] 2878 	mov	r5,a
      000A06 A3               [24] 2879 	inc	dptr
      000A07 E0               [24] 2880 	movx	a,@dptr
      000A08 FE               [12] 2881 	mov	r6,a
      000A09 A3               [24] 2882 	inc	dptr
      000A0A E0               [24] 2883 	movx	a,@dptr
      000A0B FF               [12] 2884 	mov	r7,a
      000A0C 74 0A            [12] 2885 	mov	a,#0x0a
      000A0E 2D               [12] 2886 	add	a,r5
      000A0F FD               [12] 2887 	mov	r5,a
      000A10 E4               [12] 2888 	clr	a
      000A11 3E               [12] 2889 	addc	a,r6
      000A12 FE               [12] 2890 	mov	r6,a
      000A13 8D 82            [24] 2891 	mov	dpl,r5
      000A15 8E 83            [24] 2892 	mov	dph,r6
      000A17 8F F0            [24] 2893 	mov	b,r7
      000A19 E4               [12] 2894 	clr	a
      000A1A 12r00r00         [24] 2895 	lcall	__gptrput
      000A1D A3               [24] 2896 	inc	dptr
      000A1E 12r00r00         [24] 2897 	lcall	__gptrput
      000A21 90r00r00         [24] 2898 	mov	dptr,#_server_conn
      000A24 E0               [24] 2899 	movx	a,@dptr
      000A25 FD               [12] 2900 	mov	r5,a
      000A26 A3               [24] 2901 	inc	dptr
      000A27 E0               [24] 2902 	movx	a,@dptr
      000A28 FE               [12] 2903 	mov	r6,a
      000A29 A3               [24] 2904 	inc	dptr
      000A2A E0               [24] 2905 	movx	a,@dptr
      000A2B FF               [12] 2906 	mov	r7,a
      000A2C 74 0C            [12] 2907 	mov	a,#0x0c
      000A2E 2D               [12] 2908 	add	a,r5
      000A2F FD               [12] 2909 	mov	r5,a
      000A30 E4               [12] 2910 	clr	a
      000A31 3E               [12] 2911 	addc	a,r6
      000A32 FE               [12] 2912 	mov	r6,a
      000A33 8D 82            [24] 2913 	mov	dpl,r5
      000A35 8E 83            [24] 2914 	mov	dph,r6
      000A37 8F F0            [24] 2915 	mov	b,r7
      000A39 E4               [12] 2916 	clr	a
      000A3A 12r00r00         [24] 2917 	lcall	__gptrput
      000A3D A3               [24] 2918 	inc	dptr
      000A3E 12r00r00         [24] 2919 	lcall	__gptrput
      000A41 90r00r00         [24] 2920 	mov	dptr,#_server_conn
      000A44 E0               [24] 2921 	movx	a,@dptr
      000A45 FD               [12] 2922 	mov	r5,a
      000A46 A3               [24] 2923 	inc	dptr
      000A47 E0               [24] 2924 	movx	a,@dptr
      000A48 FE               [12] 2925 	mov	r6,a
      000A49 A3               [24] 2926 	inc	dptr
      000A4A E0               [24] 2927 	movx	a,@dptr
      000A4B FF               [12] 2928 	mov	r7,a
      000A4C 74 0E            [12] 2929 	mov	a,#0x0e
      000A4E 2D               [12] 2930 	add	a,r5
      000A4F FD               [12] 2931 	mov	r5,a
      000A50 E4               [12] 2932 	clr	a
      000A51 3E               [12] 2933 	addc	a,r6
      000A52 FE               [12] 2934 	mov	r6,a
      000A53 8D 82            [24] 2935 	mov	dpl,r5
      000A55 8E 83            [24] 2936 	mov	dph,r6
      000A57 8F F0            [24] 2937 	mov	b,r7
      000A59 E4               [12] 2938 	clr	a
      000A5A 12r00r00         [24] 2939 	lcall	__gptrput
      000A5D A3               [24] 2940 	inc	dptr
      000A5E 12r00r00         [24] 2941 	lcall	__gptrput
                                   2942 ;	../../../platform/cc2530dk/./viztool.c:271: server_conn->rport = 0;
      000A61 90r00r00         [24] 2943 	mov	dptr,#_server_conn
      000A64 E0               [24] 2944 	movx	a,@dptr
      000A65 FD               [12] 2945 	mov	r5,a
      000A66 A3               [24] 2946 	inc	dptr
      000A67 E0               [24] 2947 	movx	a,@dptr
      000A68 FE               [12] 2948 	mov	r6,a
      000A69 A3               [24] 2949 	inc	dptr
      000A6A E0               [24] 2950 	movx	a,@dptr
      000A6B FF               [12] 2951 	mov	r7,a
      000A6C 74 12            [12] 2952 	mov	a,#0x12
      000A6E 2D               [12] 2953 	add	a,r5
      000A6F FD               [12] 2954 	mov	r5,a
      000A70 E4               [12] 2955 	clr	a
      000A71 3E               [12] 2956 	addc	a,r6
      000A72 FE               [12] 2957 	mov	r6,a
      000A73 8D 82            [24] 2958 	mov	dpl,r5
      000A75 8E 83            [24] 2959 	mov	dph,r6
      000A77 8F F0            [24] 2960 	mov	b,r7
      000A79 E4               [12] 2961 	clr	a
      000A7A 12r00r00         [24] 2962 	lcall	__gptrput
      000A7D A3               [24] 2963 	inc	dptr
      000A7E 12r00r00         [24] 2964 	lcall	__gptrput
                                   2965 ;	../../../platform/cc2530dk/./viztool.c:273: return;
                                   2966 ;	../../../platform/cc2530dk/./viztool.c:274: }
      000A81 22               [24] 2967 	ret
                                   2968 ;------------------------------------------------------------
                                   2969 ;Allocation info for local variables in function 'process_thread_viztool_process'
                                   2970 ;------------------------------------------------------------
                                   2971 ;ev                        Allocated to stack - sp -3
                                   2972 ;data                      Allocated to stack - sp -6
                                   2973 ;process_pt                Allocated to registers r5 r6 r7 
                                   2974 ;PT_YIELD_FLAG             Allocated to registers r4 
                                   2975 ;------------------------------------------------------------
                                   2976 ;	../../../platform/cc2530dk/./viztool.c:276: PROCESS_THREAD(viztool_process, ev, data)
                                   2977 ;	-----------------------------------------
                                   2978 ;	 function process_thread_viztool_process
                                   2979 ;	-----------------------------------------
      000A82                       2980 _process_thread_viztool_process:
                                   2981 ;	../../../platform/cc2530dk/./viztool.c:279: PROCESS_BEGIN();
      000A82 AD 82            [24] 2982 	mov	r5,dpl
      000A84 AE 83            [24] 2983 	mov	r6,dph
      000A86 AF F0            [24] 2984 	mov	r7,b
      000A88 7C 01            [12] 2985 	mov	r4,#0x01
      000A8A 12r00r00         [24] 2986 	lcall	__gptrget
      000A8D FA               [12] 2987 	mov	r2,a
      000A8E A3               [24] 2988 	inc	dptr
      000A8F 12r00r00         [24] 2989 	lcall	__gptrget
      000A92 FB               [12] 2990 	mov	r3,a
      000A93 BA 00 05         [24] 2991 	cjne	r2,#0x00,00136$
      000A96 BB 00 02         [24] 2992 	cjne	r3,#0x00,00136$
      000A99 80 0B            [24] 2993 	sjmp	00101$
      000A9B                       2994 00136$:
      000A9B BA 1D 05         [24] 2995 	cjne	r2,#0x1d,00137$
      000A9E BB 01 02         [24] 2996 	cjne	r3,#0x01,00137$
      000AA1 80 73            [24] 2997 	sjmp	00102$
      000AA3                       2998 00137$:
      000AA3 02r0Br3D         [24] 2999 	ljmp	00113$
      000AA6                       3000 00101$:
                                   3001 ;	../../../platform/cc2530dk/./viztool.c:281: server_conn = udp_new(NULL, UIP_HTONS(0), NULL);
      000AA6 C0 05            [24] 3002 	push	ar5
      000AA8 C0 06            [24] 3003 	push	ar6
      000AAA C0 07            [24] 3004 	push	ar7
      000AAC C0 06            [24] 3005 	push	ar6
      000AAE C0 05            [24] 3006 	push	ar5
      000AB0 E4               [12] 3007 	clr	a
      000AB1 C0 E0            [24] 3008 	push	acc
      000AB3 C0 E0            [24] 3009 	push	acc
      000AB5 C0 E0            [24] 3010 	push	acc
      000AB7 C0 E0            [24] 3011 	push	acc
      000AB9 C0 E0            [24] 3012 	push	acc
      000ABB 90 00 00         [24] 3013 	mov	dptr,#0x0000
      000ABE 75 F0 00         [24] 3014 	mov	b,#0x00
      000AC1 78r00            [12] 3015 	mov	r0,#_udp_new
      000AC3 79s00            [12] 3016 	mov	r1,#(_udp_new >> 8)
      000AC5 7As00            [12] 3017 	mov	r2,#(_udp_new >> 16)
      000AC7 12r00r00         [24] 3018 	lcall	__sdcc_banked_call
      000ACA AA 82            [24] 3019 	mov	r2,dpl
      000ACC AB 83            [24] 3020 	mov	r3,dph
      000ACE AF F0            [24] 3021 	mov	r7,b
      000AD0 E5 81            [12] 3022 	mov	a,sp
      000AD2 24 FB            [12] 3023 	add	a,#0xfb
      000AD4 F5 81            [12] 3024 	mov	sp,a
      000AD6 D0 05            [24] 3025 	pop	ar5
      000AD8 D0 06            [24] 3026 	pop	ar6
      000ADA 90r00r00         [24] 3027 	mov	dptr,#_server_conn
      000ADD EA               [12] 3028 	mov	a,r2
      000ADE F0               [24] 3029 	movx	@dptr,a
      000ADF EB               [12] 3030 	mov	a,r3
      000AE0 A3               [24] 3031 	inc	dptr
      000AE1 F0               [24] 3032 	movx	@dptr,a
      000AE2 EF               [12] 3033 	mov	a,r7
      000AE3 A3               [24] 3034 	inc	dptr
      000AE4 F0               [24] 3035 	movx	@dptr,a
                                   3036 ;	../../../platform/cc2530dk/./viztool.c:282: udp_bind(server_conn, UIP_HTONS(VIZTOOL_UDP_PORT));
      000AE5 74 10            [12] 3037 	mov	a,#0x10
      000AE7 2A               [12] 3038 	add	a,r2
      000AE8 FA               [12] 3039 	mov	r2,a
      000AE9 E4               [12] 3040 	clr	a
      000AEA 3B               [12] 3041 	addc	a,r3
      000AEB FB               [12] 3042 	mov	r3,a
      000AEC 8A 82            [24] 3043 	mov	dpl,r2
      000AEE 8B 83            [24] 3044 	mov	dph,r3
      000AF0 8F F0            [24] 3045 	mov	b,r7
      000AF2 74 EA            [12] 3046 	mov	a,#0xea
      000AF4 12r00r00         [24] 3047 	lcall	__gptrput
      000AF7 A3               [24] 3048 	inc	dptr
      000AF8 74 61            [12] 3049 	mov	a,#0x61
      000AFA 12r00r00         [24] 3050 	lcall	__gptrput
                                   3051 ;	../../../platform/cc2530dk/./viztool.c:291: PROCESS_END();
      000AFD D0 07            [24] 3052 	pop	ar7
      000AFF D0 06            [24] 3053 	pop	ar6
      000B01 D0 05            [24] 3054 	pop	ar5
                                   3055 ;	../../../platform/cc2530dk/./viztool.c:284: while(1) {
      000B03                       3056 00111$:
                                   3057 ;	../../../platform/cc2530dk/./viztool.c:285: PROCESS_YIELD();
      000B03 7C 00            [12] 3058 	mov	r4,#0x00
      000B05 8D 82            [24] 3059 	mov	dpl,r5
      000B07 8E 83            [24] 3060 	mov	dph,r6
      000B09 8F F0            [24] 3061 	mov	b,r7
      000B0B 74 1D            [12] 3062 	mov	a,#0x1d
      000B0D 12r00r00         [24] 3063 	lcall	__gptrput
      000B10 A3               [24] 3064 	inc	dptr
      000B11 74 01            [12] 3065 	mov	a,#0x01
      000B13 12r00r00         [24] 3066 	lcall	__gptrput
      000B16                       3067 00102$:
      000B16 EC               [12] 3068 	mov	a,r4
      000B17 70 05            [24] 3069 	jnz	00106$
      000B19 75 82 01         [24] 3070 	mov	dpl,#0x01
      000B1C 80 30            [24] 3071 	sjmp	00114$
      000B1E                       3072 00106$:
                                   3073 ;	../../../platform/cc2530dk/./viztool.c:286: if(ev == tcpip_event) {
      000B1E 90r00r00         [24] 3074 	mov	dptr,#_tcpip_event
      000B21 E0               [24] 3075 	movx	a,@dptr
      000B22 FC               [12] 3076 	mov	r4,a
      000B23 E5 81            [12] 3077 	mov	a,sp
      000B25 24 FD            [12] 3078 	add	a,#0xfd
      000B27 F8               [12] 3079 	mov	r0,a
      000B28 E6               [12] 3080 	mov	a,@r0
      000B29 B5 04 D7         [24] 3081 	cjne	a,ar4,00111$
                                   3082 ;	../../../platform/cc2530dk/./viztool.c:287: tcpip_handler();
      000B2C C0 07            [24] 3083 	push	ar7
      000B2E C0 06            [24] 3084 	push	ar6
      000B30 C0 05            [24] 3085 	push	ar5
      000B32 12r08r59         [24] 3086 	lcall	_tcpip_handler
      000B35 D0 05            [24] 3087 	pop	ar5
      000B37 D0 06            [24] 3088 	pop	ar6
      000B39 D0 07            [24] 3089 	pop	ar7
                                   3090 ;	../../../platform/cc2530dk/./viztool.c:291: PROCESS_END();
      000B3B 80 C6            [24] 3091 	sjmp	00111$
      000B3D                       3092 00113$:
      000B3D 8D 82            [24] 3093 	mov	dpl,r5
      000B3F 8E 83            [24] 3094 	mov	dph,r6
      000B41 8F F0            [24] 3095 	mov	b,r7
      000B43 E4               [12] 3096 	clr	a
      000B44 12r00r00         [24] 3097 	lcall	__gptrput
      000B47 A3               [24] 3098 	inc	dptr
      000B48 12r00r00         [24] 3099 	lcall	__gptrput
      000B4B 75 82 03         [24] 3100 	mov	dpl,#0x03
      000B4E                       3101 00114$:
                                   3102 ;	../../../platform/cc2530dk/./viztool.c:292: }
      000B4E 02r00r00         [24] 3103 	ljmp	__sdcc_banked_ret
                                   3104 	.area CSEG    (CODE)
                                   3105 	.area CONST   (CODE)
                                   3106 	.area XINIT   (CODE)
      000000                       3107 __xinit__viztool_process:
                                   3108 ; generic printIvalPtr
      000000 00 00 00              3109 	.byte #0x00,#0x00,#0x00
      000003r82s0As00              3110 	.byte _process_thread_viztool_process, (_process_thread_viztool_process >> 8), (_process_thread_viztool_process >> 16)
      000006 00 00                 3111 	.byte #0x00, #0x00
      000008 00                    3112 	.db #0x00	; 0
      000009 00                    3113 	.db #0x00	; 0
                                   3114 	.area CABS    (ABS,CODE)
