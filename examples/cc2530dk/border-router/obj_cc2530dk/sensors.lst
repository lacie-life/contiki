                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module sensors
                                      6 	.optsdcc -mmcs51 --model-huge
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _process_poll
                                     12 	.globl _process_alloc_event
                                     13 	.globl _process_post
                                     14 	.globl _strlen
                                     15 	.globl _strncmp
                                     16 	.globl _ACTIVE
                                     17 	.globl _TX_BYTE
                                     18 	.globl _RX_BYTE
                                     19 	.globl _ERR
                                     20 	.globl _FE
                                     21 	.globl _SLAVE
                                     22 	.globl _RE
                                     23 	.globl _MODE
                                     24 	.globl _T3OVFIF
                                     25 	.globl _T3CH0IF
                                     26 	.globl _T3CH1IF
                                     27 	.globl _T4OVFIF
                                     28 	.globl _T4CH0IF
                                     29 	.globl _T4CH1IF
                                     30 	.globl _OVFIM
                                     31 	.globl _B_0
                                     32 	.globl _B_1
                                     33 	.globl _B_2
                                     34 	.globl _B_3
                                     35 	.globl _B_4
                                     36 	.globl _B_5
                                     37 	.globl _B_6
                                     38 	.globl _B_7
                                     39 	.globl _P2IF
                                     40 	.globl _UTX0IF
                                     41 	.globl _UTX1IF
                                     42 	.globl _P1IF
                                     43 	.globl _WDTIF
                                     44 	.globl _ACC_0
                                     45 	.globl _ACC_1
                                     46 	.globl _ACC_2
                                     47 	.globl _ACC_3
                                     48 	.globl _ACC_4
                                     49 	.globl _ACC_5
                                     50 	.globl _ACC_6
                                     51 	.globl _ACC_7
                                     52 	.globl _P
                                     53 	.globl _F1
                                     54 	.globl _OV
                                     55 	.globl _RS0
                                     56 	.globl _RS1
                                     57 	.globl _F0
                                     58 	.globl _AC
                                     59 	.globl _CY
                                     60 	.globl _DMAIF
                                     61 	.globl _T1IF
                                     62 	.globl _T2IF
                                     63 	.globl _T3IF
                                     64 	.globl _T4IF
                                     65 	.globl _P0IF
                                     66 	.globl _STIF
                                     67 	.globl _DMAIE
                                     68 	.globl _T1IE
                                     69 	.globl _T2IE
                                     70 	.globl _T3IE
                                     71 	.globl _T4IE
                                     72 	.globl _P0IE
                                     73 	.globl _RFERRIE
                                     74 	.globl _ADCIE
                                     75 	.globl _URX0IE
                                     76 	.globl _URX1IE
                                     77 	.globl _ENCIE
                                     78 	.globl _STIE
                                     79 	.globl _EA
                                     80 	.globl _P2_0
                                     81 	.globl _P2_1
                                     82 	.globl _P2_2
                                     83 	.globl _P2_3
                                     84 	.globl _P2_4
                                     85 	.globl _P2_5
                                     86 	.globl _P2_6
                                     87 	.globl _P2_7
                                     88 	.globl _ENCIF_0
                                     89 	.globl _ENCIF_1
                                     90 	.globl _P1_0
                                     91 	.globl _P1_1
                                     92 	.globl _P1_2
                                     93 	.globl _P1_3
                                     94 	.globl _P1_4
                                     95 	.globl _P1_5
                                     96 	.globl _P1_6
                                     97 	.globl _P1_7
                                     98 	.globl _IT0
                                     99 	.globl _RFERRIF
                                    100 	.globl _IT1
                                    101 	.globl _URX0IF
                                    102 	.globl _ADCIF
                                    103 	.globl _URX1IF
                                    104 	.globl _P0_0
                                    105 	.globl _P0_1
                                    106 	.globl _P0_2
                                    107 	.globl _P0_3
                                    108 	.globl _P0_4
                                    109 	.globl _P0_5
                                    110 	.globl _P0_6
                                    111 	.globl _P0_7
                                    112 	.globl _WDCTL
                                    113 	.globl _U1GCR
                                    114 	.globl _U1UCR
                                    115 	.globl _U1BAUD
                                    116 	.globl _U1DBUF
                                    117 	.globl _U1CSR
                                    118 	.globl _U0GCR
                                    119 	.globl _U0UCR
                                    120 	.globl _U0BAUD
                                    121 	.globl _U0DBUF
                                    122 	.globl _U0CSR
                                    123 	.globl _TIMIF
                                    124 	.globl _T4CC1
                                    125 	.globl _T4CCTL1
                                    126 	.globl _T4CC0
                                    127 	.globl _T4CCTL0
                                    128 	.globl _T4CTL
                                    129 	.globl _T4CNT
                                    130 	.globl _T3CC1
                                    131 	.globl _T3CCTL1
                                    132 	.globl _T3CC0
                                    133 	.globl _T3CCTL0
                                    134 	.globl _T3CTL
                                    135 	.globl _T3CNT
                                    136 	.globl _T2MSEL
                                    137 	.globl _T2IRQM
                                    138 	.globl _T2MOVF2
                                    139 	.globl _T2MOVF1
                                    140 	.globl _T2MOVF0
                                    141 	.globl _T2M1
                                    142 	.globl _T2M0
                                    143 	.globl _T2IRQF
                                    144 	.globl _T2EVTCFG
                                    145 	.globl _T2CTRL
                                    146 	.globl _T1STAT
                                    147 	.globl _T1CCTL2
                                    148 	.globl _T1CCTL1
                                    149 	.globl _T1CCTL0
                                    150 	.globl _T1CTL
                                    151 	.globl _T1CNTH
                                    152 	.globl _T1CNTL
                                    153 	.globl _T1CC2H
                                    154 	.globl _T1CC2L
                                    155 	.globl _T1CC1H
                                    156 	.globl _T1CC1L
                                    157 	.globl _T1CC0H
                                    158 	.globl _T1CC0L
                                    159 	.globl _CLKCONSTA
                                    160 	.globl _CLKCONCMD
                                    161 	.globl _SLEEPSTA
                                    162 	.globl _SLEEPCMD
                                    163 	.globl _STLOAD
                                    164 	.globl _ST2
                                    165 	.globl _ST1
                                    166 	.globl _ST0
                                    167 	.globl _RFERRF
                                    168 	.globl _RFIRQF0
                                    169 	.globl _RFST
                                    170 	.globl _RFD
                                    171 	.globl _RFIRQF1
                                    172 	.globl _PSBANK
                                    173 	.globl _FMAP
                                    174 	.globl _MEMCTR
                                    175 	.globl __XPAGE
                                    176 	.globl _MPAGE
                                    177 	.globl _PMUX
                                    178 	.globl _P2DIR
                                    179 	.globl _P1DIR
                                    180 	.globl _P0DIR
                                    181 	.globl _P2INP
                                    182 	.globl _P1INP
                                    183 	.globl _P2SEL
                                    184 	.globl _P1SEL
                                    185 	.globl _P0SEL
                                    186 	.globl _APCFG
                                    187 	.globl _PERCFG
                                    188 	.globl _P0INP
                                    189 	.globl _P2IEN
                                    190 	.globl _P1IEN
                                    191 	.globl _P0IEN
                                    192 	.globl _PICTL
                                    193 	.globl _P2IFG
                                    194 	.globl _P1IFG
                                    195 	.globl _P0IFG
                                    196 	.globl _DMAREQ
                                    197 	.globl _DMAARM
                                    198 	.globl _DMA0CFGH
                                    199 	.globl _DMA0CFGL
                                    200 	.globl _DMA1CFGH
                                    201 	.globl _DMA1CFGL
                                    202 	.globl _DMAIRQ
                                    203 	.globl _ENCCS
                                    204 	.globl _ENCDO
                                    205 	.globl _ENCDI
                                    206 	.globl _RNDH
                                    207 	.globl _RNDL
                                    208 	.globl _ADCH
                                    209 	.globl _ADCL
                                    210 	.globl _ADCCON3
                                    211 	.globl _ADCCON2
                                    212 	.globl _ADCCON1
                                    213 	.globl _B
                                    214 	.globl _IRCON2
                                    215 	.globl _ACC
                                    216 	.globl _PSW
                                    217 	.globl _IRCON
                                    218 	.globl _IP1
                                    219 	.globl _IEN1
                                    220 	.globl _IP0
                                    221 	.globl _IEN0
                                    222 	.globl _P2
                                    223 	.globl _S1CON
                                    224 	.globl _IEN2
                                    225 	.globl _S0CON
                                    226 	.globl _DPS
                                    227 	.globl _P1
                                    228 	.globl _TCON
                                    229 	.globl _PCON
                                    230 	.globl _DPH1
                                    231 	.globl _DPL1
                                    232 	.globl _DPH0
                                    233 	.globl _DPL0
                                    234 	.globl _SP
                                    235 	.globl _P0
                                    236 	.globl _sensors_process
                                    237 	.globl _sensors_event
                                    238 	.globl _X_IEEE_ADDR
                                    239 	.globl _X_INFOPAGE
                                    240 	.globl _X_P2DIR
                                    241 	.globl _X_P1DIR
                                    242 	.globl _X_P0DIR
                                    243 	.globl _X_U1GCR
                                    244 	.globl _X_U1UCR
                                    245 	.globl _X_U1BAUD
                                    246 	.globl _X_U1DBUF
                                    247 	.globl _X_U1CSR
                                    248 	.globl _X_P2INP
                                    249 	.globl _X_P1INP
                                    250 	.globl _X_P2SEL
                                    251 	.globl _X_P1SEL
                                    252 	.globl _X_P0SEL
                                    253 	.globl _X_APCFG
                                    254 	.globl _X_PERCFG
                                    255 	.globl _X_T4CC1
                                    256 	.globl _X_T4CCTL1
                                    257 	.globl _X_T4CC0
                                    258 	.globl _X_T4CCTL0
                                    259 	.globl _X_T4CTL
                                    260 	.globl _X_T4CNT
                                    261 	.globl _X_RFIRQF0
                                    262 	.globl _X_T1CCTL2
                                    263 	.globl _X_T1CCTL1
                                    264 	.globl _X_T1CCTL0
                                    265 	.globl _X_T1CTL
                                    266 	.globl _X_T1CNTH
                                    267 	.globl _X_T1CNTL
                                    268 	.globl _X_RFST
                                    269 	.globl _X_T1CC2H
                                    270 	.globl _X_T1CC2L
                                    271 	.globl _X_T1CC1H
                                    272 	.globl _X_T1CC1L
                                    273 	.globl _X_T1CC0H
                                    274 	.globl _X_T1CC0L
                                    275 	.globl _X_RFD
                                    276 	.globl _X_TIMIF
                                    277 	.globl _X_DMAREQ
                                    278 	.globl _X_DMAARM
                                    279 	.globl _X_DMA0CFGH
                                    280 	.globl _X_DMA0CFGL
                                    281 	.globl _X_DMA1CFGH
                                    282 	.globl _X_DMA1CFGL
                                    283 	.globl _X_DMAIRQ
                                    284 	.globl _X_T3CC1
                                    285 	.globl _X_T3CCTL1
                                    286 	.globl _X_T3CC0
                                    287 	.globl _X_T3CCTL0
                                    288 	.globl _X_T3CTL
                                    289 	.globl _X_T3CNT
                                    290 	.globl _X_WDCTL
                                    291 	.globl _X_MEMCTR
                                    292 	.globl _X_CLKCONCMD
                                    293 	.globl _X_U0GCR
                                    294 	.globl _X_U0UCR
                                    295 	.globl _X_T2MSEL
                                    296 	.globl _X_U0BAUD
                                    297 	.globl _X_U0DBUF
                                    298 	.globl _X_RFERRF
                                    299 	.globl _X_SLEEPCMD
                                    300 	.globl _X_RNDH
                                    301 	.globl _X_RNDL
                                    302 	.globl _X_ADCH
                                    303 	.globl _X_ADCL
                                    304 	.globl _X_ADCCON3
                                    305 	.globl _X_ADCCON2
                                    306 	.globl _X_ADCCON1
                                    307 	.globl _X_ENCCS
                                    308 	.globl _X_ENCDO
                                    309 	.globl _X_ENCDI
                                    310 	.globl _X_T1STAT
                                    311 	.globl _X_PMUX
                                    312 	.globl _X_STLOAD
                                    313 	.globl _X_P2IEN
                                    314 	.globl _X_P0IEN
                                    315 	.globl _X_T2IRQM
                                    316 	.globl _X_T2MOVF2
                                    317 	.globl _X_T2MOVF1
                                    318 	.globl _X_T2MOVF0
                                    319 	.globl _X_T2M1
                                    320 	.globl _X_T2M0
                                    321 	.globl _X_T2IRQF
                                    322 	.globl _X_P2
                                    323 	.globl _X_PSBANK
                                    324 	.globl _X_FMAP
                                    325 	.globl _X_CLKCONSTA
                                    326 	.globl _X_SLEEPSTA
                                    327 	.globl _X_T2EVTCFG
                                    328 	.globl _X_ST2
                                    329 	.globl _X_ST1
                                    330 	.globl _X_ST0
                                    331 	.globl _X_T2CTRL
                                    332 	.globl _X__XPAGE
                                    333 	.globl _X_MPAGE
                                    334 	.globl _X_RFIRQF1
                                    335 	.globl _X_P1
                                    336 	.globl _X_P0INP
                                    337 	.globl _X_P1IEN
                                    338 	.globl _X_PICTL
                                    339 	.globl _X_P2IFG
                                    340 	.globl _X_P1IFG
                                    341 	.globl _X_P0IFG
                                    342 	.globl _X_U0CSR
                                    343 	.globl _X_P0
                                    344 	.globl _USBF5
                                    345 	.globl _USBF4
                                    346 	.globl _USBF3
                                    347 	.globl _USBF2
                                    348 	.globl _USBF1
                                    349 	.globl _USBF0
                                    350 	.globl _USBCNTH
                                    351 	.globl _USBCNTL
                                    352 	.globl _USBCNT0
                                    353 	.globl _USBCSOH
                                    354 	.globl _USBCSOL
                                    355 	.globl _USBMAXO
                                    356 	.globl _USBCSIH
                                    357 	.globl _USBCSIL
                                    358 	.globl _USBCS0
                                    359 	.globl _USBMAXI
                                    360 	.globl _USBCTRL
                                    361 	.globl _USBINDEX
                                    362 	.globl _USBFRMH
                                    363 	.globl _USBFRML
                                    364 	.globl _USBCIE
                                    365 	.globl _USBOIE
                                    366 	.globl _USBIIE
                                    367 	.globl _USBCIF
                                    368 	.globl _USBOIF
                                    369 	.globl _USBIIF
                                    370 	.globl _USBPOW
                                    371 	.globl _USBADDR
                                    372 	.globl _CSPT
                                    373 	.globl _CSPZ
                                    374 	.globl _CSPY
                                    375 	.globl _CSPX
                                    376 	.globl _CSPSTAT
                                    377 	.globl _CSPCTRL
                                    378 	.globl _CSPPROG23
                                    379 	.globl _CSPPROG22
                                    380 	.globl _CSPPROG21
                                    381 	.globl _CSPPROG20
                                    382 	.globl _CSPPROG19
                                    383 	.globl _CSPPROG18
                                    384 	.globl _CSPPROG17
                                    385 	.globl _CSPPROG16
                                    386 	.globl _CSPPROG15
                                    387 	.globl _CSPPROG14
                                    388 	.globl _CSPPROG13
                                    389 	.globl _CSPPROG12
                                    390 	.globl _CSPPROG11
                                    391 	.globl _CSPPROG10
                                    392 	.globl _CSPPROG9
                                    393 	.globl _CSPPROG8
                                    394 	.globl _CSPPROG7
                                    395 	.globl _CSPPROG6
                                    396 	.globl _CSPPROG5
                                    397 	.globl _CSPPROG4
                                    398 	.globl _CSPPROG3
                                    399 	.globl _CSPPROG2
                                    400 	.globl _CSPPROG1
                                    401 	.globl _CSPPROG0
                                    402 	.globl _RFC_OBS_CTRL2
                                    403 	.globl _RFC_OBS_CTRL1
                                    404 	.globl _RFC_OBS_CTRL0
                                    405 	.globl _TXFILTCFG
                                    406 	.globl _PTEST1
                                    407 	.globl _PTEST0
                                    408 	.globl _ATEST
                                    409 	.globl _DACTEST2
                                    410 	.globl _DACTEST1
                                    411 	.globl _DACTEST0
                                    412 	.globl _MDMTEST1
                                    413 	.globl _MDMTEST0
                                    414 	.globl _ADCTEST2
                                    415 	.globl _ADCTEST1
                                    416 	.globl _ADCTEST0
                                    417 	.globl _AGCCTRL3
                                    418 	.globl _AGCCTRL2
                                    419 	.globl _AGCCTRL1
                                    420 	.globl _AGCCTRL0
                                    421 	.globl _FSCAL3
                                    422 	.globl _FSCAL2
                                    423 	.globl _FSCAL1
                                    424 	.globl _FSCAL0
                                    425 	.globl _FSCTRL
                                    426 	.globl _RXCTRL
                                    427 	.globl _FREQEST
                                    428 	.globl _MDMCTRL1
                                    429 	.globl _MDMCTRL0
                                    430 	.globl _RFRND
                                    431 	.globl _RFERRM
                                    432 	.globl _RFIRQM1
                                    433 	.globl _RFIRQM0
                                    434 	.globl _TXLAST_PTR
                                    435 	.globl _TXFIRST_PTR
                                    436 	.globl _RXP1_PTR
                                    437 	.globl _RXLAST_PTR
                                    438 	.globl _RXFIRST_PTR
                                    439 	.globl _TXFIFOCNT
                                    440 	.globl _RXFIFOCNT
                                    441 	.globl _RXFIRST
                                    442 	.globl _RSSISTAT
                                    443 	.globl _RSSI
                                    444 	.globl _CCACTRL1
                                    445 	.globl _CCACTRL0
                                    446 	.globl _FSMCTRL
                                    447 	.globl _FIFOPCTRL
                                    448 	.globl _FSMSTAT1
                                    449 	.globl _FSMSTAT0
                                    450 	.globl _TXCTRL
                                    451 	.globl _TXPOWER
                                    452 	.globl _FREQCTRL
                                    453 	.globl _FREQTUNE
                                    454 	.globl _RXMASKCLR
                                    455 	.globl _RXMASKSET
                                    456 	.globl _RXENABLE
                                    457 	.globl _FRMCTRL1
                                    458 	.globl _FRMCTRL0
                                    459 	.globl _SRCEXTEN2
                                    460 	.globl _SRCEXTEN1
                                    461 	.globl _SRCEXTEN0
                                    462 	.globl _SRCSHORTEN2
                                    463 	.globl _SRCSHORTEN1
                                    464 	.globl _SRCSHORTEN0
                                    465 	.globl _SRCMATCH
                                    466 	.globl _FRMFILT1
                                    467 	.globl _FRMFILT0
                                    468 	.globl _SHORT_ADDR1
                                    469 	.globl _SHORT_ADDR0
                                    470 	.globl _PAN_ID1
                                    471 	.globl _PAN_ID0
                                    472 	.globl _EXT_ADDR7
                                    473 	.globl _EXT_ADDR6
                                    474 	.globl _EXT_ADDR5
                                    475 	.globl _EXT_ADDR4
                                    476 	.globl _EXT_ADDR3
                                    477 	.globl _EXT_ADDR2
                                    478 	.globl _EXT_ADDR1
                                    479 	.globl _EXT_ADDR0
                                    480 	.globl _SRCSHORTPENDEN2
                                    481 	.globl _SRCSHORTPENDEN1
                                    482 	.globl _SRCSHORTPENDEN0
                                    483 	.globl _SRCEXTPENDEN2
                                    484 	.globl _SRCEXTPENDEN1
                                    485 	.globl _SRCEXTPENDEN0
                                    486 	.globl _SRCRESINDEX
                                    487 	.globl _SRCRESMASK2
                                    488 	.globl _SRCRESMASK1
                                    489 	.globl _SRCRESMASK0
                                    490 	.globl _SRC_ADDR_TABLE
                                    491 	.globl _TXFIFO
                                    492 	.globl _RXFIFO
                                    493 	.globl _RFCORE_RAM
                                    494 	.globl _CMPCTL
                                    495 	.globl _OPAMPS
                                    496 	.globl _OPAMPC
                                    497 	.globl _STCV2
                                    498 	.globl _STCV1
                                    499 	.globl _STCV0
                                    500 	.globl _STCS
                                    501 	.globl _STCC
                                    502 	.globl _T1CC4H
                                    503 	.globl _T1CC4L
                                    504 	.globl _T1CC3H
                                    505 	.globl _T1CC3L
                                    506 	.globl _XX_T1CC2H
                                    507 	.globl _XX_T1CC2L
                                    508 	.globl _XX_T1CC1H
                                    509 	.globl _XX_T1CC1L
                                    510 	.globl _XX_T1CC0H
                                    511 	.globl _XX_T1CC0L
                                    512 	.globl _T1CCTL4
                                    513 	.globl _T1CCTL3
                                    514 	.globl _XX_T1CCTL2
                                    515 	.globl _XX_T1CCTL1
                                    516 	.globl _XX_T1CCTL0
                                    517 	.globl _CLD
                                    518 	.globl _IRCTL
                                    519 	.globl _CHIPINFO1
                                    520 	.globl _CHIPINFO0
                                    521 	.globl _FWDATA
                                    522 	.globl _FADDRH
                                    523 	.globl _FADDRL
                                    524 	.globl _FCTL
                                    525 	.globl _IVCTRL
                                    526 	.globl _BATTMON
                                    527 	.globl _SRCRC
                                    528 	.globl _DBGDATA
                                    529 	.globl _TESTREG0
                                    530 	.globl _CHIPID
                                    531 	.globl _CHVER
                                    532 	.globl _OBSSEL5
                                    533 	.globl _OBSSEL4
                                    534 	.globl _OBSSEL3
                                    535 	.globl _OBSSEL2
                                    536 	.globl _OBSSEL1
                                    537 	.globl _OBSSEL0
                                    538 	.globl _I2CIO
                                    539 	.globl _I2CWC
                                    540 	.globl _I2CADDR
                                    541 	.globl _I2CDATA
                                    542 	.globl _I2CSTAT
                                    543 	.globl _I2CCFG
                                    544 	.globl _OPAMPMC
                                    545 	.globl _MONMUX
                                    546 	.globl _sensors_first
                                    547 	.globl _sensors_next
                                    548 	.globl _sensors_changed
                                    549 	.globl _sensors_find
                                    550 ;--------------------------------------------------------
                                    551 ; special function registers
                                    552 ;--------------------------------------------------------
                                    553 	.area RSEG    (ABS,DATA)
      000000                        554 	.org 0x0000
                           000080   555 _P0	=	0x0080
                           000081   556 _SP	=	0x0081
                           000082   557 _DPL0	=	0x0082
                           000083   558 _DPH0	=	0x0083
                           000084   559 _DPL1	=	0x0084
                           000085   560 _DPH1	=	0x0085
                           000087   561 _PCON	=	0x0087
                           000088   562 _TCON	=	0x0088
                           000090   563 _P1	=	0x0090
                           000092   564 _DPS	=	0x0092
                           000098   565 _S0CON	=	0x0098
                           00009A   566 _IEN2	=	0x009a
                           00009B   567 _S1CON	=	0x009b
                           0000A0   568 _P2	=	0x00a0
                           0000A8   569 _IEN0	=	0x00a8
                           0000A9   570 _IP0	=	0x00a9
                           0000B8   571 _IEN1	=	0x00b8
                           0000B9   572 _IP1	=	0x00b9
                           0000C0   573 _IRCON	=	0x00c0
                           0000D0   574 _PSW	=	0x00d0
                           0000E0   575 _ACC	=	0x00e0
                           0000E8   576 _IRCON2	=	0x00e8
                           0000F0   577 _B	=	0x00f0
                           0000B4   578 _ADCCON1	=	0x00b4
                           0000B5   579 _ADCCON2	=	0x00b5
                           0000B6   580 _ADCCON3	=	0x00b6
                           0000BA   581 _ADCL	=	0x00ba
                           0000BB   582 _ADCH	=	0x00bb
                           0000BC   583 _RNDL	=	0x00bc
                           0000BD   584 _RNDH	=	0x00bd
                           0000B1   585 _ENCDI	=	0x00b1
                           0000B2   586 _ENCDO	=	0x00b2
                           0000B3   587 _ENCCS	=	0x00b3
                           0000D1   588 _DMAIRQ	=	0x00d1
                           0000D2   589 _DMA1CFGL	=	0x00d2
                           0000D3   590 _DMA1CFGH	=	0x00d3
                           0000D4   591 _DMA0CFGL	=	0x00d4
                           0000D5   592 _DMA0CFGH	=	0x00d5
                           0000D6   593 _DMAARM	=	0x00d6
                           0000D7   594 _DMAREQ	=	0x00d7
                           000089   595 _P0IFG	=	0x0089
                           00008A   596 _P1IFG	=	0x008a
                           00008B   597 _P2IFG	=	0x008b
                           00008C   598 _PICTL	=	0x008c
                           0000AB   599 _P0IEN	=	0x00ab
                           00008D   600 _P1IEN	=	0x008d
                           0000AC   601 _P2IEN	=	0x00ac
                           00008F   602 _P0INP	=	0x008f
                           0000F1   603 _PERCFG	=	0x00f1
                           0000F2   604 _APCFG	=	0x00f2
                           0000F3   605 _P0SEL	=	0x00f3
                           0000F4   606 _P1SEL	=	0x00f4
                           0000F5   607 _P2SEL	=	0x00f5
                           0000F6   608 _P1INP	=	0x00f6
                           0000F7   609 _P2INP	=	0x00f7
                           0000FD   610 _P0DIR	=	0x00fd
                           0000FE   611 _P1DIR	=	0x00fe
                           0000FF   612 _P2DIR	=	0x00ff
                           0000AE   613 _PMUX	=	0x00ae
                           000093   614 _MPAGE	=	0x0093
                           000093   615 __XPAGE	=	0x0093
                           0000C7   616 _MEMCTR	=	0x00c7
                           00009F   617 _FMAP	=	0x009f
                           00009F   618 _PSBANK	=	0x009f
                           000091   619 _RFIRQF1	=	0x0091
                           0000D9   620 _RFD	=	0x00d9
                           0000E1   621 _RFST	=	0x00e1
                           0000E9   622 _RFIRQF0	=	0x00e9
                           0000BF   623 _RFERRF	=	0x00bf
                           000095   624 _ST0	=	0x0095
                           000096   625 _ST1	=	0x0096
                           000097   626 _ST2	=	0x0097
                           0000AD   627 _STLOAD	=	0x00ad
                           0000BE   628 _SLEEPCMD	=	0x00be
                           00009D   629 _SLEEPSTA	=	0x009d
                           0000C6   630 _CLKCONCMD	=	0x00c6
                           00009E   631 _CLKCONSTA	=	0x009e
                           0000DA   632 _T1CC0L	=	0x00da
                           0000DB   633 _T1CC0H	=	0x00db
                           0000DC   634 _T1CC1L	=	0x00dc
                           0000DD   635 _T1CC1H	=	0x00dd
                           0000DE   636 _T1CC2L	=	0x00de
                           0000DF   637 _T1CC2H	=	0x00df
                           0000E2   638 _T1CNTL	=	0x00e2
                           0000E3   639 _T1CNTH	=	0x00e3
                           0000E4   640 _T1CTL	=	0x00e4
                           0000E5   641 _T1CCTL0	=	0x00e5
                           0000E6   642 _T1CCTL1	=	0x00e6
                           0000E7   643 _T1CCTL2	=	0x00e7
                           0000AF   644 _T1STAT	=	0x00af
                           000094   645 _T2CTRL	=	0x0094
                           00009C   646 _T2EVTCFG	=	0x009c
                           0000A1   647 _T2IRQF	=	0x00a1
                           0000A2   648 _T2M0	=	0x00a2
                           0000A3   649 _T2M1	=	0x00a3
                           0000A4   650 _T2MOVF0	=	0x00a4
                           0000A5   651 _T2MOVF1	=	0x00a5
                           0000A6   652 _T2MOVF2	=	0x00a6
                           0000A7   653 _T2IRQM	=	0x00a7
                           0000C3   654 _T2MSEL	=	0x00c3
                           0000CA   655 _T3CNT	=	0x00ca
                           0000CB   656 _T3CTL	=	0x00cb
                           0000CC   657 _T3CCTL0	=	0x00cc
                           0000CD   658 _T3CC0	=	0x00cd
                           0000CE   659 _T3CCTL1	=	0x00ce
                           0000CF   660 _T3CC1	=	0x00cf
                           0000EA   661 _T4CNT	=	0x00ea
                           0000EB   662 _T4CTL	=	0x00eb
                           0000EC   663 _T4CCTL0	=	0x00ec
                           0000ED   664 _T4CC0	=	0x00ed
                           0000EE   665 _T4CCTL1	=	0x00ee
                           0000EF   666 _T4CC1	=	0x00ef
                           0000D8   667 _TIMIF	=	0x00d8
                           000086   668 _U0CSR	=	0x0086
                           0000C1   669 _U0DBUF	=	0x00c1
                           0000C2   670 _U0BAUD	=	0x00c2
                           0000C4   671 _U0UCR	=	0x00c4
                           0000C5   672 _U0GCR	=	0x00c5
                           0000F8   673 _U1CSR	=	0x00f8
                           0000F9   674 _U1DBUF	=	0x00f9
                           0000FA   675 _U1BAUD	=	0x00fa
                           0000FB   676 _U1UCR	=	0x00fb
                           0000FC   677 _U1GCR	=	0x00fc
                           0000C9   678 _WDCTL	=	0x00c9
                                    679 ;--------------------------------------------------------
                                    680 ; special function bits
                                    681 ;--------------------------------------------------------
                                    682 	.area RSEG    (ABS,DATA)
      000000                        683 	.org 0x0000
                           000087   684 _P0_7	=	0x0087
                           000086   685 _P0_6	=	0x0086
                           000085   686 _P0_5	=	0x0085
                           000084   687 _P0_4	=	0x0084
                           000083   688 _P0_3	=	0x0083
                           000082   689 _P0_2	=	0x0082
                           000081   690 _P0_1	=	0x0081
                           000080   691 _P0_0	=	0x0080
                           00008F   692 _URX1IF	=	0x008f
                           00008D   693 _ADCIF	=	0x008d
                           00008B   694 _URX0IF	=	0x008b
                           00008A   695 _IT1	=	0x008a
                           000089   696 _RFERRIF	=	0x0089
                           000088   697 _IT0	=	0x0088
                           000097   698 _P1_7	=	0x0097
                           000096   699 _P1_6	=	0x0096
                           000095   700 _P1_5	=	0x0095
                           000094   701 _P1_4	=	0x0094
                           000093   702 _P1_3	=	0x0093
                           000092   703 _P1_2	=	0x0092
                           000091   704 _P1_1	=	0x0091
                           000090   705 _P1_0	=	0x0090
                           000099   706 _ENCIF_1	=	0x0099
                           000098   707 _ENCIF_0	=	0x0098
                           0000A7   708 _P2_7	=	0x00a7
                           0000A6   709 _P2_6	=	0x00a6
                           0000A5   710 _P2_5	=	0x00a5
                           0000A4   711 _P2_4	=	0x00a4
                           0000A3   712 _P2_3	=	0x00a3
                           0000A2   713 _P2_2	=	0x00a2
                           0000A1   714 _P2_1	=	0x00a1
                           0000A0   715 _P2_0	=	0x00a0
                           0000AF   716 _EA	=	0x00af
                           0000AD   717 _STIE	=	0x00ad
                           0000AC   718 _ENCIE	=	0x00ac
                           0000AB   719 _URX1IE	=	0x00ab
                           0000AA   720 _URX0IE	=	0x00aa
                           0000A9   721 _ADCIE	=	0x00a9
                           0000A8   722 _RFERRIE	=	0x00a8
                           0000BD   723 _P0IE	=	0x00bd
                           0000BC   724 _T4IE	=	0x00bc
                           0000BB   725 _T3IE	=	0x00bb
                           0000BA   726 _T2IE	=	0x00ba
                           0000B9   727 _T1IE	=	0x00b9
                           0000B8   728 _DMAIE	=	0x00b8
                           0000C7   729 _STIF	=	0x00c7
                           0000C5   730 _P0IF	=	0x00c5
                           0000C4   731 _T4IF	=	0x00c4
                           0000C3   732 _T3IF	=	0x00c3
                           0000C2   733 _T2IF	=	0x00c2
                           0000C1   734 _T1IF	=	0x00c1
                           0000C0   735 _DMAIF	=	0x00c0
                           0000D7   736 _CY	=	0x00d7
                           0000D6   737 _AC	=	0x00d6
                           0000D5   738 _F0	=	0x00d5
                           0000D4   739 _RS1	=	0x00d4
                           0000D3   740 _RS0	=	0x00d3
                           0000D2   741 _OV	=	0x00d2
                           0000D1   742 _F1	=	0x00d1
                           0000D0   743 _P	=	0x00d0
                           0000E7   744 _ACC_7	=	0x00e7
                           0000E6   745 _ACC_6	=	0x00e6
                           0000E5   746 _ACC_5	=	0x00e5
                           0000E4   747 _ACC_4	=	0x00e4
                           0000E3   748 _ACC_3	=	0x00e3
                           0000E2   749 _ACC_2	=	0x00e2
                           0000E1   750 _ACC_1	=	0x00e1
                           0000E0   751 _ACC_0	=	0x00e0
                           0000EC   752 _WDTIF	=	0x00ec
                           0000EB   753 _P1IF	=	0x00eb
                           0000EA   754 _UTX1IF	=	0x00ea
                           0000E9   755 _UTX0IF	=	0x00e9
                           0000E8   756 _P2IF	=	0x00e8
                           0000F7   757 _B_7	=	0x00f7
                           0000F6   758 _B_6	=	0x00f6
                           0000F5   759 _B_5	=	0x00f5
                           0000F4   760 _B_4	=	0x00f4
                           0000F3   761 _B_3	=	0x00f3
                           0000F2   762 _B_2	=	0x00f2
                           0000F1   763 _B_1	=	0x00f1
                           0000F0   764 _B_0	=	0x00f0
                           0000DE   765 _OVFIM	=	0x00de
                           0000DD   766 _T4CH1IF	=	0x00dd
                           0000DC   767 _T4CH0IF	=	0x00dc
                           0000DB   768 _T4OVFIF	=	0x00db
                           0000DA   769 _T3CH1IF	=	0x00da
                           0000D9   770 _T3CH0IF	=	0x00d9
                           0000D8   771 _T3OVFIF	=	0x00d8
                           0000FF   772 _MODE	=	0x00ff
                           0000FE   773 _RE	=	0x00fe
                           0000FD   774 _SLAVE	=	0x00fd
                           0000FC   775 _FE	=	0x00fc
                           0000FB   776 _ERR	=	0x00fb
                           0000FA   777 _RX_BYTE	=	0x00fa
                           0000F9   778 _TX_BYTE	=	0x00f9
                           0000F8   779 _ACTIVE	=	0x00f8
                                    780 ;--------------------------------------------------------
                                    781 ; overlayable register banks
                                    782 ;--------------------------------------------------------
                                    783 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        784 	.ds 8
                                    785 ;--------------------------------------------------------
                                    786 ; internal ram data
                                    787 ;--------------------------------------------------------
                                    788 	.area DSEG    (DATA)
                                    789 ;--------------------------------------------------------
                                    790 ; overlayable items in internal ram 
                                    791 ;--------------------------------------------------------
                                    792 ;--------------------------------------------------------
                                    793 ; indirectly addressable internal ram data
                                    794 ;--------------------------------------------------------
                                    795 	.area ISEG    (DATA)
                                    796 ;--------------------------------------------------------
                                    797 ; absolute internal ram data
                                    798 ;--------------------------------------------------------
                                    799 	.area IABS    (ABS,DATA)
                                    800 	.area IABS    (ABS,DATA)
                                    801 ;--------------------------------------------------------
                                    802 ; bit data
                                    803 ;--------------------------------------------------------
                                    804 	.area BSEG    (BIT)
                                    805 ;--------------------------------------------------------
                                    806 ; paged external ram data
                                    807 ;--------------------------------------------------------
                                    808 	.area PSEG    (PAG,XDATA)
                                    809 ;--------------------------------------------------------
                                    810 ; external ram data
                                    811 ;--------------------------------------------------------
                                    812 	.area XSEG    (XDATA)
                           0061A6   813 _MONMUX	=	0x61a6
                           0061A6   814 _OPAMPMC	=	0x61a6
                           006230   815 _I2CCFG	=	0x6230
                           006231   816 _I2CSTAT	=	0x6231
                           006232   817 _I2CDATA	=	0x6232
                           006233   818 _I2CADDR	=	0x6233
                           006234   819 _I2CWC	=	0x6234
                           006235   820 _I2CIO	=	0x6235
                           006243   821 _OBSSEL0	=	0x6243
                           006244   822 _OBSSEL1	=	0x6244
                           006245   823 _OBSSEL2	=	0x6245
                           006246   824 _OBSSEL3	=	0x6246
                           006247   825 _OBSSEL4	=	0x6247
                           006248   826 _OBSSEL5	=	0x6248
                           006249   827 _CHVER	=	0x6249
                           00624A   828 _CHIPID	=	0x624a
                           00624B   829 _TESTREG0	=	0x624b
                           006260   830 _DBGDATA	=	0x6260
                           006262   831 _SRCRC	=	0x6262
                           006264   832 _BATTMON	=	0x6264
                           006265   833 _IVCTRL	=	0x6265
                           006270   834 _FCTL	=	0x6270
                           006271   835 _FADDRL	=	0x6271
                           006272   836 _FADDRH	=	0x6272
                           006273   837 _FWDATA	=	0x6273
                           006276   838 _CHIPINFO0	=	0x6276
                           006277   839 _CHIPINFO1	=	0x6277
                           006281   840 _IRCTL	=	0x6281
                           006290   841 _CLD	=	0x6290
                           0062A0   842 _XX_T1CCTL0	=	0x62a0
                           0062A1   843 _XX_T1CCTL1	=	0x62a1
                           0062A2   844 _XX_T1CCTL2	=	0x62a2
                           0062A3   845 _T1CCTL3	=	0x62a3
                           0062A4   846 _T1CCTL4	=	0x62a4
                           0062A6   847 _XX_T1CC0L	=	0x62a6
                           0062A7   848 _XX_T1CC0H	=	0x62a7
                           0062A8   849 _XX_T1CC1L	=	0x62a8
                           0062A9   850 _XX_T1CC1H	=	0x62a9
                           0062AA   851 _XX_T1CC2L	=	0x62aa
                           0062AB   852 _XX_T1CC2H	=	0x62ab
                           0062AC   853 _T1CC3L	=	0x62ac
                           0062AD   854 _T1CC3H	=	0x62ad
                           0062AE   855 _T1CC4L	=	0x62ae
                           0062AF   856 _T1CC4H	=	0x62af
                           0062B0   857 _STCC	=	0x62b0
                           0062B1   858 _STCS	=	0x62b1
                           0062B2   859 _STCV0	=	0x62b2
                           0062B3   860 _STCV1	=	0x62b3
                           0062B4   861 _STCV2	=	0x62b4
                           0062C0   862 _OPAMPC	=	0x62c0
                           0062C1   863 _OPAMPS	=	0x62c1
                           0062D0   864 _CMPCTL	=	0x62d0
                           006000   865 _RFCORE_RAM	=	0x6000
                           006000   866 _RXFIFO	=	0x6000
                           006080   867 _TXFIFO	=	0x6080
                           006100   868 _SRC_ADDR_TABLE	=	0x6100
                           006160   869 _SRCRESMASK0	=	0x6160
                           006161   870 _SRCRESMASK1	=	0x6161
                           006162   871 _SRCRESMASK2	=	0x6162
                           006163   872 _SRCRESINDEX	=	0x6163
                           006164   873 _SRCEXTPENDEN0	=	0x6164
                           006165   874 _SRCEXTPENDEN1	=	0x6165
                           006166   875 _SRCEXTPENDEN2	=	0x6166
                           006167   876 _SRCSHORTPENDEN0	=	0x6167
                           006168   877 _SRCSHORTPENDEN1	=	0x6168
                           006169   878 _SRCSHORTPENDEN2	=	0x6169
                           00616A   879 _EXT_ADDR0	=	0x616a
                           00616B   880 _EXT_ADDR1	=	0x616b
                           00616C   881 _EXT_ADDR2	=	0x616c
                           00616D   882 _EXT_ADDR3	=	0x616d
                           00616E   883 _EXT_ADDR4	=	0x616e
                           00616F   884 _EXT_ADDR5	=	0x616f
                           006170   885 _EXT_ADDR6	=	0x6170
                           006171   886 _EXT_ADDR7	=	0x6171
                           006172   887 _PAN_ID0	=	0x6172
                           006173   888 _PAN_ID1	=	0x6173
                           006174   889 _SHORT_ADDR0	=	0x6174
                           006175   890 _SHORT_ADDR1	=	0x6175
                           006180   891 _FRMFILT0	=	0x6180
                           006181   892 _FRMFILT1	=	0x6181
                           006182   893 _SRCMATCH	=	0x6182
                           006183   894 _SRCSHORTEN0	=	0x6183
                           006184   895 _SRCSHORTEN1	=	0x6184
                           006185   896 _SRCSHORTEN2	=	0x6185
                           006186   897 _SRCEXTEN0	=	0x6186
                           006187   898 _SRCEXTEN1	=	0x6187
                           006188   899 _SRCEXTEN2	=	0x6188
                           006189   900 _FRMCTRL0	=	0x6189
                           00618A   901 _FRMCTRL1	=	0x618a
                           00618B   902 _RXENABLE	=	0x618b
                           00618C   903 _RXMASKSET	=	0x618c
                           00618D   904 _RXMASKCLR	=	0x618d
                           00618E   905 _FREQTUNE	=	0x618e
                           00618F   906 _FREQCTRL	=	0x618f
                           006190   907 _TXPOWER	=	0x6190
                           006191   908 _TXCTRL	=	0x6191
                           006192   909 _FSMSTAT0	=	0x6192
                           006193   910 _FSMSTAT1	=	0x6193
                           006194   911 _FIFOPCTRL	=	0x6194
                           006195   912 _FSMCTRL	=	0x6195
                           006196   913 _CCACTRL0	=	0x6196
                           006197   914 _CCACTRL1	=	0x6197
                           006198   915 _RSSI	=	0x6198
                           006199   916 _RSSISTAT	=	0x6199
                           00619A   917 _RXFIRST	=	0x619a
                           00619B   918 _RXFIFOCNT	=	0x619b
                           00619C   919 _TXFIFOCNT	=	0x619c
                           00619D   920 _RXFIRST_PTR	=	0x619d
                           00619E   921 _RXLAST_PTR	=	0x619e
                           00619F   922 _RXP1_PTR	=	0x619f
                           0061A1   923 _TXFIRST_PTR	=	0x61a1
                           0061A2   924 _TXLAST_PTR	=	0x61a2
                           0061A3   925 _RFIRQM0	=	0x61a3
                           0061A4   926 _RFIRQM1	=	0x61a4
                           0061A5   927 _RFERRM	=	0x61a5
                           0061A7   928 _RFRND	=	0x61a7
                           0061A8   929 _MDMCTRL0	=	0x61a8
                           0061A9   930 _MDMCTRL1	=	0x61a9
                           0061AA   931 _FREQEST	=	0x61aa
                           0061AB   932 _RXCTRL	=	0x61ab
                           0061AC   933 _FSCTRL	=	0x61ac
                           0061AD   934 _FSCAL0	=	0x61ad
                           0061AE   935 _FSCAL1	=	0x61ae
                           0061AF   936 _FSCAL2	=	0x61af
                           0061B0   937 _FSCAL3	=	0x61b0
                           0061B1   938 _AGCCTRL0	=	0x61b1
                           0061B2   939 _AGCCTRL1	=	0x61b2
                           0061B3   940 _AGCCTRL2	=	0x61b3
                           0061B4   941 _AGCCTRL3	=	0x61b4
                           0061B5   942 _ADCTEST0	=	0x61b5
                           0061B6   943 _ADCTEST1	=	0x61b6
                           0061B7   944 _ADCTEST2	=	0x61b7
                           0061B8   945 _MDMTEST0	=	0x61b8
                           0061B9   946 _MDMTEST1	=	0x61b9
                           0061BA   947 _DACTEST0	=	0x61ba
                           0061BB   948 _DACTEST1	=	0x61bb
                           0061BC   949 _DACTEST2	=	0x61bc
                           0061BD   950 _ATEST	=	0x61bd
                           0061BE   951 _PTEST0	=	0x61be
                           0061BF   952 _PTEST1	=	0x61bf
                           0061FA   953 _TXFILTCFG	=	0x61fa
                           0061EB   954 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   955 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   956 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   957 _CSPPROG0	=	0x61c0
                           0061C1   958 _CSPPROG1	=	0x61c1
                           0061C2   959 _CSPPROG2	=	0x61c2
                           0061C3   960 _CSPPROG3	=	0x61c3
                           0061C4   961 _CSPPROG4	=	0x61c4
                           0061C5   962 _CSPPROG5	=	0x61c5
                           0061C6   963 _CSPPROG6	=	0x61c6
                           0061C7   964 _CSPPROG7	=	0x61c7
                           0061C8   965 _CSPPROG8	=	0x61c8
                           0061C9   966 _CSPPROG9	=	0x61c9
                           0061CA   967 _CSPPROG10	=	0x61ca
                           0061CB   968 _CSPPROG11	=	0x61cb
                           0061CC   969 _CSPPROG12	=	0x61cc
                           0061CD   970 _CSPPROG13	=	0x61cd
                           0061CE   971 _CSPPROG14	=	0x61ce
                           0061CF   972 _CSPPROG15	=	0x61cf
                           0061D0   973 _CSPPROG16	=	0x61d0
                           0061D1   974 _CSPPROG17	=	0x61d1
                           0061D2   975 _CSPPROG18	=	0x61d2
                           0061D3   976 _CSPPROG19	=	0x61d3
                           0061D4   977 _CSPPROG20	=	0x61d4
                           0061D5   978 _CSPPROG21	=	0x61d5
                           0061D6   979 _CSPPROG22	=	0x61d6
                           0061D7   980 _CSPPROG23	=	0x61d7
                           0061E0   981 _CSPCTRL	=	0x61e0
                           0061E1   982 _CSPSTAT	=	0x61e1
                           0061E2   983 _CSPX	=	0x61e2
                           0061E3   984 _CSPY	=	0x61e3
                           0061E4   985 _CSPZ	=	0x61e4
                           0061E5   986 _CSPT	=	0x61e5
                           006200   987 _USBADDR	=	0x6200
                           006201   988 _USBPOW	=	0x6201
                           006202   989 _USBIIF	=	0x6202
                           006204   990 _USBOIF	=	0x6204
                           006206   991 _USBCIF	=	0x6206
                           006207   992 _USBIIE	=	0x6207
                           006209   993 _USBOIE	=	0x6209
                           00620B   994 _USBCIE	=	0x620b
                           00620C   995 _USBFRML	=	0x620c
                           00620D   996 _USBFRMH	=	0x620d
                           00620E   997 _USBINDEX	=	0x620e
                           00620F   998 _USBCTRL	=	0x620f
                           006210   999 _USBMAXI	=	0x6210
                           006211  1000 _USBCS0	=	0x6211
                           006211  1001 _USBCSIL	=	0x6211
                           006212  1002 _USBCSIH	=	0x6212
                           006213  1003 _USBMAXO	=	0x6213
                           006214  1004 _USBCSOL	=	0x6214
                           006215  1005 _USBCSOH	=	0x6215
                           006216  1006 _USBCNT0	=	0x6216
                           006216  1007 _USBCNTL	=	0x6216
                           006217  1008 _USBCNTH	=	0x6217
                           006220  1009 _USBF0	=	0x6220
                           006222  1010 _USBF1	=	0x6222
                           006224  1011 _USBF2	=	0x6224
                           006226  1012 _USBF3	=	0x6226
                           006228  1013 _USBF4	=	0x6228
                           00622A  1014 _USBF5	=	0x622a
                           007080  1015 _X_P0	=	0x7080
                           007086  1016 _X_U0CSR	=	0x7086
                           007089  1017 _X_P0IFG	=	0x7089
                           00708A  1018 _X_P1IFG	=	0x708a
                           00708B  1019 _X_P2IFG	=	0x708b
                           00708C  1020 _X_PICTL	=	0x708c
                           00708D  1021 _X_P1IEN	=	0x708d
                           00708F  1022 _X_P0INP	=	0x708f
                           007090  1023 _X_P1	=	0x7090
                           007091  1024 _X_RFIRQF1	=	0x7091
                           007093  1025 _X_MPAGE	=	0x7093
                           007093  1026 _X__XPAGE	=	0x7093
                           007094  1027 _X_T2CTRL	=	0x7094
                           007095  1028 _X_ST0	=	0x7095
                           007096  1029 _X_ST1	=	0x7096
                           007097  1030 _X_ST2	=	0x7097
                           00709C  1031 _X_T2EVTCFG	=	0x709c
                           00709D  1032 _X_SLEEPSTA	=	0x709d
                           00709E  1033 _X_CLKCONSTA	=	0x709e
                           00709F  1034 _X_FMAP	=	0x709f
                           00709F  1035 _X_PSBANK	=	0x709f
                           0070A0  1036 _X_P2	=	0x70a0
                           0070A1  1037 _X_T2IRQF	=	0x70a1
                           0070A2  1038 _X_T2M0	=	0x70a2
                           0070A3  1039 _X_T2M1	=	0x70a3
                           0070A4  1040 _X_T2MOVF0	=	0x70a4
                           0070A5  1041 _X_T2MOVF1	=	0x70a5
                           0070A6  1042 _X_T2MOVF2	=	0x70a6
                           0070A7  1043 _X_T2IRQM	=	0x70a7
                           0070AB  1044 _X_P0IEN	=	0x70ab
                           0070AC  1045 _X_P2IEN	=	0x70ac
                           0070AD  1046 _X_STLOAD	=	0x70ad
                           0070AE  1047 _X_PMUX	=	0x70ae
                           0070AF  1048 _X_T1STAT	=	0x70af
                           0070B1  1049 _X_ENCDI	=	0x70b1
                           0070B2  1050 _X_ENCDO	=	0x70b2
                           0070B3  1051 _X_ENCCS	=	0x70b3
                           0070B4  1052 _X_ADCCON1	=	0x70b4
                           0070B5  1053 _X_ADCCON2	=	0x70b5
                           0070B6  1054 _X_ADCCON3	=	0x70b6
                           0070BA  1055 _X_ADCL	=	0x70ba
                           0070BB  1056 _X_ADCH	=	0x70bb
                           0070BC  1057 _X_RNDL	=	0x70bc
                           0070BD  1058 _X_RNDH	=	0x70bd
                           0070BE  1059 _X_SLEEPCMD	=	0x70be
                           0070BF  1060 _X_RFERRF	=	0x70bf
                           0070C1  1061 _X_U0DBUF	=	0x70c1
                           0070C2  1062 _X_U0BAUD	=	0x70c2
                           0070C3  1063 _X_T2MSEL	=	0x70c3
                           0070C4  1064 _X_U0UCR	=	0x70c4
                           0070C5  1065 _X_U0GCR	=	0x70c5
                           0070C6  1066 _X_CLKCONCMD	=	0x70c6
                           0070C7  1067 _X_MEMCTR	=	0x70c7
                           0070C9  1068 _X_WDCTL	=	0x70c9
                           0070CA  1069 _X_T3CNT	=	0x70ca
                           0070CB  1070 _X_T3CTL	=	0x70cb
                           0070CC  1071 _X_T3CCTL0	=	0x70cc
                           0070CD  1072 _X_T3CC0	=	0x70cd
                           0070CE  1073 _X_T3CCTL1	=	0x70ce
                           0070CF  1074 _X_T3CC1	=	0x70cf
                           0070D1  1075 _X_DMAIRQ	=	0x70d1
                           0070D2  1076 _X_DMA1CFGL	=	0x70d2
                           0070D3  1077 _X_DMA1CFGH	=	0x70d3
                           0070D4  1078 _X_DMA0CFGL	=	0x70d4
                           0070D5  1079 _X_DMA0CFGH	=	0x70d5
                           0070D6  1080 _X_DMAARM	=	0x70d6
                           0070D7  1081 _X_DMAREQ	=	0x70d7
                           0070D8  1082 _X_TIMIF	=	0x70d8
                           0070D9  1083 _X_RFD	=	0x70d9
                           0070DA  1084 _X_T1CC0L	=	0x70da
                           0070DB  1085 _X_T1CC0H	=	0x70db
                           0070DC  1086 _X_T1CC1L	=	0x70dc
                           0070DD  1087 _X_T1CC1H	=	0x70dd
                           0070DE  1088 _X_T1CC2L	=	0x70de
                           0070DF  1089 _X_T1CC2H	=	0x70df
                           0070E1  1090 _X_RFST	=	0x70e1
                           0070E2  1091 _X_T1CNTL	=	0x70e2
                           0070E3  1092 _X_T1CNTH	=	0x70e3
                           0070E4  1093 _X_T1CTL	=	0x70e4
                           0070E5  1094 _X_T1CCTL0	=	0x70e5
                           0070E6  1095 _X_T1CCTL1	=	0x70e6
                           0070E7  1096 _X_T1CCTL2	=	0x70e7
                           0070E9  1097 _X_RFIRQF0	=	0x70e9
                           0070EA  1098 _X_T4CNT	=	0x70ea
                           0070EB  1099 _X_T4CTL	=	0x70eb
                           0070EC  1100 _X_T4CCTL0	=	0x70ec
                           0070ED  1101 _X_T4CC0	=	0x70ed
                           0070EE  1102 _X_T4CCTL1	=	0x70ee
                           0070EF  1103 _X_T4CC1	=	0x70ef
                           0070F1  1104 _X_PERCFG	=	0x70f1
                           0070F2  1105 _X_APCFG	=	0x70f2
                           0070F3  1106 _X_P0SEL	=	0x70f3
                           0070F4  1107 _X_P1SEL	=	0x70f4
                           0070F5  1108 _X_P2SEL	=	0x70f5
                           0070F6  1109 _X_P1INP	=	0x70f6
                           0070F7  1110 _X_P2INP	=	0x70f7
                           0070F8  1111 _X_U1CSR	=	0x70f8
                           0070F9  1112 _X_U1DBUF	=	0x70f9
                           0070FA  1113 _X_U1BAUD	=	0x70fa
                           0070FB  1114 _X_U1UCR	=	0x70fb
                           0070FC  1115 _X_U1GCR	=	0x70fc
                           0070FD  1116 _X_P0DIR	=	0x70fd
                           0070FE  1117 _X_P1DIR	=	0x70fe
                           0070FF  1118 _X_P2DIR	=	0x70ff
                           007800  1119 _X_INFOPAGE	=	0x7800
                           00780C  1120 _X_IEEE_ADDR	=	0x780c
      000000                       1121 _sensors_event::
      000000                       1122 	.ds 1
      000001                       1123 _num_sensors:
      000001                       1124 	.ds 1
      000002                       1125 _process_thread_sensors_process_i_65536_113:
      000002                       1126 	.ds 2
      000004                       1127 _process_thread_sensors_process_events_65536_113:
      000004                       1128 	.ds 2
                                   1129 ;--------------------------------------------------------
                                   1130 ; absolute external ram data
                                   1131 ;--------------------------------------------------------
                                   1132 	.area XABS    (ABS,XDATA)
                                   1133 ;--------------------------------------------------------
                                   1134 ; external initialized ram data
                                   1135 ;--------------------------------------------------------
                                   1136 	.area XISEG   (XDATA)
      000000                       1137 _sensors_process::
      000000                       1138 	.ds 10
                                   1139 	.area HOME    (CODE)
                                   1140 	.area GSINIT0 (CODE)
                                   1141 	.area GSINIT1 (CODE)
                                   1142 	.area GSINIT2 (CODE)
                                   1143 	.area GSINIT3 (CODE)
                                   1144 	.area GSINIT4 (CODE)
                                   1145 	.area GSINIT5 (CODE)
                                   1146 	.area GSINIT  (CODE)
                                   1147 	.area GSFINAL (CODE)
                                   1148 	.area CSEG    (CODE)
                                   1149 ;--------------------------------------------------------
                                   1150 ; global & static initialisations
                                   1151 ;--------------------------------------------------------
                                   1152 	.area HOME    (CODE)
                                   1153 	.area GSINIT  (CODE)
                                   1154 	.area GSFINAL (CODE)
                                   1155 	.area GSINIT  (CODE)
                                   1156 ;--------------------------------------------------------
                                   1157 ; Home
                                   1158 ;--------------------------------------------------------
                                   1159 	.area HOME    (CODE)
                                   1160 	.area HOME    (CODE)
                                   1161 ;--------------------------------------------------------
                                   1162 ; code
                                   1163 ;--------------------------------------------------------
                                   1164 	.area BANK1   (CODE)
                                   1165 ;------------------------------------------------------------
                                   1166 ;Allocation info for local variables in function 'get_sensor_index'
                                   1167 ;------------------------------------------------------------
                                   1168 ;s                         Allocated to stack - sp -4
                                   1169 ;i                         Allocated to stack - sp -1
                                   1170 ;------------------------------------------------------------
                                   1171 ;	../../../core/lib/sensors.c:54: get_sensor_index(const struct sensors_sensor *s)
                                   1172 ;	-----------------------------------------
                                   1173 ;	 function get_sensor_index
                                   1174 ;	-----------------------------------------
      000000                       1175 _get_sensor_index:
                           000007  1176 	ar7 = 0x07
                           000006  1177 	ar6 = 0x06
                           000005  1178 	ar5 = 0x05
                           000004  1179 	ar4 = 0x04
                           000003  1180 	ar3 = 0x03
                           000002  1181 	ar2 = 0x02
                           000001  1182 	ar1 = 0x01
                           000000  1183 	ar0 = 0x00
      000000 C0 82            [24] 1184 	push	dpl
      000002 C0 83            [24] 1185 	push	dph
      000004 C0 F0            [24] 1186 	push	b
      000006 05 81            [12] 1187 	inc	sp
      000008 05 81            [12] 1188 	inc	sp
                                   1189 ;	../../../core/lib/sensors.c:57: for(i = 0; i < num_sensors; ++i) {
      00000A 7B 00            [12] 1190 	mov	r3,#0x00
      00000C 7C 00            [12] 1191 	mov	r4,#0x00
      00000E A8 81            [24] 1192 	mov	r0,sp
      000010 18               [12] 1193 	dec	r0
      000011 E4               [12] 1194 	clr	a
      000012 F6               [12] 1195 	mov	@r0,a
      000013 08               [12] 1196 	inc	r0
      000014 F6               [12] 1197 	mov	@r0,a
      000015 7D 00            [12] 1198 	mov	r5,#0x00
      000017 7E 00            [12] 1199 	mov	r6,#0x00
      000019                       1200 00105$:
      000019 C0 03            [24] 1201 	push	ar3
      00001B C0 04            [24] 1202 	push	ar4
      00001D 90r00r01         [24] 1203 	mov	dptr,#_num_sensors
      000020 E0               [24] 1204 	movx	a,@dptr
      000021 FC               [12] 1205 	mov	r4,a
      000022 7B 00            [12] 1206 	mov	r3,#0x00
      000024 E5 81            [12] 1207 	mov	a,sp
      000026 24 FD            [12] 1208 	add	a,#0xfd
      000028 F8               [12] 1209 	mov	r0,a
      000029 C3               [12] 1210 	clr	c
      00002A E6               [12] 1211 	mov	a,@r0
      00002B 9C               [12] 1212 	subb	a,r4
      00002C 08               [12] 1213 	inc	r0
      00002D E6               [12] 1214 	mov	a,@r0
      00002E 64 80            [12] 1215 	xrl	a,#0x80
      000030 8B F0            [24] 1216 	mov	b,r3
      000032 63 F0 80         [24] 1217 	xrl	b,#0x80
      000035 95 F0            [12] 1218 	subb	a,b
      000037 D0 04            [24] 1219 	pop	ar4
      000039 D0 03            [24] 1220 	pop	ar3
      00003B 50 5F            [24] 1221 	jnc	00103$
                                   1222 ;	../../../core/lib/sensors.c:58: if(sensors[i] == s) {
      00003D C0 03            [24] 1223 	push	ar3
      00003F C0 04            [24] 1224 	push	ar4
      000041 ED               [12] 1225 	mov	a,r5
      000042 24r00            [12] 1226 	add	a,#_sensors
      000044 F5 82            [12] 1227 	mov	dpl,a
      000046 EE               [12] 1228 	mov	a,r6
      000047 34s00            [12] 1229 	addc	a,#(_sensors >> 8)
      000049 F5 83            [12] 1230 	mov	dph,a
      00004B E0               [24] 1231 	movx	a,@dptr
      00004C FB               [12] 1232 	mov	r3,a
      00004D A3               [24] 1233 	inc	dptr
      00004E E0               [24] 1234 	movx	a,@dptr
      00004F FC               [12] 1235 	mov	r4,a
      000050 A3               [24] 1236 	inc	dptr
      000051 E0               [24] 1237 	movx	a,@dptr
      000052 FF               [12] 1238 	mov	r7,a
      000053 E5 81            [12] 1239 	mov	a,sp
      000055 24 FA            [12] 1240 	add	a,#0xfa
      000057 F8               [12] 1241 	mov	r0,a
      000058 C0 03            [24] 1242 	push	ar3
      00005A C0 04            [24] 1243 	push	ar4
      00005C C0 07            [24] 1244 	push	ar7
      00005E 86 82            [24] 1245 	mov	dpl,@r0
      000060 08               [12] 1246 	inc	r0
      000061 86 83            [24] 1247 	mov	dph,@r0
      000063 08               [12] 1248 	inc	r0
      000064 86 F0            [24] 1249 	mov	b,@r0
      000066 12r00r00         [24] 1250 	lcall	___gptr_cmp
      000069 15 81            [12] 1251 	dec	sp
      00006B 15 81            [12] 1252 	dec	sp
      00006D 15 81            [12] 1253 	dec	sp
      00006F 60 06            [24] 1254 	jz	00123$
      000071 D0 04            [24] 1255 	pop	ar4
      000073 D0 03            [24] 1256 	pop	ar3
      000075 80 0A            [24] 1257 	sjmp	00106$
      000077                       1258 00123$:
      000077 D0 04            [24] 1259 	pop	ar4
      000079 D0 03            [24] 1260 	pop	ar3
                                   1261 ;	../../../core/lib/sensors.c:59: return i;
      00007B 8B 82            [24] 1262 	mov	dpl,r3
      00007D 8C 83            [24] 1263 	mov	dph,r4
      00007F 80 1F            [24] 1264 	sjmp	00107$
      000081                       1265 00106$:
                                   1266 ;	../../../core/lib/sensors.c:57: for(i = 0; i < num_sensors; ++i) {
      000081 74 03            [12] 1267 	mov	a,#0x03
      000083 2D               [12] 1268 	add	a,r5
      000084 FD               [12] 1269 	mov	r5,a
      000085 E4               [12] 1270 	clr	a
      000086 3E               [12] 1271 	addc	a,r6
      000087 FE               [12] 1272 	mov	r6,a
      000088 A8 81            [24] 1273 	mov	r0,sp
      00008A 18               [12] 1274 	dec	r0
      00008B 06               [12] 1275 	inc	@r0
      00008C B6 00 02         [24] 1276 	cjne	@r0,#0x00,00124$
      00008F 08               [12] 1277 	inc	r0
      000090 06               [12] 1278 	inc	@r0
      000091                       1279 00124$:
      000091 A8 81            [24] 1280 	mov	r0,sp
      000093 18               [12] 1281 	dec	r0
      000094 86 03            [24] 1282 	mov	ar3,@r0
      000096 08               [12] 1283 	inc	r0
      000097 86 04            [24] 1284 	mov	ar4,@r0
      000099 02r00r19         [24] 1285 	ljmp	00105$
      00009C                       1286 00103$:
                                   1287 ;	../../../core/lib/sensors.c:62: return i;
      00009C 8B 82            [24] 1288 	mov	dpl,r3
      00009E 8C 83            [24] 1289 	mov	dph,r4
      0000A0                       1290 00107$:
                                   1291 ;	../../../core/lib/sensors.c:63: }
      0000A0 E5 81            [12] 1292 	mov	a,sp
      0000A2 24 FB            [12] 1293 	add	a,#0xfb
      0000A4 F5 81            [12] 1294 	mov	sp,a
      0000A6 02r00r00         [24] 1295 	ljmp	__sdcc_banked_ret
                                   1296 ;------------------------------------------------------------
                                   1297 ;Allocation info for local variables in function 'sensors_first'
                                   1298 ;------------------------------------------------------------
                                   1299 ;	../../../core/lib/sensors.c:66: sensors_first(void)
                                   1300 ;	-----------------------------------------
                                   1301 ;	 function sensors_first
                                   1302 ;	-----------------------------------------
      0000A9                       1303 _sensors_first:
                                   1304 ;	../../../core/lib/sensors.c:68: return sensors[0];
      0000A9 90r00r00         [24] 1305 	mov	dptr,#_sensors
      0000AC E0               [24] 1306 	movx	a,@dptr
      0000AD FD               [12] 1307 	mov	r5,a
      0000AE A3               [24] 1308 	inc	dptr
      0000AF E0               [24] 1309 	movx	a,@dptr
      0000B0 FE               [12] 1310 	mov	r6,a
      0000B1 A3               [24] 1311 	inc	dptr
      0000B2 E0               [24] 1312 	movx	a,@dptr
      0000B3 FF               [12] 1313 	mov	r7,a
      0000B4 8D 82            [24] 1314 	mov	dpl,r5
      0000B6 8E 83            [24] 1315 	mov	dph,r6
      0000B8 8F F0            [24] 1316 	mov	b,r7
                                   1317 ;	../../../core/lib/sensors.c:69: }
      0000BA 02r00r00         [24] 1318 	ljmp	__sdcc_banked_ret
                                   1319 ;------------------------------------------------------------
                                   1320 ;Allocation info for local variables in function 'sensors_next'
                                   1321 ;------------------------------------------------------------
                                   1322 ;s                         Allocated to registers r5 r6 r7 
                                   1323 ;------------------------------------------------------------
                                   1324 ;	../../../core/lib/sensors.c:72: sensors_next(const struct sensors_sensor *s)
                                   1325 ;	-----------------------------------------
                                   1326 ;	 function sensors_next
                                   1327 ;	-----------------------------------------
      0000BD                       1328 _sensors_next:
                                   1329 ;	../../../core/lib/sensors.c:74: return sensors[get_sensor_index(s) + 1];
      0000BD 78r00            [12] 1330 	mov	r0,#_get_sensor_index
      0000BF 79s00            [12] 1331 	mov	r1,#(_get_sensor_index >> 8)
      0000C1 7As00            [12] 1332 	mov	r2,#(_get_sensor_index >> 16)
      0000C3 12r00r00         [24] 1333 	lcall	__sdcc_banked_call
      0000C6 E5 82            [12] 1334 	mov	a,dpl
      0000C8 85 83 F0         [24] 1335 	mov	b,dph
      0000CB 24 01            [12] 1336 	add	a,#0x01
      0000CD FE               [12] 1337 	mov	r6,a
      0000CE E4               [12] 1338 	clr	a
      0000CF 35 F0            [12] 1339 	addc	a,b
      0000D1 FF               [12] 1340 	mov	r7,a
      0000D2 C0 06            [24] 1341 	push	ar6
      0000D4 C0 07            [24] 1342 	push	ar7
      0000D6 90 00 03         [24] 1343 	mov	dptr,#0x0003
      0000D9 12r00r00         [24] 1344 	lcall	__mulint
      0000DC AE 82            [24] 1345 	mov	r6,dpl
      0000DE AF 83            [24] 1346 	mov	r7,dph
      0000E0 15 81            [12] 1347 	dec	sp
      0000E2 15 81            [12] 1348 	dec	sp
      0000E4 EE               [12] 1349 	mov	a,r6
      0000E5 24r00            [12] 1350 	add	a,#_sensors
      0000E7 F5 82            [12] 1351 	mov	dpl,a
      0000E9 EF               [12] 1352 	mov	a,r7
      0000EA 34s00            [12] 1353 	addc	a,#(_sensors >> 8)
      0000EC F5 83            [12] 1354 	mov	dph,a
      0000EE E0               [24] 1355 	movx	a,@dptr
      0000EF FD               [12] 1356 	mov	r5,a
      0000F0 A3               [24] 1357 	inc	dptr
      0000F1 E0               [24] 1358 	movx	a,@dptr
      0000F2 FE               [12] 1359 	mov	r6,a
      0000F3 A3               [24] 1360 	inc	dptr
      0000F4 E0               [24] 1361 	movx	a,@dptr
      0000F5 FF               [12] 1362 	mov	r7,a
      0000F6 8D 82            [24] 1363 	mov	dpl,r5
      0000F8 8E 83            [24] 1364 	mov	dph,r6
      0000FA 8F F0            [24] 1365 	mov	b,r7
                                   1366 ;	../../../core/lib/sensors.c:75: }
      0000FC 02r00r00         [24] 1367 	ljmp	__sdcc_banked_ret
                                   1368 ;------------------------------------------------------------
                                   1369 ;Allocation info for local variables in function 'sensors_changed'
                                   1370 ;------------------------------------------------------------
                                   1371 ;s                         Allocated to registers r5 r6 r7 
                                   1372 ;__655360001               Allocated to registers 
                                   1373 ;------------------------------------------------------------
                                   1374 ;	../../../core/lib/sensors.c:78: sensors_changed(const struct sensors_sensor *s)
                                   1375 ;	-----------------------------------------
                                   1376 ;	 function sensors_changed
                                   1377 ;	-----------------------------------------
      0000FF                       1378 _sensors_changed:
                                   1379 ;	../../../core/lib/sensors.c:80: sensors_flags[get_sensor_index(s)] |= FLAG_CHANGED;
      0000FF 78r00            [12] 1380 	mov	r0,#_get_sensor_index
      000101 79s00            [12] 1381 	mov	r1,#(_get_sensor_index >> 8)
      000103 7As00            [12] 1382 	mov	r2,#(_get_sensor_index >> 16)
      000105 12r00r00         [24] 1383 	lcall	__sdcc_banked_call
      000108 AE 82            [24] 1384 	mov	r6,dpl
      00010A AF 83            [24] 1385 	mov	r7,dph
      00010C EE               [12] 1386 	mov	a,r6
      00010D 24r00            [12] 1387 	add	a,#_sensors_flags
      00010F FE               [12] 1388 	mov	r6,a
      000110 EF               [12] 1389 	mov	a,r7
      000111 34s00            [12] 1390 	addc	a,#(_sensors_flags >> 8)
      000113 FF               [12] 1391 	mov	r7,a
      000114 8E 82            [24] 1392 	mov	dpl,r6
      000116 8F 83            [24] 1393 	mov	dph,r7
      000118 E0               [24] 1394 	movx	a,@dptr
      000119 FD               [12] 1395 	mov	r5,a
      00011A 43 05 80         [24] 1396 	orl	ar5,#0x80
      00011D 8E 82            [24] 1397 	mov	dpl,r6
      00011F 8F 83            [24] 1398 	mov	dph,r7
      000121 ED               [12] 1399 	mov	a,r5
      000122 F0               [24] 1400 	movx	@dptr,a
                                   1401 ;	../../../core/lib/sensors.c:81: process_poll(&sensors_process);
      000123 90r00r00         [24] 1402 	mov	dptr,#_sensors_process
      000126 75 F0 00         [24] 1403 	mov	b,#0x00
      000129 78r00            [12] 1404 	mov	r0,#_process_poll
      00012B 79s00            [12] 1405 	mov	r1,#(_process_poll >> 8)
      00012D 7As00            [12] 1406 	mov	r2,#(_process_poll >> 16)
      00012F 12r00r00         [24] 1407 	lcall	__sdcc_banked_call
                                   1408 ;	../../../core/lib/sensors.c:82: }
      000132 02r00r00         [24] 1409 	ljmp	__sdcc_banked_ret
                                   1410 ;------------------------------------------------------------
                                   1411 ;Allocation info for local variables in function 'sensors_find'
                                   1412 ;------------------------------------------------------------
                                   1413 ;prefix                    Allocated to stack - sp -11
                                   1414 ;i                         Allocated to registers r2 r4 
                                   1415 ;len                       Allocated to stack - sp -1
                                   1416 ;sloc0                     Allocated to stack - sp -8
                                   1417 ;sloc1                     Allocated to stack - sp -6
                                   1418 ;sloc2                     Allocated to stack - sp -4
                                   1419 ;------------------------------------------------------------
                                   1420 ;	../../../core/lib/sensors.c:85: sensors_find(const char *prefix)
                                   1421 ;	-----------------------------------------
                                   1422 ;	 function sensors_find
                                   1423 ;	-----------------------------------------
      000135                       1424 _sensors_find:
      000135 C0 82            [24] 1425 	push	dpl
      000137 C0 83            [24] 1426 	push	dph
      000139 C0 F0            [24] 1427 	push	b
      00013B E5 81            [12] 1428 	mov	a,sp
      00013D 24 09            [12] 1429 	add	a,#0x09
                                   1430 ;	../../../core/lib/sensors.c:92: len = strlen(prefix);
      00013F F5 81            [12] 1431 	mov	sp,a
      000141 24 F5            [12] 1432 	add	a,#0xf5
      000143 F8               [12] 1433 	mov	r0,a
      000144 86 82            [24] 1434 	mov	dpl,@r0
      000146 08               [12] 1435 	inc	r0
      000147 86 83            [24] 1436 	mov	dph,@r0
      000149 08               [12] 1437 	inc	r0
      00014A 86 F0            [24] 1438 	mov	b,@r0
      00014C 78r00            [12] 1439 	mov	r0,#_strlen
      00014E 79s00            [12] 1440 	mov	r1,#(_strlen >> 8)
      000150 7As00            [12] 1441 	mov	r2,#(_strlen >> 16)
      000152 12r00r00         [24] 1442 	lcall	__sdcc_banked_call
      000155 AB 82            [24] 1443 	mov	r3,dpl
      000157 AC 83            [24] 1444 	mov	r4,dph
      000159 A8 81            [24] 1445 	mov	r0,sp
      00015B 18               [12] 1446 	dec	r0
      00015C A6 03            [24] 1447 	mov	@r0,ar3
      00015E 08               [12] 1448 	inc	r0
      00015F A6 04            [24] 1449 	mov	@r0,ar4
                                   1450 ;	../../../core/lib/sensors.c:94: for(i = 0; i < num_sensors; ++i) {
      000161 7A 00            [12] 1451 	mov	r2,#0x00
      000163 7C 00            [12] 1452 	mov	r4,#0x00
      000165 7B 00            [12] 1453 	mov	r3,#0x00
      000167 7F 00            [12] 1454 	mov	r7,#0x00
      000169                       1455 00105$:
      000169 90r00r01         [24] 1456 	mov	dptr,#_num_sensors
      00016C E0               [24] 1457 	movx	a,@dptr
      00016D FE               [12] 1458 	mov	r6,a
      00016E 7D 00            [12] 1459 	mov	r5,#0x00
      000170 C3               [12] 1460 	clr	c
      000171 EA               [12] 1461 	mov	a,r2
      000172 9E               [12] 1462 	subb	a,r6
      000173 EC               [12] 1463 	mov	a,r4
      000174 64 80            [12] 1464 	xrl	a,#0x80
      000176 8D F0            [24] 1465 	mov	b,r5
      000178 63 F0 80         [24] 1466 	xrl	b,#0x80
      00017B 95 F0            [12] 1467 	subb	a,b
      00017D 40 03            [24] 1468 	jc	00121$
      00017F 02r02r4B         [24] 1469 	ljmp	00103$
      000182                       1470 00121$:
                                   1471 ;	../../../core/lib/sensors.c:95: if(strncmp(prefix, sensors[i]->type, len) == 0) {
      000182 C0 02            [24] 1472 	push	ar2
      000184 C0 04            [24] 1473 	push	ar4
      000186 E5 81            [12] 1474 	mov	a,sp
      000188 24 FD            [12] 1475 	add	a,#0xfd
      00018A F8               [12] 1476 	mov	r0,a
      00018B E5 81            [12] 1477 	mov	a,sp
      00018D 24 F8            [12] 1478 	add	a,#0xf8
      00018F F9               [12] 1479 	mov	r1,a
      000190 E6               [12] 1480 	mov	a,@r0
      000191 F7               [12] 1481 	mov	@r1,a
      000192 08               [12] 1482 	inc	r0
      000193 09               [12] 1483 	inc	r1
      000194 E6               [12] 1484 	mov	a,@r0
      000195 F7               [12] 1485 	mov	@r1,a
      000196 E5 81            [12] 1486 	mov	a,sp
      000198 24 F6            [12] 1487 	add	a,#0xf6
      00019A F8               [12] 1488 	mov	r0,a
      00019B EB               [12] 1489 	mov	a,r3
      00019C 24r00            [12] 1490 	add	a,#_sensors
      00019E F6               [12] 1491 	mov	@r0,a
      00019F EF               [12] 1492 	mov	a,r7
      0001A0 34s00            [12] 1493 	addc	a,#(_sensors >> 8)
      0001A2 08               [12] 1494 	inc	r0
      0001A3 F6               [12] 1495 	mov	@r0,a
      0001A4 E5 81            [12] 1496 	mov	a,sp
      0001A6 24 F6            [12] 1497 	add	a,#0xf6
      0001A8 F8               [12] 1498 	mov	r0,a
      0001A9 86 82            [24] 1499 	mov	dpl,@r0
      0001AB 08               [12] 1500 	inc	r0
      0001AC 86 83            [24] 1501 	mov	dph,@r0
      0001AE E0               [24] 1502 	movx	a,@dptr
      0001AF FA               [12] 1503 	mov	r2,a
      0001B0 A3               [24] 1504 	inc	dptr
      0001B1 E0               [24] 1505 	movx	a,@dptr
      0001B2 FC               [12] 1506 	mov	r4,a
      0001B3 A3               [24] 1507 	inc	dptr
      0001B4 E0               [24] 1508 	movx	a,@dptr
      0001B5 FE               [12] 1509 	mov	r6,a
      0001B6 8A 82            [24] 1510 	mov	dpl,r2
      0001B8 8C 83            [24] 1511 	mov	dph,r4
      0001BA 8E F0            [24] 1512 	mov	b,r6
      0001BC 12r00r00         [24] 1513 	lcall	__gptrget
      0001BF FA               [12] 1514 	mov	r2,a
      0001C0 A3               [24] 1515 	inc	dptr
      0001C1 12r00r00         [24] 1516 	lcall	__gptrget
      0001C4 FC               [12] 1517 	mov	r4,a
      0001C5 A3               [24] 1518 	inc	dptr
      0001C6 12r00r00         [24] 1519 	lcall	__gptrget
      0001C9 FE               [12] 1520 	mov	r6,a
      0001CA C0 07            [24] 1521 	push	ar7
      0001CC C0 04            [24] 1522 	push	ar4
      0001CE C0 03            [24] 1523 	push	ar3
      0001D0 C0 02            [24] 1524 	push	ar2
      0001D2 E5 81            [12] 1525 	mov	a,sp
      0001D4 24 F4            [12] 1526 	add	a,#0xf4
      0001D6 F8               [12] 1527 	mov	r0,a
      0001D7 E6               [12] 1528 	mov	a,@r0
      0001D8 C0 E0            [24] 1529 	push	acc
      0001DA 08               [12] 1530 	inc	r0
      0001DB E6               [12] 1531 	mov	a,@r0
      0001DC C0 E0            [24] 1532 	push	acc
      0001DE C0 02            [24] 1533 	push	ar2
      0001E0 C0 04            [24] 1534 	push	ar4
      0001E2 C0 06            [24] 1535 	push	ar6
      0001E4 E5 81            [12] 1536 	mov	a,sp
      0001E6 24 EA            [12] 1537 	add	a,#0xea
      0001E8 F8               [12] 1538 	mov	r0,a
      0001E9 86 82            [24] 1539 	mov	dpl,@r0
      0001EB 08               [12] 1540 	inc	r0
      0001EC 86 83            [24] 1541 	mov	dph,@r0
      0001EE 08               [12] 1542 	inc	r0
      0001EF 86 F0            [24] 1543 	mov	b,@r0
      0001F1 78r00            [12] 1544 	mov	r0,#_strncmp
      0001F3 79s00            [12] 1545 	mov	r1,#(_strncmp >> 8)
      0001F5 7As00            [12] 1546 	mov	r2,#(_strncmp >> 16)
      0001F7 12r00r00         [24] 1547 	lcall	__sdcc_banked_call
      0001FA AD 82            [24] 1548 	mov	r5,dpl
      0001FC AE 83            [24] 1549 	mov	r6,dph
      0001FE E5 81            [12] 1550 	mov	a,sp
      000200 24 FB            [12] 1551 	add	a,#0xfb
      000202 F5 81            [12] 1552 	mov	sp,a
      000204 D0 02            [24] 1553 	pop	ar2
      000206 D0 03            [24] 1554 	pop	ar3
      000208 D0 04            [24] 1555 	pop	ar4
      00020A D0 07            [24] 1556 	pop	ar7
      00020C D0 04            [24] 1557 	pop	ar4
      00020E D0 02            [24] 1558 	pop	ar2
      000210 ED               [12] 1559 	mov	a,r5
      000211 4E               [12] 1560 	orl	a,r6
      000212 70 28            [24] 1561 	jnz	00106$
                                   1562 ;	../../../core/lib/sensors.c:96: return sensors[i];
      000214 E5 81            [12] 1563 	mov	a,sp
      000216 24 F8            [12] 1564 	add	a,#0xf8
      000218 F8               [12] 1565 	mov	r0,a
      000219 86 82            [24] 1566 	mov	dpl,@r0
      00021B 08               [12] 1567 	inc	r0
      00021C 86 83            [24] 1568 	mov	dph,@r0
      00021E E5 81            [12] 1569 	mov	a,sp
      000220 24 FC            [12] 1570 	add	a,#0xfc
      000222 F9               [12] 1571 	mov	r1,a
      000223 E0               [24] 1572 	movx	a,@dptr
      000224 F7               [12] 1573 	mov	@r1,a
      000225 A3               [24] 1574 	inc	dptr
      000226 E0               [24] 1575 	movx	a,@dptr
      000227 09               [12] 1576 	inc	r1
      000228 F7               [12] 1577 	mov	@r1,a
      000229 A3               [24] 1578 	inc	dptr
      00022A E0               [24] 1579 	movx	a,@dptr
      00022B 09               [12] 1580 	inc	r1
      00022C F7               [12] 1581 	mov	@r1,a
      00022D E5 81            [12] 1582 	mov	a,sp
      00022F 24 FC            [12] 1583 	add	a,#0xfc
      000231 F8               [12] 1584 	mov	r0,a
      000232 86 82            [24] 1585 	mov	dpl,@r0
      000234 08               [12] 1586 	inc	r0
      000235 86 83            [24] 1587 	mov	dph,@r0
      000237 08               [12] 1588 	inc	r0
      000238 86 F0            [24] 1589 	mov	b,@r0
      00023A 80 15            [24] 1590 	sjmp	00107$
      00023C                       1591 00106$:
                                   1592 ;	../../../core/lib/sensors.c:94: for(i = 0; i < num_sensors; ++i) {
      00023C 74 03            [12] 1593 	mov	a,#0x03
      00023E 2B               [12] 1594 	add	a,r3
      00023F FB               [12] 1595 	mov	r3,a
      000240 E4               [12] 1596 	clr	a
      000241 3F               [12] 1597 	addc	a,r7
      000242 FF               [12] 1598 	mov	r7,a
      000243 0A               [12] 1599 	inc	r2
      000244 BA 00 01         [24] 1600 	cjne	r2,#0x00,00123$
      000247 0C               [12] 1601 	inc	r4
      000248                       1602 00123$:
      000248 02r01r69         [24] 1603 	ljmp	00105$
      00024B                       1604 00103$:
                                   1605 ;	../../../core/lib/sensors.c:99: return NULL;
      00024B 90 00 00         [24] 1606 	mov	dptr,#0x0000
      00024E 75 F0 00         [24] 1607 	mov	b,#0x00
      000251                       1608 00107$:
                                   1609 ;	../../../core/lib/sensors.c:100: }
      000251 C8               [12] 1610 	xch	a,r0
      000252 E5 81            [12] 1611 	mov	a,sp
      000254 24 F4            [12] 1612 	add	a,#0xf4
      000256 F5 81            [12] 1613 	mov	sp,a
      000258 C8               [12] 1614 	xch	a,r0
      000259 02r00r00         [24] 1615 	ljmp	__sdcc_banked_ret
                                   1616 ;------------------------------------------------------------
                                   1617 ;Allocation info for local variables in function 'process_thread_sensors_process'
                                   1618 ;------------------------------------------------------------
                                   1619 ;ev                        Allocated to stack - sp -3
                                   1620 ;data                      Allocated to stack - sp -6
                                   1621 ;process_pt                Allocated to registers r5 r6 r7 
                                   1622 ;PT_YIELD_FLAG             Allocated to registers r4 
                                   1623 ;i                         Allocated with name '_process_thread_sensors_process_i_65536_113'
                                   1624 ;events                    Allocated with name '_process_thread_sensors_process_events_65536_113'
                                   1625 ;------------------------------------------------------------
                                   1626 ;	../../../core/lib/sensors.c:102: PROCESS_THREAD(sensors_process, ev, data)
                                   1627 ;	-----------------------------------------
                                   1628 ;	 function process_thread_sensors_process
                                   1629 ;	-----------------------------------------
      00025C                       1630 _process_thread_sensors_process:
                                   1631 ;	../../../core/lib/sensors.c:107: PROCESS_BEGIN();
      00025C AD 82            [24] 1632 	mov	r5,dpl
      00025E AE 83            [24] 1633 	mov	r6,dph
      000260 AF F0            [24] 1634 	mov	r7,b
      000262 7C 01            [12] 1635 	mov	r4,#0x01
      000264 12r00r00         [24] 1636 	lcall	__gptrget
      000267 FA               [12] 1637 	mov	r2,a
      000268 A3               [24] 1638 	inc	dptr
      000269 12r00r00         [24] 1639 	lcall	__gptrget
      00026C FB               [12] 1640 	mov	r3,a
      00026D BA 00 05         [24] 1641 	cjne	r2,#0x00,00192$
      000270 BB 00 02         [24] 1642 	cjne	r3,#0x00,00192$
      000273 80 15            [24] 1643 	sjmp	00101$
      000275                       1644 00192$:
      000275 BA 77 06         [24] 1645 	cjne	r2,#0x77,00193$
      000278 BB 00 03         [24] 1646 	cjne	r3,#0x00,00193$
      00027B 02r03rA4         [24] 1647 	ljmp	00103$
      00027E                       1648 00193$:
      00027E BA 7E 06         [24] 1649 	cjne	r2,#0x7e,00194$
      000281 BB 00 03         [24] 1650 	cjne	r3,#0x00,00194$
      000284 02r04r7E         [24] 1651 	ljmp	00109$
      000287                       1652 00194$:
      000287 02r04rE2         [24] 1653 	ljmp	00127$
      00028A                       1654 00101$:
                                   1655 ;	../../../core/lib/sensors.c:109: sensors_event = process_alloc_event();
      00028A C0 07            [24] 1656 	push	ar7
      00028C C0 06            [24] 1657 	push	ar6
      00028E C0 05            [24] 1658 	push	ar5
      000290 78r00            [12] 1659 	mov	r0,#_process_alloc_event
      000292 79s00            [12] 1660 	mov	r1,#(_process_alloc_event >> 8)
      000294 7As00            [12] 1661 	mov	r2,#(_process_alloc_event >> 16)
      000296 12r00r00         [24] 1662 	lcall	__sdcc_banked_call
      000299 E5 82            [12] 1663 	mov	a,dpl
      00029B D0 05            [24] 1664 	pop	ar5
      00029D D0 06            [24] 1665 	pop	ar6
      00029F D0 07            [24] 1666 	pop	ar7
      0002A1 90r00r00         [24] 1667 	mov	dptr,#_sensors_event
      0002A4 F0               [24] 1668 	movx	@dptr,a
                                   1669 ;	../../../core/lib/sensors.c:111: for(i = 0; sensors[i] != NULL; ++i) {
      0002A5 90r00r02         [24] 1670 	mov	dptr,#_process_thread_sensors_process_i_65536_113
      0002A8 E4               [12] 1671 	clr	a
      0002A9 F0               [24] 1672 	movx	@dptr,a
      0002AA A3               [24] 1673 	inc	dptr
      0002AB F0               [24] 1674 	movx	@dptr,a
      0002AC                       1675 00129$:
      0002AC C0 05            [24] 1676 	push	ar5
      0002AE C0 06            [24] 1677 	push	ar6
      0002B0 C0 07            [24] 1678 	push	ar7
      0002B2 90r00r02         [24] 1679 	mov	dptr,#_process_thread_sensors_process_i_65536_113
      0002B5 E0               [24] 1680 	movx	a,@dptr
      0002B6 FA               [12] 1681 	mov	r2,a
      0002B7 A3               [24] 1682 	inc	dptr
      0002B8 E0               [24] 1683 	movx	a,@dptr
      0002B9 FB               [12] 1684 	mov	r3,a
      0002BA C0 05            [24] 1685 	push	ar5
      0002BC C0 03            [24] 1686 	push	ar3
      0002BE C0 02            [24] 1687 	push	ar2
      0002C0 C0 02            [24] 1688 	push	ar2
      0002C2 C0 03            [24] 1689 	push	ar3
      0002C4 90 00 03         [24] 1690 	mov	dptr,#0x0003
      0002C7 12r00r00         [24] 1691 	lcall	__mulint
      0002CA AE 82            [24] 1692 	mov	r6,dpl
      0002CC AF 83            [24] 1693 	mov	r7,dph
      0002CE 15 81            [12] 1694 	dec	sp
      0002D0 15 81            [12] 1695 	dec	sp
      0002D2 D0 02            [24] 1696 	pop	ar2
      0002D4 D0 03            [24] 1697 	pop	ar3
      0002D6 D0 05            [24] 1698 	pop	ar5
      0002D8 EE               [12] 1699 	mov	a,r6
      0002D9 24r00            [12] 1700 	add	a,#_sensors
      0002DB F5 82            [12] 1701 	mov	dpl,a
      0002DD EF               [12] 1702 	mov	a,r7
      0002DE 34s00            [12] 1703 	addc	a,#(_sensors >> 8)
      0002E0 F5 83            [12] 1704 	mov	dph,a
      0002E2 E0               [24] 1705 	movx	a,@dptr
      0002E3 FD               [12] 1706 	mov	r5,a
      0002E4 A3               [24] 1707 	inc	dptr
      0002E5 E0               [24] 1708 	movx	a,@dptr
      0002E6 FE               [12] 1709 	mov	r6,a
      0002E7 A3               [24] 1710 	inc	dptr
      0002E8 E0               [24] 1711 	movx	a,@dptr
      0002E9 ED               [12] 1712 	mov	a,r5
      0002EA 4E               [12] 1713 	orl	a,r6
      0002EB D0 07            [24] 1714 	pop	ar7
      0002ED D0 06            [24] 1715 	pop	ar6
      0002EF D0 05            [24] 1716 	pop	ar5
      0002F1 70 03            [24] 1717 	jnz	00195$
      0002F3 02r03r8D         [24] 1718 	ljmp	00102$
      0002F6                       1719 00195$:
                                   1720 ;	../../../core/lib/sensors.c:112: sensors_flags[i] = 0;
      0002F6 C0 05            [24] 1721 	push	ar5
      0002F8 C0 06            [24] 1722 	push	ar6
      0002FA C0 07            [24] 1723 	push	ar7
      0002FC EA               [12] 1724 	mov	a,r2
      0002FD 24r00            [12] 1725 	add	a,#_sensors_flags
      0002FF F5 82            [12] 1726 	mov	dpl,a
      000301 EB               [12] 1727 	mov	a,r3
      000302 34s00            [12] 1728 	addc	a,#(_sensors_flags >> 8)
      000304 F5 83            [12] 1729 	mov	dph,a
      000306 E4               [12] 1730 	clr	a
      000307 F0               [24] 1731 	movx	@dptr,a
                                   1732 ;	../../../core/lib/sensors.c:113: sensors[i]->configure(SENSORS_HW_INIT, 0);
      000308 C0 05            [24] 1733 	push	ar5
      00030A 90r00r02         [24] 1734 	mov	dptr,#_process_thread_sensors_process_i_65536_113
      00030D E0               [24] 1735 	movx	a,@dptr
      00030E C0 E0            [24] 1736 	push	acc
      000310 A3               [24] 1737 	inc	dptr
      000311 E0               [24] 1738 	movx	a,@dptr
      000312 C0 E0            [24] 1739 	push	acc
      000314 90 00 03         [24] 1740 	mov	dptr,#0x0003
      000317 12r00r00         [24] 1741 	lcall	__mulint
      00031A AE 82            [24] 1742 	mov	r6,dpl
      00031C AF 83            [24] 1743 	mov	r7,dph
      00031E 15 81            [12] 1744 	dec	sp
      000320 15 81            [12] 1745 	dec	sp
      000322 D0 05            [24] 1746 	pop	ar5
      000324 EE               [12] 1747 	mov	a,r6
      000325 24r00            [12] 1748 	add	a,#_sensors
      000327 F5 82            [12] 1749 	mov	dpl,a
      000329 EF               [12] 1750 	mov	a,r7
      00032A 34s00            [12] 1751 	addc	a,#(_sensors >> 8)
      00032C F5 83            [12] 1752 	mov	dph,a
      00032E E0               [24] 1753 	movx	a,@dptr
      00032F FD               [12] 1754 	mov	r5,a
      000330 A3               [24] 1755 	inc	dptr
      000331 E0               [24] 1756 	movx	a,@dptr
      000332 FE               [12] 1757 	mov	r6,a
      000333 A3               [24] 1758 	inc	dptr
      000334 E0               [24] 1759 	movx	a,@dptr
      000335 FF               [12] 1760 	mov	r7,a
      000336 74 06            [12] 1761 	mov	a,#0x06
      000338 2D               [12] 1762 	add	a,r5
      000339 FD               [12] 1763 	mov	r5,a
      00033A E4               [12] 1764 	clr	a
      00033B 3E               [12] 1765 	addc	a,r6
      00033C FE               [12] 1766 	mov	r6,a
      00033D 8D 82            [24] 1767 	mov	dpl,r5
      00033F 8E 83            [24] 1768 	mov	dph,r6
      000341 8F F0            [24] 1769 	mov	b,r7
      000343 12r00r00         [24] 1770 	lcall	__gptrget
      000346 FD               [12] 1771 	mov	r5,a
      000347 A3               [24] 1772 	inc	dptr
      000348 12r00r00         [24] 1773 	lcall	__gptrget
      00034B FE               [12] 1774 	mov	r6,a
      00034C A3               [24] 1775 	inc	dptr
      00034D 12r00r00         [24] 1776 	lcall	__gptrget
      000350 FF               [12] 1777 	mov	r7,a
      000351 C0 07            [24] 1778 	push	ar7
      000353 C0 06            [24] 1779 	push	ar6
      000355 C0 05            [24] 1780 	push	ar5
      000357 E4               [12] 1781 	clr	a
      000358 C0 E0            [24] 1782 	push	acc
      00035A C0 E0            [24] 1783 	push	acc
      00035C C0 05            [24] 1784 	push	ar5
      00035E C0 06            [24] 1785 	push	ar6
      000360 C0 07            [24] 1786 	push	ar7
      000362 90 00 80         [24] 1787 	mov	dptr,#0x0080
      000365 D0 02            [24] 1788 	pop	ar2
      000367 D0 01            [24] 1789 	pop	ar1
      000369 D0 00            [24] 1790 	pop	ar0
      00036B 12r00r00         [24] 1791 	lcall	__sdcc_banked_call
      00036E 15 81            [12] 1792 	dec	sp
      000370 15 81            [12] 1793 	dec	sp
      000372 D0 05            [24] 1794 	pop	ar5
      000374 D0 06            [24] 1795 	pop	ar6
      000376 D0 07            [24] 1796 	pop	ar7
                                   1797 ;	../../../core/lib/sensors.c:111: for(i = 0; sensors[i] != NULL; ++i) {
      000378 90r00r02         [24] 1798 	mov	dptr,#_process_thread_sensors_process_i_65536_113
      00037B E0               [24] 1799 	movx	a,@dptr
      00037C 24 01            [12] 1800 	add	a,#0x01
      00037E F0               [24] 1801 	movx	@dptr,a
      00037F A3               [24] 1802 	inc	dptr
      000380 E0               [24] 1803 	movx	a,@dptr
      000381 34 00            [12] 1804 	addc	a,#0x00
      000383 F0               [24] 1805 	movx	@dptr,a
      000384 D0 07            [24] 1806 	pop	ar7
      000386 D0 06            [24] 1807 	pop	ar6
      000388 D0 05            [24] 1808 	pop	ar5
      00038A 02r02rAC         [24] 1809 	ljmp	00129$
      00038D                       1810 00102$:
                                   1811 ;	../../../core/lib/sensors.c:115: num_sensors = i;
      00038D 90r00r01         [24] 1812 	mov	dptr,#_num_sensors
      000390 EA               [12] 1813 	mov	a,r2
      000391 F0               [24] 1814 	movx	@dptr,a
                                   1815 ;	../../../core/lib/sensors.c:117: while(1) {
      000392                       1816 00125$:
                                   1817 ;	../../../core/lib/sensors.c:119: PROCESS_WAIT_EVENT();
      000392 7C 00            [12] 1818 	mov	r4,#0x00
      000394 8D 82            [24] 1819 	mov	dpl,r5
      000396 8E 83            [24] 1820 	mov	dph,r6
      000398 8F F0            [24] 1821 	mov	b,r7
      00039A 74 77            [12] 1822 	mov	a,#0x77
      00039C 12r00r00         [24] 1823 	lcall	__gptrput
      00039F A3               [24] 1824 	inc	dptr
      0003A0 E4               [12] 1825 	clr	a
      0003A1 12r00r00         [24] 1826 	lcall	__gptrput
      0003A4                       1827 00103$:
      0003A4 EC               [12] 1828 	mov	a,r4
      0003A5 70 06            [24] 1829 	jnz	00121$
      0003A7 75 82 01         [24] 1830 	mov	dpl,#0x01
      0003AA 02r00r00         [24] 1831 	ljmp	__sdcc_banked_ret
                                   1832 ;	../../../core/lib/sensors.c:121: do {
      0003AD                       1833 00121$:
                                   1834 ;	../../../core/lib/sensors.c:122: events = 0;
      0003AD 90r00r04         [24] 1835 	mov	dptr,#_process_thread_sensors_process_events_65536_113
      0003B0 E4               [12] 1836 	clr	a
      0003B1 F0               [24] 1837 	movx	@dptr,a
      0003B2 A3               [24] 1838 	inc	dptr
      0003B3 F0               [24] 1839 	movx	@dptr,a
                                   1840 ;	../../../core/lib/sensors.c:123: for(i = 0; i < num_sensors; ++i) {
      0003B4 90r00r02         [24] 1841 	mov	dptr,#_process_thread_sensors_process_i_65536_113
      0003B7 F0               [24] 1842 	movx	@dptr,a
      0003B8 A3               [24] 1843 	inc	dptr
      0003B9 F0               [24] 1844 	movx	@dptr,a
      0003BA                       1845 00132$:
      0003BA C0 05            [24] 1846 	push	ar5
      0003BC C0 06            [24] 1847 	push	ar6
      0003BE C0 07            [24] 1848 	push	ar7
      0003C0 90r00r02         [24] 1849 	mov	dptr,#_process_thread_sensors_process_i_65536_113
      0003C3 E0               [24] 1850 	movx	a,@dptr
      0003C4 FA               [12] 1851 	mov	r2,a
      0003C5 A3               [24] 1852 	inc	dptr
      0003C6 E0               [24] 1853 	movx	a,@dptr
      0003C7 FB               [12] 1854 	mov	r3,a
      0003C8 90r00r01         [24] 1855 	mov	dptr,#_num_sensors
      0003CB E0               [24] 1856 	movx	a,@dptr
      0003CC FF               [12] 1857 	mov	r7,a
      0003CD 7E 00            [12] 1858 	mov	r6,#0x00
      0003CF C3               [12] 1859 	clr	c
      0003D0 EA               [12] 1860 	mov	a,r2
      0003D1 9F               [12] 1861 	subb	a,r7
      0003D2 EB               [12] 1862 	mov	a,r3
      0003D3 64 80            [12] 1863 	xrl	a,#0x80
      0003D5 8E F0            [24] 1864 	mov	b,r6
      0003D7 63 F0 80         [24] 1865 	xrl	b,#0x80
      0003DA 95 F0            [12] 1866 	subb	a,b
      0003DC D0 07            [24] 1867 	pop	ar7
      0003DE D0 06            [24] 1868 	pop	ar6
      0003E0 D0 05            [24] 1869 	pop	ar5
      0003E2 40 03            [24] 1870 	jc	00197$
      0003E4 02r04rD0         [24] 1871 	ljmp	00122$
      0003E7                       1872 00197$:
                                   1873 ;	../../../core/lib/sensors.c:124: if(sensors_flags[i] & FLAG_CHANGED) {
      0003E7 C0 05            [24] 1874 	push	ar5
      0003E9 C0 06            [24] 1875 	push	ar6
      0003EB C0 07            [24] 1876 	push	ar7
      0003ED EA               [12] 1877 	mov	a,r2
      0003EE 24r00            [12] 1878 	add	a,#_sensors_flags
      0003F0 F5 82            [12] 1879 	mov	dpl,a
      0003F2 EB               [12] 1880 	mov	a,r3
      0003F3 34s00            [12] 1881 	addc	a,#(_sensors_flags >> 8)
      0003F5 F5 83            [12] 1882 	mov	dph,a
      0003F7 E0               [24] 1883 	movx	a,@dptr
      0003F8 D0 07            [24] 1884 	pop	ar7
      0003FA D0 06            [24] 1885 	pop	ar6
      0003FC D0 05            [24] 1886 	pop	ar5
      0003FE 20 E7 03         [24] 1887 	jb	acc.7,00198$
      000401 02r04rC1         [24] 1888 	ljmp	00133$
      000404                       1889 00198$:
                                   1890 ;	../../../core/lib/sensors.c:125: if(process_post(PROCESS_BROADCAST, sensors_event, (void *)sensors[i]) == PROCESS_ERR_OK) {
      000404 C0 05            [24] 1891 	push	ar5
      000406 C0 06            [24] 1892 	push	ar6
      000408 C0 07            [24] 1893 	push	ar7
      00040A C0 07            [24] 1894 	push	ar7
      00040C C0 06            [24] 1895 	push	ar6
      00040E C0 05            [24] 1896 	push	ar5
      000410 C0 02            [24] 1897 	push	ar2
      000412 C0 03            [24] 1898 	push	ar3
      000414 90 00 03         [24] 1899 	mov	dptr,#0x0003
      000417 12r00r00         [24] 1900 	lcall	__mulint
      00041A AA 82            [24] 1901 	mov	r2,dpl
      00041C AB 83            [24] 1902 	mov	r3,dph
      00041E 15 81            [12] 1903 	dec	sp
      000420 15 81            [12] 1904 	dec	sp
      000422 D0 05            [24] 1905 	pop	ar5
      000424 D0 06            [24] 1906 	pop	ar6
      000426 D0 07            [24] 1907 	pop	ar7
      000428 EA               [12] 1908 	mov	a,r2
      000429 24r00            [12] 1909 	add	a,#_sensors
      00042B F5 82            [12] 1910 	mov	dpl,a
      00042D EB               [12] 1911 	mov	a,r3
      00042E 34s00            [12] 1912 	addc	a,#(_sensors >> 8)
      000430 F5 83            [12] 1913 	mov	dph,a
      000432 E0               [24] 1914 	movx	a,@dptr
      000433 FA               [12] 1915 	mov	r2,a
      000434 A3               [24] 1916 	inc	dptr
      000435 E0               [24] 1917 	movx	a,@dptr
      000436 FB               [12] 1918 	mov	r3,a
      000437 A3               [24] 1919 	inc	dptr
      000438 E0               [24] 1920 	movx	a,@dptr
      000439 FF               [12] 1921 	mov	r7,a
      00043A C0 05            [24] 1922 	push	ar5
      00043C C0 02            [24] 1923 	push	ar2
      00043E C0 03            [24] 1924 	push	ar3
      000440 C0 07            [24] 1925 	push	ar7
      000442 90r00r00         [24] 1926 	mov	dptr,#_sensors_event
      000445 E0               [24] 1927 	movx	a,@dptr
      000446 C0 E0            [24] 1928 	push	acc
      000448 90 00 00         [24] 1929 	mov	dptr,#0x0000
      00044B 75 F0 00         [24] 1930 	mov	b,#0x00
      00044E 78r00            [12] 1931 	mov	r0,#_process_post
      000450 79s00            [12] 1932 	mov	r1,#(_process_post >> 8)
      000452 7As00            [12] 1933 	mov	r2,#(_process_post >> 16)
      000454 12r00r00         [24] 1934 	lcall	__sdcc_banked_call
      000457 AE 82            [24] 1935 	mov	r6,dpl
      000459 AF 83            [24] 1936 	mov	r7,dph
      00045B E5 81            [12] 1937 	mov	a,sp
      00045D 24 FC            [12] 1938 	add	a,#0xfc
      00045F F5 81            [12] 1939 	mov	sp,a
      000461 D0 05            [24] 1940 	pop	ar5
      000463 EE               [12] 1941 	mov	a,r6
      000464 4F               [12] 1942 	orl	a,r7
      000465 D0 07            [24] 1943 	pop	ar7
      000467 D0 06            [24] 1944 	pop	ar6
      000469 D0 05            [24] 1945 	pop	ar5
                                   1946 ;	../../../core/lib/sensors.c:126: PROCESS_WAIT_EVENT_UNTIL(ev == sensors_event);
      00046B 70 29            [24] 1947 	jnz	00117$
      00046D FC               [12] 1948 	mov	r4,a
      00046E 8D 82            [24] 1949 	mov	dpl,r5
      000470 8E 83            [24] 1950 	mov	dph,r6
      000472 8F F0            [24] 1951 	mov	b,r7
      000474 74 7E            [12] 1952 	mov	a,#0x7e
      000476 12r00r00         [24] 1953 	lcall	__gptrput
      000479 A3               [24] 1954 	inc	dptr
      00047A E4               [12] 1955 	clr	a
      00047B 12r00r00         [24] 1956 	lcall	__gptrput
      00047E                       1957 00109$:
      00047E EC               [12] 1958 	mov	a,r4
      00047F 60 10            [24] 1959 	jz	00110$
      000481 90r00r00         [24] 1960 	mov	dptr,#_sensors_event
      000484 E0               [24] 1961 	movx	a,@dptr
      000485 FC               [12] 1962 	mov	r4,a
      000486 E5 81            [12] 1963 	mov	a,sp
      000488 24 FD            [12] 1964 	add	a,#0xfd
      00048A F8               [12] 1965 	mov	r0,a
      00048B E6               [12] 1966 	mov	a,@r0
      00048C B5 04 02         [24] 1967 	cjne	a,ar4,00201$
      00048F 80 05            [24] 1968 	sjmp	00117$
      000491                       1969 00201$:
      000491                       1970 00110$:
      000491 75 82 01         [24] 1971 	mov	dpl,#0x01
      000494 80 5D            [24] 1972 	sjmp	00134$
      000496                       1973 00117$:
                                   1974 ;	../../../core/lib/sensors.c:128: sensors_flags[i] &= ~FLAG_CHANGED;
      000496 90r00r02         [24] 1975 	mov	dptr,#_process_thread_sensors_process_i_65536_113
      000499 E0               [24] 1976 	movx	a,@dptr
      00049A FB               [12] 1977 	mov	r3,a
      00049B A3               [24] 1978 	inc	dptr
      00049C E0               [24] 1979 	movx	a,@dptr
      00049D FC               [12] 1980 	mov	r4,a
      00049E EB               [12] 1981 	mov	a,r3
      00049F 24r00            [12] 1982 	add	a,#_sensors_flags
      0004A1 FB               [12] 1983 	mov	r3,a
      0004A2 EC               [12] 1984 	mov	a,r4
      0004A3 34s00            [12] 1985 	addc	a,#(_sensors_flags >> 8)
      0004A5 FC               [12] 1986 	mov	r4,a
      0004A6 8B 82            [24] 1987 	mov	dpl,r3
      0004A8 8C 83            [24] 1988 	mov	dph,r4
      0004AA E0               [24] 1989 	movx	a,@dptr
      0004AB FA               [12] 1990 	mov	r2,a
      0004AC 53 02 7F         [24] 1991 	anl	ar2,#0x7f
      0004AF 8B 82            [24] 1992 	mov	dpl,r3
      0004B1 8C 83            [24] 1993 	mov	dph,r4
      0004B3 EA               [12] 1994 	mov	a,r2
      0004B4 F0               [24] 1995 	movx	@dptr,a
                                   1996 ;	../../../core/lib/sensors.c:129: events++;
      0004B5 90r00r04         [24] 1997 	mov	dptr,#_process_thread_sensors_process_events_65536_113
      0004B8 E0               [24] 1998 	movx	a,@dptr
      0004B9 24 01            [12] 1999 	add	a,#0x01
      0004BB F0               [24] 2000 	movx	@dptr,a
      0004BC A3               [24] 2001 	inc	dptr
      0004BD E0               [24] 2002 	movx	a,@dptr
      0004BE 34 00            [12] 2003 	addc	a,#0x00
      0004C0 F0               [24] 2004 	movx	@dptr,a
      0004C1                       2005 00133$:
                                   2006 ;	../../../core/lib/sensors.c:123: for(i = 0; i < num_sensors; ++i) {
      0004C1 90r00r02         [24] 2007 	mov	dptr,#_process_thread_sensors_process_i_65536_113
      0004C4 E0               [24] 2008 	movx	a,@dptr
      0004C5 24 01            [12] 2009 	add	a,#0x01
      0004C7 F0               [24] 2010 	movx	@dptr,a
      0004C8 A3               [24] 2011 	inc	dptr
      0004C9 E0               [24] 2012 	movx	a,@dptr
      0004CA 34 00            [12] 2013 	addc	a,#0x00
      0004CC F0               [24] 2014 	movx	@dptr,a
      0004CD 02r03rBA         [24] 2015 	ljmp	00132$
      0004D0                       2016 00122$:
                                   2017 ;	../../../core/lib/sensors.c:132: } while(events);
      0004D0 90r00r04         [24] 2018 	mov	dptr,#_process_thread_sensors_process_events_65536_113
      0004D3 E0               [24] 2019 	movx	a,@dptr
      0004D4 F5 F0            [12] 2020 	mov	b,a
      0004D6 A3               [24] 2021 	inc	dptr
      0004D7 E0               [24] 2022 	movx	a,@dptr
      0004D8 45 F0            [12] 2023 	orl	a,b
      0004DA 60 03            [24] 2024 	jz	00202$
      0004DC 02r03rAD         [24] 2025 	ljmp	00121$
      0004DF                       2026 00202$:
      0004DF 02r03r92         [24] 2027 	ljmp	00125$
                                   2028 ;	../../../core/lib/sensors.c:135: PROCESS_END();
      0004E2                       2029 00127$:
      0004E2 8D 82            [24] 2030 	mov	dpl,r5
      0004E4 8E 83            [24] 2031 	mov	dph,r6
      0004E6 8F F0            [24] 2032 	mov	b,r7
      0004E8 E4               [12] 2033 	clr	a
      0004E9 12r00r00         [24] 2034 	lcall	__gptrput
      0004EC A3               [24] 2035 	inc	dptr
      0004ED 12r00r00         [24] 2036 	lcall	__gptrput
      0004F0 75 82 03         [24] 2037 	mov	dpl,#0x03
      0004F3                       2038 00134$:
                                   2039 ;	../../../core/lib/sensors.c:136: }
      0004F3 02r00r00         [24] 2040 	ljmp	__sdcc_banked_ret
                                   2041 	.area CSEG    (CODE)
                                   2042 	.area CONST   (CODE)
                                   2043 	.area XINIT   (CODE)
      000000                       2044 __xinit__sensors_process:
                                   2045 ; generic printIvalPtr
      000000 00 00 00              2046 	.byte #0x00,#0x00,#0x00
      000003r5Cs02s00              2047 	.byte _process_thread_sensors_process, (_process_thread_sensors_process >> 8), (_process_thread_sensors_process >> 16)
      000006 00 00                 2048 	.byte #0x00, #0x00
      000008 00                    2049 	.db #0x00	; 0
      000009 00                    2050 	.db #0x00	; 0
                                   2051 	.area CABS    (ABS,CODE)
